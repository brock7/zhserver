// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LSToSDK.proto

#ifndef PROTOBUF_LSToSDK_2eproto__INCLUDED
#define PROTOBUF_LSToSDK_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace LSToSDK {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_LSToSDK_2eproto();
void protobuf_AssignDesc_LSToSDK_2eproto();
void protobuf_ShutdownFile_LSToSDK_2eproto();

class UserLogin91;

enum MsgID {
  eMsgToGCFromBS_91UserLogin = 1
};
bool MsgID_IsValid(int value);
const MsgID MsgID_MIN = eMsgToGCFromBS_91UserLogin;
const MsgID MsgID_MAX = eMsgToGCFromBS_91UserLogin;
const int MsgID_ARRAYSIZE = MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgID_descriptor();
inline const ::std::string& MsgID_Name(MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgID_descriptor(), value);
}
inline bool MsgID_Parse(
    const ::std::string& name, MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgID>(
    MsgID_descriptor(), name, value);
}
// ===================================================================

class UserLogin91 : public ::google::protobuf::Message {
 public:
  UserLogin91();
  virtual ~UserLogin91();

  UserLogin91(const UserLogin91& from);

  inline UserLogin91& operator=(const UserLogin91& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserLogin91& default_instance();

  void Swap(UserLogin91* other);

  // implements Message ----------------------------------------------

  UserLogin91* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserLogin91& from);
  void MergeFrom(const UserLogin91& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .LSToSDK.MsgID mgsid = 1 [default = eMsgToGCFromBS_91UserLogin];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::LSToSDK::MsgID mgsid() const;
  inline void set_mgsid(::LSToSDK::MsgID value);

  // optional string logininfo = 2;
  inline bool has_logininfo() const;
  inline void clear_logininfo();
  static const int kLogininfoFieldNumber = 2;
  inline const ::std::string& logininfo() const;
  inline void set_logininfo(const ::std::string& value);
  inline void set_logininfo(const char* value);
  inline void set_logininfo(const char* value, size_t size);
  inline ::std::string* mutable_logininfo();
  inline ::std::string* release_logininfo();
  inline void set_allocated_logininfo(::std::string* logininfo);

  // optional int32 gcid = 4;
  inline bool has_gcid() const;
  inline void clear_gcid();
  static const int kGcidFieldNumber = 4;
  inline ::google::protobuf::int32 gcid() const;
  inline void set_gcid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LSToSDK.UserLogin91)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();
  inline void set_has_logininfo();
  inline void clear_has_logininfo();
  inline void set_has_gcid();
  inline void clear_has_gcid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* logininfo_;
  int mgsid_;
  ::google::protobuf::int32 gcid_;
  friend void  protobuf_AddDesc_LSToSDK_2eproto();
  friend void protobuf_AssignDesc_LSToSDK_2eproto();
  friend void protobuf_ShutdownFile_LSToSDK_2eproto();

  void InitAsDefaultInstance();
  static UserLogin91* default_instance_;
};
// ===================================================================


// ===================================================================

// UserLogin91

// optional .LSToSDK.MsgID mgsid = 1 [default = eMsgToGCFromBS_91UserLogin];
inline bool UserLogin91::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserLogin91::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserLogin91::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserLogin91::clear_mgsid() {
  mgsid_ = 1;
  clear_has_mgsid();
}
inline ::LSToSDK::MsgID UserLogin91::mgsid() const {
  // @@protoc_insertion_point(field_get:LSToSDK.UserLogin91.mgsid)
  return static_cast< ::LSToSDK::MsgID >(mgsid_);
}
inline void UserLogin91::set_mgsid(::LSToSDK::MsgID value) {
  assert(::LSToSDK::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:LSToSDK.UserLogin91.mgsid)
}

// optional string logininfo = 2;
inline bool UserLogin91::has_logininfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserLogin91::set_has_logininfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserLogin91::clear_has_logininfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserLogin91::clear_logininfo() {
  if (logininfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    logininfo_->clear();
  }
  clear_has_logininfo();
}
inline const ::std::string& UserLogin91::logininfo() const {
  // @@protoc_insertion_point(field_get:LSToSDK.UserLogin91.logininfo)
  return *logininfo_;
}
inline void UserLogin91::set_logininfo(const ::std::string& value) {
  set_has_logininfo();
  if (logininfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    logininfo_ = new ::std::string;
  }
  logininfo_->assign(value);
  // @@protoc_insertion_point(field_set:LSToSDK.UserLogin91.logininfo)
}
inline void UserLogin91::set_logininfo(const char* value) {
  set_has_logininfo();
  if (logininfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    logininfo_ = new ::std::string;
  }
  logininfo_->assign(value);
  // @@protoc_insertion_point(field_set_char:LSToSDK.UserLogin91.logininfo)
}
inline void UserLogin91::set_logininfo(const char* value, size_t size) {
  set_has_logininfo();
  if (logininfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    logininfo_ = new ::std::string;
  }
  logininfo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LSToSDK.UserLogin91.logininfo)
}
inline ::std::string* UserLogin91::mutable_logininfo() {
  set_has_logininfo();
  if (logininfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    logininfo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LSToSDK.UserLogin91.logininfo)
  return logininfo_;
}
inline ::std::string* UserLogin91::release_logininfo() {
  clear_has_logininfo();
  if (logininfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = logininfo_;
    logininfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserLogin91::set_allocated_logininfo(::std::string* logininfo) {
  if (logininfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete logininfo_;
  }
  if (logininfo) {
    set_has_logininfo();
    logininfo_ = logininfo;
  } else {
    clear_has_logininfo();
    logininfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LSToSDK.UserLogin91.logininfo)
}

// optional int32 gcid = 4;
inline bool UserLogin91::has_gcid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserLogin91::set_has_gcid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserLogin91::clear_has_gcid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserLogin91::clear_gcid() {
  gcid_ = 0;
  clear_has_gcid();
}
inline ::google::protobuf::int32 UserLogin91::gcid() const {
  // @@protoc_insertion_point(field_get:LSToSDK.UserLogin91.gcid)
  return gcid_;
}
inline void UserLogin91::set_gcid(::google::protobuf::int32 value) {
  set_has_gcid();
  gcid_ = value;
  // @@protoc_insertion_point(field_set:LSToSDK.UserLogin91.gcid)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace LSToSDK

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::LSToSDK::MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LSToSDK::MsgID>() {
  return ::LSToSDK::MsgID_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_LSToSDK_2eproto__INCLUDED
