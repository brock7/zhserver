// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SSToCS.proto

#ifndef PROTOBUF_SSToCS_2eproto__INCLUDED
#define PROTOBUF_SSToCS_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace SSToCS {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SSToCS_2eproto();
void protobuf_AssignDesc_SSToCS_2eproto();
void protobuf_ShutdownFile_SSToCS_2eproto();

class GameLogSwitch;
class UpGuideBattleStep;
class BattleLog;
class AskPing;
class ReportGotSomeMsg;
class ReportBattleShowResult;
class AskChangeFirstWinTime;
class AddGold;
class AskRegiste;
class ReportBattleFinished;
class userData;
class AskUpdateData;
class UserNetInfo;
class ReportUserOffline;
class AskAllCfgList;
class AskHeroCfgList;
class AskGoodsfgList;
class AskShopfgList;
class AskPublicLuaStr;
class AskMapCfgList;
class AskNewSkillCfg;
class AskSkillEffectAccountCfg;
class AskSkillEffectLeadingCfg;
class AskSkillEffectRangeCfg;
class AskSkillEffectBufCfg;
class AskSkillEffectSummonCfg;
class AskSkillEffectMoveCfg;
class AskSkillEffectSwitchCfg;
class AskPassitiveSkillCfg;
class AskPassitiveEffectBloodSeekCfg;
class AskPassitiveEffectReboundCfg;
class AskPassitiveEffectReliveCfg;
class AskUpdateGuideStep;
class AskUserGoHall;
class SyncAllBattleInfo;
class CreateBattleResponse;
class FinishBattle;
class FinishBattle_BattleUserData;

enum MsgID {
  eMsgToCSFromSS_Begin = 8192,
  eMsgToCSFromSS_AskPing = 8193,
  eMsgToCSFromSS_AskRegiste = 8194,
  eMsgToCSFromSS_ReportBattleFinished = 8195,
  eMsgToCSFromSS_ReportUserOffline = 8196,
  eMsgToCSFromSS_AskBuffCfgList = 8197,
  eMsgToCSFromSS_AskSkillCfgList = 8198,
  eMsgToCSFromSS_AskAllCfgList = 8199,
  eMsgToCSFromSS_AskHeroCfgList = 8200,
  eMsgToCSFromSS_AskShopfgList = 8201,
  eMsgToCSFromSS_AskGoodsfgList = 8202,
  eMsgToCSFromSS_AskPublicLuaStr = 8203,
  eMsgToCSFromSS_AskMapCfgList = 8204,
  eMsgToCSFromSS_AskMapCfgData = 8205,
  eMsgToCSFromSS_AskUpdateData = 8206,
  eMsgToCSFromSS_AskAddGold = 8207,
  eMsgToCSFromSS_AskChangeFirstWinTime = 8210,
  eMsgToCSFromSS_AskNewSkillCfg = 8211,
  eMsgToCSFromSS_AskSkillModelType = 8212,
  eMsgToCSFromSS_AskSkillEffectAccountCfg = 8213,
  eMsgToCSFromSS_AskSkillEffectEmitCfg = 8214,
  eMsgToCSFromSS_AskSkillEffectRangeCfg = 8215,
  eMsgToCSFromSS_AskSkillEffectLeadingCfg = 8216,
  eMsgToCSFromSS_AskSkillEffectBufCfg = 8217,
  eMsgToCSFromSS_AskSkillEffectSummonCfg = 8218,
  eMsgToCSFromSS_AskSkillEffectMoveCfg = 8219,
  eMsgToCSFromSS_AskSkillEffectSwitchCfg = 8220,
  eMsgToCSFromSS_AskPassitiveSkillCfg = 8221,
  eMsgToCSFromSS_AskPassitiveEffectBloodSeekCfg = 8222,
  eMsgToCSFromSS_AskPassitiveEffectReboundCfg = 8223,
  eMsgToCSFromSS_AskPassitiveEffectReliveCfg = 8224,
  eMsgToCSFromSS_AskUpdateGuideStep = 8225,
  eMsgToCSFromSS_AskUserGoHall = 8226,
  eMsgToCSFromSS_ReportBattleShowResult = 8227,
  eMsgToCSFromSS_ReportGotSomeMsg = 8228,
  eMsgToCSFromSS_AllBattleInfo = 8229,
  eMsgToCSFromSS_BattleLog = 8230,
  eMsgToCSFromSS_UpdateGuideBattleStep = 8231,
  eMsgToCSFromSS_AskSSGameLogSwitch = 8232,
  eMsgToCSFromSS_CreateBattleResponse = 8300,
  eMsgToCSFromSS_FinishBattle = 8310,
  eMsgToCSFromSS_End = 8500
};
bool MsgID_IsValid(int value);
const MsgID MsgID_MIN = eMsgToCSFromSS_Begin;
const MsgID MsgID_MAX = eMsgToCSFromSS_End;
const int MsgID_ARRAYSIZE = MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgID_descriptor();
inline const ::std::string& MsgID_Name(MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgID_descriptor(), value);
}
inline bool MsgID_Parse(
    const ::std::string& name, MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgID>(
    MsgID_descriptor(), name, value);
}
// ===================================================================

class GameLogSwitch : public ::google::protobuf::Message {
 public:
  GameLogSwitch();
  virtual ~GameLogSwitch();

  GameLogSwitch(const GameLogSwitch& from);

  inline GameLogSwitch& operator=(const GameLogSwitch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameLogSwitch& default_instance();

  void Swap(GameLogSwitch* other);

  // implements Message ----------------------------------------------

  GameLogSwitch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameLogSwitch& from);
  void MergeFrom(const GameLogSwitch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSSGameLogSwitch];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // @@protoc_insertion_point(class_scope:SSToCS.GameLogSwitch)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mgsid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static GameLogSwitch* default_instance_;
};
// -------------------------------------------------------------------

class UpGuideBattleStep : public ::google::protobuf::Message {
 public:
  UpGuideBattleStep();
  virtual ~UpGuideBattleStep();

  UpGuideBattleStep(const UpGuideBattleStep& from);

  inline UpGuideBattleStep& operator=(const UpGuideBattleStep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpGuideBattleStep& default_instance();

  void Swap(UpGuideBattleStep* other);

  // implements Message ----------------------------------------------

  UpGuideBattleStep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpGuideBattleStep& from);
  void MergeFrom(const UpGuideBattleStep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_UpdateGuideBattleStep];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // optional int64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::int64 guid() const;
  inline void set_guid(::google::protobuf::int64 value);

  // optional int32 taskid = 3;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskidFieldNumber = 3;
  inline ::google::protobuf::int32 taskid() const;
  inline void set_taskid(::google::protobuf::int32 value);

  // optional int32 num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SSToCS.UpGuideBattleStep)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 guid_;
  int mgsid_;
  ::google::protobuf::int32 taskid_;
  ::google::protobuf::int32 num_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static UpGuideBattleStep* default_instance_;
};
// -------------------------------------------------------------------

class BattleLog : public ::google::protobuf::Message {
 public:
  BattleLog();
  virtual ~BattleLog();

  BattleLog(const BattleLog& from);

  inline BattleLog& operator=(const BattleLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleLog& default_instance();

  void Swap(BattleLog* other);

  // implements Message ----------------------------------------------

  BattleLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleLog& from);
  void MergeFrom(const BattleLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_BattleLog];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // optional int64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::int64 guid() const;
  inline void set_guid(::google::protobuf::int64 value);

  // optional int32 log_type = 3;
  inline bool has_log_type() const;
  inline void clear_log_type();
  static const int kLogTypeFieldNumber = 3;
  inline ::google::protobuf::int32 log_type() const;
  inline void set_log_type(::google::protobuf::int32 value);

  // optional string log_str = 4;
  inline bool has_log_str() const;
  inline void clear_log_str();
  static const int kLogStrFieldNumber = 4;
  inline const ::std::string& log_str() const;
  inline void set_log_str(const ::std::string& value);
  inline void set_log_str(const char* value);
  inline void set_log_str(const char* value, size_t size);
  inline ::std::string* mutable_log_str();
  inline ::std::string* release_log_str();
  inline void set_allocated_log_str(::std::string* log_str);

  // @@protoc_insertion_point(class_scope:SSToCS.BattleLog)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_log_type();
  inline void clear_has_log_type();
  inline void set_has_log_str();
  inline void clear_has_log_str();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 guid_;
  int mgsid_;
  ::google::protobuf::int32 log_type_;
  ::std::string* log_str_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static BattleLog* default_instance_;
};
// -------------------------------------------------------------------

class AskPing : public ::google::protobuf::Message {
 public:
  AskPing();
  virtual ~AskPing();

  AskPing(const AskPing& from);

  inline AskPing& operator=(const AskPing& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskPing& default_instance();

  void Swap(AskPing* other);

  // implements Message ----------------------------------------------

  AskPing* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskPing& from);
  void MergeFrom(const AskPing& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPing];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // optional int64 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:SSToCS.AskPing)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 time_;
  int mgsid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static AskPing* default_instance_;
};
// -------------------------------------------------------------------

class ReportGotSomeMsg : public ::google::protobuf::Message {
 public:
  ReportGotSomeMsg();
  virtual ~ReportGotSomeMsg();

  ReportGotSomeMsg(const ReportGotSomeMsg& from);

  inline ReportGotSomeMsg& operator=(const ReportGotSomeMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportGotSomeMsg& default_instance();

  void Swap(ReportGotSomeMsg* other);

  // implements Message ----------------------------------------------

  ReportGotSomeMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReportGotSomeMsg& from);
  void MergeFrom(const ReportGotSomeMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_ReportGotSomeMsg];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // optional int32 gotmsgid = 2;
  inline bool has_gotmsgid() const;
  inline void clear_gotmsgid();
  static const int kGotmsgidFieldNumber = 2;
  inline ::google::protobuf::int32 gotmsgid() const;
  inline void set_gotmsgid(::google::protobuf::int32 value);

  // optional uint64 otherval = 3;
  inline bool has_otherval() const;
  inline void clear_otherval();
  static const int kOthervalFieldNumber = 3;
  inline ::google::protobuf::uint64 otherval() const;
  inline void set_otherval(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:SSToCS.ReportGotSomeMsg)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();
  inline void set_has_gotmsgid();
  inline void clear_has_gotmsgid();
  inline void set_has_otherval();
  inline void clear_has_otherval();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mgsid_;
  ::google::protobuf::int32 gotmsgid_;
  ::google::protobuf::uint64 otherval_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static ReportGotSomeMsg* default_instance_;
};
// -------------------------------------------------------------------

class ReportBattleShowResult : public ::google::protobuf::Message {
 public:
  ReportBattleShowResult();
  virtual ~ReportBattleShowResult();

  ReportBattleShowResult(const ReportBattleShowResult& from);

  inline ReportBattleShowResult& operator=(const ReportBattleShowResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportBattleShowResult& default_instance();

  void Swap(ReportBattleShowResult* other);

  // implements Message ----------------------------------------------

  ReportBattleShowResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReportBattleShowResult& from);
  void MergeFrom(const ReportBattleShowResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_ReportBattleShowResult];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // optional uint64 battleid = 2;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleidFieldNumber = 2;
  inline ::google::protobuf::uint64 battleid() const;
  inline void set_battleid(::google::protobuf::uint64 value);

  // optional int32 result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SSToCS.ReportBattleShowResult)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();
  inline void set_has_battleid();
  inline void clear_has_battleid();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 battleid_;
  int mgsid_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static ReportBattleShowResult* default_instance_;
};
// -------------------------------------------------------------------

class AskChangeFirstWinTime : public ::google::protobuf::Message {
 public:
  AskChangeFirstWinTime();
  virtual ~AskChangeFirstWinTime();

  AskChangeFirstWinTime(const AskChangeFirstWinTime& from);

  inline AskChangeFirstWinTime& operator=(const AskChangeFirstWinTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskChangeFirstWinTime& default_instance();

  void Swap(AskChangeFirstWinTime* other);

  // implements Message ----------------------------------------------

  AskChangeFirstWinTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskChangeFirstWinTime& from);
  void MergeFrom(const AskChangeFirstWinTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskChangeFirstWinTime];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int64 curtime = 3;
  inline bool has_curtime() const;
  inline void clear_curtime();
  static const int kCurtimeFieldNumber = 3;
  inline ::google::protobuf::int64 curtime() const;
  inline void set_curtime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:SSToCS.AskChangeFirstWinTime)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_curtime();
  inline void clear_has_curtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int64 curtime_;
  int mgsid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static AskChangeFirstWinTime* default_instance_;
};
// -------------------------------------------------------------------

class AddGold : public ::google::protobuf::Message {
 public:
  AddGold();
  virtual ~AddGold();

  AddGold(const AddGold& from);

  inline AddGold& operator=(const AddGold& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddGold& default_instance();

  void Swap(AddGold* other);

  // implements Message ----------------------------------------------

  AddGold* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddGold& from);
  void MergeFrom(const AddGold& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskAddGold];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int64 gold = 3;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 3;
  inline ::google::protobuf::int64 gold() const;
  inline void set_gold(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:SSToCS.AddGold)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_gold();
  inline void clear_has_gold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int64 gold_;
  int mgsid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static AddGold* default_instance_;
};
// -------------------------------------------------------------------

class AskRegiste : public ::google::protobuf::Message {
 public:
  AskRegiste();
  virtual ~AskRegiste();

  AskRegiste(const AskRegiste& from);

  inline AskRegiste& operator=(const AskRegiste& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskRegiste& default_instance();

  void Swap(AskRegiste* other);

  // implements Message ----------------------------------------------

  AskRegiste* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskRegiste& from);
  void MergeFrom(const AskRegiste& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskRegiste];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // optional int32 ssid = 2;
  inline bool has_ssid() const;
  inline void clear_ssid();
  static const int kSsidFieldNumber = 2;
  inline ::google::protobuf::int32 ssid() const;
  inline void set_ssid(::google::protobuf::int32 value);

  // optional string ip = 3;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 3;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // optional int32 port = 4;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 4;
  inline ::google::protobuf::int32 port() const;
  inline void set_port(::google::protobuf::int32 value);

  // optional string userpwd = 5;
  inline bool has_userpwd() const;
  inline void clear_userpwd();
  static const int kUserpwdFieldNumber = 5;
  inline const ::std::string& userpwd() const;
  inline void set_userpwd(const ::std::string& value);
  inline void set_userpwd(const char* value);
  inline void set_userpwd(const char* value, size_t size);
  inline ::std::string* mutable_userpwd();
  inline ::std::string* release_userpwd();
  inline void set_allocated_userpwd(::std::string* userpwd);

  // @@protoc_insertion_point(class_scope:SSToCS.AskRegiste)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();
  inline void set_has_ssid();
  inline void clear_has_ssid();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_userpwd();
  inline void clear_has_userpwd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mgsid_;
  ::google::protobuf::int32 ssid_;
  ::std::string* ip_;
  ::std::string* userpwd_;
  ::google::protobuf::int32 port_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static AskRegiste* default_instance_;
};
// -------------------------------------------------------------------

class ReportBattleFinished : public ::google::protobuf::Message {
 public:
  ReportBattleFinished();
  virtual ~ReportBattleFinished();

  ReportBattleFinished(const ReportBattleFinished& from);

  inline ReportBattleFinished& operator=(const ReportBattleFinished& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportBattleFinished& default_instance();

  void Swap(ReportBattleFinished* other);

  // implements Message ----------------------------------------------

  ReportBattleFinished* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReportBattleFinished& from);
  void MergeFrom(const ReportBattleFinished& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_ReportBattleFinished];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // optional int64 battleid = 2;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleidFieldNumber = 2;
  inline ::google::protobuf::int64 battleid() const;
  inline void set_battleid(::google::protobuf::int64 value);

  // optional int32 campid = 3;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampidFieldNumber = 3;
  inline ::google::protobuf::int32 campid() const;
  inline void set_campid(::google::protobuf::int32 value);

  // optional int32 res = 4;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 4;
  inline ::google::protobuf::int32 res() const;
  inline void set_res(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SSToCS.ReportBattleFinished)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();
  inline void set_has_battleid();
  inline void clear_has_battleid();
  inline void set_has_campid();
  inline void clear_has_campid();
  inline void set_has_res();
  inline void clear_has_res();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 battleid_;
  int mgsid_;
  ::google::protobuf::int32 campid_;
  ::google::protobuf::int32 res_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static ReportBattleFinished* default_instance_;
};
// -------------------------------------------------------------------

class userData : public ::google::protobuf::Message {
 public:
  userData();
  virtual ~userData();

  userData(const userData& from);

  inline userData& operator=(const userData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const userData& default_instance();

  void Swap(userData* other);

  // implements Message ----------------------------------------------

  userData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const userData& from);
  void MergeFrom(const userData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional uint32 deadtimes = 2;
  inline bool has_deadtimes() const;
  inline void clear_deadtimes();
  static const int kDeadtimesFieldNumber = 2;
  inline ::google::protobuf::uint32 deadtimes() const;
  inline void set_deadtimes(::google::protobuf::uint32 value);

  // optional uint32 herokills = 3;
  inline bool has_herokills() const;
  inline void clear_herokills();
  static const int kHerokillsFieldNumber = 3;
  inline ::google::protobuf::uint32 herokills() const;
  inline void set_herokills(::google::protobuf::uint32 value);

  // optional uint32 gameinn = 4;
  inline bool has_gameinn() const;
  inline void clear_gameinn();
  static const int kGameinnFieldNumber = 4;
  inline ::google::protobuf::uint32 gameinn() const;
  inline void set_gameinn(::google::protobuf::uint32 value);

  // optional uint32 wininn = 5;
  inline bool has_wininn() const;
  inline void clear_wininn();
  static const int kWininnFieldNumber = 5;
  inline ::google::protobuf::uint32 wininn() const;
  inline void set_wininn(::google::protobuf::uint32 value);

  // optional uint32 exp = 6;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 6;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // optional int64 gold = 7;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 7;
  inline ::google::protobuf::int64 gold() const;
  inline void set_gold(::google::protobuf::int64 value);

  // optional int32 destorybuilding = 8;
  inline bool has_destorybuilding() const;
  inline void clear_destorybuilding();
  static const int kDestorybuildingFieldNumber = 8;
  inline ::google::protobuf::int32 destorybuilding() const;
  inline void set_destorybuilding(::google::protobuf::int32 value);

  // optional int32 heroid = 9;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 9;
  inline ::google::protobuf::int32 heroid() const;
  inline void set_heroid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SSToCS.userData)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_deadtimes();
  inline void clear_has_deadtimes();
  inline void set_has_herokills();
  inline void clear_has_herokills();
  inline void set_has_gameinn();
  inline void clear_has_gameinn();
  inline void set_has_wininn();
  inline void clear_has_wininn();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_destorybuilding();
  inline void clear_has_destorybuilding();
  inline void set_has_heroid();
  inline void clear_has_heroid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint32 deadtimes_;
  ::google::protobuf::uint32 herokills_;
  ::google::protobuf::uint32 gameinn_;
  ::google::protobuf::uint32 wininn_;
  ::google::protobuf::int64 gold_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::int32 destorybuilding_;
  ::google::protobuf::int32 heroid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static userData* default_instance_;
};
// -------------------------------------------------------------------

class AskUpdateData : public ::google::protobuf::Message {
 public:
  AskUpdateData();
  virtual ~AskUpdateData();

  AskUpdateData(const AskUpdateData& from);

  inline AskUpdateData& operator=(const AskUpdateData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskUpdateData& default_instance();

  void Swap(AskUpdateData* other);

  // implements Message ----------------------------------------------

  AskUpdateData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskUpdateData& from);
  void MergeFrom(const AskUpdateData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskUpdateData];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // repeated .SSToCS.userData user_data = 2;
  inline int user_data_size() const;
  inline void clear_user_data();
  static const int kUserDataFieldNumber = 2;
  inline const ::SSToCS::userData& user_data(int index) const;
  inline ::SSToCS::userData* mutable_user_data(int index);
  inline ::SSToCS::userData* add_user_data();
  inline const ::google::protobuf::RepeatedPtrField< ::SSToCS::userData >&
      user_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::SSToCS::userData >*
      mutable_user_data();

  // @@protoc_insertion_point(class_scope:SSToCS.AskUpdateData)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SSToCS::userData > user_data_;
  int mgsid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static AskUpdateData* default_instance_;
};
// -------------------------------------------------------------------

class UserNetInfo : public ::google::protobuf::Message {
 public:
  UserNetInfo();
  virtual ~UserNetInfo();

  UserNetInfo(const UserNetInfo& from);

  inline UserNetInfo& operator=(const UserNetInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserNetInfo& default_instance();

  void Swap(UserNetInfo* other);

  // implements Message ----------------------------------------------

  UserNetInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserNetInfo& from);
  void MergeFrom(const UserNetInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 gsid = 1;
  inline bool has_gsid() const;
  inline void clear_gsid();
  static const int kGsidFieldNumber = 1;
  inline ::google::protobuf::int32 gsid() const;
  inline void set_gsid(::google::protobuf::int32 value);

  // optional int32 gcnsid = 2;
  inline bool has_gcnsid() const;
  inline void clear_gcnsid();
  static const int kGcnsidFieldNumber = 2;
  inline ::google::protobuf::int32 gcnsid() const;
  inline void set_gcnsid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SSToCS.UserNetInfo)
 private:
  inline void set_has_gsid();
  inline void clear_has_gsid();
  inline void set_has_gcnsid();
  inline void clear_has_gcnsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 gsid_;
  ::google::protobuf::int32 gcnsid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static UserNetInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReportUserOffline : public ::google::protobuf::Message {
 public:
  ReportUserOffline();
  virtual ~ReportUserOffline();

  ReportUserOffline(const ReportUserOffline& from);

  inline ReportUserOffline& operator=(const ReportUserOffline& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportUserOffline& default_instance();

  void Swap(ReportUserOffline* other);

  // implements Message ----------------------------------------------

  ReportUserOffline* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReportUserOffline& from);
  void MergeFrom(const ReportUserOffline& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_ReportUserOffline];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional .SSToCS.UserNetInfo usernetinfo = 3;
  inline bool has_usernetinfo() const;
  inline void clear_usernetinfo();
  static const int kUsernetinfoFieldNumber = 3;
  inline const ::SSToCS::UserNetInfo& usernetinfo() const;
  inline ::SSToCS::UserNetInfo* mutable_usernetinfo();
  inline ::SSToCS::UserNetInfo* release_usernetinfo();
  inline void set_allocated_usernetinfo(::SSToCS::UserNetInfo* usernetinfo);

  // @@protoc_insertion_point(class_scope:SSToCS.ReportUserOffline)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_usernetinfo();
  inline void clear_has_usernetinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::SSToCS::UserNetInfo* usernetinfo_;
  int mgsid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static ReportUserOffline* default_instance_;
};
// -------------------------------------------------------------------

class AskAllCfgList : public ::google::protobuf::Message {
 public:
  AskAllCfgList();
  virtual ~AskAllCfgList();

  AskAllCfgList(const AskAllCfgList& from);

  inline AskAllCfgList& operator=(const AskAllCfgList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskAllCfgList& default_instance();

  void Swap(AskAllCfgList* other);

  // implements Message ----------------------------------------------

  AskAllCfgList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskAllCfgList& from);
  void MergeFrom(const AskAllCfgList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskAllCfgList];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // @@protoc_insertion_point(class_scope:SSToCS.AskAllCfgList)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mgsid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static AskAllCfgList* default_instance_;
};
// -------------------------------------------------------------------

class AskHeroCfgList : public ::google::protobuf::Message {
 public:
  AskHeroCfgList();
  virtual ~AskHeroCfgList();

  AskHeroCfgList(const AskHeroCfgList& from);

  inline AskHeroCfgList& operator=(const AskHeroCfgList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskHeroCfgList& default_instance();

  void Swap(AskHeroCfgList* other);

  // implements Message ----------------------------------------------

  AskHeroCfgList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskHeroCfgList& from);
  void MergeFrom(const AskHeroCfgList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskHeroCfgList];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // @@protoc_insertion_point(class_scope:SSToCS.AskHeroCfgList)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mgsid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static AskHeroCfgList* default_instance_;
};
// -------------------------------------------------------------------

class AskGoodsfgList : public ::google::protobuf::Message {
 public:
  AskGoodsfgList();
  virtual ~AskGoodsfgList();

  AskGoodsfgList(const AskGoodsfgList& from);

  inline AskGoodsfgList& operator=(const AskGoodsfgList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskGoodsfgList& default_instance();

  void Swap(AskGoodsfgList* other);

  // implements Message ----------------------------------------------

  AskGoodsfgList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskGoodsfgList& from);
  void MergeFrom(const AskGoodsfgList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskGoodsfgList];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // @@protoc_insertion_point(class_scope:SSToCS.AskGoodsfgList)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mgsid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static AskGoodsfgList* default_instance_;
};
// -------------------------------------------------------------------

class AskShopfgList : public ::google::protobuf::Message {
 public:
  AskShopfgList();
  virtual ~AskShopfgList();

  AskShopfgList(const AskShopfgList& from);

  inline AskShopfgList& operator=(const AskShopfgList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskShopfgList& default_instance();

  void Swap(AskShopfgList* other);

  // implements Message ----------------------------------------------

  AskShopfgList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskShopfgList& from);
  void MergeFrom(const AskShopfgList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskShopfgList];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // @@protoc_insertion_point(class_scope:SSToCS.AskShopfgList)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mgsid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static AskShopfgList* default_instance_;
};
// -------------------------------------------------------------------

class AskPublicLuaStr : public ::google::protobuf::Message {
 public:
  AskPublicLuaStr();
  virtual ~AskPublicLuaStr();

  AskPublicLuaStr(const AskPublicLuaStr& from);

  inline AskPublicLuaStr& operator=(const AskPublicLuaStr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskPublicLuaStr& default_instance();

  void Swap(AskPublicLuaStr* other);

  // implements Message ----------------------------------------------

  AskPublicLuaStr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskPublicLuaStr& from);
  void MergeFrom(const AskPublicLuaStr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPublicLuaStr];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // @@protoc_insertion_point(class_scope:SSToCS.AskPublicLuaStr)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mgsid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static AskPublicLuaStr* default_instance_;
};
// -------------------------------------------------------------------

class AskMapCfgList : public ::google::protobuf::Message {
 public:
  AskMapCfgList();
  virtual ~AskMapCfgList();

  AskMapCfgList(const AskMapCfgList& from);

  inline AskMapCfgList& operator=(const AskMapCfgList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskMapCfgList& default_instance();

  void Swap(AskMapCfgList* other);

  // implements Message ----------------------------------------------

  AskMapCfgList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskMapCfgList& from);
  void MergeFrom(const AskMapCfgList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskMapCfgList];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // optional int32 mapid = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 2;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SSToCS.AskMapCfgList)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mgsid_;
  ::google::protobuf::int32 mapid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static AskMapCfgList* default_instance_;
};
// -------------------------------------------------------------------

class AskNewSkillCfg : public ::google::protobuf::Message {
 public:
  AskNewSkillCfg();
  virtual ~AskNewSkillCfg();

  AskNewSkillCfg(const AskNewSkillCfg& from);

  inline AskNewSkillCfg& operator=(const AskNewSkillCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskNewSkillCfg& default_instance();

  void Swap(AskNewSkillCfg* other);

  // implements Message ----------------------------------------------

  AskNewSkillCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskNewSkillCfg& from);
  void MergeFrom(const AskNewSkillCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskNewSkillCfg];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // @@protoc_insertion_point(class_scope:SSToCS.AskNewSkillCfg)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mgsid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static AskNewSkillCfg* default_instance_;
};
// -------------------------------------------------------------------

class AskSkillEffectAccountCfg : public ::google::protobuf::Message {
 public:
  AskSkillEffectAccountCfg();
  virtual ~AskSkillEffectAccountCfg();

  AskSkillEffectAccountCfg(const AskSkillEffectAccountCfg& from);

  inline AskSkillEffectAccountCfg& operator=(const AskSkillEffectAccountCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskSkillEffectAccountCfg& default_instance();

  void Swap(AskSkillEffectAccountCfg* other);

  // implements Message ----------------------------------------------

  AskSkillEffectAccountCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskSkillEffectAccountCfg& from);
  void MergeFrom(const AskSkillEffectAccountCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectAccountCfg];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // @@protoc_insertion_point(class_scope:SSToCS.AskSkillEffectAccountCfg)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mgsid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static AskSkillEffectAccountCfg* default_instance_;
};
// -------------------------------------------------------------------

class AskSkillEffectLeadingCfg : public ::google::protobuf::Message {
 public:
  AskSkillEffectLeadingCfg();
  virtual ~AskSkillEffectLeadingCfg();

  AskSkillEffectLeadingCfg(const AskSkillEffectLeadingCfg& from);

  inline AskSkillEffectLeadingCfg& operator=(const AskSkillEffectLeadingCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskSkillEffectLeadingCfg& default_instance();

  void Swap(AskSkillEffectLeadingCfg* other);

  // implements Message ----------------------------------------------

  AskSkillEffectLeadingCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskSkillEffectLeadingCfg& from);
  void MergeFrom(const AskSkillEffectLeadingCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectLeadingCfg];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // @@protoc_insertion_point(class_scope:SSToCS.AskSkillEffectLeadingCfg)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mgsid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static AskSkillEffectLeadingCfg* default_instance_;
};
// -------------------------------------------------------------------

class AskSkillEffectRangeCfg : public ::google::protobuf::Message {
 public:
  AskSkillEffectRangeCfg();
  virtual ~AskSkillEffectRangeCfg();

  AskSkillEffectRangeCfg(const AskSkillEffectRangeCfg& from);

  inline AskSkillEffectRangeCfg& operator=(const AskSkillEffectRangeCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskSkillEffectRangeCfg& default_instance();

  void Swap(AskSkillEffectRangeCfg* other);

  // implements Message ----------------------------------------------

  AskSkillEffectRangeCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskSkillEffectRangeCfg& from);
  void MergeFrom(const AskSkillEffectRangeCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectRangeCfg];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // @@protoc_insertion_point(class_scope:SSToCS.AskSkillEffectRangeCfg)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mgsid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static AskSkillEffectRangeCfg* default_instance_;
};
// -------------------------------------------------------------------

class AskSkillEffectBufCfg : public ::google::protobuf::Message {
 public:
  AskSkillEffectBufCfg();
  virtual ~AskSkillEffectBufCfg();

  AskSkillEffectBufCfg(const AskSkillEffectBufCfg& from);

  inline AskSkillEffectBufCfg& operator=(const AskSkillEffectBufCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskSkillEffectBufCfg& default_instance();

  void Swap(AskSkillEffectBufCfg* other);

  // implements Message ----------------------------------------------

  AskSkillEffectBufCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskSkillEffectBufCfg& from);
  void MergeFrom(const AskSkillEffectBufCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectBufCfg];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // @@protoc_insertion_point(class_scope:SSToCS.AskSkillEffectBufCfg)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mgsid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static AskSkillEffectBufCfg* default_instance_;
};
// -------------------------------------------------------------------

class AskSkillEffectSummonCfg : public ::google::protobuf::Message {
 public:
  AskSkillEffectSummonCfg();
  virtual ~AskSkillEffectSummonCfg();

  AskSkillEffectSummonCfg(const AskSkillEffectSummonCfg& from);

  inline AskSkillEffectSummonCfg& operator=(const AskSkillEffectSummonCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskSkillEffectSummonCfg& default_instance();

  void Swap(AskSkillEffectSummonCfg* other);

  // implements Message ----------------------------------------------

  AskSkillEffectSummonCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskSkillEffectSummonCfg& from);
  void MergeFrom(const AskSkillEffectSummonCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectSummonCfg];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // @@protoc_insertion_point(class_scope:SSToCS.AskSkillEffectSummonCfg)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mgsid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static AskSkillEffectSummonCfg* default_instance_;
};
// -------------------------------------------------------------------

class AskSkillEffectMoveCfg : public ::google::protobuf::Message {
 public:
  AskSkillEffectMoveCfg();
  virtual ~AskSkillEffectMoveCfg();

  AskSkillEffectMoveCfg(const AskSkillEffectMoveCfg& from);

  inline AskSkillEffectMoveCfg& operator=(const AskSkillEffectMoveCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskSkillEffectMoveCfg& default_instance();

  void Swap(AskSkillEffectMoveCfg* other);

  // implements Message ----------------------------------------------

  AskSkillEffectMoveCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskSkillEffectMoveCfg& from);
  void MergeFrom(const AskSkillEffectMoveCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectMoveCfg];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // @@protoc_insertion_point(class_scope:SSToCS.AskSkillEffectMoveCfg)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mgsid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static AskSkillEffectMoveCfg* default_instance_;
};
// -------------------------------------------------------------------

class AskSkillEffectSwitchCfg : public ::google::protobuf::Message {
 public:
  AskSkillEffectSwitchCfg();
  virtual ~AskSkillEffectSwitchCfg();

  AskSkillEffectSwitchCfg(const AskSkillEffectSwitchCfg& from);

  inline AskSkillEffectSwitchCfg& operator=(const AskSkillEffectSwitchCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskSkillEffectSwitchCfg& default_instance();

  void Swap(AskSkillEffectSwitchCfg* other);

  // implements Message ----------------------------------------------

  AskSkillEffectSwitchCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskSkillEffectSwitchCfg& from);
  void MergeFrom(const AskSkillEffectSwitchCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectSwitchCfg];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // @@protoc_insertion_point(class_scope:SSToCS.AskSkillEffectSwitchCfg)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mgsid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static AskSkillEffectSwitchCfg* default_instance_;
};
// -------------------------------------------------------------------

class AskPassitiveSkillCfg : public ::google::protobuf::Message {
 public:
  AskPassitiveSkillCfg();
  virtual ~AskPassitiveSkillCfg();

  AskPassitiveSkillCfg(const AskPassitiveSkillCfg& from);

  inline AskPassitiveSkillCfg& operator=(const AskPassitiveSkillCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskPassitiveSkillCfg& default_instance();

  void Swap(AskPassitiveSkillCfg* other);

  // implements Message ----------------------------------------------

  AskPassitiveSkillCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskPassitiveSkillCfg& from);
  void MergeFrom(const AskPassitiveSkillCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPassitiveSkillCfg];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // @@protoc_insertion_point(class_scope:SSToCS.AskPassitiveSkillCfg)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mgsid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static AskPassitiveSkillCfg* default_instance_;
};
// -------------------------------------------------------------------

class AskPassitiveEffectBloodSeekCfg : public ::google::protobuf::Message {
 public:
  AskPassitiveEffectBloodSeekCfg();
  virtual ~AskPassitiveEffectBloodSeekCfg();

  AskPassitiveEffectBloodSeekCfg(const AskPassitiveEffectBloodSeekCfg& from);

  inline AskPassitiveEffectBloodSeekCfg& operator=(const AskPassitiveEffectBloodSeekCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskPassitiveEffectBloodSeekCfg& default_instance();

  void Swap(AskPassitiveEffectBloodSeekCfg* other);

  // implements Message ----------------------------------------------

  AskPassitiveEffectBloodSeekCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskPassitiveEffectBloodSeekCfg& from);
  void MergeFrom(const AskPassitiveEffectBloodSeekCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPassitiveEffectBloodSeekCfg];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // @@protoc_insertion_point(class_scope:SSToCS.AskPassitiveEffectBloodSeekCfg)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mgsid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static AskPassitiveEffectBloodSeekCfg* default_instance_;
};
// -------------------------------------------------------------------

class AskPassitiveEffectReboundCfg : public ::google::protobuf::Message {
 public:
  AskPassitiveEffectReboundCfg();
  virtual ~AskPassitiveEffectReboundCfg();

  AskPassitiveEffectReboundCfg(const AskPassitiveEffectReboundCfg& from);

  inline AskPassitiveEffectReboundCfg& operator=(const AskPassitiveEffectReboundCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskPassitiveEffectReboundCfg& default_instance();

  void Swap(AskPassitiveEffectReboundCfg* other);

  // implements Message ----------------------------------------------

  AskPassitiveEffectReboundCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskPassitiveEffectReboundCfg& from);
  void MergeFrom(const AskPassitiveEffectReboundCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPassitiveEffectReboundCfg];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // @@protoc_insertion_point(class_scope:SSToCS.AskPassitiveEffectReboundCfg)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mgsid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static AskPassitiveEffectReboundCfg* default_instance_;
};
// -------------------------------------------------------------------

class AskPassitiveEffectReliveCfg : public ::google::protobuf::Message {
 public:
  AskPassitiveEffectReliveCfg();
  virtual ~AskPassitiveEffectReliveCfg();

  AskPassitiveEffectReliveCfg(const AskPassitiveEffectReliveCfg& from);

  inline AskPassitiveEffectReliveCfg& operator=(const AskPassitiveEffectReliveCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskPassitiveEffectReliveCfg& default_instance();

  void Swap(AskPassitiveEffectReliveCfg* other);

  // implements Message ----------------------------------------------

  AskPassitiveEffectReliveCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskPassitiveEffectReliveCfg& from);
  void MergeFrom(const AskPassitiveEffectReliveCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPassitiveEffectReliveCfg];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // @@protoc_insertion_point(class_scope:SSToCS.AskPassitiveEffectReliveCfg)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mgsid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static AskPassitiveEffectReliveCfg* default_instance_;
};
// -------------------------------------------------------------------

class AskUpdateGuideStep : public ::google::protobuf::Message {
 public:
  AskUpdateGuideStep();
  virtual ~AskUpdateGuideStep();

  AskUpdateGuideStep(const AskUpdateGuideStep& from);

  inline AskUpdateGuideStep& operator=(const AskUpdateGuideStep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskUpdateGuideStep& default_instance();

  void Swap(AskUpdateGuideStep* other);

  // implements Message ----------------------------------------------

  AskUpdateGuideStep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskUpdateGuideStep& from);
  void MergeFrom(const AskUpdateGuideStep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskUpdateGuideStep];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 stepid = 4;
  inline bool has_stepid() const;
  inline void clear_stepid();
  static const int kStepidFieldNumber = 4;
  inline ::google::protobuf::int32 stepid() const;
  inline void set_stepid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SSToCS.AskUpdateGuideStep)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_stepid();
  inline void clear_has_stepid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int mgsid_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 stepid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static AskUpdateGuideStep* default_instance_;
};
// -------------------------------------------------------------------

class AskUserGoHall : public ::google::protobuf::Message {
 public:
  AskUserGoHall();
  virtual ~AskUserGoHall();

  AskUserGoHall(const AskUserGoHall& from);

  inline AskUserGoHall& operator=(const AskUserGoHall& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskUserGoHall& default_instance();

  void Swap(AskUserGoHall* other);

  // implements Message ----------------------------------------------

  AskUserGoHall* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskUserGoHall& from);
  void MergeFrom(const AskUserGoHall& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskUserGoHall];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SSToCS.AskUserGoHall)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int mgsid_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static AskUserGoHall* default_instance_;
};
// -------------------------------------------------------------------

class SyncAllBattleInfo : public ::google::protobuf::Message {
 public:
  SyncAllBattleInfo();
  virtual ~SyncAllBattleInfo();

  SyncAllBattleInfo(const SyncAllBattleInfo& from);

  inline SyncAllBattleInfo& operator=(const SyncAllBattleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncAllBattleInfo& default_instance();

  void Swap(SyncAllBattleInfo* other);

  // implements Message ----------------------------------------------

  SyncAllBattleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncAllBattleInfo& from);
  void MergeFrom(const SyncAllBattleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AllBattleInfo];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // repeated uint64 playbattle = 2;
  inline int playbattle_size() const;
  inline void clear_playbattle();
  static const int kPlaybattleFieldNumber = 2;
  inline ::google::protobuf::uint64 playbattle(int index) const;
  inline void set_playbattle(int index, ::google::protobuf::uint64 value);
  inline void add_playbattle(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      playbattle() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_playbattle();

  // optional uint64 maxbattleid = 3;
  inline bool has_maxbattleid() const;
  inline void clear_maxbattleid();
  static const int kMaxbattleidFieldNumber = 3;
  inline ::google::protobuf::uint64 maxbattleid() const;
  inline void set_maxbattleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:SSToCS.SyncAllBattleInfo)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();
  inline void set_has_maxbattleid();
  inline void clear_has_maxbattleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > playbattle_;
  ::google::protobuf::uint64 maxbattleid_;
  int mgsid_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static SyncAllBattleInfo* default_instance_;
};
// -------------------------------------------------------------------

class CreateBattleResponse : public ::google::protobuf::Message {
 public:
  CreateBattleResponse();
  virtual ~CreateBattleResponse();

  CreateBattleResponse(const CreateBattleResponse& from);

  inline CreateBattleResponse& operator=(const CreateBattleResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateBattleResponse& default_instance();

  void Swap(CreateBattleResponse* other);

  // implements Message ----------------------------------------------

  CreateBattleResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateBattleResponse& from);
  void MergeFrom(const CreateBattleResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_CreateBattleResponse];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // optional int64 battleid = 2;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleidFieldNumber = 2;
  inline ::google::protobuf::int64 battleid() const;
  inline void set_battleid(::google::protobuf::int64 value);

  // optional bool rst = 3;
  inline bool has_rst() const;
  inline void clear_rst();
  static const int kRstFieldNumber = 3;
  inline bool rst() const;
  inline void set_rst(bool value);

  // @@protoc_insertion_point(class_scope:SSToCS.CreateBattleResponse)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();
  inline void set_has_battleid();
  inline void clear_has_battleid();
  inline void set_has_rst();
  inline void clear_has_rst();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 battleid_;
  int mgsid_;
  bool rst_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static CreateBattleResponse* default_instance_;
};
// -------------------------------------------------------------------

class FinishBattle_BattleUserData : public ::google::protobuf::Message {
 public:
  FinishBattle_BattleUserData();
  virtual ~FinishBattle_BattleUserData();

  FinishBattle_BattleUserData(const FinishBattle_BattleUserData& from);

  inline FinishBattle_BattleUserData& operator=(const FinishBattle_BattleUserData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FinishBattle_BattleUserData& default_instance();

  void Swap(FinishBattle_BattleUserData* other);

  // implements Message ----------------------------------------------

  FinishBattle_BattleUserData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FinishBattle_BattleUserData& from);
  void MergeFrom(const FinishBattle_BattleUserData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional uint64 heroguid = 2;
  inline bool has_heroguid() const;
  inline void clear_heroguid();
  static const int kHeroguidFieldNumber = 2;
  inline ::google::protobuf::uint64 heroguid() const;
  inline void set_heroguid(::google::protobuf::uint64 value);

  // optional uint32 timeinsecond = 3;
  inline bool has_timeinsecond() const;
  inline void clear_timeinsecond();
  static const int kTimeinsecondFieldNumber = 3;
  inline ::google::protobuf::uint32 timeinsecond() const;
  inline void set_timeinsecond(::google::protobuf::uint32 value);

  // optional bool ifEnd = 4;
  inline bool has_ifend() const;
  inline void clear_ifend();
  static const int kIfEndFieldNumber = 4;
  inline bool ifend() const;
  inline void set_ifend(bool value);

  // optional int32 heroid = 5;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 5;
  inline ::google::protobuf::int32 heroid() const;
  inline void set_heroid(::google::protobuf::int32 value);

  // optional int32 runepage = 6;
  inline bool has_runepage() const;
  inline void clear_runepage();
  static const int kRunepageFieldNumber = 6;
  inline ::google::protobuf::int32 runepage() const;
  inline void set_runepage(::google::protobuf::int32 value);

  // optional uint32 deadtimes = 7;
  inline bool has_deadtimes() const;
  inline void clear_deadtimes();
  static const int kDeadtimesFieldNumber = 7;
  inline ::google::protobuf::uint32 deadtimes() const;
  inline void set_deadtimes(::google::protobuf::uint32 value);

  // optional uint32 herokills = 8;
  inline bool has_herokills() const;
  inline void clear_herokills();
  static const int kHerokillsFieldNumber = 8;
  inline ::google::protobuf::uint32 herokills() const;
  inline void set_herokills(::google::protobuf::uint32 value);

  // optional int32 destorybuilding = 9;
  inline bool has_destorybuilding() const;
  inline void clear_destorybuilding();
  static const int kDestorybuildingFieldNumber = 9;
  inline ::google::protobuf::int32 destorybuilding() const;
  inline void set_destorybuilding(::google::protobuf::int32 value);

  // optional int64 diamondused = 10;
  inline bool has_diamondused() const;
  inline void clear_diamondused();
  static const int kDiamondusedFieldNumber = 10;
  inline ::google::protobuf::int64 diamondused() const;
  inline void set_diamondused(::google::protobuf::int64 value);

  // optional int64 goldused = 11;
  inline bool has_goldused() const;
  inline void clear_goldused();
  static const int kGoldusedFieldNumber = 11;
  inline ::google::protobuf::int64 goldused() const;
  inline void set_goldused(::google::protobuf::int64 value);

  // optional int32 lasthitnum = 12;
  inline bool has_lasthitnum() const;
  inline void clear_lasthitnum();
  static const int kLasthitnumFieldNumber = 12;
  inline ::google::protobuf::int32 lasthitnum() const;
  inline void set_lasthitnum(::google::protobuf::int32 value);

  // optional int32 asskillnum = 13;
  inline bool has_asskillnum() const;
  inline void clear_asskillnum();
  static const int kAsskillnumFieldNumber = 13;
  inline ::google::protobuf::int32 asskillnum() const;
  inline void set_asskillnum(::google::protobuf::int32 value);

  // optional int32 herolv = 14;
  inline bool has_herolv() const;
  inline void clear_herolv();
  static const int kHerolvFieldNumber = 14;
  inline ::google::protobuf::int32 herolv() const;
  inline void set_herolv(::google::protobuf::int32 value);

  // optional int32 totalcp = 15;
  inline bool has_totalcp() const;
  inline void clear_totalcp();
  static const int kTotalcpFieldNumber = 15;
  inline ::google::protobuf::int32 totalcp() const;
  inline void set_totalcp(::google::protobuf::int32 value);

  // optional bool ifAiRobot = 16;
  inline bool has_ifairobot() const;
  inline void clear_ifairobot();
  static const int kIfAiRobotFieldNumber = 16;
  inline bool ifairobot() const;
  inline void set_ifairobot(bool value);

  // @@protoc_insertion_point(class_scope:SSToCS.FinishBattle.BattleUserData)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_heroguid();
  inline void clear_has_heroguid();
  inline void set_has_timeinsecond();
  inline void clear_has_timeinsecond();
  inline void set_has_ifend();
  inline void clear_has_ifend();
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_runepage();
  inline void clear_has_runepage();
  inline void set_has_deadtimes();
  inline void clear_has_deadtimes();
  inline void set_has_herokills();
  inline void clear_has_herokills();
  inline void set_has_destorybuilding();
  inline void clear_has_destorybuilding();
  inline void set_has_diamondused();
  inline void clear_has_diamondused();
  inline void set_has_goldused();
  inline void clear_has_goldused();
  inline void set_has_lasthitnum();
  inline void clear_has_lasthitnum();
  inline void set_has_asskillnum();
  inline void clear_has_asskillnum();
  inline void set_has_herolv();
  inline void clear_has_herolv();
  inline void set_has_totalcp();
  inline void clear_has_totalcp();
  inline void set_has_ifairobot();
  inline void clear_has_ifairobot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 heroguid_;
  ::google::protobuf::uint32 timeinsecond_;
  ::google::protobuf::int32 heroid_;
  ::google::protobuf::int32 runepage_;
  ::google::protobuf::uint32 deadtimes_;
  ::google::protobuf::uint32 herokills_;
  ::google::protobuf::int32 destorybuilding_;
  ::google::protobuf::int64 diamondused_;
  bool ifend_;
  bool ifairobot_;
  ::google::protobuf::int32 lasthitnum_;
  ::google::protobuf::int64 goldused_;
  ::google::protobuf::int32 asskillnum_;
  ::google::protobuf::int32 herolv_;
  ::google::protobuf::int32 totalcp_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static FinishBattle_BattleUserData* default_instance_;
};
// -------------------------------------------------------------------

class FinishBattle : public ::google::protobuf::Message {
 public:
  FinishBattle();
  virtual ~FinishBattle();

  FinishBattle(const FinishBattle& from);

  inline FinishBattle& operator=(const FinishBattle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FinishBattle& default_instance();

  void Swap(FinishBattle* other);

  // implements Message ----------------------------------------------

  FinishBattle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FinishBattle& from);
  void MergeFrom(const FinishBattle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef FinishBattle_BattleUserData BattleUserData;

  // accessors -------------------------------------------------------

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_FinishBattle];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::SSToCS::MsgID mgsid() const;
  inline void set_mgsid(::SSToCS::MsgID value);

  // optional int64 battleid = 2;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleidFieldNumber = 2;
  inline ::google::protobuf::int64 battleid() const;
  inline void set_battleid(::google::protobuf::int64 value);

  // optional int32 winGrpID = 3;
  inline bool has_wingrpid() const;
  inline void clear_wingrpid();
  static const int kWinGrpIDFieldNumber = 3;
  inline ::google::protobuf::int32 wingrpid() const;
  inline void set_wingrpid(::google::protobuf::int32 value);

  // repeated .SSToCS.FinishBattle.BattleUserData battelUserDataList = 4;
  inline int batteluserdatalist_size() const;
  inline void clear_batteluserdatalist();
  static const int kBattelUserDataListFieldNumber = 4;
  inline const ::SSToCS::FinishBattle_BattleUserData& batteluserdatalist(int index) const;
  inline ::SSToCS::FinishBattle_BattleUserData* mutable_batteluserdatalist(int index);
  inline ::SSToCS::FinishBattle_BattleUserData* add_batteluserdatalist();
  inline const ::google::protobuf::RepeatedPtrField< ::SSToCS::FinishBattle_BattleUserData >&
      batteluserdatalist() const;
  inline ::google::protobuf::RepeatedPtrField< ::SSToCS::FinishBattle_BattleUserData >*
      mutable_batteluserdatalist();

  // @@protoc_insertion_point(class_scope:SSToCS.FinishBattle)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();
  inline void set_has_battleid();
  inline void clear_has_battleid();
  inline void set_has_wingrpid();
  inline void clear_has_wingrpid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 battleid_;
  int mgsid_;
  ::google::protobuf::int32 wingrpid_;
  ::google::protobuf::RepeatedPtrField< ::SSToCS::FinishBattle_BattleUserData > batteluserdatalist_;
  friend void  protobuf_AddDesc_SSToCS_2eproto();
  friend void protobuf_AssignDesc_SSToCS_2eproto();
  friend void protobuf_ShutdownFile_SSToCS_2eproto();

  void InitAsDefaultInstance();
  static FinishBattle* default_instance_;
};
// ===================================================================


// ===================================================================

// GameLogSwitch

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSSGameLogSwitch];
inline bool GameLogSwitch::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameLogSwitch::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameLogSwitch::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameLogSwitch::clear_mgsid() {
  mgsid_ = 8232;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID GameLogSwitch::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.GameLogSwitch.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void GameLogSwitch::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.GameLogSwitch.mgsid)
}

// -------------------------------------------------------------------

// UpGuideBattleStep

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_UpdateGuideBattleStep];
inline bool UpGuideBattleStep::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpGuideBattleStep::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpGuideBattleStep::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpGuideBattleStep::clear_mgsid() {
  mgsid_ = 8231;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID UpGuideBattleStep::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.UpGuideBattleStep.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void UpGuideBattleStep::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.UpGuideBattleStep.mgsid)
}

// optional int64 guid = 2;
inline bool UpGuideBattleStep::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpGuideBattleStep::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpGuideBattleStep::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpGuideBattleStep::clear_guid() {
  guid_ = GOOGLE_LONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::int64 UpGuideBattleStep::guid() const {
  // @@protoc_insertion_point(field_get:SSToCS.UpGuideBattleStep.guid)
  return guid_;
}
inline void UpGuideBattleStep::set_guid(::google::protobuf::int64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.UpGuideBattleStep.guid)
}

// optional int32 taskid = 3;
inline bool UpGuideBattleStep::has_taskid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpGuideBattleStep::set_has_taskid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpGuideBattleStep::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpGuideBattleStep::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 UpGuideBattleStep::taskid() const {
  // @@protoc_insertion_point(field_get:SSToCS.UpGuideBattleStep.taskid)
  return taskid_;
}
inline void UpGuideBattleStep::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.UpGuideBattleStep.taskid)
}

// optional int32 num = 4;
inline bool UpGuideBattleStep::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpGuideBattleStep::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpGuideBattleStep::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpGuideBattleStep::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 UpGuideBattleStep::num() const {
  // @@protoc_insertion_point(field_get:SSToCS.UpGuideBattleStep.num)
  return num_;
}
inline void UpGuideBattleStep::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.UpGuideBattleStep.num)
}

// -------------------------------------------------------------------

// BattleLog

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_BattleLog];
inline bool BattleLog::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleLog::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleLog::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleLog::clear_mgsid() {
  mgsid_ = 8230;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID BattleLog::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.BattleLog.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void BattleLog::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.BattleLog.mgsid)
}

// optional int64 guid = 2;
inline bool BattleLog::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleLog::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleLog::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleLog::clear_guid() {
  guid_ = GOOGLE_LONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::int64 BattleLog::guid() const {
  // @@protoc_insertion_point(field_get:SSToCS.BattleLog.guid)
  return guid_;
}
inline void BattleLog::set_guid(::google::protobuf::int64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.BattleLog.guid)
}

// optional int32 log_type = 3;
inline bool BattleLog::has_log_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleLog::set_has_log_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleLog::clear_has_log_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleLog::clear_log_type() {
  log_type_ = 0;
  clear_has_log_type();
}
inline ::google::protobuf::int32 BattleLog::log_type() const {
  // @@protoc_insertion_point(field_get:SSToCS.BattleLog.log_type)
  return log_type_;
}
inline void BattleLog::set_log_type(::google::protobuf::int32 value) {
  set_has_log_type();
  log_type_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.BattleLog.log_type)
}

// optional string log_str = 4;
inline bool BattleLog::has_log_str() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BattleLog::set_has_log_str() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BattleLog::clear_has_log_str() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BattleLog::clear_log_str() {
  if (log_str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    log_str_->clear();
  }
  clear_has_log_str();
}
inline const ::std::string& BattleLog::log_str() const {
  // @@protoc_insertion_point(field_get:SSToCS.BattleLog.log_str)
  return *log_str_;
}
inline void BattleLog::set_log_str(const ::std::string& value) {
  set_has_log_str();
  if (log_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    log_str_ = new ::std::string;
  }
  log_str_->assign(value);
  // @@protoc_insertion_point(field_set:SSToCS.BattleLog.log_str)
}
inline void BattleLog::set_log_str(const char* value) {
  set_has_log_str();
  if (log_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    log_str_ = new ::std::string;
  }
  log_str_->assign(value);
  // @@protoc_insertion_point(field_set_char:SSToCS.BattleLog.log_str)
}
inline void BattleLog::set_log_str(const char* value, size_t size) {
  set_has_log_str();
  if (log_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    log_str_ = new ::std::string;
  }
  log_str_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SSToCS.BattleLog.log_str)
}
inline ::std::string* BattleLog::mutable_log_str() {
  set_has_log_str();
  if (log_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    log_str_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SSToCS.BattleLog.log_str)
  return log_str_;
}
inline ::std::string* BattleLog::release_log_str() {
  clear_has_log_str();
  if (log_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = log_str_;
    log_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BattleLog::set_allocated_log_str(::std::string* log_str) {
  if (log_str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete log_str_;
  }
  if (log_str) {
    set_has_log_str();
    log_str_ = log_str;
  } else {
    clear_has_log_str();
    log_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SSToCS.BattleLog.log_str)
}

// -------------------------------------------------------------------

// AskPing

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPing];
inline bool AskPing::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskPing::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskPing::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskPing::clear_mgsid() {
  mgsid_ = 8193;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID AskPing::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskPing.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void AskPing::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskPing.mgsid)
}

// optional int64 time = 2;
inline bool AskPing::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AskPing::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AskPing::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AskPing::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 AskPing::time() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskPing.time)
  return time_;
}
inline void AskPing::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskPing.time)
}

// -------------------------------------------------------------------

// ReportGotSomeMsg

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_ReportGotSomeMsg];
inline bool ReportGotSomeMsg::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReportGotSomeMsg::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReportGotSomeMsg::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReportGotSomeMsg::clear_mgsid() {
  mgsid_ = 8228;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID ReportGotSomeMsg::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.ReportGotSomeMsg.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void ReportGotSomeMsg::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.ReportGotSomeMsg.mgsid)
}

// optional int32 gotmsgid = 2;
inline bool ReportGotSomeMsg::has_gotmsgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReportGotSomeMsg::set_has_gotmsgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReportGotSomeMsg::clear_has_gotmsgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReportGotSomeMsg::clear_gotmsgid() {
  gotmsgid_ = 0;
  clear_has_gotmsgid();
}
inline ::google::protobuf::int32 ReportGotSomeMsg::gotmsgid() const {
  // @@protoc_insertion_point(field_get:SSToCS.ReportGotSomeMsg.gotmsgid)
  return gotmsgid_;
}
inline void ReportGotSomeMsg::set_gotmsgid(::google::protobuf::int32 value) {
  set_has_gotmsgid();
  gotmsgid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.ReportGotSomeMsg.gotmsgid)
}

// optional uint64 otherval = 3;
inline bool ReportGotSomeMsg::has_otherval() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReportGotSomeMsg::set_has_otherval() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReportGotSomeMsg::clear_has_otherval() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReportGotSomeMsg::clear_otherval() {
  otherval_ = GOOGLE_ULONGLONG(0);
  clear_has_otherval();
}
inline ::google::protobuf::uint64 ReportGotSomeMsg::otherval() const {
  // @@protoc_insertion_point(field_get:SSToCS.ReportGotSomeMsg.otherval)
  return otherval_;
}
inline void ReportGotSomeMsg::set_otherval(::google::protobuf::uint64 value) {
  set_has_otherval();
  otherval_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.ReportGotSomeMsg.otherval)
}

// -------------------------------------------------------------------

// ReportBattleShowResult

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_ReportBattleShowResult];
inline bool ReportBattleShowResult::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReportBattleShowResult::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReportBattleShowResult::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReportBattleShowResult::clear_mgsid() {
  mgsid_ = 8227;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID ReportBattleShowResult::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.ReportBattleShowResult.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void ReportBattleShowResult::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.ReportBattleShowResult.mgsid)
}

// optional uint64 battleid = 2;
inline bool ReportBattleShowResult::has_battleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReportBattleShowResult::set_has_battleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReportBattleShowResult::clear_has_battleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReportBattleShowResult::clear_battleid() {
  battleid_ = GOOGLE_ULONGLONG(0);
  clear_has_battleid();
}
inline ::google::protobuf::uint64 ReportBattleShowResult::battleid() const {
  // @@protoc_insertion_point(field_get:SSToCS.ReportBattleShowResult.battleid)
  return battleid_;
}
inline void ReportBattleShowResult::set_battleid(::google::protobuf::uint64 value) {
  set_has_battleid();
  battleid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.ReportBattleShowResult.battleid)
}

// optional int32 result = 3;
inline bool ReportBattleShowResult::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReportBattleShowResult::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReportBattleShowResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReportBattleShowResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 ReportBattleShowResult::result() const {
  // @@protoc_insertion_point(field_get:SSToCS.ReportBattleShowResult.result)
  return result_;
}
inline void ReportBattleShowResult::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.ReportBattleShowResult.result)
}

// -------------------------------------------------------------------

// AskChangeFirstWinTime

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskChangeFirstWinTime];
inline bool AskChangeFirstWinTime::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskChangeFirstWinTime::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskChangeFirstWinTime::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskChangeFirstWinTime::clear_mgsid() {
  mgsid_ = 8210;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID AskChangeFirstWinTime::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskChangeFirstWinTime.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void AskChangeFirstWinTime::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskChangeFirstWinTime.mgsid)
}

// optional uint64 guid = 2;
inline bool AskChangeFirstWinTime::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AskChangeFirstWinTime::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AskChangeFirstWinTime::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AskChangeFirstWinTime::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 AskChangeFirstWinTime::guid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskChangeFirstWinTime.guid)
  return guid_;
}
inline void AskChangeFirstWinTime::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskChangeFirstWinTime.guid)
}

// optional int64 curtime = 3;
inline bool AskChangeFirstWinTime::has_curtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AskChangeFirstWinTime::set_has_curtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AskChangeFirstWinTime::clear_has_curtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AskChangeFirstWinTime::clear_curtime() {
  curtime_ = GOOGLE_LONGLONG(0);
  clear_has_curtime();
}
inline ::google::protobuf::int64 AskChangeFirstWinTime::curtime() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskChangeFirstWinTime.curtime)
  return curtime_;
}
inline void AskChangeFirstWinTime::set_curtime(::google::protobuf::int64 value) {
  set_has_curtime();
  curtime_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskChangeFirstWinTime.curtime)
}

// -------------------------------------------------------------------

// AddGold

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskAddGold];
inline bool AddGold::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddGold::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddGold::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddGold::clear_mgsid() {
  mgsid_ = 8207;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID AddGold::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AddGold.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void AddGold::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AddGold.mgsid)
}

// optional uint64 guid = 2;
inline bool AddGold::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddGold::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddGold::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddGold::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 AddGold::guid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AddGold.guid)
  return guid_;
}
inline void AddGold::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AddGold.guid)
}

// optional int64 gold = 3;
inline bool AddGold::has_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddGold::set_has_gold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddGold::clear_has_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddGold::clear_gold() {
  gold_ = GOOGLE_LONGLONG(0);
  clear_has_gold();
}
inline ::google::protobuf::int64 AddGold::gold() const {
  // @@protoc_insertion_point(field_get:SSToCS.AddGold.gold)
  return gold_;
}
inline void AddGold::set_gold(::google::protobuf::int64 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AddGold.gold)
}

// -------------------------------------------------------------------

// AskRegiste

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskRegiste];
inline bool AskRegiste::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskRegiste::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskRegiste::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskRegiste::clear_mgsid() {
  mgsid_ = 8194;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID AskRegiste::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskRegiste.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void AskRegiste::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskRegiste.mgsid)
}

// optional int32 ssid = 2;
inline bool AskRegiste::has_ssid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AskRegiste::set_has_ssid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AskRegiste::clear_has_ssid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AskRegiste::clear_ssid() {
  ssid_ = 0;
  clear_has_ssid();
}
inline ::google::protobuf::int32 AskRegiste::ssid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskRegiste.ssid)
  return ssid_;
}
inline void AskRegiste::set_ssid(::google::protobuf::int32 value) {
  set_has_ssid();
  ssid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskRegiste.ssid)
}

// optional string ip = 3;
inline bool AskRegiste::has_ip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AskRegiste::set_has_ip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AskRegiste::clear_has_ip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AskRegiste::clear_ip() {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& AskRegiste::ip() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskRegiste.ip)
  return *ip_;
}
inline void AskRegiste::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set:SSToCS.AskRegiste.ip)
}
inline void AskRegiste::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:SSToCS.AskRegiste.ip)
}
inline void AskRegiste::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SSToCS.AskRegiste.ip)
}
inline ::std::string* AskRegiste::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SSToCS.AskRegiste.ip)
  return ip_;
}
inline ::std::string* AskRegiste::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AskRegiste::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SSToCS.AskRegiste.ip)
}

// optional int32 port = 4;
inline bool AskRegiste::has_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AskRegiste::set_has_port() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AskRegiste::clear_has_port() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AskRegiste::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 AskRegiste::port() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskRegiste.port)
  return port_;
}
inline void AskRegiste::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskRegiste.port)
}

// optional string userpwd = 5;
inline bool AskRegiste::has_userpwd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AskRegiste::set_has_userpwd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AskRegiste::clear_has_userpwd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AskRegiste::clear_userpwd() {
  if (userpwd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    userpwd_->clear();
  }
  clear_has_userpwd();
}
inline const ::std::string& AskRegiste::userpwd() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskRegiste.userpwd)
  return *userpwd_;
}
inline void AskRegiste::set_userpwd(const ::std::string& value) {
  set_has_userpwd();
  if (userpwd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    userpwd_ = new ::std::string;
  }
  userpwd_->assign(value);
  // @@protoc_insertion_point(field_set:SSToCS.AskRegiste.userpwd)
}
inline void AskRegiste::set_userpwd(const char* value) {
  set_has_userpwd();
  if (userpwd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    userpwd_ = new ::std::string;
  }
  userpwd_->assign(value);
  // @@protoc_insertion_point(field_set_char:SSToCS.AskRegiste.userpwd)
}
inline void AskRegiste::set_userpwd(const char* value, size_t size) {
  set_has_userpwd();
  if (userpwd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    userpwd_ = new ::std::string;
  }
  userpwd_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SSToCS.AskRegiste.userpwd)
}
inline ::std::string* AskRegiste::mutable_userpwd() {
  set_has_userpwd();
  if (userpwd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    userpwd_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SSToCS.AskRegiste.userpwd)
  return userpwd_;
}
inline ::std::string* AskRegiste::release_userpwd() {
  clear_has_userpwd();
  if (userpwd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = userpwd_;
    userpwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AskRegiste::set_allocated_userpwd(::std::string* userpwd) {
  if (userpwd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete userpwd_;
  }
  if (userpwd) {
    set_has_userpwd();
    userpwd_ = userpwd;
  } else {
    clear_has_userpwd();
    userpwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SSToCS.AskRegiste.userpwd)
}

// -------------------------------------------------------------------

// ReportBattleFinished

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_ReportBattleFinished];
inline bool ReportBattleFinished::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReportBattleFinished::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReportBattleFinished::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReportBattleFinished::clear_mgsid() {
  mgsid_ = 8195;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID ReportBattleFinished::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.ReportBattleFinished.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void ReportBattleFinished::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.ReportBattleFinished.mgsid)
}

// optional int64 battleid = 2;
inline bool ReportBattleFinished::has_battleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReportBattleFinished::set_has_battleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReportBattleFinished::clear_has_battleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReportBattleFinished::clear_battleid() {
  battleid_ = GOOGLE_LONGLONG(0);
  clear_has_battleid();
}
inline ::google::protobuf::int64 ReportBattleFinished::battleid() const {
  // @@protoc_insertion_point(field_get:SSToCS.ReportBattleFinished.battleid)
  return battleid_;
}
inline void ReportBattleFinished::set_battleid(::google::protobuf::int64 value) {
  set_has_battleid();
  battleid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.ReportBattleFinished.battleid)
}

// optional int32 campid = 3;
inline bool ReportBattleFinished::has_campid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReportBattleFinished::set_has_campid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReportBattleFinished::clear_has_campid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReportBattleFinished::clear_campid() {
  campid_ = 0;
  clear_has_campid();
}
inline ::google::protobuf::int32 ReportBattleFinished::campid() const {
  // @@protoc_insertion_point(field_get:SSToCS.ReportBattleFinished.campid)
  return campid_;
}
inline void ReportBattleFinished::set_campid(::google::protobuf::int32 value) {
  set_has_campid();
  campid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.ReportBattleFinished.campid)
}

// optional int32 res = 4;
inline bool ReportBattleFinished::has_res() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReportBattleFinished::set_has_res() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReportBattleFinished::clear_has_res() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReportBattleFinished::clear_res() {
  res_ = 0;
  clear_has_res();
}
inline ::google::protobuf::int32 ReportBattleFinished::res() const {
  // @@protoc_insertion_point(field_get:SSToCS.ReportBattleFinished.res)
  return res_;
}
inline void ReportBattleFinished::set_res(::google::protobuf::int32 value) {
  set_has_res();
  res_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.ReportBattleFinished.res)
}

// -------------------------------------------------------------------

// userData

// optional uint64 guid = 1;
inline bool userData::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void userData::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void userData::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void userData::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 userData::guid() const {
  // @@protoc_insertion_point(field_get:SSToCS.userData.guid)
  return guid_;
}
inline void userData::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.userData.guid)
}

// optional uint32 deadtimes = 2;
inline bool userData::has_deadtimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void userData::set_has_deadtimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void userData::clear_has_deadtimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void userData::clear_deadtimes() {
  deadtimes_ = 0u;
  clear_has_deadtimes();
}
inline ::google::protobuf::uint32 userData::deadtimes() const {
  // @@protoc_insertion_point(field_get:SSToCS.userData.deadtimes)
  return deadtimes_;
}
inline void userData::set_deadtimes(::google::protobuf::uint32 value) {
  set_has_deadtimes();
  deadtimes_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.userData.deadtimes)
}

// optional uint32 herokills = 3;
inline bool userData::has_herokills() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void userData::set_has_herokills() {
  _has_bits_[0] |= 0x00000004u;
}
inline void userData::clear_has_herokills() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void userData::clear_herokills() {
  herokills_ = 0u;
  clear_has_herokills();
}
inline ::google::protobuf::uint32 userData::herokills() const {
  // @@protoc_insertion_point(field_get:SSToCS.userData.herokills)
  return herokills_;
}
inline void userData::set_herokills(::google::protobuf::uint32 value) {
  set_has_herokills();
  herokills_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.userData.herokills)
}

// optional uint32 gameinn = 4;
inline bool userData::has_gameinn() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void userData::set_has_gameinn() {
  _has_bits_[0] |= 0x00000008u;
}
inline void userData::clear_has_gameinn() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void userData::clear_gameinn() {
  gameinn_ = 0u;
  clear_has_gameinn();
}
inline ::google::protobuf::uint32 userData::gameinn() const {
  // @@protoc_insertion_point(field_get:SSToCS.userData.gameinn)
  return gameinn_;
}
inline void userData::set_gameinn(::google::protobuf::uint32 value) {
  set_has_gameinn();
  gameinn_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.userData.gameinn)
}

// optional uint32 wininn = 5;
inline bool userData::has_wininn() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void userData::set_has_wininn() {
  _has_bits_[0] |= 0x00000010u;
}
inline void userData::clear_has_wininn() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void userData::clear_wininn() {
  wininn_ = 0u;
  clear_has_wininn();
}
inline ::google::protobuf::uint32 userData::wininn() const {
  // @@protoc_insertion_point(field_get:SSToCS.userData.wininn)
  return wininn_;
}
inline void userData::set_wininn(::google::protobuf::uint32 value) {
  set_has_wininn();
  wininn_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.userData.wininn)
}

// optional uint32 exp = 6;
inline bool userData::has_exp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void userData::set_has_exp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void userData::clear_has_exp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void userData::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 userData::exp() const {
  // @@protoc_insertion_point(field_get:SSToCS.userData.exp)
  return exp_;
}
inline void userData::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.userData.exp)
}

// optional int64 gold = 7;
inline bool userData::has_gold() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void userData::set_has_gold() {
  _has_bits_[0] |= 0x00000040u;
}
inline void userData::clear_has_gold() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void userData::clear_gold() {
  gold_ = GOOGLE_LONGLONG(0);
  clear_has_gold();
}
inline ::google::protobuf::int64 userData::gold() const {
  // @@protoc_insertion_point(field_get:SSToCS.userData.gold)
  return gold_;
}
inline void userData::set_gold(::google::protobuf::int64 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.userData.gold)
}

// optional int32 destorybuilding = 8;
inline bool userData::has_destorybuilding() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void userData::set_has_destorybuilding() {
  _has_bits_[0] |= 0x00000080u;
}
inline void userData::clear_has_destorybuilding() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void userData::clear_destorybuilding() {
  destorybuilding_ = 0;
  clear_has_destorybuilding();
}
inline ::google::protobuf::int32 userData::destorybuilding() const {
  // @@protoc_insertion_point(field_get:SSToCS.userData.destorybuilding)
  return destorybuilding_;
}
inline void userData::set_destorybuilding(::google::protobuf::int32 value) {
  set_has_destorybuilding();
  destorybuilding_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.userData.destorybuilding)
}

// optional int32 heroid = 9;
inline bool userData::has_heroid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void userData::set_has_heroid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void userData::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void userData::clear_heroid() {
  heroid_ = 0;
  clear_has_heroid();
}
inline ::google::protobuf::int32 userData::heroid() const {
  // @@protoc_insertion_point(field_get:SSToCS.userData.heroid)
  return heroid_;
}
inline void userData::set_heroid(::google::protobuf::int32 value) {
  set_has_heroid();
  heroid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.userData.heroid)
}

// -------------------------------------------------------------------

// AskUpdateData

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskUpdateData];
inline bool AskUpdateData::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskUpdateData::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskUpdateData::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskUpdateData::clear_mgsid() {
  mgsid_ = 8206;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID AskUpdateData::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskUpdateData.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void AskUpdateData::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskUpdateData.mgsid)
}

// repeated .SSToCS.userData user_data = 2;
inline int AskUpdateData::user_data_size() const {
  return user_data_.size();
}
inline void AskUpdateData::clear_user_data() {
  user_data_.Clear();
}
inline const ::SSToCS::userData& AskUpdateData::user_data(int index) const {
  // @@protoc_insertion_point(field_get:SSToCS.AskUpdateData.user_data)
  return user_data_.Get(index);
}
inline ::SSToCS::userData* AskUpdateData::mutable_user_data(int index) {
  // @@protoc_insertion_point(field_mutable:SSToCS.AskUpdateData.user_data)
  return user_data_.Mutable(index);
}
inline ::SSToCS::userData* AskUpdateData::add_user_data() {
  // @@protoc_insertion_point(field_add:SSToCS.AskUpdateData.user_data)
  return user_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SSToCS::userData >&
AskUpdateData::user_data() const {
  // @@protoc_insertion_point(field_list:SSToCS.AskUpdateData.user_data)
  return user_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::SSToCS::userData >*
AskUpdateData::mutable_user_data() {
  // @@protoc_insertion_point(field_mutable_list:SSToCS.AskUpdateData.user_data)
  return &user_data_;
}

// -------------------------------------------------------------------

// UserNetInfo

// optional int32 gsid = 1;
inline bool UserNetInfo::has_gsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserNetInfo::set_has_gsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserNetInfo::clear_has_gsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserNetInfo::clear_gsid() {
  gsid_ = 0;
  clear_has_gsid();
}
inline ::google::protobuf::int32 UserNetInfo::gsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.UserNetInfo.gsid)
  return gsid_;
}
inline void UserNetInfo::set_gsid(::google::protobuf::int32 value) {
  set_has_gsid();
  gsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.UserNetInfo.gsid)
}

// optional int32 gcnsid = 2;
inline bool UserNetInfo::has_gcnsid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserNetInfo::set_has_gcnsid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserNetInfo::clear_has_gcnsid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserNetInfo::clear_gcnsid() {
  gcnsid_ = 0;
  clear_has_gcnsid();
}
inline ::google::protobuf::int32 UserNetInfo::gcnsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.UserNetInfo.gcnsid)
  return gcnsid_;
}
inline void UserNetInfo::set_gcnsid(::google::protobuf::int32 value) {
  set_has_gcnsid();
  gcnsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.UserNetInfo.gcnsid)
}

// -------------------------------------------------------------------

// ReportUserOffline

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_ReportUserOffline];
inline bool ReportUserOffline::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReportUserOffline::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReportUserOffline::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReportUserOffline::clear_mgsid() {
  mgsid_ = 8196;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID ReportUserOffline::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.ReportUserOffline.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void ReportUserOffline::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.ReportUserOffline.mgsid)
}

// optional uint64 guid = 2;
inline bool ReportUserOffline::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReportUserOffline::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReportUserOffline::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReportUserOffline::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 ReportUserOffline::guid() const {
  // @@protoc_insertion_point(field_get:SSToCS.ReportUserOffline.guid)
  return guid_;
}
inline void ReportUserOffline::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.ReportUserOffline.guid)
}

// optional .SSToCS.UserNetInfo usernetinfo = 3;
inline bool ReportUserOffline::has_usernetinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReportUserOffline::set_has_usernetinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReportUserOffline::clear_has_usernetinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReportUserOffline::clear_usernetinfo() {
  if (usernetinfo_ != NULL) usernetinfo_->::SSToCS::UserNetInfo::Clear();
  clear_has_usernetinfo();
}
inline const ::SSToCS::UserNetInfo& ReportUserOffline::usernetinfo() const {
  // @@protoc_insertion_point(field_get:SSToCS.ReportUserOffline.usernetinfo)
  return usernetinfo_ != NULL ? *usernetinfo_ : *default_instance_->usernetinfo_;
}
inline ::SSToCS::UserNetInfo* ReportUserOffline::mutable_usernetinfo() {
  set_has_usernetinfo();
  if (usernetinfo_ == NULL) usernetinfo_ = new ::SSToCS::UserNetInfo;
  // @@protoc_insertion_point(field_mutable:SSToCS.ReportUserOffline.usernetinfo)
  return usernetinfo_;
}
inline ::SSToCS::UserNetInfo* ReportUserOffline::release_usernetinfo() {
  clear_has_usernetinfo();
  ::SSToCS::UserNetInfo* temp = usernetinfo_;
  usernetinfo_ = NULL;
  return temp;
}
inline void ReportUserOffline::set_allocated_usernetinfo(::SSToCS::UserNetInfo* usernetinfo) {
  delete usernetinfo_;
  usernetinfo_ = usernetinfo;
  if (usernetinfo) {
    set_has_usernetinfo();
  } else {
    clear_has_usernetinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:SSToCS.ReportUserOffline.usernetinfo)
}

// -------------------------------------------------------------------

// AskAllCfgList

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskAllCfgList];
inline bool AskAllCfgList::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskAllCfgList::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskAllCfgList::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskAllCfgList::clear_mgsid() {
  mgsid_ = 8199;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID AskAllCfgList::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskAllCfgList.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void AskAllCfgList::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskAllCfgList.mgsid)
}

// -------------------------------------------------------------------

// AskHeroCfgList

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskHeroCfgList];
inline bool AskHeroCfgList::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskHeroCfgList::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskHeroCfgList::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskHeroCfgList::clear_mgsid() {
  mgsid_ = 8200;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID AskHeroCfgList::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskHeroCfgList.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void AskHeroCfgList::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskHeroCfgList.mgsid)
}

// -------------------------------------------------------------------

// AskGoodsfgList

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskGoodsfgList];
inline bool AskGoodsfgList::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskGoodsfgList::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskGoodsfgList::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskGoodsfgList::clear_mgsid() {
  mgsid_ = 8202;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID AskGoodsfgList::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskGoodsfgList.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void AskGoodsfgList::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskGoodsfgList.mgsid)
}

// -------------------------------------------------------------------

// AskShopfgList

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskShopfgList];
inline bool AskShopfgList::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskShopfgList::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskShopfgList::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskShopfgList::clear_mgsid() {
  mgsid_ = 8201;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID AskShopfgList::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskShopfgList.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void AskShopfgList::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskShopfgList.mgsid)
}

// -------------------------------------------------------------------

// AskPublicLuaStr

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPublicLuaStr];
inline bool AskPublicLuaStr::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskPublicLuaStr::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskPublicLuaStr::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskPublicLuaStr::clear_mgsid() {
  mgsid_ = 8203;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID AskPublicLuaStr::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskPublicLuaStr.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void AskPublicLuaStr::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskPublicLuaStr.mgsid)
}

// -------------------------------------------------------------------

// AskMapCfgList

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskMapCfgList];
inline bool AskMapCfgList::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskMapCfgList::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskMapCfgList::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskMapCfgList::clear_mgsid() {
  mgsid_ = 8204;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID AskMapCfgList::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskMapCfgList.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void AskMapCfgList::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskMapCfgList.mgsid)
}

// optional int32 mapid = 2;
inline bool AskMapCfgList::has_mapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AskMapCfgList::set_has_mapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AskMapCfgList::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AskMapCfgList::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 AskMapCfgList::mapid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskMapCfgList.mapid)
  return mapid_;
}
inline void AskMapCfgList::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskMapCfgList.mapid)
}

// -------------------------------------------------------------------

// AskNewSkillCfg

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskNewSkillCfg];
inline bool AskNewSkillCfg::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskNewSkillCfg::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskNewSkillCfg::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskNewSkillCfg::clear_mgsid() {
  mgsid_ = 8211;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID AskNewSkillCfg::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskNewSkillCfg.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void AskNewSkillCfg::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskNewSkillCfg.mgsid)
}

// -------------------------------------------------------------------

// AskSkillEffectAccountCfg

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectAccountCfg];
inline bool AskSkillEffectAccountCfg::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskSkillEffectAccountCfg::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskSkillEffectAccountCfg::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskSkillEffectAccountCfg::clear_mgsid() {
  mgsid_ = 8213;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID AskSkillEffectAccountCfg::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskSkillEffectAccountCfg.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void AskSkillEffectAccountCfg::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskSkillEffectAccountCfg.mgsid)
}

// -------------------------------------------------------------------

// AskSkillEffectLeadingCfg

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectLeadingCfg];
inline bool AskSkillEffectLeadingCfg::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskSkillEffectLeadingCfg::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskSkillEffectLeadingCfg::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskSkillEffectLeadingCfg::clear_mgsid() {
  mgsid_ = 8216;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID AskSkillEffectLeadingCfg::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskSkillEffectLeadingCfg.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void AskSkillEffectLeadingCfg::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskSkillEffectLeadingCfg.mgsid)
}

// -------------------------------------------------------------------

// AskSkillEffectRangeCfg

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectRangeCfg];
inline bool AskSkillEffectRangeCfg::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskSkillEffectRangeCfg::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskSkillEffectRangeCfg::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskSkillEffectRangeCfg::clear_mgsid() {
  mgsid_ = 8215;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID AskSkillEffectRangeCfg::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskSkillEffectRangeCfg.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void AskSkillEffectRangeCfg::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskSkillEffectRangeCfg.mgsid)
}

// -------------------------------------------------------------------

// AskSkillEffectBufCfg

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectBufCfg];
inline bool AskSkillEffectBufCfg::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskSkillEffectBufCfg::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskSkillEffectBufCfg::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskSkillEffectBufCfg::clear_mgsid() {
  mgsid_ = 8217;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID AskSkillEffectBufCfg::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskSkillEffectBufCfg.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void AskSkillEffectBufCfg::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskSkillEffectBufCfg.mgsid)
}

// -------------------------------------------------------------------

// AskSkillEffectSummonCfg

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectSummonCfg];
inline bool AskSkillEffectSummonCfg::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskSkillEffectSummonCfg::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskSkillEffectSummonCfg::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskSkillEffectSummonCfg::clear_mgsid() {
  mgsid_ = 8218;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID AskSkillEffectSummonCfg::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskSkillEffectSummonCfg.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void AskSkillEffectSummonCfg::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskSkillEffectSummonCfg.mgsid)
}

// -------------------------------------------------------------------

// AskSkillEffectMoveCfg

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectMoveCfg];
inline bool AskSkillEffectMoveCfg::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskSkillEffectMoveCfg::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskSkillEffectMoveCfg::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskSkillEffectMoveCfg::clear_mgsid() {
  mgsid_ = 8219;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID AskSkillEffectMoveCfg::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskSkillEffectMoveCfg.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void AskSkillEffectMoveCfg::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskSkillEffectMoveCfg.mgsid)
}

// -------------------------------------------------------------------

// AskSkillEffectSwitchCfg

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectSwitchCfg];
inline bool AskSkillEffectSwitchCfg::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskSkillEffectSwitchCfg::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskSkillEffectSwitchCfg::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskSkillEffectSwitchCfg::clear_mgsid() {
  mgsid_ = 8220;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID AskSkillEffectSwitchCfg::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskSkillEffectSwitchCfg.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void AskSkillEffectSwitchCfg::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskSkillEffectSwitchCfg.mgsid)
}

// -------------------------------------------------------------------

// AskPassitiveSkillCfg

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPassitiveSkillCfg];
inline bool AskPassitiveSkillCfg::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskPassitiveSkillCfg::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskPassitiveSkillCfg::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskPassitiveSkillCfg::clear_mgsid() {
  mgsid_ = 8221;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID AskPassitiveSkillCfg::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskPassitiveSkillCfg.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void AskPassitiveSkillCfg::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskPassitiveSkillCfg.mgsid)
}

// -------------------------------------------------------------------

// AskPassitiveEffectBloodSeekCfg

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPassitiveEffectBloodSeekCfg];
inline bool AskPassitiveEffectBloodSeekCfg::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskPassitiveEffectBloodSeekCfg::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskPassitiveEffectBloodSeekCfg::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskPassitiveEffectBloodSeekCfg::clear_mgsid() {
  mgsid_ = 8222;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID AskPassitiveEffectBloodSeekCfg::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskPassitiveEffectBloodSeekCfg.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void AskPassitiveEffectBloodSeekCfg::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskPassitiveEffectBloodSeekCfg.mgsid)
}

// -------------------------------------------------------------------

// AskPassitiveEffectReboundCfg

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPassitiveEffectReboundCfg];
inline bool AskPassitiveEffectReboundCfg::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskPassitiveEffectReboundCfg::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskPassitiveEffectReboundCfg::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskPassitiveEffectReboundCfg::clear_mgsid() {
  mgsid_ = 8223;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID AskPassitiveEffectReboundCfg::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskPassitiveEffectReboundCfg.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void AskPassitiveEffectReboundCfg::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskPassitiveEffectReboundCfg.mgsid)
}

// -------------------------------------------------------------------

// AskPassitiveEffectReliveCfg

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPassitiveEffectReliveCfg];
inline bool AskPassitiveEffectReliveCfg::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskPassitiveEffectReliveCfg::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskPassitiveEffectReliveCfg::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskPassitiveEffectReliveCfg::clear_mgsid() {
  mgsid_ = 8224;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID AskPassitiveEffectReliveCfg::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskPassitiveEffectReliveCfg.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void AskPassitiveEffectReliveCfg::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskPassitiveEffectReliveCfg.mgsid)
}

// -------------------------------------------------------------------

// AskUpdateGuideStep

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskUpdateGuideStep];
inline bool AskUpdateGuideStep::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskUpdateGuideStep::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskUpdateGuideStep::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskUpdateGuideStep::clear_mgsid() {
  mgsid_ = 8225;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID AskUpdateGuideStep::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskUpdateGuideStep.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void AskUpdateGuideStep::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskUpdateGuideStep.mgsid)
}

// optional uint64 guid = 2;
inline bool AskUpdateGuideStep::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AskUpdateGuideStep::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AskUpdateGuideStep::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AskUpdateGuideStep::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 AskUpdateGuideStep::guid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskUpdateGuideStep.guid)
  return guid_;
}
inline void AskUpdateGuideStep::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskUpdateGuideStep.guid)
}

// optional int32 state = 3;
inline bool AskUpdateGuideStep::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AskUpdateGuideStep::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AskUpdateGuideStep::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AskUpdateGuideStep::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 AskUpdateGuideStep::state() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskUpdateGuideStep.state)
  return state_;
}
inline void AskUpdateGuideStep::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskUpdateGuideStep.state)
}

// optional int32 stepid = 4;
inline bool AskUpdateGuideStep::has_stepid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AskUpdateGuideStep::set_has_stepid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AskUpdateGuideStep::clear_has_stepid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AskUpdateGuideStep::clear_stepid() {
  stepid_ = 0;
  clear_has_stepid();
}
inline ::google::protobuf::int32 AskUpdateGuideStep::stepid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskUpdateGuideStep.stepid)
  return stepid_;
}
inline void AskUpdateGuideStep::set_stepid(::google::protobuf::int32 value) {
  set_has_stepid();
  stepid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskUpdateGuideStep.stepid)
}

// -------------------------------------------------------------------

// AskUserGoHall

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskUserGoHall];
inline bool AskUserGoHall::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskUserGoHall::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskUserGoHall::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskUserGoHall::clear_mgsid() {
  mgsid_ = 8226;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID AskUserGoHall::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskUserGoHall.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void AskUserGoHall::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskUserGoHall.mgsid)
}

// optional uint64 guid = 2;
inline bool AskUserGoHall::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AskUserGoHall::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AskUserGoHall::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AskUserGoHall::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 AskUserGoHall::guid() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskUserGoHall.guid)
  return guid_;
}
inline void AskUserGoHall::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskUserGoHall.guid)
}

// optional int32 type = 3;
inline bool AskUserGoHall::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AskUserGoHall::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AskUserGoHall::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AskUserGoHall::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 AskUserGoHall::type() const {
  // @@protoc_insertion_point(field_get:SSToCS.AskUserGoHall.type)
  return type_;
}
inline void AskUserGoHall::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.AskUserGoHall.type)
}

// -------------------------------------------------------------------

// SyncAllBattleInfo

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AllBattleInfo];
inline bool SyncAllBattleInfo::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncAllBattleInfo::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncAllBattleInfo::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncAllBattleInfo::clear_mgsid() {
  mgsid_ = 8229;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID SyncAllBattleInfo::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.SyncAllBattleInfo.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void SyncAllBattleInfo::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.SyncAllBattleInfo.mgsid)
}

// repeated uint64 playbattle = 2;
inline int SyncAllBattleInfo::playbattle_size() const {
  return playbattle_.size();
}
inline void SyncAllBattleInfo::clear_playbattle() {
  playbattle_.Clear();
}
inline ::google::protobuf::uint64 SyncAllBattleInfo::playbattle(int index) const {
  // @@protoc_insertion_point(field_get:SSToCS.SyncAllBattleInfo.playbattle)
  return playbattle_.Get(index);
}
inline void SyncAllBattleInfo::set_playbattle(int index, ::google::protobuf::uint64 value) {
  playbattle_.Set(index, value);
  // @@protoc_insertion_point(field_set:SSToCS.SyncAllBattleInfo.playbattle)
}
inline void SyncAllBattleInfo::add_playbattle(::google::protobuf::uint64 value) {
  playbattle_.Add(value);
  // @@protoc_insertion_point(field_add:SSToCS.SyncAllBattleInfo.playbattle)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SyncAllBattleInfo::playbattle() const {
  // @@protoc_insertion_point(field_list:SSToCS.SyncAllBattleInfo.playbattle)
  return playbattle_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SyncAllBattleInfo::mutable_playbattle() {
  // @@protoc_insertion_point(field_mutable_list:SSToCS.SyncAllBattleInfo.playbattle)
  return &playbattle_;
}

// optional uint64 maxbattleid = 3;
inline bool SyncAllBattleInfo::has_maxbattleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SyncAllBattleInfo::set_has_maxbattleid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SyncAllBattleInfo::clear_has_maxbattleid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SyncAllBattleInfo::clear_maxbattleid() {
  maxbattleid_ = GOOGLE_ULONGLONG(0);
  clear_has_maxbattleid();
}
inline ::google::protobuf::uint64 SyncAllBattleInfo::maxbattleid() const {
  // @@protoc_insertion_point(field_get:SSToCS.SyncAllBattleInfo.maxbattleid)
  return maxbattleid_;
}
inline void SyncAllBattleInfo::set_maxbattleid(::google::protobuf::uint64 value) {
  set_has_maxbattleid();
  maxbattleid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.SyncAllBattleInfo.maxbattleid)
}

// -------------------------------------------------------------------

// CreateBattleResponse

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_CreateBattleResponse];
inline bool CreateBattleResponse::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateBattleResponse::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateBattleResponse::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateBattleResponse::clear_mgsid() {
  mgsid_ = 8300;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID CreateBattleResponse::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.CreateBattleResponse.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void CreateBattleResponse::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.CreateBattleResponse.mgsid)
}

// optional int64 battleid = 2;
inline bool CreateBattleResponse::has_battleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateBattleResponse::set_has_battleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateBattleResponse::clear_has_battleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateBattleResponse::clear_battleid() {
  battleid_ = GOOGLE_LONGLONG(0);
  clear_has_battleid();
}
inline ::google::protobuf::int64 CreateBattleResponse::battleid() const {
  // @@protoc_insertion_point(field_get:SSToCS.CreateBattleResponse.battleid)
  return battleid_;
}
inline void CreateBattleResponse::set_battleid(::google::protobuf::int64 value) {
  set_has_battleid();
  battleid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.CreateBattleResponse.battleid)
}

// optional bool rst = 3;
inline bool CreateBattleResponse::has_rst() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateBattleResponse::set_has_rst() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateBattleResponse::clear_has_rst() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateBattleResponse::clear_rst() {
  rst_ = false;
  clear_has_rst();
}
inline bool CreateBattleResponse::rst() const {
  // @@protoc_insertion_point(field_get:SSToCS.CreateBattleResponse.rst)
  return rst_;
}
inline void CreateBattleResponse::set_rst(bool value) {
  set_has_rst();
  rst_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.CreateBattleResponse.rst)
}

// -------------------------------------------------------------------

// FinishBattle_BattleUserData

// optional uint64 guid = 1;
inline bool FinishBattle_BattleUserData::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FinishBattle_BattleUserData::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FinishBattle_BattleUserData::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FinishBattle_BattleUserData::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 FinishBattle_BattleUserData::guid() const {
  // @@protoc_insertion_point(field_get:SSToCS.FinishBattle.BattleUserData.guid)
  return guid_;
}
inline void FinishBattle_BattleUserData::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.FinishBattle.BattleUserData.guid)
}

// optional uint64 heroguid = 2;
inline bool FinishBattle_BattleUserData::has_heroguid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FinishBattle_BattleUserData::set_has_heroguid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FinishBattle_BattleUserData::clear_has_heroguid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FinishBattle_BattleUserData::clear_heroguid() {
  heroguid_ = GOOGLE_ULONGLONG(0);
  clear_has_heroguid();
}
inline ::google::protobuf::uint64 FinishBattle_BattleUserData::heroguid() const {
  // @@protoc_insertion_point(field_get:SSToCS.FinishBattle.BattleUserData.heroguid)
  return heroguid_;
}
inline void FinishBattle_BattleUserData::set_heroguid(::google::protobuf::uint64 value) {
  set_has_heroguid();
  heroguid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.FinishBattle.BattleUserData.heroguid)
}

// optional uint32 timeinsecond = 3;
inline bool FinishBattle_BattleUserData::has_timeinsecond() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FinishBattle_BattleUserData::set_has_timeinsecond() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FinishBattle_BattleUserData::clear_has_timeinsecond() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FinishBattle_BattleUserData::clear_timeinsecond() {
  timeinsecond_ = 0u;
  clear_has_timeinsecond();
}
inline ::google::protobuf::uint32 FinishBattle_BattleUserData::timeinsecond() const {
  // @@protoc_insertion_point(field_get:SSToCS.FinishBattle.BattleUserData.timeinsecond)
  return timeinsecond_;
}
inline void FinishBattle_BattleUserData::set_timeinsecond(::google::protobuf::uint32 value) {
  set_has_timeinsecond();
  timeinsecond_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.FinishBattle.BattleUserData.timeinsecond)
}

// optional bool ifEnd = 4;
inline bool FinishBattle_BattleUserData::has_ifend() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FinishBattle_BattleUserData::set_has_ifend() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FinishBattle_BattleUserData::clear_has_ifend() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FinishBattle_BattleUserData::clear_ifend() {
  ifend_ = false;
  clear_has_ifend();
}
inline bool FinishBattle_BattleUserData::ifend() const {
  // @@protoc_insertion_point(field_get:SSToCS.FinishBattle.BattleUserData.ifEnd)
  return ifend_;
}
inline void FinishBattle_BattleUserData::set_ifend(bool value) {
  set_has_ifend();
  ifend_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.FinishBattle.BattleUserData.ifEnd)
}

// optional int32 heroid = 5;
inline bool FinishBattle_BattleUserData::has_heroid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FinishBattle_BattleUserData::set_has_heroid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FinishBattle_BattleUserData::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FinishBattle_BattleUserData::clear_heroid() {
  heroid_ = 0;
  clear_has_heroid();
}
inline ::google::protobuf::int32 FinishBattle_BattleUserData::heroid() const {
  // @@protoc_insertion_point(field_get:SSToCS.FinishBattle.BattleUserData.heroid)
  return heroid_;
}
inline void FinishBattle_BattleUserData::set_heroid(::google::protobuf::int32 value) {
  set_has_heroid();
  heroid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.FinishBattle.BattleUserData.heroid)
}

// optional int32 runepage = 6;
inline bool FinishBattle_BattleUserData::has_runepage() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FinishBattle_BattleUserData::set_has_runepage() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FinishBattle_BattleUserData::clear_has_runepage() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FinishBattle_BattleUserData::clear_runepage() {
  runepage_ = 0;
  clear_has_runepage();
}
inline ::google::protobuf::int32 FinishBattle_BattleUserData::runepage() const {
  // @@protoc_insertion_point(field_get:SSToCS.FinishBattle.BattleUserData.runepage)
  return runepage_;
}
inline void FinishBattle_BattleUserData::set_runepage(::google::protobuf::int32 value) {
  set_has_runepage();
  runepage_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.FinishBattle.BattleUserData.runepage)
}

// optional uint32 deadtimes = 7;
inline bool FinishBattle_BattleUserData::has_deadtimes() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FinishBattle_BattleUserData::set_has_deadtimes() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FinishBattle_BattleUserData::clear_has_deadtimes() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FinishBattle_BattleUserData::clear_deadtimes() {
  deadtimes_ = 0u;
  clear_has_deadtimes();
}
inline ::google::protobuf::uint32 FinishBattle_BattleUserData::deadtimes() const {
  // @@protoc_insertion_point(field_get:SSToCS.FinishBattle.BattleUserData.deadtimes)
  return deadtimes_;
}
inline void FinishBattle_BattleUserData::set_deadtimes(::google::protobuf::uint32 value) {
  set_has_deadtimes();
  deadtimes_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.FinishBattle.BattleUserData.deadtimes)
}

// optional uint32 herokills = 8;
inline bool FinishBattle_BattleUserData::has_herokills() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FinishBattle_BattleUserData::set_has_herokills() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FinishBattle_BattleUserData::clear_has_herokills() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FinishBattle_BattleUserData::clear_herokills() {
  herokills_ = 0u;
  clear_has_herokills();
}
inline ::google::protobuf::uint32 FinishBattle_BattleUserData::herokills() const {
  // @@protoc_insertion_point(field_get:SSToCS.FinishBattle.BattleUserData.herokills)
  return herokills_;
}
inline void FinishBattle_BattleUserData::set_herokills(::google::protobuf::uint32 value) {
  set_has_herokills();
  herokills_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.FinishBattle.BattleUserData.herokills)
}

// optional int32 destorybuilding = 9;
inline bool FinishBattle_BattleUserData::has_destorybuilding() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FinishBattle_BattleUserData::set_has_destorybuilding() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FinishBattle_BattleUserData::clear_has_destorybuilding() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FinishBattle_BattleUserData::clear_destorybuilding() {
  destorybuilding_ = 0;
  clear_has_destorybuilding();
}
inline ::google::protobuf::int32 FinishBattle_BattleUserData::destorybuilding() const {
  // @@protoc_insertion_point(field_get:SSToCS.FinishBattle.BattleUserData.destorybuilding)
  return destorybuilding_;
}
inline void FinishBattle_BattleUserData::set_destorybuilding(::google::protobuf::int32 value) {
  set_has_destorybuilding();
  destorybuilding_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.FinishBattle.BattleUserData.destorybuilding)
}

// optional int64 diamondused = 10;
inline bool FinishBattle_BattleUserData::has_diamondused() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void FinishBattle_BattleUserData::set_has_diamondused() {
  _has_bits_[0] |= 0x00000200u;
}
inline void FinishBattle_BattleUserData::clear_has_diamondused() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void FinishBattle_BattleUserData::clear_diamondused() {
  diamondused_ = GOOGLE_LONGLONG(0);
  clear_has_diamondused();
}
inline ::google::protobuf::int64 FinishBattle_BattleUserData::diamondused() const {
  // @@protoc_insertion_point(field_get:SSToCS.FinishBattle.BattleUserData.diamondused)
  return diamondused_;
}
inline void FinishBattle_BattleUserData::set_diamondused(::google::protobuf::int64 value) {
  set_has_diamondused();
  diamondused_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.FinishBattle.BattleUserData.diamondused)
}

// optional int64 goldused = 11;
inline bool FinishBattle_BattleUserData::has_goldused() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void FinishBattle_BattleUserData::set_has_goldused() {
  _has_bits_[0] |= 0x00000400u;
}
inline void FinishBattle_BattleUserData::clear_has_goldused() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void FinishBattle_BattleUserData::clear_goldused() {
  goldused_ = GOOGLE_LONGLONG(0);
  clear_has_goldused();
}
inline ::google::protobuf::int64 FinishBattle_BattleUserData::goldused() const {
  // @@protoc_insertion_point(field_get:SSToCS.FinishBattle.BattleUserData.goldused)
  return goldused_;
}
inline void FinishBattle_BattleUserData::set_goldused(::google::protobuf::int64 value) {
  set_has_goldused();
  goldused_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.FinishBattle.BattleUserData.goldused)
}

// optional int32 lasthitnum = 12;
inline bool FinishBattle_BattleUserData::has_lasthitnum() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void FinishBattle_BattleUserData::set_has_lasthitnum() {
  _has_bits_[0] |= 0x00000800u;
}
inline void FinishBattle_BattleUserData::clear_has_lasthitnum() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void FinishBattle_BattleUserData::clear_lasthitnum() {
  lasthitnum_ = 0;
  clear_has_lasthitnum();
}
inline ::google::protobuf::int32 FinishBattle_BattleUserData::lasthitnum() const {
  // @@protoc_insertion_point(field_get:SSToCS.FinishBattle.BattleUserData.lasthitnum)
  return lasthitnum_;
}
inline void FinishBattle_BattleUserData::set_lasthitnum(::google::protobuf::int32 value) {
  set_has_lasthitnum();
  lasthitnum_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.FinishBattle.BattleUserData.lasthitnum)
}

// optional int32 asskillnum = 13;
inline bool FinishBattle_BattleUserData::has_asskillnum() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void FinishBattle_BattleUserData::set_has_asskillnum() {
  _has_bits_[0] |= 0x00001000u;
}
inline void FinishBattle_BattleUserData::clear_has_asskillnum() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void FinishBattle_BattleUserData::clear_asskillnum() {
  asskillnum_ = 0;
  clear_has_asskillnum();
}
inline ::google::protobuf::int32 FinishBattle_BattleUserData::asskillnum() const {
  // @@protoc_insertion_point(field_get:SSToCS.FinishBattle.BattleUserData.asskillnum)
  return asskillnum_;
}
inline void FinishBattle_BattleUserData::set_asskillnum(::google::protobuf::int32 value) {
  set_has_asskillnum();
  asskillnum_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.FinishBattle.BattleUserData.asskillnum)
}

// optional int32 herolv = 14;
inline bool FinishBattle_BattleUserData::has_herolv() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void FinishBattle_BattleUserData::set_has_herolv() {
  _has_bits_[0] |= 0x00002000u;
}
inline void FinishBattle_BattleUserData::clear_has_herolv() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void FinishBattle_BattleUserData::clear_herolv() {
  herolv_ = 0;
  clear_has_herolv();
}
inline ::google::protobuf::int32 FinishBattle_BattleUserData::herolv() const {
  // @@protoc_insertion_point(field_get:SSToCS.FinishBattle.BattleUserData.herolv)
  return herolv_;
}
inline void FinishBattle_BattleUserData::set_herolv(::google::protobuf::int32 value) {
  set_has_herolv();
  herolv_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.FinishBattle.BattleUserData.herolv)
}

// optional int32 totalcp = 15;
inline bool FinishBattle_BattleUserData::has_totalcp() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void FinishBattle_BattleUserData::set_has_totalcp() {
  _has_bits_[0] |= 0x00004000u;
}
inline void FinishBattle_BattleUserData::clear_has_totalcp() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void FinishBattle_BattleUserData::clear_totalcp() {
  totalcp_ = 0;
  clear_has_totalcp();
}
inline ::google::protobuf::int32 FinishBattle_BattleUserData::totalcp() const {
  // @@protoc_insertion_point(field_get:SSToCS.FinishBattle.BattleUserData.totalcp)
  return totalcp_;
}
inline void FinishBattle_BattleUserData::set_totalcp(::google::protobuf::int32 value) {
  set_has_totalcp();
  totalcp_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.FinishBattle.BattleUserData.totalcp)
}

// optional bool ifAiRobot = 16;
inline bool FinishBattle_BattleUserData::has_ifairobot() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void FinishBattle_BattleUserData::set_has_ifairobot() {
  _has_bits_[0] |= 0x00008000u;
}
inline void FinishBattle_BattleUserData::clear_has_ifairobot() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void FinishBattle_BattleUserData::clear_ifairobot() {
  ifairobot_ = false;
  clear_has_ifairobot();
}
inline bool FinishBattle_BattleUserData::ifairobot() const {
  // @@protoc_insertion_point(field_get:SSToCS.FinishBattle.BattleUserData.ifAiRobot)
  return ifairobot_;
}
inline void FinishBattle_BattleUserData::set_ifairobot(bool value) {
  set_has_ifairobot();
  ifairobot_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.FinishBattle.BattleUserData.ifAiRobot)
}

// -------------------------------------------------------------------

// FinishBattle

// optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_FinishBattle];
inline bool FinishBattle::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FinishBattle::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FinishBattle::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FinishBattle::clear_mgsid() {
  mgsid_ = 8310;
  clear_has_mgsid();
}
inline ::SSToCS::MsgID FinishBattle::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToCS.FinishBattle.mgsid)
  return static_cast< ::SSToCS::MsgID >(mgsid_);
}
inline void FinishBattle::set_mgsid(::SSToCS::MsgID value) {
  assert(::SSToCS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.FinishBattle.mgsid)
}

// optional int64 battleid = 2;
inline bool FinishBattle::has_battleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FinishBattle::set_has_battleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FinishBattle::clear_has_battleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FinishBattle::clear_battleid() {
  battleid_ = GOOGLE_LONGLONG(0);
  clear_has_battleid();
}
inline ::google::protobuf::int64 FinishBattle::battleid() const {
  // @@protoc_insertion_point(field_get:SSToCS.FinishBattle.battleid)
  return battleid_;
}
inline void FinishBattle::set_battleid(::google::protobuf::int64 value) {
  set_has_battleid();
  battleid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.FinishBattle.battleid)
}

// optional int32 winGrpID = 3;
inline bool FinishBattle::has_wingrpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FinishBattle::set_has_wingrpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FinishBattle::clear_has_wingrpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FinishBattle::clear_wingrpid() {
  wingrpid_ = 0;
  clear_has_wingrpid();
}
inline ::google::protobuf::int32 FinishBattle::wingrpid() const {
  // @@protoc_insertion_point(field_get:SSToCS.FinishBattle.winGrpID)
  return wingrpid_;
}
inline void FinishBattle::set_wingrpid(::google::protobuf::int32 value) {
  set_has_wingrpid();
  wingrpid_ = value;
  // @@protoc_insertion_point(field_set:SSToCS.FinishBattle.winGrpID)
}

// repeated .SSToCS.FinishBattle.BattleUserData battelUserDataList = 4;
inline int FinishBattle::batteluserdatalist_size() const {
  return batteluserdatalist_.size();
}
inline void FinishBattle::clear_batteluserdatalist() {
  batteluserdatalist_.Clear();
}
inline const ::SSToCS::FinishBattle_BattleUserData& FinishBattle::batteluserdatalist(int index) const {
  // @@protoc_insertion_point(field_get:SSToCS.FinishBattle.battelUserDataList)
  return batteluserdatalist_.Get(index);
}
inline ::SSToCS::FinishBattle_BattleUserData* FinishBattle::mutable_batteluserdatalist(int index) {
  // @@protoc_insertion_point(field_mutable:SSToCS.FinishBattle.battelUserDataList)
  return batteluserdatalist_.Mutable(index);
}
inline ::SSToCS::FinishBattle_BattleUserData* FinishBattle::add_batteluserdatalist() {
  // @@protoc_insertion_point(field_add:SSToCS.FinishBattle.battelUserDataList)
  return batteluserdatalist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SSToCS::FinishBattle_BattleUserData >&
FinishBattle::batteluserdatalist() const {
  // @@protoc_insertion_point(field_list:SSToCS.FinishBattle.battelUserDataList)
  return batteluserdatalist_;
}
inline ::google::protobuf::RepeatedPtrField< ::SSToCS::FinishBattle_BattleUserData >*
FinishBattle::mutable_batteluserdatalist() {
  // @@protoc_insertion_point(field_mutable_list:SSToCS.FinishBattle.battelUserDataList)
  return &batteluserdatalist_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace SSToCS

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::SSToCS::MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SSToCS::MsgID>() {
  return ::SSToCS::MsgID_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SSToCS_2eproto__INCLUDED
