// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CSToGS.proto

#ifndef PROTOBUF_CSToGS_2eproto__INCLUDED
#define PROTOBUF_CSToGS_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace CSToGS {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CSToGS_2eproto();
void protobuf_AssignDesc_CSToGS_2eproto();
void protobuf_ShutdownFile_CSToGS_2eproto();

class AskPing;
class AskRegisteRet;
class AskRegisteRet_SSInfo;
class OrderPostToGC;
class OrderPostToGC_UserNetInfo;
class OrderKickoutGC;
class OneSSConnected;
class UserConnectedSS;
class UserDisConnectedSS;

enum MsgID {
  eMsgToGSFromCS_Begin = 24576,
  eMsgToGSFromCS_AskPingRet = 24577,
  eMsgToGSFromCS_AskRegisteRet = 24578,
  eMsgToGSFromCS_OrderOpenListen = 24579,
  eMsgToGSFromCS_OrderCloseListen = 24580,
  eMsgToGSFromCS_OrderPostToGC = 24581,
  eMsgToGSFromCS_OrderKickoutGC = 24582,
  eMsgToGSFromCS_OneSSConnected = 24583,
  eMsgToGSFromCS_UserConnectedSS = 24584,
  eMsgToGSFromCS_UserDisConnectedSS = 24585,
  eMsgToGSFromCS_End = 25000
};
bool MsgID_IsValid(int value);
const MsgID MsgID_MIN = eMsgToGSFromCS_Begin;
const MsgID MsgID_MAX = eMsgToGSFromCS_End;
const int MsgID_ARRAYSIZE = MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgID_descriptor();
inline const ::std::string& MsgID_Name(MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgID_descriptor(), value);
}
inline bool MsgID_Parse(
    const ::std::string& name, MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgID>(
    MsgID_descriptor(), name, value);
}
// ===================================================================

class AskPing : public ::google::protobuf::Message {
 public:
  AskPing();
  virtual ~AskPing();

  AskPing(const AskPing& from);

  inline AskPing& operator=(const AskPing& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskPing& default_instance();

  void Swap(AskPing* other);

  // implements Message ----------------------------------------------

  AskPing* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskPing& from);
  void MergeFrom(const AskPing& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CSToGS.MsgID mgsid = 1 [default = eMsgToGSFromCS_AskPingRet];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::CSToGS::MsgID mgsid() const;
  inline void set_mgsid(::CSToGS::MsgID value);

  // optional int64 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CSToGS.AskPing)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 time_;
  int mgsid_;
  friend void  protobuf_AddDesc_CSToGS_2eproto();
  friend void protobuf_AssignDesc_CSToGS_2eproto();
  friend void protobuf_ShutdownFile_CSToGS_2eproto();

  void InitAsDefaultInstance();
  static AskPing* default_instance_;
};
// -------------------------------------------------------------------

class AskRegisteRet_SSInfo : public ::google::protobuf::Message {
 public:
  AskRegisteRet_SSInfo();
  virtual ~AskRegisteRet_SSInfo();

  AskRegisteRet_SSInfo(const AskRegisteRet_SSInfo& from);

  inline AskRegisteRet_SSInfo& operator=(const AskRegisteRet_SSInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskRegisteRet_SSInfo& default_instance();

  void Swap(AskRegisteRet_SSInfo* other);

  // implements Message ----------------------------------------------

  AskRegisteRet_SSInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskRegisteRet_SSInfo& from);
  void MergeFrom(const AskRegisteRet_SSInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ssid = 1;
  inline bool has_ssid() const;
  inline void clear_ssid();
  static const int kSsidFieldNumber = 1;
  inline ::google::protobuf::int32 ssid() const;
  inline void set_ssid(::google::protobuf::int32 value);

  // optional string ip = 2;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 2;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // optional int32 port = 3;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 3;
  inline ::google::protobuf::int32 port() const;
  inline void set_port(::google::protobuf::int32 value);

  // optional int32 netstate = 4;
  inline bool has_netstate() const;
  inline void clear_netstate();
  static const int kNetstateFieldNumber = 4;
  inline ::google::protobuf::int32 netstate() const;
  inline void set_netstate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CSToGS.AskRegisteRet.SSInfo)
 private:
  inline void set_has_ssid();
  inline void clear_has_ssid();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_netstate();
  inline void clear_has_netstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* ip_;
  ::google::protobuf::int32 ssid_;
  ::google::protobuf::int32 port_;
  ::google::protobuf::int32 netstate_;
  friend void  protobuf_AddDesc_CSToGS_2eproto();
  friend void protobuf_AssignDesc_CSToGS_2eproto();
  friend void protobuf_ShutdownFile_CSToGS_2eproto();

  void InitAsDefaultInstance();
  static AskRegisteRet_SSInfo* default_instance_;
};
// -------------------------------------------------------------------

class AskRegisteRet : public ::google::protobuf::Message {
 public:
  AskRegisteRet();
  virtual ~AskRegisteRet();

  AskRegisteRet(const AskRegisteRet& from);

  inline AskRegisteRet& operator=(const AskRegisteRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskRegisteRet& default_instance();

  void Swap(AskRegisteRet* other);

  // implements Message ----------------------------------------------

  AskRegisteRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskRegisteRet& from);
  void MergeFrom(const AskRegisteRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef AskRegisteRet_SSInfo SSInfo;

  // accessors -------------------------------------------------------

  // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_AskRegisteRet];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::CSToGS::MsgID msgid() const;
  inline void set_msgid(::CSToGS::MsgID value);

  // optional int32 registe = 2;
  inline bool has_registe() const;
  inline void clear_registe();
  static const int kRegisteFieldNumber = 2;
  inline ::google::protobuf::int32 registe() const;
  inline void set_registe(::google::protobuf::int32 value);

  // optional int64 curtime = 3;
  inline bool has_curtime() const;
  inline void clear_curtime();
  static const int kCurtimeFieldNumber = 3;
  inline ::google::protobuf::int64 curtime() const;
  inline void set_curtime(::google::protobuf::int64 value);

  // optional uint32 ssbaseid = 4;
  inline bool has_ssbaseid() const;
  inline void clear_ssbaseid();
  static const int kSsbaseidFieldNumber = 4;
  inline ::google::protobuf::uint32 ssbaseid() const;
  inline void set_ssbaseid(::google::protobuf::uint32 value);

  // repeated .CSToGS.AskRegisteRet.SSInfo ssinfo = 5;
  inline int ssinfo_size() const;
  inline void clear_ssinfo();
  static const int kSsinfoFieldNumber = 5;
  inline const ::CSToGS::AskRegisteRet_SSInfo& ssinfo(int index) const;
  inline ::CSToGS::AskRegisteRet_SSInfo* mutable_ssinfo(int index);
  inline ::CSToGS::AskRegisteRet_SSInfo* add_ssinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::CSToGS::AskRegisteRet_SSInfo >&
      ssinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSToGS::AskRegisteRet_SSInfo >*
      mutable_ssinfo();

  // @@protoc_insertion_point(class_scope:CSToGS.AskRegisteRet)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_registe();
  inline void clear_has_registe();
  inline void set_has_curtime();
  inline void clear_has_curtime();
  inline void set_has_ssbaseid();
  inline void clear_has_ssbaseid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::int32 registe_;
  ::google::protobuf::int64 curtime_;
  ::google::protobuf::RepeatedPtrField< ::CSToGS::AskRegisteRet_SSInfo > ssinfo_;
  ::google::protobuf::uint32 ssbaseid_;
  friend void  protobuf_AddDesc_CSToGS_2eproto();
  friend void protobuf_AssignDesc_CSToGS_2eproto();
  friend void protobuf_ShutdownFile_CSToGS_2eproto();

  void InitAsDefaultInstance();
  static AskRegisteRet* default_instance_;
};
// -------------------------------------------------------------------

class OrderPostToGC_UserNetInfo : public ::google::protobuf::Message {
 public:
  OrderPostToGC_UserNetInfo();
  virtual ~OrderPostToGC_UserNetInfo();

  OrderPostToGC_UserNetInfo(const OrderPostToGC_UserNetInfo& from);

  inline OrderPostToGC_UserNetInfo& operator=(const OrderPostToGC_UserNetInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderPostToGC_UserNetInfo& default_instance();

  void Swap(OrderPostToGC_UserNetInfo* other);

  // implements Message ----------------------------------------------

  OrderPostToGC_UserNetInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderPostToGC_UserNetInfo& from);
  void MergeFrom(const OrderPostToGC_UserNetInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 gsid = 1;
  inline bool has_gsid() const;
  inline void clear_gsid();
  static const int kGsidFieldNumber = 1;
  inline ::google::protobuf::int32 gsid() const;
  inline void set_gsid(::google::protobuf::int32 value);

  // optional int32 gcnid = 2;
  inline bool has_gcnid() const;
  inline void clear_gcnid();
  static const int kGcnidFieldNumber = 2;
  inline ::google::protobuf::int32 gcnid() const;
  inline void set_gcnid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CSToGS.OrderPostToGC.UserNetInfo)
 private:
  inline void set_has_gsid();
  inline void clear_has_gsid();
  inline void set_has_gcnid();
  inline void clear_has_gcnid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 gsid_;
  ::google::protobuf::int32 gcnid_;
  friend void  protobuf_AddDesc_CSToGS_2eproto();
  friend void protobuf_AssignDesc_CSToGS_2eproto();
  friend void protobuf_ShutdownFile_CSToGS_2eproto();

  void InitAsDefaultInstance();
  static OrderPostToGC_UserNetInfo* default_instance_;
};
// -------------------------------------------------------------------

class OrderPostToGC : public ::google::protobuf::Message {
 public:
  OrderPostToGC();
  virtual ~OrderPostToGC();

  OrderPostToGC(const OrderPostToGC& from);

  inline OrderPostToGC& operator=(const OrderPostToGC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderPostToGC& default_instance();

  void Swap(OrderPostToGC* other);

  // implements Message ----------------------------------------------

  OrderPostToGC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderPostToGC& from);
  void MergeFrom(const OrderPostToGC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef OrderPostToGC_UserNetInfo UserNetInfo;

  // accessors -------------------------------------------------------

  // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_OrderPostToGC];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::CSToGS::MsgID msgid() const;
  inline void set_msgid(::CSToGS::MsgID value);

  // repeated .CSToGS.OrderPostToGC.UserNetInfo usernetinfo = 2;
  inline int usernetinfo_size() const;
  inline void clear_usernetinfo();
  static const int kUsernetinfoFieldNumber = 2;
  inline const ::CSToGS::OrderPostToGC_UserNetInfo& usernetinfo(int index) const;
  inline ::CSToGS::OrderPostToGC_UserNetInfo* mutable_usernetinfo(int index);
  inline ::CSToGS::OrderPostToGC_UserNetInfo* add_usernetinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::CSToGS::OrderPostToGC_UserNetInfo >&
      usernetinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSToGS::OrderPostToGC_UserNetInfo >*
      mutable_usernetinfo();

  // optional int32 othermsgid = 3;
  inline bool has_othermsgid() const;
  inline void clear_othermsgid();
  static const int kOthermsgidFieldNumber = 3;
  inline ::google::protobuf::int32 othermsgid() const;
  inline void set_othermsgid(::google::protobuf::int32 value);

  // optional bytes othermsg = 4;
  inline bool has_othermsg() const;
  inline void clear_othermsg();
  static const int kOthermsgFieldNumber = 4;
  inline const ::std::string& othermsg() const;
  inline void set_othermsg(const ::std::string& value);
  inline void set_othermsg(const char* value);
  inline void set_othermsg(const void* value, size_t size);
  inline ::std::string* mutable_othermsg();
  inline ::std::string* release_othermsg();
  inline void set_allocated_othermsg(::std::string* othermsg);

  // @@protoc_insertion_point(class_scope:CSToGS.OrderPostToGC)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_othermsgid();
  inline void clear_has_othermsgid();
  inline void set_has_othermsg();
  inline void clear_has_othermsg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CSToGS::OrderPostToGC_UserNetInfo > usernetinfo_;
  int msgid_;
  ::google::protobuf::int32 othermsgid_;
  ::std::string* othermsg_;
  friend void  protobuf_AddDesc_CSToGS_2eproto();
  friend void protobuf_AssignDesc_CSToGS_2eproto();
  friend void protobuf_ShutdownFile_CSToGS_2eproto();

  void InitAsDefaultInstance();
  static OrderPostToGC* default_instance_;
};
// -------------------------------------------------------------------

class OrderKickoutGC : public ::google::protobuf::Message {
 public:
  OrderKickoutGC();
  virtual ~OrderKickoutGC();

  OrderKickoutGC(const OrderKickoutGC& from);

  inline OrderKickoutGC& operator=(const OrderKickoutGC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderKickoutGC& default_instance();

  void Swap(OrderKickoutGC* other);

  // implements Message ----------------------------------------------

  OrderKickoutGC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderKickoutGC& from);
  void MergeFrom(const OrderKickoutGC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_OrderKickoutGC];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::CSToGS::MsgID msgid() const;
  inline void set_msgid(::CSToGS::MsgID value);

  // optional int32 gcnid = 2;
  inline bool has_gcnid() const;
  inline void clear_gcnid();
  static const int kGcnidFieldNumber = 2;
  inline ::google::protobuf::int32 gcnid() const;
  inline void set_gcnid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CSToGS.OrderKickoutGC)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_gcnid();
  inline void clear_has_gcnid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::int32 gcnid_;
  friend void  protobuf_AddDesc_CSToGS_2eproto();
  friend void protobuf_AssignDesc_CSToGS_2eproto();
  friend void protobuf_ShutdownFile_CSToGS_2eproto();

  void InitAsDefaultInstance();
  static OrderKickoutGC* default_instance_;
};
// -------------------------------------------------------------------

class OneSSConnected : public ::google::protobuf::Message {
 public:
  OneSSConnected();
  virtual ~OneSSConnected();

  OneSSConnected(const OneSSConnected& from);

  inline OneSSConnected& operator=(const OneSSConnected& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneSSConnected& default_instance();

  void Swap(OneSSConnected* other);

  // implements Message ----------------------------------------------

  OneSSConnected* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneSSConnected& from);
  void MergeFrom(const OneSSConnected& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_OneSSConnected];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::CSToGS::MsgID msgid() const;
  inline void set_msgid(::CSToGS::MsgID value);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int64 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // optional int32 ssid = 4;
  inline bool has_ssid() const;
  inline void clear_ssid();
  static const int kSsidFieldNumber = 4;
  inline ::google::protobuf::int32 ssid() const;
  inline void set_ssid(::google::protobuf::int32 value);

  // optional string ip = 5;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 5;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // optional int32 port = 6;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 6;
  inline ::google::protobuf::int32 port() const;
  inline void set_port(::google::protobuf::int32 value);

  // optional int32 netstate = 7;
  inline bool has_netstate() const;
  inline void clear_netstate();
  static const int kNetstateFieldNumber = 7;
  inline ::google::protobuf::int32 netstate() const;
  inline void set_netstate(::google::protobuf::int32 value);

  // optional int32 basessid = 8;
  inline bool has_basessid() const;
  inline void clear_basessid();
  static const int kBasessidFieldNumber = 8;
  inline ::google::protobuf::int32 basessid() const;
  inline void set_basessid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CSToGS.OneSSConnected)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_ssid();
  inline void clear_has_ssid();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_netstate();
  inline void clear_has_netstate();
  inline void set_has_basessid();
  inline void clear_has_basessid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int64 time_;
  ::std::string* ip_;
  ::google::protobuf::int32 ssid_;
  ::google::protobuf::int32 port_;
  ::google::protobuf::int32 netstate_;
  ::google::protobuf::int32 basessid_;
  friend void  protobuf_AddDesc_CSToGS_2eproto();
  friend void protobuf_AssignDesc_CSToGS_2eproto();
  friend void protobuf_ShutdownFile_CSToGS_2eproto();

  void InitAsDefaultInstance();
  static OneSSConnected* default_instance_;
};
// -------------------------------------------------------------------

class UserConnectedSS : public ::google::protobuf::Message {
 public:
  UserConnectedSS();
  virtual ~UserConnectedSS();

  UserConnectedSS(const UserConnectedSS& from);

  inline UserConnectedSS& operator=(const UserConnectedSS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserConnectedSS& default_instance();

  void Swap(UserConnectedSS* other);

  // implements Message ----------------------------------------------

  UserConnectedSS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserConnectedSS& from);
  void MergeFrom(const UserConnectedSS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_UserConnectedSS];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::CSToGS::MsgID msgid() const;
  inline void set_msgid(::CSToGS::MsgID value);

  // optional int32 ssid = 2;
  inline bool has_ssid() const;
  inline void clear_ssid();
  static const int kSsidFieldNumber = 2;
  inline ::google::protobuf::int32 ssid() const;
  inline void set_ssid(::google::protobuf::int32 value);

  // repeated int32 gcnid = 3;
  inline int gcnid_size() const;
  inline void clear_gcnid();
  static const int kGcnidFieldNumber = 3;
  inline ::google::protobuf::int32 gcnid(int index) const;
  inline void set_gcnid(int index, ::google::protobuf::int32 value);
  inline void add_gcnid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      gcnid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_gcnid();

  // optional uint64 battleid = 4;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleidFieldNumber = 4;
  inline ::google::protobuf::uint64 battleid() const;
  inline void set_battleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CSToGS.UserConnectedSS)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_ssid();
  inline void clear_has_ssid();
  inline void set_has_battleid();
  inline void clear_has_battleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::int32 ssid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > gcnid_;
  ::google::protobuf::uint64 battleid_;
  friend void  protobuf_AddDesc_CSToGS_2eproto();
  friend void protobuf_AssignDesc_CSToGS_2eproto();
  friend void protobuf_ShutdownFile_CSToGS_2eproto();

  void InitAsDefaultInstance();
  static UserConnectedSS* default_instance_;
};
// -------------------------------------------------------------------

class UserDisConnectedSS : public ::google::protobuf::Message {
 public:
  UserDisConnectedSS();
  virtual ~UserDisConnectedSS();

  UserDisConnectedSS(const UserDisConnectedSS& from);

  inline UserDisConnectedSS& operator=(const UserDisConnectedSS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserDisConnectedSS& default_instance();

  void Swap(UserDisConnectedSS* other);

  // implements Message ----------------------------------------------

  UserDisConnectedSS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserDisConnectedSS& from);
  void MergeFrom(const UserDisConnectedSS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_UserDisConnectedSS];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::CSToGS::MsgID msgid() const;
  inline void set_msgid(::CSToGS::MsgID value);

  // repeated int32 gcnid = 2;
  inline int gcnid_size() const;
  inline void clear_gcnid();
  static const int kGcnidFieldNumber = 2;
  inline ::google::protobuf::int32 gcnid(int index) const;
  inline void set_gcnid(int index, ::google::protobuf::int32 value);
  inline void add_gcnid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      gcnid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_gcnid();

  // @@protoc_insertion_point(class_scope:CSToGS.UserDisConnectedSS)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > gcnid_;
  int msgid_;
  friend void  protobuf_AddDesc_CSToGS_2eproto();
  friend void protobuf_AssignDesc_CSToGS_2eproto();
  friend void protobuf_ShutdownFile_CSToGS_2eproto();

  void InitAsDefaultInstance();
  static UserDisConnectedSS* default_instance_;
};
// ===================================================================


// ===================================================================

// AskPing

// optional .CSToGS.MsgID mgsid = 1 [default = eMsgToGSFromCS_AskPingRet];
inline bool AskPing::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskPing::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskPing::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskPing::clear_mgsid() {
  mgsid_ = 24577;
  clear_has_mgsid();
}
inline ::CSToGS::MsgID AskPing::mgsid() const {
  // @@protoc_insertion_point(field_get:CSToGS.AskPing.mgsid)
  return static_cast< ::CSToGS::MsgID >(mgsid_);
}
inline void AskPing::set_mgsid(::CSToGS::MsgID value) {
  assert(::CSToGS::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:CSToGS.AskPing.mgsid)
}

// optional int64 time = 2;
inline bool AskPing::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AskPing::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AskPing::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AskPing::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 AskPing::time() const {
  // @@protoc_insertion_point(field_get:CSToGS.AskPing.time)
  return time_;
}
inline void AskPing::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:CSToGS.AskPing.time)
}

// -------------------------------------------------------------------

// AskRegisteRet_SSInfo

// optional int32 ssid = 1;
inline bool AskRegisteRet_SSInfo::has_ssid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskRegisteRet_SSInfo::set_has_ssid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskRegisteRet_SSInfo::clear_has_ssid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskRegisteRet_SSInfo::clear_ssid() {
  ssid_ = 0;
  clear_has_ssid();
}
inline ::google::protobuf::int32 AskRegisteRet_SSInfo::ssid() const {
  // @@protoc_insertion_point(field_get:CSToGS.AskRegisteRet.SSInfo.ssid)
  return ssid_;
}
inline void AskRegisteRet_SSInfo::set_ssid(::google::protobuf::int32 value) {
  set_has_ssid();
  ssid_ = value;
  // @@protoc_insertion_point(field_set:CSToGS.AskRegisteRet.SSInfo.ssid)
}

// optional string ip = 2;
inline bool AskRegisteRet_SSInfo::has_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AskRegisteRet_SSInfo::set_has_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AskRegisteRet_SSInfo::clear_has_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AskRegisteRet_SSInfo::clear_ip() {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& AskRegisteRet_SSInfo::ip() const {
  // @@protoc_insertion_point(field_get:CSToGS.AskRegisteRet.SSInfo.ip)
  return *ip_;
}
inline void AskRegisteRet_SSInfo::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set:CSToGS.AskRegisteRet.SSInfo.ip)
}
inline void AskRegisteRet_SSInfo::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToGS.AskRegisteRet.SSInfo.ip)
}
inline void AskRegisteRet_SSInfo::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToGS.AskRegisteRet.SSInfo.ip)
}
inline ::std::string* AskRegisteRet_SSInfo::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSToGS.AskRegisteRet.SSInfo.ip)
  return ip_;
}
inline ::std::string* AskRegisteRet_SSInfo::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AskRegisteRet_SSInfo::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSToGS.AskRegisteRet.SSInfo.ip)
}

// optional int32 port = 3;
inline bool AskRegisteRet_SSInfo::has_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AskRegisteRet_SSInfo::set_has_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AskRegisteRet_SSInfo::clear_has_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AskRegisteRet_SSInfo::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 AskRegisteRet_SSInfo::port() const {
  // @@protoc_insertion_point(field_get:CSToGS.AskRegisteRet.SSInfo.port)
  return port_;
}
inline void AskRegisteRet_SSInfo::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:CSToGS.AskRegisteRet.SSInfo.port)
}

// optional int32 netstate = 4;
inline bool AskRegisteRet_SSInfo::has_netstate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AskRegisteRet_SSInfo::set_has_netstate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AskRegisteRet_SSInfo::clear_has_netstate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AskRegisteRet_SSInfo::clear_netstate() {
  netstate_ = 0;
  clear_has_netstate();
}
inline ::google::protobuf::int32 AskRegisteRet_SSInfo::netstate() const {
  // @@protoc_insertion_point(field_get:CSToGS.AskRegisteRet.SSInfo.netstate)
  return netstate_;
}
inline void AskRegisteRet_SSInfo::set_netstate(::google::protobuf::int32 value) {
  set_has_netstate();
  netstate_ = value;
  // @@protoc_insertion_point(field_set:CSToGS.AskRegisteRet.SSInfo.netstate)
}

// -------------------------------------------------------------------

// AskRegisteRet

// optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_AskRegisteRet];
inline bool AskRegisteRet::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskRegisteRet::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskRegisteRet::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskRegisteRet::clear_msgid() {
  msgid_ = 24578;
  clear_has_msgid();
}
inline ::CSToGS::MsgID AskRegisteRet::msgid() const {
  // @@protoc_insertion_point(field_get:CSToGS.AskRegisteRet.msgid)
  return static_cast< ::CSToGS::MsgID >(msgid_);
}
inline void AskRegisteRet::set_msgid(::CSToGS::MsgID value) {
  assert(::CSToGS::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:CSToGS.AskRegisteRet.msgid)
}

// optional int32 registe = 2;
inline bool AskRegisteRet::has_registe() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AskRegisteRet::set_has_registe() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AskRegisteRet::clear_has_registe() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AskRegisteRet::clear_registe() {
  registe_ = 0;
  clear_has_registe();
}
inline ::google::protobuf::int32 AskRegisteRet::registe() const {
  // @@protoc_insertion_point(field_get:CSToGS.AskRegisteRet.registe)
  return registe_;
}
inline void AskRegisteRet::set_registe(::google::protobuf::int32 value) {
  set_has_registe();
  registe_ = value;
  // @@protoc_insertion_point(field_set:CSToGS.AskRegisteRet.registe)
}

// optional int64 curtime = 3;
inline bool AskRegisteRet::has_curtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AskRegisteRet::set_has_curtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AskRegisteRet::clear_has_curtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AskRegisteRet::clear_curtime() {
  curtime_ = GOOGLE_LONGLONG(0);
  clear_has_curtime();
}
inline ::google::protobuf::int64 AskRegisteRet::curtime() const {
  // @@protoc_insertion_point(field_get:CSToGS.AskRegisteRet.curtime)
  return curtime_;
}
inline void AskRegisteRet::set_curtime(::google::protobuf::int64 value) {
  set_has_curtime();
  curtime_ = value;
  // @@protoc_insertion_point(field_set:CSToGS.AskRegisteRet.curtime)
}

// optional uint32 ssbaseid = 4;
inline bool AskRegisteRet::has_ssbaseid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AskRegisteRet::set_has_ssbaseid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AskRegisteRet::clear_has_ssbaseid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AskRegisteRet::clear_ssbaseid() {
  ssbaseid_ = 0u;
  clear_has_ssbaseid();
}
inline ::google::protobuf::uint32 AskRegisteRet::ssbaseid() const {
  // @@protoc_insertion_point(field_get:CSToGS.AskRegisteRet.ssbaseid)
  return ssbaseid_;
}
inline void AskRegisteRet::set_ssbaseid(::google::protobuf::uint32 value) {
  set_has_ssbaseid();
  ssbaseid_ = value;
  // @@protoc_insertion_point(field_set:CSToGS.AskRegisteRet.ssbaseid)
}

// repeated .CSToGS.AskRegisteRet.SSInfo ssinfo = 5;
inline int AskRegisteRet::ssinfo_size() const {
  return ssinfo_.size();
}
inline void AskRegisteRet::clear_ssinfo() {
  ssinfo_.Clear();
}
inline const ::CSToGS::AskRegisteRet_SSInfo& AskRegisteRet::ssinfo(int index) const {
  // @@protoc_insertion_point(field_get:CSToGS.AskRegisteRet.ssinfo)
  return ssinfo_.Get(index);
}
inline ::CSToGS::AskRegisteRet_SSInfo* AskRegisteRet::mutable_ssinfo(int index) {
  // @@protoc_insertion_point(field_mutable:CSToGS.AskRegisteRet.ssinfo)
  return ssinfo_.Mutable(index);
}
inline ::CSToGS::AskRegisteRet_SSInfo* AskRegisteRet::add_ssinfo() {
  // @@protoc_insertion_point(field_add:CSToGS.AskRegisteRet.ssinfo)
  return ssinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSToGS::AskRegisteRet_SSInfo >&
AskRegisteRet::ssinfo() const {
  // @@protoc_insertion_point(field_list:CSToGS.AskRegisteRet.ssinfo)
  return ssinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSToGS::AskRegisteRet_SSInfo >*
AskRegisteRet::mutable_ssinfo() {
  // @@protoc_insertion_point(field_mutable_list:CSToGS.AskRegisteRet.ssinfo)
  return &ssinfo_;
}

// -------------------------------------------------------------------

// OrderPostToGC_UserNetInfo

// optional int32 gsid = 1;
inline bool OrderPostToGC_UserNetInfo::has_gsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderPostToGC_UserNetInfo::set_has_gsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderPostToGC_UserNetInfo::clear_has_gsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderPostToGC_UserNetInfo::clear_gsid() {
  gsid_ = 0;
  clear_has_gsid();
}
inline ::google::protobuf::int32 OrderPostToGC_UserNetInfo::gsid() const {
  // @@protoc_insertion_point(field_get:CSToGS.OrderPostToGC.UserNetInfo.gsid)
  return gsid_;
}
inline void OrderPostToGC_UserNetInfo::set_gsid(::google::protobuf::int32 value) {
  set_has_gsid();
  gsid_ = value;
  // @@protoc_insertion_point(field_set:CSToGS.OrderPostToGC.UserNetInfo.gsid)
}

// optional int32 gcnid = 2;
inline bool OrderPostToGC_UserNetInfo::has_gcnid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderPostToGC_UserNetInfo::set_has_gcnid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderPostToGC_UserNetInfo::clear_has_gcnid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderPostToGC_UserNetInfo::clear_gcnid() {
  gcnid_ = 0;
  clear_has_gcnid();
}
inline ::google::protobuf::int32 OrderPostToGC_UserNetInfo::gcnid() const {
  // @@protoc_insertion_point(field_get:CSToGS.OrderPostToGC.UserNetInfo.gcnid)
  return gcnid_;
}
inline void OrderPostToGC_UserNetInfo::set_gcnid(::google::protobuf::int32 value) {
  set_has_gcnid();
  gcnid_ = value;
  // @@protoc_insertion_point(field_set:CSToGS.OrderPostToGC.UserNetInfo.gcnid)
}

// -------------------------------------------------------------------

// OrderPostToGC

// optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_OrderPostToGC];
inline bool OrderPostToGC::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderPostToGC::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderPostToGC::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderPostToGC::clear_msgid() {
  msgid_ = 24581;
  clear_has_msgid();
}
inline ::CSToGS::MsgID OrderPostToGC::msgid() const {
  // @@protoc_insertion_point(field_get:CSToGS.OrderPostToGC.msgid)
  return static_cast< ::CSToGS::MsgID >(msgid_);
}
inline void OrderPostToGC::set_msgid(::CSToGS::MsgID value) {
  assert(::CSToGS::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:CSToGS.OrderPostToGC.msgid)
}

// repeated .CSToGS.OrderPostToGC.UserNetInfo usernetinfo = 2;
inline int OrderPostToGC::usernetinfo_size() const {
  return usernetinfo_.size();
}
inline void OrderPostToGC::clear_usernetinfo() {
  usernetinfo_.Clear();
}
inline const ::CSToGS::OrderPostToGC_UserNetInfo& OrderPostToGC::usernetinfo(int index) const {
  // @@protoc_insertion_point(field_get:CSToGS.OrderPostToGC.usernetinfo)
  return usernetinfo_.Get(index);
}
inline ::CSToGS::OrderPostToGC_UserNetInfo* OrderPostToGC::mutable_usernetinfo(int index) {
  // @@protoc_insertion_point(field_mutable:CSToGS.OrderPostToGC.usernetinfo)
  return usernetinfo_.Mutable(index);
}
inline ::CSToGS::OrderPostToGC_UserNetInfo* OrderPostToGC::add_usernetinfo() {
  // @@protoc_insertion_point(field_add:CSToGS.OrderPostToGC.usernetinfo)
  return usernetinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSToGS::OrderPostToGC_UserNetInfo >&
OrderPostToGC::usernetinfo() const {
  // @@protoc_insertion_point(field_list:CSToGS.OrderPostToGC.usernetinfo)
  return usernetinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSToGS::OrderPostToGC_UserNetInfo >*
OrderPostToGC::mutable_usernetinfo() {
  // @@protoc_insertion_point(field_mutable_list:CSToGS.OrderPostToGC.usernetinfo)
  return &usernetinfo_;
}

// optional int32 othermsgid = 3;
inline bool OrderPostToGC::has_othermsgid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OrderPostToGC::set_has_othermsgid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OrderPostToGC::clear_has_othermsgid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OrderPostToGC::clear_othermsgid() {
  othermsgid_ = 0;
  clear_has_othermsgid();
}
inline ::google::protobuf::int32 OrderPostToGC::othermsgid() const {
  // @@protoc_insertion_point(field_get:CSToGS.OrderPostToGC.othermsgid)
  return othermsgid_;
}
inline void OrderPostToGC::set_othermsgid(::google::protobuf::int32 value) {
  set_has_othermsgid();
  othermsgid_ = value;
  // @@protoc_insertion_point(field_set:CSToGS.OrderPostToGC.othermsgid)
}

// optional bytes othermsg = 4;
inline bool OrderPostToGC::has_othermsg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OrderPostToGC::set_has_othermsg() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OrderPostToGC::clear_has_othermsg() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OrderPostToGC::clear_othermsg() {
  if (othermsg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    othermsg_->clear();
  }
  clear_has_othermsg();
}
inline const ::std::string& OrderPostToGC::othermsg() const {
  // @@protoc_insertion_point(field_get:CSToGS.OrderPostToGC.othermsg)
  return *othermsg_;
}
inline void OrderPostToGC::set_othermsg(const ::std::string& value) {
  set_has_othermsg();
  if (othermsg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    othermsg_ = new ::std::string;
  }
  othermsg_->assign(value);
  // @@protoc_insertion_point(field_set:CSToGS.OrderPostToGC.othermsg)
}
inline void OrderPostToGC::set_othermsg(const char* value) {
  set_has_othermsg();
  if (othermsg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    othermsg_ = new ::std::string;
  }
  othermsg_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToGS.OrderPostToGC.othermsg)
}
inline void OrderPostToGC::set_othermsg(const void* value, size_t size) {
  set_has_othermsg();
  if (othermsg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    othermsg_ = new ::std::string;
  }
  othermsg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToGS.OrderPostToGC.othermsg)
}
inline ::std::string* OrderPostToGC::mutable_othermsg() {
  set_has_othermsg();
  if (othermsg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    othermsg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSToGS.OrderPostToGC.othermsg)
  return othermsg_;
}
inline ::std::string* OrderPostToGC::release_othermsg() {
  clear_has_othermsg();
  if (othermsg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = othermsg_;
    othermsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OrderPostToGC::set_allocated_othermsg(::std::string* othermsg) {
  if (othermsg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete othermsg_;
  }
  if (othermsg) {
    set_has_othermsg();
    othermsg_ = othermsg;
  } else {
    clear_has_othermsg();
    othermsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSToGS.OrderPostToGC.othermsg)
}

// -------------------------------------------------------------------

// OrderKickoutGC

// optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_OrderKickoutGC];
inline bool OrderKickoutGC::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderKickoutGC::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderKickoutGC::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderKickoutGC::clear_msgid() {
  msgid_ = 24582;
  clear_has_msgid();
}
inline ::CSToGS::MsgID OrderKickoutGC::msgid() const {
  // @@protoc_insertion_point(field_get:CSToGS.OrderKickoutGC.msgid)
  return static_cast< ::CSToGS::MsgID >(msgid_);
}
inline void OrderKickoutGC::set_msgid(::CSToGS::MsgID value) {
  assert(::CSToGS::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:CSToGS.OrderKickoutGC.msgid)
}

// optional int32 gcnid = 2;
inline bool OrderKickoutGC::has_gcnid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderKickoutGC::set_has_gcnid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderKickoutGC::clear_has_gcnid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderKickoutGC::clear_gcnid() {
  gcnid_ = 0;
  clear_has_gcnid();
}
inline ::google::protobuf::int32 OrderKickoutGC::gcnid() const {
  // @@protoc_insertion_point(field_get:CSToGS.OrderKickoutGC.gcnid)
  return gcnid_;
}
inline void OrderKickoutGC::set_gcnid(::google::protobuf::int32 value) {
  set_has_gcnid();
  gcnid_ = value;
  // @@protoc_insertion_point(field_set:CSToGS.OrderKickoutGC.gcnid)
}

// -------------------------------------------------------------------

// OneSSConnected

// optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_OneSSConnected];
inline bool OneSSConnected::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneSSConnected::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneSSConnected::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneSSConnected::clear_msgid() {
  msgid_ = 24583;
  clear_has_msgid();
}
inline ::CSToGS::MsgID OneSSConnected::msgid() const {
  // @@protoc_insertion_point(field_get:CSToGS.OneSSConnected.msgid)
  return static_cast< ::CSToGS::MsgID >(msgid_);
}
inline void OneSSConnected::set_msgid(::CSToGS::MsgID value) {
  assert(::CSToGS::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:CSToGS.OneSSConnected.msgid)
}

// optional int32 state = 2;
inline bool OneSSConnected::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneSSConnected::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneSSConnected::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneSSConnected::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 OneSSConnected::state() const {
  // @@protoc_insertion_point(field_get:CSToGS.OneSSConnected.state)
  return state_;
}
inline void OneSSConnected::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:CSToGS.OneSSConnected.state)
}

// optional int64 time = 3;
inline bool OneSSConnected::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneSSConnected::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneSSConnected::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneSSConnected::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 OneSSConnected::time() const {
  // @@protoc_insertion_point(field_get:CSToGS.OneSSConnected.time)
  return time_;
}
inline void OneSSConnected::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:CSToGS.OneSSConnected.time)
}

// optional int32 ssid = 4;
inline bool OneSSConnected::has_ssid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OneSSConnected::set_has_ssid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OneSSConnected::clear_has_ssid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OneSSConnected::clear_ssid() {
  ssid_ = 0;
  clear_has_ssid();
}
inline ::google::protobuf::int32 OneSSConnected::ssid() const {
  // @@protoc_insertion_point(field_get:CSToGS.OneSSConnected.ssid)
  return ssid_;
}
inline void OneSSConnected::set_ssid(::google::protobuf::int32 value) {
  set_has_ssid();
  ssid_ = value;
  // @@protoc_insertion_point(field_set:CSToGS.OneSSConnected.ssid)
}

// optional string ip = 5;
inline bool OneSSConnected::has_ip() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OneSSConnected::set_has_ip() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OneSSConnected::clear_has_ip() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OneSSConnected::clear_ip() {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& OneSSConnected::ip() const {
  // @@protoc_insertion_point(field_get:CSToGS.OneSSConnected.ip)
  return *ip_;
}
inline void OneSSConnected::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set:CSToGS.OneSSConnected.ip)
}
inline void OneSSConnected::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToGS.OneSSConnected.ip)
}
inline void OneSSConnected::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToGS.OneSSConnected.ip)
}
inline ::std::string* OneSSConnected::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSToGS.OneSSConnected.ip)
  return ip_;
}
inline ::std::string* OneSSConnected::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OneSSConnected::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSToGS.OneSSConnected.ip)
}

// optional int32 port = 6;
inline bool OneSSConnected::has_port() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OneSSConnected::set_has_port() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OneSSConnected::clear_has_port() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OneSSConnected::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 OneSSConnected::port() const {
  // @@protoc_insertion_point(field_get:CSToGS.OneSSConnected.port)
  return port_;
}
inline void OneSSConnected::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:CSToGS.OneSSConnected.port)
}

// optional int32 netstate = 7;
inline bool OneSSConnected::has_netstate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OneSSConnected::set_has_netstate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OneSSConnected::clear_has_netstate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OneSSConnected::clear_netstate() {
  netstate_ = 0;
  clear_has_netstate();
}
inline ::google::protobuf::int32 OneSSConnected::netstate() const {
  // @@protoc_insertion_point(field_get:CSToGS.OneSSConnected.netstate)
  return netstate_;
}
inline void OneSSConnected::set_netstate(::google::protobuf::int32 value) {
  set_has_netstate();
  netstate_ = value;
  // @@protoc_insertion_point(field_set:CSToGS.OneSSConnected.netstate)
}

// optional int32 basessid = 8;
inline bool OneSSConnected::has_basessid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OneSSConnected::set_has_basessid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OneSSConnected::clear_has_basessid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OneSSConnected::clear_basessid() {
  basessid_ = 0;
  clear_has_basessid();
}
inline ::google::protobuf::int32 OneSSConnected::basessid() const {
  // @@protoc_insertion_point(field_get:CSToGS.OneSSConnected.basessid)
  return basessid_;
}
inline void OneSSConnected::set_basessid(::google::protobuf::int32 value) {
  set_has_basessid();
  basessid_ = value;
  // @@protoc_insertion_point(field_set:CSToGS.OneSSConnected.basessid)
}

// -------------------------------------------------------------------

// UserConnectedSS

// optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_UserConnectedSS];
inline bool UserConnectedSS::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserConnectedSS::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserConnectedSS::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserConnectedSS::clear_msgid() {
  msgid_ = 24584;
  clear_has_msgid();
}
inline ::CSToGS::MsgID UserConnectedSS::msgid() const {
  // @@protoc_insertion_point(field_get:CSToGS.UserConnectedSS.msgid)
  return static_cast< ::CSToGS::MsgID >(msgid_);
}
inline void UserConnectedSS::set_msgid(::CSToGS::MsgID value) {
  assert(::CSToGS::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:CSToGS.UserConnectedSS.msgid)
}

// optional int32 ssid = 2;
inline bool UserConnectedSS::has_ssid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserConnectedSS::set_has_ssid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserConnectedSS::clear_has_ssid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserConnectedSS::clear_ssid() {
  ssid_ = 0;
  clear_has_ssid();
}
inline ::google::protobuf::int32 UserConnectedSS::ssid() const {
  // @@protoc_insertion_point(field_get:CSToGS.UserConnectedSS.ssid)
  return ssid_;
}
inline void UserConnectedSS::set_ssid(::google::protobuf::int32 value) {
  set_has_ssid();
  ssid_ = value;
  // @@protoc_insertion_point(field_set:CSToGS.UserConnectedSS.ssid)
}

// repeated int32 gcnid = 3;
inline int UserConnectedSS::gcnid_size() const {
  return gcnid_.size();
}
inline void UserConnectedSS::clear_gcnid() {
  gcnid_.Clear();
}
inline ::google::protobuf::int32 UserConnectedSS::gcnid(int index) const {
  // @@protoc_insertion_point(field_get:CSToGS.UserConnectedSS.gcnid)
  return gcnid_.Get(index);
}
inline void UserConnectedSS::set_gcnid(int index, ::google::protobuf::int32 value) {
  gcnid_.Set(index, value);
  // @@protoc_insertion_point(field_set:CSToGS.UserConnectedSS.gcnid)
}
inline void UserConnectedSS::add_gcnid(::google::protobuf::int32 value) {
  gcnid_.Add(value);
  // @@protoc_insertion_point(field_add:CSToGS.UserConnectedSS.gcnid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
UserConnectedSS::gcnid() const {
  // @@protoc_insertion_point(field_list:CSToGS.UserConnectedSS.gcnid)
  return gcnid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
UserConnectedSS::mutable_gcnid() {
  // @@protoc_insertion_point(field_mutable_list:CSToGS.UserConnectedSS.gcnid)
  return &gcnid_;
}

// optional uint64 battleid = 4;
inline bool UserConnectedSS::has_battleid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserConnectedSS::set_has_battleid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserConnectedSS::clear_has_battleid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserConnectedSS::clear_battleid() {
  battleid_ = GOOGLE_ULONGLONG(0);
  clear_has_battleid();
}
inline ::google::protobuf::uint64 UserConnectedSS::battleid() const {
  // @@protoc_insertion_point(field_get:CSToGS.UserConnectedSS.battleid)
  return battleid_;
}
inline void UserConnectedSS::set_battleid(::google::protobuf::uint64 value) {
  set_has_battleid();
  battleid_ = value;
  // @@protoc_insertion_point(field_set:CSToGS.UserConnectedSS.battleid)
}

// -------------------------------------------------------------------

// UserDisConnectedSS

// optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_UserDisConnectedSS];
inline bool UserDisConnectedSS::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserDisConnectedSS::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserDisConnectedSS::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserDisConnectedSS::clear_msgid() {
  msgid_ = 24585;
  clear_has_msgid();
}
inline ::CSToGS::MsgID UserDisConnectedSS::msgid() const {
  // @@protoc_insertion_point(field_get:CSToGS.UserDisConnectedSS.msgid)
  return static_cast< ::CSToGS::MsgID >(msgid_);
}
inline void UserDisConnectedSS::set_msgid(::CSToGS::MsgID value) {
  assert(::CSToGS::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:CSToGS.UserDisConnectedSS.msgid)
}

// repeated int32 gcnid = 2;
inline int UserDisConnectedSS::gcnid_size() const {
  return gcnid_.size();
}
inline void UserDisConnectedSS::clear_gcnid() {
  gcnid_.Clear();
}
inline ::google::protobuf::int32 UserDisConnectedSS::gcnid(int index) const {
  // @@protoc_insertion_point(field_get:CSToGS.UserDisConnectedSS.gcnid)
  return gcnid_.Get(index);
}
inline void UserDisConnectedSS::set_gcnid(int index, ::google::protobuf::int32 value) {
  gcnid_.Set(index, value);
  // @@protoc_insertion_point(field_set:CSToGS.UserDisConnectedSS.gcnid)
}
inline void UserDisConnectedSS::add_gcnid(::google::protobuf::int32 value) {
  gcnid_.Add(value);
  // @@protoc_insertion_point(field_add:CSToGS.UserDisConnectedSS.gcnid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
UserDisConnectedSS::gcnid() const {
  // @@protoc_insertion_point(field_list:CSToGS.UserDisConnectedSS.gcnid)
  return gcnid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
UserDisConnectedSS::mutable_gcnid() {
  // @@protoc_insertion_point(field_mutable_list:CSToGS.UserDisConnectedSS.gcnid)
  return &gcnid_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CSToGS

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::CSToGS::MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSToGS::MsgID>() {
  return ::CSToGS::MsgID_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CSToGS_2eproto__INCLUDED
