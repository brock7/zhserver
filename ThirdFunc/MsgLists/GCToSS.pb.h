// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GCToSS.proto

#ifndef PROTOBUF_GCToSS_2eproto__INCLUDED
#define PROTOBUF_GCToSS_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace GCToSS {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GCToSS_2eproto();
void protobuf_AssignDesc_GCToSS_2eproto();
void protobuf_ShutdownFile_GCToSS_2eproto();

class AskSSGuideStepComp;
class AskSSGuideStepComp_taskinfo;
class HerosBattleInfo;
class AskHeroAttributesInfo;
class AskQuickBattleEnd;
class AskPingSS;
class AskEnterBattle;
class Dir;
class MoveDir;
class StopMove;
class BuyGoods;
class UseGoods;
class SellGoods;
class MoveGoods;
class ReportBattleLoadingState;
class UseSkill;
class LockTar;
class ReportAltarStrawSolder;
class Absorb;
class GasExplosion;
class BuReborn;
class GMCmd;
class StepID;
class AutoAtk;
class GuideJumpToHall;
class AskReconnect;
class Pos;
class MoveTar;
class AskBornNPC;
class AlwaysAutoAtk;
class TrySeleceHero;
class SelectHero;
class SelectRunePage;
class LoadComplete;

enum AskSSGuideStepComp_edotype {
  AskSSGuideStepComp_edotype_ecomptask = 1,
  AskSSGuideStepComp_edotype_ebuygoods = 2,
  AskSSGuideStepComp_edotype_ebornsolder = 3,
  AskSSGuideStepComp_edotype_ebornhero = 4,
  AskSSGuideStepComp_edotype_nextstep = 5
};
bool AskSSGuideStepComp_edotype_IsValid(int value);
const AskSSGuideStepComp_edotype AskSSGuideStepComp_edotype_edotype_MIN = AskSSGuideStepComp_edotype_ecomptask;
const AskSSGuideStepComp_edotype AskSSGuideStepComp_edotype_edotype_MAX = AskSSGuideStepComp_edotype_nextstep;
const int AskSSGuideStepComp_edotype_edotype_ARRAYSIZE = AskSSGuideStepComp_edotype_edotype_MAX + 1;

const ::google::protobuf::EnumDescriptor* AskSSGuideStepComp_edotype_descriptor();
inline const ::std::string& AskSSGuideStepComp_edotype_Name(AskSSGuideStepComp_edotype value) {
  return ::google::protobuf::internal::NameOfEnum(
    AskSSGuideStepComp_edotype_descriptor(), value);
}
inline bool AskSSGuideStepComp_edotype_Parse(
    const ::std::string& name, AskSSGuideStepComp_edotype* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AskSSGuideStepComp_edotype>(
    AskSSGuideStepComp_edotype_descriptor(), name, value);
}
enum MsgNum {
  eMsgToGSToSSFromGC_Begin = 16384,
  eMsgToGSToSSFromGC_AskPingSS = 16385,
  eMsgToGSToSSFromGC_AskEnterBattle = 16386,
  eMsgToGSToSSFromGC_AskMoveDir = 16387,
  eMsgToGSToSSFromGC_AskStopMove = 16388,
  eMsgToGSToSSFromGC_AskBuyGoods = 16389,
  eMsgToGSToSSFromGC_AskUseGoods = 16390,
  eMsgToGSToSSFromGC_AskSellGoods = 16391,
  eMsgToGSToSSFromGC_AskMoveGoods = 16392,
  eMsgToGSToSSFromGC_ReportBattleLoadingState = 16393,
  eMsgToGSToSSFromGC_AskAttack = 16394,
  eMsgToGSToSSFromGC_AskUseSkill = 16395,
  eMsgToGSToSSFromGC_AskLockTarget = 16396,
  eMsgToGSToSSFromGC_ReportAltarStrawSolder = 16397,
  eMsgToGSToSSFromGC_AskAbsorbMonster = 16398,
  eMsgToGSToSSFromGC_AskCancelAbsorbSkill = 16399,
  eMsgToGSToSSFromGC_AskGasExplosion = 16400,
  eMsgToGSToSSFromGC_AskBuyRebornHero = 16401,
  eMsgToGSToSSFromGC_GMCmd = 16402,
  eMsgToGSToSSFromGC_AskOBBattle = 16403,
  eMsgToGSToSSFromGC_StepId = 16404,
  eMsgToGSToSSFromGC_AskBornNPC = 16405,
  eMsgToGSToSSFromGC_AskAutoAttack = 16406,
  eMsgToGSToSSFromGC_AskGuideEndJumpToHall = 16407,
  eMsgToGSToSSFromGC_AskReconnect = 16408,
  eMsgToGSToSSFromGC_AskMovePos = 16409,
  eMsgToGSToSSFromGC_AskAlwaysAutoAtk = 16410,
  eMsgToSSFromGS_ReportSSMsg = 16411,
  eMsgToSSFromGS_AskQuickBattleEnd = 16412,
  eMsgToGSToSSFromGC_AskTrySelectHero = 16505,
  eMsgToGSToSSFromGC_AskSelectHero = 16506,
  eMsgToGSToSSFromGC_AskSelectRunePage = 16507,
  eMsgToGSToSSFromGC_ReportLoadBattleComplete = 16520,
  eMsgToGSToSSFromGC_AskHeroAttributesInfo = 16521,
  eMsgToGSToSSFromGC_AskHerosBattleInfo = 16522,
  eMsgToGSToSSFromGC_AskGuideStepComp = 16540,
  eMsgToGSToSSFromGC_End = 17000
};
bool MsgNum_IsValid(int value);
const MsgNum MsgNum_MIN = eMsgToGSToSSFromGC_Begin;
const MsgNum MsgNum_MAX = eMsgToGSToSSFromGC_End;
const int MsgNum_ARRAYSIZE = MsgNum_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgNum_descriptor();
inline const ::std::string& MsgNum_Name(MsgNum value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgNum_descriptor(), value);
}
inline bool MsgNum_Parse(
    const ::std::string& name, MsgNum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgNum>(
    MsgNum_descriptor(), name, value);
}
// ===================================================================

class AskSSGuideStepComp_taskinfo : public ::google::protobuf::Message {
 public:
  AskSSGuideStepComp_taskinfo();
  virtual ~AskSSGuideStepComp_taskinfo();

  AskSSGuideStepComp_taskinfo(const AskSSGuideStepComp_taskinfo& from);

  inline AskSSGuideStepComp_taskinfo& operator=(const AskSSGuideStepComp_taskinfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskSSGuideStepComp_taskinfo& default_instance();

  void Swap(AskSSGuideStepComp_taskinfo* other);

  // implements Message ----------------------------------------------

  AskSSGuideStepComp_taskinfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskSSGuideStepComp_taskinfo& from);
  void MergeFrom(const AskSSGuideStepComp_taskinfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.AskSSGuideStepComp.edotype dtype = 1;
  inline bool has_dtype() const;
  inline void clear_dtype();
  static const int kDtypeFieldNumber = 1;
  inline ::GCToSS::AskSSGuideStepComp_edotype dtype() const;
  inline void set_dtype(::GCToSS::AskSSGuideStepComp_edotype value);

  // optional int32 stepid = 2;
  inline bool has_stepid() const;
  inline void clear_stepid();
  static const int kStepidFieldNumber = 2;
  inline ::google::protobuf::int32 stepid() const;
  inline void set_stepid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCToSS.AskSSGuideStepComp.taskinfo)
 private:
  inline void set_has_dtype();
  inline void clear_has_dtype();
  inline void set_has_stepid();
  inline void clear_has_stepid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int dtype_;
  ::google::protobuf::int32 stepid_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static AskSSGuideStepComp_taskinfo* default_instance_;
};
// -------------------------------------------------------------------

class AskSSGuideStepComp : public ::google::protobuf::Message {
 public:
  AskSSGuideStepComp();
  virtual ~AskSSGuideStepComp();

  AskSSGuideStepComp(const AskSSGuideStepComp& from);

  inline AskSSGuideStepComp& operator=(const AskSSGuideStepComp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskSSGuideStepComp& default_instance();

  void Swap(AskSSGuideStepComp* other);

  // implements Message ----------------------------------------------

  AskSSGuideStepComp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskSSGuideStepComp& from);
  void MergeFrom(const AskSSGuideStepComp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef AskSSGuideStepComp_taskinfo taskinfo;

  typedef AskSSGuideStepComp_edotype edotype;
  static const edotype ecomptask = AskSSGuideStepComp_edotype_ecomptask;
  static const edotype ebuygoods = AskSSGuideStepComp_edotype_ebuygoods;
  static const edotype ebornsolder = AskSSGuideStepComp_edotype_ebornsolder;
  static const edotype ebornhero = AskSSGuideStepComp_edotype_ebornhero;
  static const edotype nextstep = AskSSGuideStepComp_edotype_nextstep;
  static inline bool edotype_IsValid(int value) {
    return AskSSGuideStepComp_edotype_IsValid(value);
  }
  static const edotype edotype_MIN =
    AskSSGuideStepComp_edotype_edotype_MIN;
  static const edotype edotype_MAX =
    AskSSGuideStepComp_edotype_edotype_MAX;
  static const int edotype_ARRAYSIZE =
    AskSSGuideStepComp_edotype_edotype_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  edotype_descriptor() {
    return AskSSGuideStepComp_edotype_descriptor();
  }
  static inline const ::std::string& edotype_Name(edotype value) {
    return AskSSGuideStepComp_edotype_Name(value);
  }
  static inline bool edotype_Parse(const ::std::string& name,
      edotype* value) {
    return AskSSGuideStepComp_edotype_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgid = 1 [default = eMsgToGSToSSFromGC_AskGuideStepComp];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GCToSS::MsgNum msgid() const;
  inline void set_msgid(::GCToSS::MsgNum value);

  // repeated .GCToSS.AskSSGuideStepComp.taskinfo info = 3;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 3;
  inline const ::GCToSS::AskSSGuideStepComp_taskinfo& info(int index) const;
  inline ::GCToSS::AskSSGuideStepComp_taskinfo* mutable_info(int index);
  inline ::GCToSS::AskSSGuideStepComp_taskinfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::GCToSS::AskSSGuideStepComp_taskinfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::GCToSS::AskSSGuideStepComp_taskinfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:GCToSS.AskSSGuideStepComp)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GCToSS::AskSSGuideStepComp_taskinfo > info_;
  int msgid_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static AskSSGuideStepComp* default_instance_;
};
// -------------------------------------------------------------------

class HerosBattleInfo : public ::google::protobuf::Message {
 public:
  HerosBattleInfo();
  virtual ~HerosBattleInfo();

  HerosBattleInfo(const HerosBattleInfo& from);

  inline HerosBattleInfo& operator=(const HerosBattleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HerosBattleInfo& default_instance();

  void Swap(HerosBattleInfo* other);

  // implements Message ----------------------------------------------

  HerosBattleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HerosBattleInfo& from);
  void MergeFrom(const HerosBattleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgid = 1 [default = eMsgToGSToSSFromGC_AskHerosBattleInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GCToSS::MsgNum msgid() const;
  inline void set_msgid(::GCToSS::MsgNum value);

  // @@protoc_insertion_point(class_scope:GCToSS.HerosBattleInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static HerosBattleInfo* default_instance_;
};
// -------------------------------------------------------------------

class AskHeroAttributesInfo : public ::google::protobuf::Message {
 public:
  AskHeroAttributesInfo();
  virtual ~AskHeroAttributesInfo();

  AskHeroAttributesInfo(const AskHeroAttributesInfo& from);

  inline AskHeroAttributesInfo& operator=(const AskHeroAttributesInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskHeroAttributesInfo& default_instance();

  void Swap(AskHeroAttributesInfo* other);

  // implements Message ----------------------------------------------

  AskHeroAttributesInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskHeroAttributesInfo& from);
  void MergeFrom(const AskHeroAttributesInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgid = 1 [default = eMsgToGSToSSFromGC_AskHeroAttributesInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GCToSS::MsgNum msgid() const;
  inline void set_msgid(::GCToSS::MsgNum value);

  // @@protoc_insertion_point(class_scope:GCToSS.AskHeroAttributesInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static AskHeroAttributesInfo* default_instance_;
};
// -------------------------------------------------------------------

class AskQuickBattleEnd : public ::google::protobuf::Message {
 public:
  AskQuickBattleEnd();
  virtual ~AskQuickBattleEnd();

  AskQuickBattleEnd(const AskQuickBattleEnd& from);

  inline AskQuickBattleEnd& operator=(const AskQuickBattleEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskQuickBattleEnd& default_instance();

  void Swap(AskQuickBattleEnd* other);

  // implements Message ----------------------------------------------

  AskQuickBattleEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskQuickBattleEnd& from);
  void MergeFrom(const AskQuickBattleEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgid = 1 [default = eMsgToSSFromGS_AskQuickBattleEnd];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GCToSS::MsgNum msgid() const;
  inline void set_msgid(::GCToSS::MsgNum value);

  // optional int32 other = 2;
  inline bool has_other() const;
  inline void clear_other();
  static const int kOtherFieldNumber = 2;
  inline ::google::protobuf::int32 other() const;
  inline void set_other(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCToSS.AskQuickBattleEnd)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_other();
  inline void clear_has_other();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::int32 other_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static AskQuickBattleEnd* default_instance_;
};
// -------------------------------------------------------------------

class AskPingSS : public ::google::protobuf::Message {
 public:
  AskPingSS();
  virtual ~AskPingSS();

  AskPingSS(const AskPingSS& from);

  inline AskPingSS& operator=(const AskPingSS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskPingSS& default_instance();

  void Swap(AskPingSS* other);

  // implements Message ----------------------------------------------

  AskPingSS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskPingSS& from);
  void MergeFrom(const AskPingSS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskPingSS];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GCToSS::MsgNum msgnum() const;
  inline void set_msgnum(::GCToSS::MsgNum value);

  // optional int64 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GCToSS.AskPingSS)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 time_;
  int msgnum_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static AskPingSS* default_instance_;
};
// -------------------------------------------------------------------

class AskEnterBattle : public ::google::protobuf::Message {
 public:
  AskEnterBattle();
  virtual ~AskEnterBattle();

  AskEnterBattle(const AskEnterBattle& from);

  inline AskEnterBattle& operator=(const AskEnterBattle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskEnterBattle& default_instance();

  void Swap(AskEnterBattle* other);

  // implements Message ----------------------------------------------

  AskEnterBattle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskEnterBattle& from);
  void MergeFrom(const AskEnterBattle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskEnterBattle];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GCToSS::MsgNum msgnum() const;
  inline void set_msgnum(::GCToSS::MsgNum value);

  // optional int64 clientTime = 2;
  inline bool has_clienttime() const;
  inline void clear_clienttime();
  static const int kClientTimeFieldNumber = 2;
  inline ::google::protobuf::int64 clienttime() const;
  inline void set_clienttime(::google::protobuf::int64 value);

  // optional uint64 battleid = 3;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleidFieldNumber = 3;
  inline ::google::protobuf::uint64 battleid() const;
  inline void set_battleid(::google::protobuf::uint64 value);

  // optional int32 obuserstate = 4;
  inline bool has_obuserstate() const;
  inline void clear_obuserstate();
  static const int kObuserstateFieldNumber = 4;
  inline ::google::protobuf::int32 obuserstate() const;
  inline void set_obuserstate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCToSS.AskEnterBattle)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();
  inline void set_has_clienttime();
  inline void clear_has_clienttime();
  inline void set_has_battleid();
  inline void clear_has_battleid();
  inline void set_has_obuserstate();
  inline void clear_has_obuserstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 clienttime_;
  int msgnum_;
  ::google::protobuf::int32 obuserstate_;
  ::google::protobuf::uint64 battleid_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static AskEnterBattle* default_instance_;
};
// -------------------------------------------------------------------

class Dir : public ::google::protobuf::Message {
 public:
  Dir();
  virtual ~Dir();

  Dir(const Dir& from);

  inline Dir& operator=(const Dir& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Dir& default_instance();

  void Swap(Dir* other);

  // implements Message ----------------------------------------------

  Dir* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Dir& from);
  void MergeFrom(const Dir& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);

  // optional float z = 2;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 2;
  inline float z() const;
  inline void set_z(float value);

  // optional float angle = 3;
  inline bool has_angle() const;
  inline void clear_angle();
  static const int kAngleFieldNumber = 3;
  inline float angle() const;
  inline void set_angle(float value);

  // @@protoc_insertion_point(class_scope:GCToSS.Dir)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_z();
  inline void clear_has_z();
  inline void set_has_angle();
  inline void clear_has_angle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float x_;
  float z_;
  float angle_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static Dir* default_instance_;
};
// -------------------------------------------------------------------

class MoveDir : public ::google::protobuf::Message {
 public:
  MoveDir();
  virtual ~MoveDir();

  MoveDir(const MoveDir& from);

  inline MoveDir& operator=(const MoveDir& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveDir& default_instance();

  void Swap(MoveDir* other);

  // implements Message ----------------------------------------------

  MoveDir* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoveDir& from);
  void MergeFrom(const MoveDir& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskMoveDir];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GCToSS::MsgNum msgnum() const;
  inline void set_msgnum(::GCToSS::MsgNum value);

  // optional .GCToSS.Dir dir = 3;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 3;
  inline const ::GCToSS::Dir& dir() const;
  inline ::GCToSS::Dir* mutable_dir();
  inline ::GCToSS::Dir* release_dir();
  inline void set_allocated_dir(::GCToSS::Dir* dir);

  // @@protoc_insertion_point(class_scope:GCToSS.MoveDir)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();
  inline void set_has_dir();
  inline void clear_has_dir();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::GCToSS::Dir* dir_;
  int msgnum_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static MoveDir* default_instance_;
};
// -------------------------------------------------------------------

class StopMove : public ::google::protobuf::Message {
 public:
  StopMove();
  virtual ~StopMove();

  StopMove(const StopMove& from);

  inline StopMove& operator=(const StopMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StopMove& default_instance();

  void Swap(StopMove* other);

  // implements Message ----------------------------------------------

  StopMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StopMove& from);
  void MergeFrom(const StopMove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskStopMove];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GCToSS::MsgNum msgnum() const;
  inline void set_msgnum(::GCToSS::MsgNum value);

  // @@protoc_insertion_point(class_scope:GCToSS.StopMove)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgnum_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static StopMove* default_instance_;
};
// -------------------------------------------------------------------

class BuyGoods : public ::google::protobuf::Message {
 public:
  BuyGoods();
  virtual ~BuyGoods();

  BuyGoods(const BuyGoods& from);

  inline BuyGoods& operator=(const BuyGoods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyGoods& default_instance();

  void Swap(BuyGoods* other);

  // implements Message ----------------------------------------------

  BuyGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyGoods& from);
  void MergeFrom(const BuyGoods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskBuyGoods];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GCToSS::MsgNum msgnum() const;
  inline void set_msgnum(::GCToSS::MsgNum value);

  // optional int32 typeid = 3;
  inline bool has_typeid_() const;
  inline void clear_typeid_();
  static const int kTypeidFieldNumber = 3;
  inline ::google::protobuf::int32 typeid_() const;
  inline void set_typeid_(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCToSS.BuyGoods)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();
  inline void set_has_typeid_();
  inline void clear_has_typeid_();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgnum_;
  ::google::protobuf::int32 typeid__;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static BuyGoods* default_instance_;
};
// -------------------------------------------------------------------

class UseGoods : public ::google::protobuf::Message {
 public:
  UseGoods();
  virtual ~UseGoods();

  UseGoods(const UseGoods& from);

  inline UseGoods& operator=(const UseGoods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UseGoods& default_instance();

  void Swap(UseGoods* other);

  // implements Message ----------------------------------------------

  UseGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UseGoods& from);
  void MergeFrom(const UseGoods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskUseGoods];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GCToSS::MsgNum msgnum() const;
  inline void set_msgnum(::GCToSS::MsgNum value);

  // optional int32 goodspos = 3;
  inline bool has_goodspos() const;
  inline void clear_goodspos();
  static const int kGoodsposFieldNumber = 3;
  inline ::google::protobuf::int32 goodspos() const;
  inline void set_goodspos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCToSS.UseGoods)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();
  inline void set_has_goodspos();
  inline void clear_has_goodspos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgnum_;
  ::google::protobuf::int32 goodspos_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static UseGoods* default_instance_;
};
// -------------------------------------------------------------------

class SellGoods : public ::google::protobuf::Message {
 public:
  SellGoods();
  virtual ~SellGoods();

  SellGoods(const SellGoods& from);

  inline SellGoods& operator=(const SellGoods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SellGoods& default_instance();

  void Swap(SellGoods* other);

  // implements Message ----------------------------------------------

  SellGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SellGoods& from);
  void MergeFrom(const SellGoods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskSellGoods];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GCToSS::MsgNum msgnum() const;
  inline void set_msgnum(::GCToSS::MsgNum value);

  // optional int32 goodspos = 3;
  inline bool has_goodspos() const;
  inline void clear_goodspos();
  static const int kGoodsposFieldNumber = 3;
  inline ::google::protobuf::int32 goodspos() const;
  inline void set_goodspos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCToSS.SellGoods)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();
  inline void set_has_goodspos();
  inline void clear_has_goodspos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgnum_;
  ::google::protobuf::int32 goodspos_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static SellGoods* default_instance_;
};
// -------------------------------------------------------------------

class MoveGoods : public ::google::protobuf::Message {
 public:
  MoveGoods();
  virtual ~MoveGoods();

  MoveGoods(const MoveGoods& from);

  inline MoveGoods& operator=(const MoveGoods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveGoods& default_instance();

  void Swap(MoveGoods* other);

  // implements Message ----------------------------------------------

  MoveGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoveGoods& from);
  void MergeFrom(const MoveGoods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskMoveGoods];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GCToSS::MsgNum msgnum() const;
  inline void set_msgnum(::GCToSS::MsgNum value);

  // optional int32 frompos = 3;
  inline bool has_frompos() const;
  inline void clear_frompos();
  static const int kFromposFieldNumber = 3;
  inline ::google::protobuf::int32 frompos() const;
  inline void set_frompos(::google::protobuf::int32 value);

  // optional int32 topos = 4;
  inline bool has_topos() const;
  inline void clear_topos();
  static const int kToposFieldNumber = 4;
  inline ::google::protobuf::int32 topos() const;
  inline void set_topos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCToSS.MoveGoods)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();
  inline void set_has_frompos();
  inline void clear_has_frompos();
  inline void set_has_topos();
  inline void clear_has_topos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgnum_;
  ::google::protobuf::int32 frompos_;
  ::google::protobuf::int32 topos_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static MoveGoods* default_instance_;
};
// -------------------------------------------------------------------

class ReportBattleLoadingState : public ::google::protobuf::Message {
 public:
  ReportBattleLoadingState();
  virtual ~ReportBattleLoadingState();

  ReportBattleLoadingState(const ReportBattleLoadingState& from);

  inline ReportBattleLoadingState& operator=(const ReportBattleLoadingState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportBattleLoadingState& default_instance();

  void Swap(ReportBattleLoadingState* other);

  // implements Message ----------------------------------------------

  ReportBattleLoadingState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReportBattleLoadingState& from);
  void MergeFrom(const ReportBattleLoadingState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_ReportBattleLoadingState];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GCToSS::MsgNum msgnum() const;
  inline void set_msgnum(::GCToSS::MsgNum value);

  // optional int32 loadingnum = 3;
  inline bool has_loadingnum() const;
  inline void clear_loadingnum();
  static const int kLoadingnumFieldNumber = 3;
  inline ::google::protobuf::int32 loadingnum() const;
  inline void set_loadingnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCToSS.ReportBattleLoadingState)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();
  inline void set_has_loadingnum();
  inline void clear_has_loadingnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgnum_;
  ::google::protobuf::int32 loadingnum_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static ReportBattleLoadingState* default_instance_;
};
// -------------------------------------------------------------------

class UseSkill : public ::google::protobuf::Message {
 public:
  UseSkill();
  virtual ~UseSkill();

  UseSkill(const UseSkill& from);

  inline UseSkill& operator=(const UseSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UseSkill& default_instance();

  void Swap(UseSkill* other);

  // implements Message ----------------------------------------------

  UseSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UseSkill& from);
  void MergeFrom(const UseSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskUseSkill];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GCToSS::MsgNum msgnum() const;
  inline void set_msgnum(::GCToSS::MsgNum value);

  // optional int32 skillid = 3;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 3;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCToSS.UseSkill)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();
  inline void set_has_skillid();
  inline void clear_has_skillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgnum_;
  ::google::protobuf::int32 skillid_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static UseSkill* default_instance_;
};
// -------------------------------------------------------------------

class LockTar : public ::google::protobuf::Message {
 public:
  LockTar();
  virtual ~LockTar();

  LockTar(const LockTar& from);

  inline LockTar& operator=(const LockTar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LockTar& default_instance();

  void Swap(LockTar* other);

  // implements Message ----------------------------------------------

  LockTar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LockTar& from);
  void MergeFrom(const LockTar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskLockTarget];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GCToSS::MsgNum msgnum() const;
  inline void set_msgnum(::GCToSS::MsgNum value);

  // optional int64 guid = 3;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 3;
  inline ::google::protobuf::int64 guid() const;
  inline void set_guid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GCToSS.LockTar)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();
  inline void set_has_guid();
  inline void clear_has_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 guid_;
  int msgnum_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static LockTar* default_instance_;
};
// -------------------------------------------------------------------

class ReportAltarStrawSolder : public ::google::protobuf::Message {
 public:
  ReportAltarStrawSolder();
  virtual ~ReportAltarStrawSolder();

  ReportAltarStrawSolder(const ReportAltarStrawSolder& from);

  inline ReportAltarStrawSolder& operator=(const ReportAltarStrawSolder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportAltarStrawSolder& default_instance();

  void Swap(ReportAltarStrawSolder* other);

  // implements Message ----------------------------------------------

  ReportAltarStrawSolder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReportAltarStrawSolder& from);
  void MergeFrom(const ReportAltarStrawSolder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_ReportAltarStrawSolder];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GCToSS::MsgNum msgnum() const;
  inline void set_msgnum(::GCToSS::MsgNum value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 index = 3;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCToSS.ReportAltarStrawSolder)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgnum_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 index_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static ReportAltarStrawSolder* default_instance_;
};
// -------------------------------------------------------------------

class Absorb : public ::google::protobuf::Message {
 public:
  Absorb();
  virtual ~Absorb();

  Absorb(const Absorb& from);

  inline Absorb& operator=(const Absorb& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Absorb& default_instance();

  void Swap(Absorb* other);

  // implements Message ----------------------------------------------

  Absorb* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Absorb& from);
  void MergeFrom(const Absorb& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskAbsorbMonster];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GCToSS::MsgNum msgnum() const;
  inline void set_msgnum(::GCToSS::MsgNum value);

  // optional int32 removeid = 2 [default = -1];
  inline bool has_removeid() const;
  inline void clear_removeid();
  static const int kRemoveidFieldNumber = 2;
  inline ::google::protobuf::int32 removeid() const;
  inline void set_removeid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCToSS.Absorb)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();
  inline void set_has_removeid();
  inline void clear_has_removeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgnum_;
  ::google::protobuf::int32 removeid_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static Absorb* default_instance_;
};
// -------------------------------------------------------------------

class GasExplosion : public ::google::protobuf::Message {
 public:
  GasExplosion();
  virtual ~GasExplosion();

  GasExplosion(const GasExplosion& from);

  inline GasExplosion& operator=(const GasExplosion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GasExplosion& default_instance();

  void Swap(GasExplosion* other);

  // implements Message ----------------------------------------------

  GasExplosion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GasExplosion& from);
  void MergeFrom(const GasExplosion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskGasExplosion];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GCToSS::MsgNum msgnum() const;
  inline void set_msgnum(::GCToSS::MsgNum value);

  // @@protoc_insertion_point(class_scope:GCToSS.GasExplosion)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgnum_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static GasExplosion* default_instance_;
};
// -------------------------------------------------------------------

class BuReborn : public ::google::protobuf::Message {
 public:
  BuReborn();
  virtual ~BuReborn();

  BuReborn(const BuReborn& from);

  inline BuReborn& operator=(const BuReborn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuReborn& default_instance();

  void Swap(BuReborn* other);

  // implements Message ----------------------------------------------

  BuReborn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuReborn& from);
  void MergeFrom(const BuReborn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskBuyRebornHero];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GCToSS::MsgNum msgnum() const;
  inline void set_msgnum(::GCToSS::MsgNum value);

  // @@protoc_insertion_point(class_scope:GCToSS.BuReborn)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgnum_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static BuReborn* default_instance_;
};
// -------------------------------------------------------------------

class GMCmd : public ::google::protobuf::Message {
 public:
  GMCmd();
  virtual ~GMCmd();

  GMCmd(const GMCmd& from);

  inline GMCmd& operator=(const GMCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMCmd& default_instance();

  void Swap(GMCmd* other);

  // implements Message ----------------------------------------------

  GMCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMCmd& from);
  void MergeFrom(const GMCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_GMCmd];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GCToSS::MsgNum msgnum() const;
  inline void set_msgnum(::GCToSS::MsgNum value);

  // optional string cmd = 2;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 2;
  inline const ::std::string& cmd() const;
  inline void set_cmd(const ::std::string& value);
  inline void set_cmd(const char* value);
  inline void set_cmd(const char* value, size_t size);
  inline ::std::string* mutable_cmd();
  inline ::std::string* release_cmd();
  inline void set_allocated_cmd(::std::string* cmd);

  // @@protoc_insertion_point(class_scope:GCToSS.GMCmd)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();
  inline void set_has_cmd();
  inline void clear_has_cmd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* cmd_;
  int msgnum_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static GMCmd* default_instance_;
};
// -------------------------------------------------------------------

class StepID : public ::google::protobuf::Message {
 public:
  StepID();
  virtual ~StepID();

  StepID(const StepID& from);

  inline StepID& operator=(const StepID& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StepID& default_instance();

  void Swap(StepID* other);

  // implements Message ----------------------------------------------

  StepID* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StepID& from);
  void MergeFrom(const StepID& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_StepId];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GCToSS::MsgNum msgnum() const;
  inline void set_msgnum(::GCToSS::MsgNum value);

  // optional int32 stepid = 3;
  inline bool has_stepid() const;
  inline void clear_stepid();
  static const int kStepidFieldNumber = 3;
  inline ::google::protobuf::int32 stepid() const;
  inline void set_stepid(::google::protobuf::int32 value);

  // optional int32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCToSS.StepID)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();
  inline void set_has_stepid();
  inline void clear_has_stepid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgnum_;
  ::google::protobuf::int32 stepid_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static StepID* default_instance_;
};
// -------------------------------------------------------------------

class AutoAtk : public ::google::protobuf::Message {
 public:
  AutoAtk();
  virtual ~AutoAtk();

  AutoAtk(const AutoAtk& from);

  inline AutoAtk& operator=(const AutoAtk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AutoAtk& default_instance();

  void Swap(AutoAtk* other);

  // implements Message ----------------------------------------------

  AutoAtk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AutoAtk& from);
  void MergeFrom(const AutoAtk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskAutoAttack];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GCToSS::MsgNum msgnum() const;
  inline void set_msgnum(::GCToSS::MsgNum value);

  // @@protoc_insertion_point(class_scope:GCToSS.AutoAtk)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgnum_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static AutoAtk* default_instance_;
};
// -------------------------------------------------------------------

class GuideJumpToHall : public ::google::protobuf::Message {
 public:
  GuideJumpToHall();
  virtual ~GuideJumpToHall();

  GuideJumpToHall(const GuideJumpToHall& from);

  inline GuideJumpToHall& operator=(const GuideJumpToHall& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuideJumpToHall& default_instance();

  void Swap(GuideJumpToHall* other);

  // implements Message ----------------------------------------------

  GuideJumpToHall* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuideJumpToHall& from);
  void MergeFrom(const GuideJumpToHall& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskGuideEndJumpToHall];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GCToSS::MsgNum msgnum() const;
  inline void set_msgnum(::GCToSS::MsgNum value);

  // @@protoc_insertion_point(class_scope:GCToSS.GuideJumpToHall)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgnum_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static GuideJumpToHall* default_instance_;
};
// -------------------------------------------------------------------

class AskReconnect : public ::google::protobuf::Message {
 public:
  AskReconnect();
  virtual ~AskReconnect();

  AskReconnect(const AskReconnect& from);

  inline AskReconnect& operator=(const AskReconnect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskReconnect& default_instance();

  void Swap(AskReconnect* other);

  // implements Message ----------------------------------------------

  AskReconnect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskReconnect& from);
  void MergeFrom(const AskReconnect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskReconnect];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GCToSS::MsgNum msgnum() const;
  inline void set_msgnum(::GCToSS::MsgNum value);

  // @@protoc_insertion_point(class_scope:GCToSS.AskReconnect)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgnum_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static AskReconnect* default_instance_;
};
// -------------------------------------------------------------------

class Pos : public ::google::protobuf::Message {
 public:
  Pos();
  virtual ~Pos();

  Pos(const Pos& from);

  inline Pos& operator=(const Pos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Pos& default_instance();

  void Swap(Pos* other);

  // implements Message ----------------------------------------------

  Pos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Pos& from);
  void MergeFrom(const Pos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);

  // optional float z = 2;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 2;
  inline float z() const;
  inline void set_z(float value);

  // @@protoc_insertion_point(class_scope:GCToSS.Pos)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_z();
  inline void clear_has_z();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float x_;
  float z_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static Pos* default_instance_;
};
// -------------------------------------------------------------------

class MoveTar : public ::google::protobuf::Message {
 public:
  MoveTar();
  virtual ~MoveTar();

  MoveTar(const MoveTar& from);

  inline MoveTar& operator=(const MoveTar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveTar& default_instance();

  void Swap(MoveTar* other);

  // implements Message ----------------------------------------------

  MoveTar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoveTar& from);
  void MergeFrom(const MoveTar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskMovePos];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GCToSS::MsgNum msgnum() const;
  inline void set_msgnum(::GCToSS::MsgNum value);

  // optional .GCToSS.Pos pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline const ::GCToSS::Pos& pos() const;
  inline ::GCToSS::Pos* mutable_pos();
  inline ::GCToSS::Pos* release_pos();
  inline void set_allocated_pos(::GCToSS::Pos* pos);

  // @@protoc_insertion_point(class_scope:GCToSS.MoveTar)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::GCToSS::Pos* pos_;
  int msgnum_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static MoveTar* default_instance_;
};
// -------------------------------------------------------------------

class AskBornNPC : public ::google::protobuf::Message {
 public:
  AskBornNPC();
  virtual ~AskBornNPC();

  AskBornNPC(const AskBornNPC& from);

  inline AskBornNPC& operator=(const AskBornNPC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskBornNPC& default_instance();

  void Swap(AskBornNPC* other);

  // implements Message ----------------------------------------------

  AskBornNPC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskBornNPC& from);
  void MergeFrom(const AskBornNPC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskBornNPC];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GCToSS::MsgNum msgnum() const;
  inline void set_msgnum(::GCToSS::MsgNum value);

  // optional int32 stepid = 2;
  inline bool has_stepid() const;
  inline void clear_stepid();
  static const int kStepidFieldNumber = 2;
  inline ::google::protobuf::int32 stepid() const;
  inline void set_stepid(::google::protobuf::int32 value);

  // optional int32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCToSS.AskBornNPC)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();
  inline void set_has_stepid();
  inline void clear_has_stepid();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgnum_;
  ::google::protobuf::int32 stepid_;
  ::google::protobuf::int32 state_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static AskBornNPC* default_instance_;
};
// -------------------------------------------------------------------

class AlwaysAutoAtk : public ::google::protobuf::Message {
 public:
  AlwaysAutoAtk();
  virtual ~AlwaysAutoAtk();

  AlwaysAutoAtk(const AlwaysAutoAtk& from);

  inline AlwaysAutoAtk& operator=(const AlwaysAutoAtk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlwaysAutoAtk& default_instance();

  void Swap(AlwaysAutoAtk* other);

  // implements Message ----------------------------------------------

  AlwaysAutoAtk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlwaysAutoAtk& from);
  void MergeFrom(const AlwaysAutoAtk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskAlwaysAutoAtk];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GCToSS::MsgNum msgnum() const;
  inline void set_msgnum(::GCToSS::MsgNum value);

  // optional bool flag = 2;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 2;
  inline bool flag() const;
  inline void set_flag(bool value);

  // @@protoc_insertion_point(class_scope:GCToSS.AlwaysAutoAtk)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgnum_;
  bool flag_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static AlwaysAutoAtk* default_instance_;
};
// -------------------------------------------------------------------

class TrySeleceHero : public ::google::protobuf::Message {
 public:
  TrySeleceHero();
  virtual ~TrySeleceHero();

  TrySeleceHero(const TrySeleceHero& from);

  inline TrySeleceHero& operator=(const TrySeleceHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrySeleceHero& default_instance();

  void Swap(TrySeleceHero* other);

  // implements Message ----------------------------------------------

  TrySeleceHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrySeleceHero& from);
  void MergeFrom(const TrySeleceHero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskTrySelectHero];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GCToSS::MsgNum msgnum() const;
  inline void set_msgnum(::GCToSS::MsgNum value);

  // optional uint32 heroid = 2;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 2;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GCToSS.TrySeleceHero)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();
  inline void set_has_heroid();
  inline void clear_has_heroid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgnum_;
  ::google::protobuf::uint32 heroid_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static TrySeleceHero* default_instance_;
};
// -------------------------------------------------------------------

class SelectHero : public ::google::protobuf::Message {
 public:
  SelectHero();
  virtual ~SelectHero();

  SelectHero(const SelectHero& from);

  inline SelectHero& operator=(const SelectHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SelectHero& default_instance();

  void Swap(SelectHero* other);

  // implements Message ----------------------------------------------

  SelectHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SelectHero& from);
  void MergeFrom(const SelectHero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskSelectHero];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GCToSS::MsgNum msgnum() const;
  inline void set_msgnum(::GCToSS::MsgNum value);

  // optional int32 heroid = 2;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 2;
  inline ::google::protobuf::int32 heroid() const;
  inline void set_heroid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCToSS.SelectHero)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();
  inline void set_has_heroid();
  inline void clear_has_heroid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgnum_;
  ::google::protobuf::int32 heroid_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static SelectHero* default_instance_;
};
// -------------------------------------------------------------------

class SelectRunePage : public ::google::protobuf::Message {
 public:
  SelectRunePage();
  virtual ~SelectRunePage();

  SelectRunePage(const SelectRunePage& from);

  inline SelectRunePage& operator=(const SelectRunePage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SelectRunePage& default_instance();

  void Swap(SelectRunePage* other);

  // implements Message ----------------------------------------------

  SelectRunePage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SelectRunePage& from);
  void MergeFrom(const SelectRunePage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskSelectRunePage];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GCToSS::MsgNum msgnum() const;
  inline void set_msgnum(::GCToSS::MsgNum value);

  // optional int32 pageindex = 2;
  inline bool has_pageindex() const;
  inline void clear_pageindex();
  static const int kPageindexFieldNumber = 2;
  inline ::google::protobuf::int32 pageindex() const;
  inline void set_pageindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCToSS.SelectRunePage)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();
  inline void set_has_pageindex();
  inline void clear_has_pageindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgnum_;
  ::google::protobuf::int32 pageindex_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static SelectRunePage* default_instance_;
};
// -------------------------------------------------------------------

class LoadComplete : public ::google::protobuf::Message {
 public:
  LoadComplete();
  virtual ~LoadComplete();

  LoadComplete(const LoadComplete& from);

  inline LoadComplete& operator=(const LoadComplete& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadComplete& default_instance();

  void Swap(LoadComplete* other);

  // implements Message ----------------------------------------------

  LoadComplete* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoadComplete& from);
  void MergeFrom(const LoadComplete& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_ReportLoadBattleComplete];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GCToSS::MsgNum msgnum() const;
  inline void set_msgnum(::GCToSS::MsgNum value);

  // @@protoc_insertion_point(class_scope:GCToSS.LoadComplete)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgnum_;
  friend void  protobuf_AddDesc_GCToSS_2eproto();
  friend void protobuf_AssignDesc_GCToSS_2eproto();
  friend void protobuf_ShutdownFile_GCToSS_2eproto();

  void InitAsDefaultInstance();
  static LoadComplete* default_instance_;
};
// ===================================================================


// ===================================================================

// AskSSGuideStepComp_taskinfo

// optional .GCToSS.AskSSGuideStepComp.edotype dtype = 1;
inline bool AskSSGuideStepComp_taskinfo::has_dtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskSSGuideStepComp_taskinfo::set_has_dtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskSSGuideStepComp_taskinfo::clear_has_dtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskSSGuideStepComp_taskinfo::clear_dtype() {
  dtype_ = 1;
  clear_has_dtype();
}
inline ::GCToSS::AskSSGuideStepComp_edotype AskSSGuideStepComp_taskinfo::dtype() const {
  // @@protoc_insertion_point(field_get:GCToSS.AskSSGuideStepComp.taskinfo.dtype)
  return static_cast< ::GCToSS::AskSSGuideStepComp_edotype >(dtype_);
}
inline void AskSSGuideStepComp_taskinfo::set_dtype(::GCToSS::AskSSGuideStepComp_edotype value) {
  assert(::GCToSS::AskSSGuideStepComp_edotype_IsValid(value));
  set_has_dtype();
  dtype_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.AskSSGuideStepComp.taskinfo.dtype)
}

// optional int32 stepid = 2;
inline bool AskSSGuideStepComp_taskinfo::has_stepid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AskSSGuideStepComp_taskinfo::set_has_stepid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AskSSGuideStepComp_taskinfo::clear_has_stepid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AskSSGuideStepComp_taskinfo::clear_stepid() {
  stepid_ = 0;
  clear_has_stepid();
}
inline ::google::protobuf::int32 AskSSGuideStepComp_taskinfo::stepid() const {
  // @@protoc_insertion_point(field_get:GCToSS.AskSSGuideStepComp.taskinfo.stepid)
  return stepid_;
}
inline void AskSSGuideStepComp_taskinfo::set_stepid(::google::protobuf::int32 value) {
  set_has_stepid();
  stepid_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.AskSSGuideStepComp.taskinfo.stepid)
}

// -------------------------------------------------------------------

// AskSSGuideStepComp

// optional .GCToSS.MsgNum msgid = 1 [default = eMsgToGSToSSFromGC_AskGuideStepComp];
inline bool AskSSGuideStepComp::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskSSGuideStepComp::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskSSGuideStepComp::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskSSGuideStepComp::clear_msgid() {
  msgid_ = 16540;
  clear_has_msgid();
}
inline ::GCToSS::MsgNum AskSSGuideStepComp::msgid() const {
  // @@protoc_insertion_point(field_get:GCToSS.AskSSGuideStepComp.msgid)
  return static_cast< ::GCToSS::MsgNum >(msgid_);
}
inline void AskSSGuideStepComp::set_msgid(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.AskSSGuideStepComp.msgid)
}

// repeated .GCToSS.AskSSGuideStepComp.taskinfo info = 3;
inline int AskSSGuideStepComp::info_size() const {
  return info_.size();
}
inline void AskSSGuideStepComp::clear_info() {
  info_.Clear();
}
inline const ::GCToSS::AskSSGuideStepComp_taskinfo& AskSSGuideStepComp::info(int index) const {
  // @@protoc_insertion_point(field_get:GCToSS.AskSSGuideStepComp.info)
  return info_.Get(index);
}
inline ::GCToSS::AskSSGuideStepComp_taskinfo* AskSSGuideStepComp::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:GCToSS.AskSSGuideStepComp.info)
  return info_.Mutable(index);
}
inline ::GCToSS::AskSSGuideStepComp_taskinfo* AskSSGuideStepComp::add_info() {
  // @@protoc_insertion_point(field_add:GCToSS.AskSSGuideStepComp.info)
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GCToSS::AskSSGuideStepComp_taskinfo >&
AskSSGuideStepComp::info() const {
  // @@protoc_insertion_point(field_list:GCToSS.AskSSGuideStepComp.info)
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::GCToSS::AskSSGuideStepComp_taskinfo >*
AskSSGuideStepComp::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:GCToSS.AskSSGuideStepComp.info)
  return &info_;
}

// -------------------------------------------------------------------

// HerosBattleInfo

// optional .GCToSS.MsgNum msgid = 1 [default = eMsgToGSToSSFromGC_AskHerosBattleInfo];
inline bool HerosBattleInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HerosBattleInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HerosBattleInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HerosBattleInfo::clear_msgid() {
  msgid_ = 16522;
  clear_has_msgid();
}
inline ::GCToSS::MsgNum HerosBattleInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GCToSS.HerosBattleInfo.msgid)
  return static_cast< ::GCToSS::MsgNum >(msgid_);
}
inline void HerosBattleInfo::set_msgid(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.HerosBattleInfo.msgid)
}

// -------------------------------------------------------------------

// AskHeroAttributesInfo

// optional .GCToSS.MsgNum msgid = 1 [default = eMsgToGSToSSFromGC_AskHeroAttributesInfo];
inline bool AskHeroAttributesInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskHeroAttributesInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskHeroAttributesInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskHeroAttributesInfo::clear_msgid() {
  msgid_ = 16521;
  clear_has_msgid();
}
inline ::GCToSS::MsgNum AskHeroAttributesInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GCToSS.AskHeroAttributesInfo.msgid)
  return static_cast< ::GCToSS::MsgNum >(msgid_);
}
inline void AskHeroAttributesInfo::set_msgid(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.AskHeroAttributesInfo.msgid)
}

// -------------------------------------------------------------------

// AskQuickBattleEnd

// optional .GCToSS.MsgNum msgid = 1 [default = eMsgToSSFromGS_AskQuickBattleEnd];
inline bool AskQuickBattleEnd::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskQuickBattleEnd::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskQuickBattleEnd::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskQuickBattleEnd::clear_msgid() {
  msgid_ = 16412;
  clear_has_msgid();
}
inline ::GCToSS::MsgNum AskQuickBattleEnd::msgid() const {
  // @@protoc_insertion_point(field_get:GCToSS.AskQuickBattleEnd.msgid)
  return static_cast< ::GCToSS::MsgNum >(msgid_);
}
inline void AskQuickBattleEnd::set_msgid(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.AskQuickBattleEnd.msgid)
}

// optional int32 other = 2;
inline bool AskQuickBattleEnd::has_other() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AskQuickBattleEnd::set_has_other() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AskQuickBattleEnd::clear_has_other() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AskQuickBattleEnd::clear_other() {
  other_ = 0;
  clear_has_other();
}
inline ::google::protobuf::int32 AskQuickBattleEnd::other() const {
  // @@protoc_insertion_point(field_get:GCToSS.AskQuickBattleEnd.other)
  return other_;
}
inline void AskQuickBattleEnd::set_other(::google::protobuf::int32 value) {
  set_has_other();
  other_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.AskQuickBattleEnd.other)
}

// -------------------------------------------------------------------

// AskPingSS

// optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskPingSS];
inline bool AskPingSS::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskPingSS::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskPingSS::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskPingSS::clear_msgnum() {
  msgnum_ = 16385;
  clear_has_msgnum();
}
inline ::GCToSS::MsgNum AskPingSS::msgnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.AskPingSS.msgnum)
  return static_cast< ::GCToSS::MsgNum >(msgnum_);
}
inline void AskPingSS::set_msgnum(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.AskPingSS.msgnum)
}

// optional int64 time = 2;
inline bool AskPingSS::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AskPingSS::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AskPingSS::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AskPingSS::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 AskPingSS::time() const {
  // @@protoc_insertion_point(field_get:GCToSS.AskPingSS.time)
  return time_;
}
inline void AskPingSS::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.AskPingSS.time)
}

// -------------------------------------------------------------------

// AskEnterBattle

// optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskEnterBattle];
inline bool AskEnterBattle::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskEnterBattle::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskEnterBattle::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskEnterBattle::clear_msgnum() {
  msgnum_ = 16386;
  clear_has_msgnum();
}
inline ::GCToSS::MsgNum AskEnterBattle::msgnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.AskEnterBattle.msgnum)
  return static_cast< ::GCToSS::MsgNum >(msgnum_);
}
inline void AskEnterBattle::set_msgnum(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.AskEnterBattle.msgnum)
}

// optional int64 clientTime = 2;
inline bool AskEnterBattle::has_clienttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AskEnterBattle::set_has_clienttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AskEnterBattle::clear_has_clienttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AskEnterBattle::clear_clienttime() {
  clienttime_ = GOOGLE_LONGLONG(0);
  clear_has_clienttime();
}
inline ::google::protobuf::int64 AskEnterBattle::clienttime() const {
  // @@protoc_insertion_point(field_get:GCToSS.AskEnterBattle.clientTime)
  return clienttime_;
}
inline void AskEnterBattle::set_clienttime(::google::protobuf::int64 value) {
  set_has_clienttime();
  clienttime_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.AskEnterBattle.clientTime)
}

// optional uint64 battleid = 3;
inline bool AskEnterBattle::has_battleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AskEnterBattle::set_has_battleid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AskEnterBattle::clear_has_battleid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AskEnterBattle::clear_battleid() {
  battleid_ = GOOGLE_ULONGLONG(0);
  clear_has_battleid();
}
inline ::google::protobuf::uint64 AskEnterBattle::battleid() const {
  // @@protoc_insertion_point(field_get:GCToSS.AskEnterBattle.battleid)
  return battleid_;
}
inline void AskEnterBattle::set_battleid(::google::protobuf::uint64 value) {
  set_has_battleid();
  battleid_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.AskEnterBattle.battleid)
}

// optional int32 obuserstate = 4;
inline bool AskEnterBattle::has_obuserstate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AskEnterBattle::set_has_obuserstate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AskEnterBattle::clear_has_obuserstate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AskEnterBattle::clear_obuserstate() {
  obuserstate_ = 0;
  clear_has_obuserstate();
}
inline ::google::protobuf::int32 AskEnterBattle::obuserstate() const {
  // @@protoc_insertion_point(field_get:GCToSS.AskEnterBattle.obuserstate)
  return obuserstate_;
}
inline void AskEnterBattle::set_obuserstate(::google::protobuf::int32 value) {
  set_has_obuserstate();
  obuserstate_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.AskEnterBattle.obuserstate)
}

// -------------------------------------------------------------------

// Dir

// optional float x = 1;
inline bool Dir::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Dir::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Dir::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Dir::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float Dir::x() const {
  // @@protoc_insertion_point(field_get:GCToSS.Dir.x)
  return x_;
}
inline void Dir::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.Dir.x)
}

// optional float z = 2;
inline bool Dir::has_z() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Dir::set_has_z() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Dir::clear_has_z() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Dir::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float Dir::z() const {
  // @@protoc_insertion_point(field_get:GCToSS.Dir.z)
  return z_;
}
inline void Dir::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.Dir.z)
}

// optional float angle = 3;
inline bool Dir::has_angle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Dir::set_has_angle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Dir::clear_has_angle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Dir::clear_angle() {
  angle_ = 0;
  clear_has_angle();
}
inline float Dir::angle() const {
  // @@protoc_insertion_point(field_get:GCToSS.Dir.angle)
  return angle_;
}
inline void Dir::set_angle(float value) {
  set_has_angle();
  angle_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.Dir.angle)
}

// -------------------------------------------------------------------

// MoveDir

// optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskMoveDir];
inline bool MoveDir::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoveDir::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoveDir::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoveDir::clear_msgnum() {
  msgnum_ = 16387;
  clear_has_msgnum();
}
inline ::GCToSS::MsgNum MoveDir::msgnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.MoveDir.msgnum)
  return static_cast< ::GCToSS::MsgNum >(msgnum_);
}
inline void MoveDir::set_msgnum(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.MoveDir.msgnum)
}

// optional .GCToSS.Dir dir = 3;
inline bool MoveDir::has_dir() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoveDir::set_has_dir() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoveDir::clear_has_dir() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoveDir::clear_dir() {
  if (dir_ != NULL) dir_->::GCToSS::Dir::Clear();
  clear_has_dir();
}
inline const ::GCToSS::Dir& MoveDir::dir() const {
  // @@protoc_insertion_point(field_get:GCToSS.MoveDir.dir)
  return dir_ != NULL ? *dir_ : *default_instance_->dir_;
}
inline ::GCToSS::Dir* MoveDir::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) dir_ = new ::GCToSS::Dir;
  // @@protoc_insertion_point(field_mutable:GCToSS.MoveDir.dir)
  return dir_;
}
inline ::GCToSS::Dir* MoveDir::release_dir() {
  clear_has_dir();
  ::GCToSS::Dir* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void MoveDir::set_allocated_dir(::GCToSS::Dir* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:GCToSS.MoveDir.dir)
}

// -------------------------------------------------------------------

// StopMove

// optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskStopMove];
inline bool StopMove::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StopMove::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StopMove::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StopMove::clear_msgnum() {
  msgnum_ = 16388;
  clear_has_msgnum();
}
inline ::GCToSS::MsgNum StopMove::msgnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.StopMove.msgnum)
  return static_cast< ::GCToSS::MsgNum >(msgnum_);
}
inline void StopMove::set_msgnum(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.StopMove.msgnum)
}

// -------------------------------------------------------------------

// BuyGoods

// optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskBuyGoods];
inline bool BuyGoods::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyGoods::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyGoods::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyGoods::clear_msgnum() {
  msgnum_ = 16389;
  clear_has_msgnum();
}
inline ::GCToSS::MsgNum BuyGoods::msgnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.BuyGoods.msgnum)
  return static_cast< ::GCToSS::MsgNum >(msgnum_);
}
inline void BuyGoods::set_msgnum(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.BuyGoods.msgnum)
}

// optional int32 typeid = 3;
inline bool BuyGoods::has_typeid_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyGoods::set_has_typeid_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyGoods::clear_has_typeid_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyGoods::clear_typeid_() {
  typeid__ = 0;
  clear_has_typeid_();
}
inline ::google::protobuf::int32 BuyGoods::typeid_() const {
  // @@protoc_insertion_point(field_get:GCToSS.BuyGoods.typeid)
  return typeid__;
}
inline void BuyGoods::set_typeid_(::google::protobuf::int32 value) {
  set_has_typeid_();
  typeid__ = value;
  // @@protoc_insertion_point(field_set:GCToSS.BuyGoods.typeid)
}

// -------------------------------------------------------------------

// UseGoods

// optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskUseGoods];
inline bool UseGoods::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UseGoods::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UseGoods::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UseGoods::clear_msgnum() {
  msgnum_ = 16390;
  clear_has_msgnum();
}
inline ::GCToSS::MsgNum UseGoods::msgnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.UseGoods.msgnum)
  return static_cast< ::GCToSS::MsgNum >(msgnum_);
}
inline void UseGoods::set_msgnum(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.UseGoods.msgnum)
}

// optional int32 goodspos = 3;
inline bool UseGoods::has_goodspos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UseGoods::set_has_goodspos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UseGoods::clear_has_goodspos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UseGoods::clear_goodspos() {
  goodspos_ = 0;
  clear_has_goodspos();
}
inline ::google::protobuf::int32 UseGoods::goodspos() const {
  // @@protoc_insertion_point(field_get:GCToSS.UseGoods.goodspos)
  return goodspos_;
}
inline void UseGoods::set_goodspos(::google::protobuf::int32 value) {
  set_has_goodspos();
  goodspos_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.UseGoods.goodspos)
}

// -------------------------------------------------------------------

// SellGoods

// optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskSellGoods];
inline bool SellGoods::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SellGoods::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SellGoods::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SellGoods::clear_msgnum() {
  msgnum_ = 16391;
  clear_has_msgnum();
}
inline ::GCToSS::MsgNum SellGoods::msgnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.SellGoods.msgnum)
  return static_cast< ::GCToSS::MsgNum >(msgnum_);
}
inline void SellGoods::set_msgnum(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.SellGoods.msgnum)
}

// optional int32 goodspos = 3;
inline bool SellGoods::has_goodspos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SellGoods::set_has_goodspos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SellGoods::clear_has_goodspos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SellGoods::clear_goodspos() {
  goodspos_ = 0;
  clear_has_goodspos();
}
inline ::google::protobuf::int32 SellGoods::goodspos() const {
  // @@protoc_insertion_point(field_get:GCToSS.SellGoods.goodspos)
  return goodspos_;
}
inline void SellGoods::set_goodspos(::google::protobuf::int32 value) {
  set_has_goodspos();
  goodspos_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.SellGoods.goodspos)
}

// -------------------------------------------------------------------

// MoveGoods

// optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskMoveGoods];
inline bool MoveGoods::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoveGoods::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoveGoods::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoveGoods::clear_msgnum() {
  msgnum_ = 16392;
  clear_has_msgnum();
}
inline ::GCToSS::MsgNum MoveGoods::msgnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.MoveGoods.msgnum)
  return static_cast< ::GCToSS::MsgNum >(msgnum_);
}
inline void MoveGoods::set_msgnum(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.MoveGoods.msgnum)
}

// optional int32 frompos = 3;
inline bool MoveGoods::has_frompos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoveGoods::set_has_frompos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoveGoods::clear_has_frompos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoveGoods::clear_frompos() {
  frompos_ = 0;
  clear_has_frompos();
}
inline ::google::protobuf::int32 MoveGoods::frompos() const {
  // @@protoc_insertion_point(field_get:GCToSS.MoveGoods.frompos)
  return frompos_;
}
inline void MoveGoods::set_frompos(::google::protobuf::int32 value) {
  set_has_frompos();
  frompos_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.MoveGoods.frompos)
}

// optional int32 topos = 4;
inline bool MoveGoods::has_topos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MoveGoods::set_has_topos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MoveGoods::clear_has_topos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MoveGoods::clear_topos() {
  topos_ = 0;
  clear_has_topos();
}
inline ::google::protobuf::int32 MoveGoods::topos() const {
  // @@protoc_insertion_point(field_get:GCToSS.MoveGoods.topos)
  return topos_;
}
inline void MoveGoods::set_topos(::google::protobuf::int32 value) {
  set_has_topos();
  topos_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.MoveGoods.topos)
}

// -------------------------------------------------------------------

// ReportBattleLoadingState

// optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_ReportBattleLoadingState];
inline bool ReportBattleLoadingState::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReportBattleLoadingState::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReportBattleLoadingState::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReportBattleLoadingState::clear_msgnum() {
  msgnum_ = 16393;
  clear_has_msgnum();
}
inline ::GCToSS::MsgNum ReportBattleLoadingState::msgnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.ReportBattleLoadingState.msgnum)
  return static_cast< ::GCToSS::MsgNum >(msgnum_);
}
inline void ReportBattleLoadingState::set_msgnum(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.ReportBattleLoadingState.msgnum)
}

// optional int32 loadingnum = 3;
inline bool ReportBattleLoadingState::has_loadingnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReportBattleLoadingState::set_has_loadingnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReportBattleLoadingState::clear_has_loadingnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReportBattleLoadingState::clear_loadingnum() {
  loadingnum_ = 0;
  clear_has_loadingnum();
}
inline ::google::protobuf::int32 ReportBattleLoadingState::loadingnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.ReportBattleLoadingState.loadingnum)
  return loadingnum_;
}
inline void ReportBattleLoadingState::set_loadingnum(::google::protobuf::int32 value) {
  set_has_loadingnum();
  loadingnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.ReportBattleLoadingState.loadingnum)
}

// -------------------------------------------------------------------

// UseSkill

// optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskUseSkill];
inline bool UseSkill::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UseSkill::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UseSkill::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UseSkill::clear_msgnum() {
  msgnum_ = 16395;
  clear_has_msgnum();
}
inline ::GCToSS::MsgNum UseSkill::msgnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.UseSkill.msgnum)
  return static_cast< ::GCToSS::MsgNum >(msgnum_);
}
inline void UseSkill::set_msgnum(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.UseSkill.msgnum)
}

// optional int32 skillid = 3;
inline bool UseSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UseSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UseSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UseSkill::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 UseSkill::skillid() const {
  // @@protoc_insertion_point(field_get:GCToSS.UseSkill.skillid)
  return skillid_;
}
inline void UseSkill::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.UseSkill.skillid)
}

// -------------------------------------------------------------------

// LockTar

// optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskLockTarget];
inline bool LockTar::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LockTar::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LockTar::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LockTar::clear_msgnum() {
  msgnum_ = 16396;
  clear_has_msgnum();
}
inline ::GCToSS::MsgNum LockTar::msgnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.LockTar.msgnum)
  return static_cast< ::GCToSS::MsgNum >(msgnum_);
}
inline void LockTar::set_msgnum(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.LockTar.msgnum)
}

// optional int64 guid = 3;
inline bool LockTar::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LockTar::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LockTar::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LockTar::clear_guid() {
  guid_ = GOOGLE_LONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::int64 LockTar::guid() const {
  // @@protoc_insertion_point(field_get:GCToSS.LockTar.guid)
  return guid_;
}
inline void LockTar::set_guid(::google::protobuf::int64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.LockTar.guid)
}

// -------------------------------------------------------------------

// ReportAltarStrawSolder

// optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_ReportAltarStrawSolder];
inline bool ReportAltarStrawSolder::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReportAltarStrawSolder::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReportAltarStrawSolder::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReportAltarStrawSolder::clear_msgnum() {
  msgnum_ = 16397;
  clear_has_msgnum();
}
inline ::GCToSS::MsgNum ReportAltarStrawSolder::msgnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.ReportAltarStrawSolder.msgnum)
  return static_cast< ::GCToSS::MsgNum >(msgnum_);
}
inline void ReportAltarStrawSolder::set_msgnum(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.ReportAltarStrawSolder.msgnum)
}

// optional int32 type = 2;
inline bool ReportAltarStrawSolder::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReportAltarStrawSolder::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReportAltarStrawSolder::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReportAltarStrawSolder::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ReportAltarStrawSolder::type() const {
  // @@protoc_insertion_point(field_get:GCToSS.ReportAltarStrawSolder.type)
  return type_;
}
inline void ReportAltarStrawSolder::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.ReportAltarStrawSolder.type)
}

// optional int32 index = 3;
inline bool ReportAltarStrawSolder::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReportAltarStrawSolder::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReportAltarStrawSolder::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReportAltarStrawSolder::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 ReportAltarStrawSolder::index() const {
  // @@protoc_insertion_point(field_get:GCToSS.ReportAltarStrawSolder.index)
  return index_;
}
inline void ReportAltarStrawSolder::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.ReportAltarStrawSolder.index)
}

// -------------------------------------------------------------------

// Absorb

// optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskAbsorbMonster];
inline bool Absorb::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Absorb::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Absorb::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Absorb::clear_msgnum() {
  msgnum_ = 16398;
  clear_has_msgnum();
}
inline ::GCToSS::MsgNum Absorb::msgnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.Absorb.msgnum)
  return static_cast< ::GCToSS::MsgNum >(msgnum_);
}
inline void Absorb::set_msgnum(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.Absorb.msgnum)
}

// optional int32 removeid = 2 [default = -1];
inline bool Absorb::has_removeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Absorb::set_has_removeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Absorb::clear_has_removeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Absorb::clear_removeid() {
  removeid_ = -1;
  clear_has_removeid();
}
inline ::google::protobuf::int32 Absorb::removeid() const {
  // @@protoc_insertion_point(field_get:GCToSS.Absorb.removeid)
  return removeid_;
}
inline void Absorb::set_removeid(::google::protobuf::int32 value) {
  set_has_removeid();
  removeid_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.Absorb.removeid)
}

// -------------------------------------------------------------------

// GasExplosion

// optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskGasExplosion];
inline bool GasExplosion::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GasExplosion::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GasExplosion::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GasExplosion::clear_msgnum() {
  msgnum_ = 16400;
  clear_has_msgnum();
}
inline ::GCToSS::MsgNum GasExplosion::msgnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.GasExplosion.msgnum)
  return static_cast< ::GCToSS::MsgNum >(msgnum_);
}
inline void GasExplosion::set_msgnum(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.GasExplosion.msgnum)
}

// -------------------------------------------------------------------

// BuReborn

// optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskBuyRebornHero];
inline bool BuReborn::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuReborn::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuReborn::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuReborn::clear_msgnum() {
  msgnum_ = 16401;
  clear_has_msgnum();
}
inline ::GCToSS::MsgNum BuReborn::msgnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.BuReborn.msgnum)
  return static_cast< ::GCToSS::MsgNum >(msgnum_);
}
inline void BuReborn::set_msgnum(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.BuReborn.msgnum)
}

// -------------------------------------------------------------------

// GMCmd

// optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_GMCmd];
inline bool GMCmd::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMCmd::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMCmd::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMCmd::clear_msgnum() {
  msgnum_ = 16402;
  clear_has_msgnum();
}
inline ::GCToSS::MsgNum GMCmd::msgnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.GMCmd.msgnum)
  return static_cast< ::GCToSS::MsgNum >(msgnum_);
}
inline void GMCmd::set_msgnum(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.GMCmd.msgnum)
}

// optional string cmd = 2;
inline bool GMCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMCmd::clear_cmd() {
  if (cmd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cmd_->clear();
  }
  clear_has_cmd();
}
inline const ::std::string& GMCmd::cmd() const {
  // @@protoc_insertion_point(field_get:GCToSS.GMCmd.cmd)
  return *cmd_;
}
inline void GMCmd::set_cmd(const ::std::string& value) {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(value);
  // @@protoc_insertion_point(field_set:GCToSS.GMCmd.cmd)
}
inline void GMCmd::set_cmd(const char* value) {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(value);
  // @@protoc_insertion_point(field_set_char:GCToSS.GMCmd.cmd)
}
inline void GMCmd::set_cmd(const char* value, size_t size) {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCToSS.GMCmd.cmd)
}
inline ::std::string* GMCmd::mutable_cmd() {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cmd_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GCToSS.GMCmd.cmd)
  return cmd_;
}
inline ::std::string* GMCmd::release_cmd() {
  clear_has_cmd();
  if (cmd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = cmd_;
    cmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GMCmd::set_allocated_cmd(::std::string* cmd) {
  if (cmd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete cmd_;
  }
  if (cmd) {
    set_has_cmd();
    cmd_ = cmd;
  } else {
    clear_has_cmd();
    cmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GCToSS.GMCmd.cmd)
}

// -------------------------------------------------------------------

// StepID

// optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_StepId];
inline bool StepID::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StepID::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StepID::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StepID::clear_msgnum() {
  msgnum_ = 16404;
  clear_has_msgnum();
}
inline ::GCToSS::MsgNum StepID::msgnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.StepID.msgnum)
  return static_cast< ::GCToSS::MsgNum >(msgnum_);
}
inline void StepID::set_msgnum(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.StepID.msgnum)
}

// optional int32 stepid = 3;
inline bool StepID::has_stepid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StepID::set_has_stepid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StepID::clear_has_stepid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StepID::clear_stepid() {
  stepid_ = 0;
  clear_has_stepid();
}
inline ::google::protobuf::int32 StepID::stepid() const {
  // @@protoc_insertion_point(field_get:GCToSS.StepID.stepid)
  return stepid_;
}
inline void StepID::set_stepid(::google::protobuf::int32 value) {
  set_has_stepid();
  stepid_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.StepID.stepid)
}

// optional int32 type = 4;
inline bool StepID::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StepID::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StepID::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StepID::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 StepID::type() const {
  // @@protoc_insertion_point(field_get:GCToSS.StepID.type)
  return type_;
}
inline void StepID::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.StepID.type)
}

// -------------------------------------------------------------------

// AutoAtk

// optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskAutoAttack];
inline bool AutoAtk::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AutoAtk::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AutoAtk::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AutoAtk::clear_msgnum() {
  msgnum_ = 16406;
  clear_has_msgnum();
}
inline ::GCToSS::MsgNum AutoAtk::msgnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.AutoAtk.msgnum)
  return static_cast< ::GCToSS::MsgNum >(msgnum_);
}
inline void AutoAtk::set_msgnum(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.AutoAtk.msgnum)
}

// -------------------------------------------------------------------

// GuideJumpToHall

// optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskGuideEndJumpToHall];
inline bool GuideJumpToHall::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuideJumpToHall::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuideJumpToHall::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuideJumpToHall::clear_msgnum() {
  msgnum_ = 16407;
  clear_has_msgnum();
}
inline ::GCToSS::MsgNum GuideJumpToHall::msgnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.GuideJumpToHall.msgnum)
  return static_cast< ::GCToSS::MsgNum >(msgnum_);
}
inline void GuideJumpToHall::set_msgnum(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.GuideJumpToHall.msgnum)
}

// -------------------------------------------------------------------

// AskReconnect

// optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskReconnect];
inline bool AskReconnect::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskReconnect::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskReconnect::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskReconnect::clear_msgnum() {
  msgnum_ = 16408;
  clear_has_msgnum();
}
inline ::GCToSS::MsgNum AskReconnect::msgnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.AskReconnect.msgnum)
  return static_cast< ::GCToSS::MsgNum >(msgnum_);
}
inline void AskReconnect::set_msgnum(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.AskReconnect.msgnum)
}

// -------------------------------------------------------------------

// Pos

// optional float x = 1;
inline bool Pos::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Pos::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Pos::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Pos::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float Pos::x() const {
  // @@protoc_insertion_point(field_get:GCToSS.Pos.x)
  return x_;
}
inline void Pos::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.Pos.x)
}

// optional float z = 2;
inline bool Pos::has_z() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Pos::set_has_z() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Pos::clear_has_z() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Pos::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float Pos::z() const {
  // @@protoc_insertion_point(field_get:GCToSS.Pos.z)
  return z_;
}
inline void Pos::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.Pos.z)
}

// -------------------------------------------------------------------

// MoveTar

// optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskMovePos];
inline bool MoveTar::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoveTar::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoveTar::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoveTar::clear_msgnum() {
  msgnum_ = 16409;
  clear_has_msgnum();
}
inline ::GCToSS::MsgNum MoveTar::msgnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.MoveTar.msgnum)
  return static_cast< ::GCToSS::MsgNum >(msgnum_);
}
inline void MoveTar::set_msgnum(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.MoveTar.msgnum)
}

// optional .GCToSS.Pos pos = 3;
inline bool MoveTar::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoveTar::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoveTar::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoveTar::clear_pos() {
  if (pos_ != NULL) pos_->::GCToSS::Pos::Clear();
  clear_has_pos();
}
inline const ::GCToSS::Pos& MoveTar::pos() const {
  // @@protoc_insertion_point(field_get:GCToSS.MoveTar.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::GCToSS::Pos* MoveTar::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::GCToSS::Pos;
  // @@protoc_insertion_point(field_mutable:GCToSS.MoveTar.pos)
  return pos_;
}
inline ::GCToSS::Pos* MoveTar::release_pos() {
  clear_has_pos();
  ::GCToSS::Pos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void MoveTar::set_allocated_pos(::GCToSS::Pos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:GCToSS.MoveTar.pos)
}

// -------------------------------------------------------------------

// AskBornNPC

// optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskBornNPC];
inline bool AskBornNPC::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskBornNPC::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskBornNPC::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskBornNPC::clear_msgnum() {
  msgnum_ = 16405;
  clear_has_msgnum();
}
inline ::GCToSS::MsgNum AskBornNPC::msgnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.AskBornNPC.msgnum)
  return static_cast< ::GCToSS::MsgNum >(msgnum_);
}
inline void AskBornNPC::set_msgnum(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.AskBornNPC.msgnum)
}

// optional int32 stepid = 2;
inline bool AskBornNPC::has_stepid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AskBornNPC::set_has_stepid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AskBornNPC::clear_has_stepid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AskBornNPC::clear_stepid() {
  stepid_ = 0;
  clear_has_stepid();
}
inline ::google::protobuf::int32 AskBornNPC::stepid() const {
  // @@protoc_insertion_point(field_get:GCToSS.AskBornNPC.stepid)
  return stepid_;
}
inline void AskBornNPC::set_stepid(::google::protobuf::int32 value) {
  set_has_stepid();
  stepid_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.AskBornNPC.stepid)
}

// optional int32 state = 3;
inline bool AskBornNPC::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AskBornNPC::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AskBornNPC::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AskBornNPC::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 AskBornNPC::state() const {
  // @@protoc_insertion_point(field_get:GCToSS.AskBornNPC.state)
  return state_;
}
inline void AskBornNPC::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.AskBornNPC.state)
}

// -------------------------------------------------------------------

// AlwaysAutoAtk

// optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskAlwaysAutoAtk];
inline bool AlwaysAutoAtk::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlwaysAutoAtk::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlwaysAutoAtk::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlwaysAutoAtk::clear_msgnum() {
  msgnum_ = 16410;
  clear_has_msgnum();
}
inline ::GCToSS::MsgNum AlwaysAutoAtk::msgnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.AlwaysAutoAtk.msgnum)
  return static_cast< ::GCToSS::MsgNum >(msgnum_);
}
inline void AlwaysAutoAtk::set_msgnum(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.AlwaysAutoAtk.msgnum)
}

// optional bool flag = 2;
inline bool AlwaysAutoAtk::has_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlwaysAutoAtk::set_has_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlwaysAutoAtk::clear_has_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlwaysAutoAtk::clear_flag() {
  flag_ = false;
  clear_has_flag();
}
inline bool AlwaysAutoAtk::flag() const {
  // @@protoc_insertion_point(field_get:GCToSS.AlwaysAutoAtk.flag)
  return flag_;
}
inline void AlwaysAutoAtk::set_flag(bool value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.AlwaysAutoAtk.flag)
}

// -------------------------------------------------------------------

// TrySeleceHero

// optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskTrySelectHero];
inline bool TrySeleceHero::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TrySeleceHero::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TrySeleceHero::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TrySeleceHero::clear_msgnum() {
  msgnum_ = 16505;
  clear_has_msgnum();
}
inline ::GCToSS::MsgNum TrySeleceHero::msgnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.TrySeleceHero.msgnum)
  return static_cast< ::GCToSS::MsgNum >(msgnum_);
}
inline void TrySeleceHero::set_msgnum(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.TrySeleceHero.msgnum)
}

// optional uint32 heroid = 2;
inline bool TrySeleceHero::has_heroid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TrySeleceHero::set_has_heroid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TrySeleceHero::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TrySeleceHero::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 TrySeleceHero::heroid() const {
  // @@protoc_insertion_point(field_get:GCToSS.TrySeleceHero.heroid)
  return heroid_;
}
inline void TrySeleceHero::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.TrySeleceHero.heroid)
}

// -------------------------------------------------------------------

// SelectHero

// optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskSelectHero];
inline bool SelectHero::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SelectHero::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SelectHero::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SelectHero::clear_msgnum() {
  msgnum_ = 16506;
  clear_has_msgnum();
}
inline ::GCToSS::MsgNum SelectHero::msgnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.SelectHero.msgnum)
  return static_cast< ::GCToSS::MsgNum >(msgnum_);
}
inline void SelectHero::set_msgnum(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.SelectHero.msgnum)
}

// optional int32 heroid = 2;
inline bool SelectHero::has_heroid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SelectHero::set_has_heroid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SelectHero::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SelectHero::clear_heroid() {
  heroid_ = 0;
  clear_has_heroid();
}
inline ::google::protobuf::int32 SelectHero::heroid() const {
  // @@protoc_insertion_point(field_get:GCToSS.SelectHero.heroid)
  return heroid_;
}
inline void SelectHero::set_heroid(::google::protobuf::int32 value) {
  set_has_heroid();
  heroid_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.SelectHero.heroid)
}

// -------------------------------------------------------------------

// SelectRunePage

// optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_AskSelectRunePage];
inline bool SelectRunePage::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SelectRunePage::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SelectRunePage::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SelectRunePage::clear_msgnum() {
  msgnum_ = 16507;
  clear_has_msgnum();
}
inline ::GCToSS::MsgNum SelectRunePage::msgnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.SelectRunePage.msgnum)
  return static_cast< ::GCToSS::MsgNum >(msgnum_);
}
inline void SelectRunePage::set_msgnum(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.SelectRunePage.msgnum)
}

// optional int32 pageindex = 2;
inline bool SelectRunePage::has_pageindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SelectRunePage::set_has_pageindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SelectRunePage::clear_has_pageindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SelectRunePage::clear_pageindex() {
  pageindex_ = 0;
  clear_has_pageindex();
}
inline ::google::protobuf::int32 SelectRunePage::pageindex() const {
  // @@protoc_insertion_point(field_get:GCToSS.SelectRunePage.pageindex)
  return pageindex_;
}
inline void SelectRunePage::set_pageindex(::google::protobuf::int32 value) {
  set_has_pageindex();
  pageindex_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.SelectRunePage.pageindex)
}

// -------------------------------------------------------------------

// LoadComplete

// optional .GCToSS.MsgNum msgnum = 1 [default = eMsgToGSToSSFromGC_ReportLoadBattleComplete];
inline bool LoadComplete::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoadComplete::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoadComplete::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoadComplete::clear_msgnum() {
  msgnum_ = 16520;
  clear_has_msgnum();
}
inline ::GCToSS::MsgNum LoadComplete::msgnum() const {
  // @@protoc_insertion_point(field_get:GCToSS.LoadComplete.msgnum)
  return static_cast< ::GCToSS::MsgNum >(msgnum_);
}
inline void LoadComplete::set_msgnum(::GCToSS::MsgNum value) {
  assert(::GCToSS::MsgNum_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GCToSS.LoadComplete.msgnum)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace GCToSS

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::GCToSS::AskSSGuideStepComp_edotype> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GCToSS::AskSSGuideStepComp_edotype>() {
  return ::GCToSS::AskSSGuideStepComp_edotype_descriptor();
}
template <> struct is_proto_enum< ::GCToSS::MsgNum> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GCToSS::MsgNum>() {
  return ::GCToSS::MsgNum_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GCToSS_2eproto__INCLUDED
