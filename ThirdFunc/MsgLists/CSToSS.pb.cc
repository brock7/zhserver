// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CSToSS.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CSToSS.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace CSToSS {

namespace {

const ::google::protobuf::Descriptor* SSGameFuncSwitch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SSGameFuncSwitch_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifySSGuideBattleEnd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifySSGuideBattleEnd_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReportSSMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReportSSMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* AskRegisteRet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AskRegisteRet_reflection_ = NULL;
const ::google::protobuf::Descriptor* AskRegisteRet_GSInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AskRegisteRet_GSInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* SUserNetInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SUserNetInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserInfo_SUserDBData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserInfo_SUserDBData_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserInfo_SUserDBData_SUserGuideSteps_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserInfo_SUserDBData_SUserGuideSteps_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* UserInfo_SUserDBData_EObjectType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* UserInfo_SUserDBData_EUserCate_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* UserInfo_SUserDBData_EUserPlatform_descriptor_ = NULL;
const ::google::protobuf::Descriptor* UserInfo_SUserRunesRuntimeData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserInfo_SUserRunesRuntimeData_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserRoomInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserRoomInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* OrderBeginNewBattle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OrderBeginNewBattle_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyBattleStateChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyBattleStateChange_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyUsetNetInfoChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyUsetNetInfoChange_reflection_ = NULL;
const ::google::protobuf::Descriptor* PingRet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PingRet_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyBuffCfgList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyBuffCfgList_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifySkillCfgList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifySkillCfgList_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyNPCCfgList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyNPCCfgList_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyHeroCfgList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyHeroCfgList_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyShopCfgList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyShopCfgList_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyGoodsCfgList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyGoodsCfgList_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyPublicLuaStr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyPublicLuaStr_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyRunesCfgList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyRunesCfgList_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyRunesSlotCfgList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyRunesSlotCfgList_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyWildMonsterCfgList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyWildMonsterCfgList_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyUserInfoChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyUserInfoChange_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyNewSkillCfgList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyNewSkillCfgList_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifySkillModelAccountCfgCfgList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifySkillModelAccountCfgCfgList_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifySkillModelRangeCfgList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifySkillModelRangeCfgList_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifySkillModelLeadingCfgList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifySkillModelLeadingCfgList_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifySkillModelEmitCfgList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifySkillModelEmitCfgList_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifySkillModelBufCfgList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifySkillModelBufCfgList_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifySkillModelSummonCfgList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifySkillModelSummonCfgList_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifySkillModelMoveCfgList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifySkillModelMoveCfgList_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifySkillModelSwitchCfgList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifySkillModelSwitchCfgList_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifySkillModelPurificationCfgList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifySkillModelPurificationCfgList_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifySkillModelLinkCfgList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifySkillModelLinkCfgList_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyPassitiveSkillCfgList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyPassitiveSkillCfgList_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyPassitiveEffectBloodSeekCfgList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyPassitiveEffectBloodSeekCfgList_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyPassitiveEffectReboundCfgList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyPassitiveEffectReboundCfgList_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyPassitiveEffectReliveCfgList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyPassitiveEffectReliveCfgList_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyRobotAICfgList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyRobotAICfgList_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyRobotAIPathCfgList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyRobotAIPathCfgList_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyOBUser_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyOBUser_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyOBUser_OBPosInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyOBUser_OBPosInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyUserReconnectGame_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyUserReconnectGame_reflection_ = NULL;
const ::google::protobuf::Descriptor* BattleKickOneUser_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BattleKickOneUser_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateBattle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateBattle_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateBattle_CreateBattleUserInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateBattle_CreateBattleUserInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateBattle_CreateBattleUserInfo_RunePage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateBattle_CreateBattleUserInfo_RunePage_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateBattle_AiRobotInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateBattle_AiRobotInfo_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CreateBattle_BattleType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* NotifyUserOnline_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyUserOnline_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyUserOffline_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyUserOffline_reflection_ = NULL;
const ::google::protobuf::Descriptor* FinishBattleResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FinishBattleResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgId_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_CSToSS_2eproto() {
  protobuf_AddDesc_CSToSS_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CSToSS.proto");
  GOOGLE_CHECK(file != NULL);
  SSGameFuncSwitch_descriptor_ = file->message_type(0);
  static const int SSGameFuncSwitch_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSGameFuncSwitch, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSGameFuncSwitch, log_witch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSGameFuncSwitch, gm_witch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSGameFuncSwitch, solderwitch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSGameFuncSwitch, monsterwitch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSGameFuncSwitch, altarsolderwitch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSGameFuncSwitch, logrefshtime_),
  };
  SSGameFuncSwitch_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SSGameFuncSwitch_descriptor_,
      SSGameFuncSwitch::default_instance_,
      SSGameFuncSwitch_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSGameFuncSwitch, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSGameFuncSwitch, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SSGameFuncSwitch));
  NotifySSGuideBattleEnd_descriptor_ = file->message_type(1);
  static const int NotifySSGuideBattleEnd_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySSGuideBattleEnd, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySSGuideBattleEnd, battleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySSGuideBattleEnd, guid_),
  };
  NotifySSGuideBattleEnd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifySSGuideBattleEnd_descriptor_,
      NotifySSGuideBattleEnd::default_instance_,
      NotifySSGuideBattleEnd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySSGuideBattleEnd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySSGuideBattleEnd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifySSGuideBattleEnd));
  ReportSSMsg_descriptor_ = file->message_type(2);
  static const int ReportSSMsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportSSMsg, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportSSMsg, battleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportSSMsg, othermsg_),
  };
  ReportSSMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReportSSMsg_descriptor_,
      ReportSSMsg::default_instance_,
      ReportSSMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportSSMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportSSMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReportSSMsg));
  AskRegisteRet_descriptor_ = file->message_type(3);
  static const int AskRegisteRet_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskRegisteRet, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskRegisteRet, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskRegisteRet, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskRegisteRet, basegsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskRegisteRet, gsinfo_),
  };
  AskRegisteRet_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AskRegisteRet_descriptor_,
      AskRegisteRet::default_instance_,
      AskRegisteRet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskRegisteRet, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskRegisteRet, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AskRegisteRet));
  AskRegisteRet_GSInfo_descriptor_ = AskRegisteRet_descriptor_->nested_type(0);
  static const int AskRegisteRet_GSInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskRegisteRet_GSInfo, gsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskRegisteRet_GSInfo, userpwd_),
  };
  AskRegisteRet_GSInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AskRegisteRet_GSInfo_descriptor_,
      AskRegisteRet_GSInfo::default_instance_,
      AskRegisteRet_GSInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskRegisteRet_GSInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskRegisteRet_GSInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AskRegisteRet_GSInfo));
  SUserNetInfo_descriptor_ = file->message_type(4);
  static const int SUserNetInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SUserNetInfo, n32gsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SUserNetInfo, n32gcnsid_),
  };
  SUserNetInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SUserNetInfo_descriptor_,
      SUserNetInfo::default_instance_,
      SUserNetInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SUserNetInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SUserNetInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SUserNetInfo));
  UserInfo_descriptor_ = file->message_type(5);
  static const int UserInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, usernetinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, userdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, herolist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, runesbag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, runesslot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, ifguide_),
  };
  UserInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserInfo_descriptor_,
      UserInfo::default_instance_,
      UserInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserInfo));
  UserInfo_SUserDBData_descriptor_ = UserInfo_descriptor_->nested_type(0);
  static const int UserInfo_SUserDBData_offsets_[30] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, eobjtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, un64objidx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, eusercate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, euserplatform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, szusername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, szuserpwd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, sznickname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, un32headerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, n8sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, n64score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, n64diamond_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, n64gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, tregisteutcmillisec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, tlastloginutcmillisec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, n32heronum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, n32runesslotopennum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, n32runesbagnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, n32runesslotnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, n32friendsnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, n32blacklistnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, un32totalgameinns_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, un32totalwininns_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, un32totalherokills_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, un32totaldestorybuildings_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, un32totaldeadtimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, un16userlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, un32usercurlvexp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, tlastfirstwintime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, mguidesteps_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, szfriends_),
  };
  UserInfo_SUserDBData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserInfo_SUserDBData_descriptor_,
      UserInfo_SUserDBData::default_instance_,
      UserInfo_SUserDBData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserInfo_SUserDBData));
  UserInfo_SUserDBData_SUserGuideSteps_descriptor_ = UserInfo_SUserDBData_descriptor_->nested_type(0);
  static const int UserInfo_SUserDBData_SUserGuideSteps_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData_SUserGuideSteps, szcscontinueguide_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData_SUserGuideSteps, szcsnocontinueguide_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData_SUserGuideSteps, szssguides_),
  };
  UserInfo_SUserDBData_SUserGuideSteps_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserInfo_SUserDBData_SUserGuideSteps_descriptor_,
      UserInfo_SUserDBData_SUserGuideSteps::default_instance_,
      UserInfo_SUserDBData_SUserGuideSteps_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData_SUserGuideSteps, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserDBData_SUserGuideSteps, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserInfo_SUserDBData_SUserGuideSteps));
  UserInfo_SUserDBData_EObjectType_descriptor_ = UserInfo_SUserDBData_descriptor_->enum_type(0);
  UserInfo_SUserDBData_EUserCate_descriptor_ = UserInfo_SUserDBData_descriptor_->enum_type(1);
  UserInfo_SUserDBData_EUserPlatform_descriptor_ = UserInfo_SUserDBData_descriptor_->enum_type(2);
  UserInfo_SUserRunesRuntimeData_descriptor_ = UserInfo_descriptor_->nested_type(1);
  static const int UserInfo_SUserRunesRuntimeData_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserRunesRuntimeData, un32runestypeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserRunesRuntimeData, n16pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserRunesRuntimeData, n16num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserRunesRuntimeData, n16remaintimes_),
  };
  UserInfo_SUserRunesRuntimeData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserInfo_SUserRunesRuntimeData_descriptor_,
      UserInfo_SUserRunesRuntimeData::default_instance_,
      UserInfo_SUserRunesRuntimeData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserRunesRuntimeData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_SUserRunesRuntimeData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserInfo_SUserRunesRuntimeData));
  UserRoomInfo_descriptor_ = file->message_type(6);
  static const int UserRoomInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRoomInfo, ifmaster_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRoomInfo, heroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRoomInfo, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRoomInfo, pos_),
  };
  UserRoomInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserRoomInfo_descriptor_,
      UserRoomInfo::default_instance_,
      UserRoomInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRoomInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRoomInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserRoomInfo));
  OrderBeginNewBattle_descriptor_ = file->message_type(7);
  static const int OrderBeginNewBattle_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderBeginNewBattle, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderBeginNewBattle, battleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderBeginNewBattle, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderBeginNewBattle, mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderBeginNewBattle, ssid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderBeginNewBattle, userroominfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderBeginNewBattle, userinfo_),
  };
  OrderBeginNewBattle_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OrderBeginNewBattle_descriptor_,
      OrderBeginNewBattle::default_instance_,
      OrderBeginNewBattle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderBeginNewBattle, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderBeginNewBattle, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OrderBeginNewBattle));
  NotifyBattleStateChange_descriptor_ = file->message_type(8);
  static const int NotifyBattleStateChange_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyBattleStateChange, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyBattleStateChange, battleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyBattleStateChange, state_),
  };
  NotifyBattleStateChange_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyBattleStateChange_descriptor_,
      NotifyBattleStateChange::default_instance_,
      NotifyBattleStateChange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyBattleStateChange, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyBattleStateChange, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyBattleStateChange));
  NotifyUsetNetInfoChange_descriptor_ = file->message_type(9);
  static const int NotifyUsetNetInfoChange_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyUsetNetInfoChange, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyUsetNetInfoChange, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyUsetNetInfoChange, netinfo_),
  };
  NotifyUsetNetInfoChange_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyUsetNetInfoChange_descriptor_,
      NotifyUsetNetInfoChange::default_instance_,
      NotifyUsetNetInfoChange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyUsetNetInfoChange, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyUsetNetInfoChange, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyUsetNetInfoChange));
  PingRet_descriptor_ = file->message_type(10);
  static const int PingRet_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingRet, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingRet, time_),
  };
  PingRet_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PingRet_descriptor_,
      PingRet::default_instance_,
      PingRet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingRet, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingRet, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PingRet));
  NotifyBuffCfgList_descriptor_ = file->message_type(11);
  static const int NotifyBuffCfgList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyBuffCfgList, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyBuffCfgList, time_),
  };
  NotifyBuffCfgList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyBuffCfgList_descriptor_,
      NotifyBuffCfgList::default_instance_,
      NotifyBuffCfgList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyBuffCfgList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyBuffCfgList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyBuffCfgList));
  NotifySkillCfgList_descriptor_ = file->message_type(12);
  static const int NotifySkillCfgList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillCfgList, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillCfgList, time_),
  };
  NotifySkillCfgList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifySkillCfgList_descriptor_,
      NotifySkillCfgList::default_instance_,
      NotifySkillCfgList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillCfgList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillCfgList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifySkillCfgList));
  NotifyNPCCfgList_descriptor_ = file->message_type(13);
  static const int NotifyNPCCfgList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyNPCCfgList, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyNPCCfgList, cfg_),
  };
  NotifyNPCCfgList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyNPCCfgList_descriptor_,
      NotifyNPCCfgList::default_instance_,
      NotifyNPCCfgList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyNPCCfgList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyNPCCfgList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyNPCCfgList));
  NotifyHeroCfgList_descriptor_ = file->message_type(14);
  static const int NotifyHeroCfgList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyHeroCfgList, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyHeroCfgList, cfg_),
  };
  NotifyHeroCfgList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyHeroCfgList_descriptor_,
      NotifyHeroCfgList::default_instance_,
      NotifyHeroCfgList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyHeroCfgList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyHeroCfgList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyHeroCfgList));
  NotifyShopCfgList_descriptor_ = file->message_type(15);
  static const int NotifyShopCfgList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyShopCfgList, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyShopCfgList, cfg_),
  };
  NotifyShopCfgList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyShopCfgList_descriptor_,
      NotifyShopCfgList::default_instance_,
      NotifyShopCfgList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyShopCfgList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyShopCfgList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyShopCfgList));
  NotifyGoodsCfgList_descriptor_ = file->message_type(16);
  static const int NotifyGoodsCfgList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyGoodsCfgList, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyGoodsCfgList, cfg_),
  };
  NotifyGoodsCfgList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyGoodsCfgList_descriptor_,
      NotifyGoodsCfgList::default_instance_,
      NotifyGoodsCfgList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyGoodsCfgList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyGoodsCfgList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyGoodsCfgList));
  NotifyPublicLuaStr_descriptor_ = file->message_type(17);
  static const int NotifyPublicLuaStr_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPublicLuaStr, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPublicLuaStr, cfg_),
  };
  NotifyPublicLuaStr_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyPublicLuaStr_descriptor_,
      NotifyPublicLuaStr::default_instance_,
      NotifyPublicLuaStr_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPublicLuaStr, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPublicLuaStr, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyPublicLuaStr));
  NotifyRunesCfgList_descriptor_ = file->message_type(18);
  static const int NotifyRunesCfgList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRunesCfgList, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRunesCfgList, cfg_),
  };
  NotifyRunesCfgList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyRunesCfgList_descriptor_,
      NotifyRunesCfgList::default_instance_,
      NotifyRunesCfgList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRunesCfgList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRunesCfgList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyRunesCfgList));
  NotifyRunesSlotCfgList_descriptor_ = file->message_type(19);
  static const int NotifyRunesSlotCfgList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRunesSlotCfgList, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRunesSlotCfgList, cfg_),
  };
  NotifyRunesSlotCfgList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyRunesSlotCfgList_descriptor_,
      NotifyRunesSlotCfgList::default_instance_,
      NotifyRunesSlotCfgList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRunesSlotCfgList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRunesSlotCfgList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyRunesSlotCfgList));
  NotifyWildMonsterCfgList_descriptor_ = file->message_type(20);
  static const int NotifyWildMonsterCfgList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyWildMonsterCfgList, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyWildMonsterCfgList, cfg_),
  };
  NotifyWildMonsterCfgList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyWildMonsterCfgList_descriptor_,
      NotifyWildMonsterCfgList::default_instance_,
      NotifyWildMonsterCfgList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyWildMonsterCfgList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyWildMonsterCfgList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyWildMonsterCfgList));
  NotifyUserInfoChange_descriptor_ = file->message_type(21);
  static const int NotifyUserInfoChange_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyUserInfoChange, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyUserInfoChange, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyUserInfoChange, gold_),
  };
  NotifyUserInfoChange_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyUserInfoChange_descriptor_,
      NotifyUserInfoChange::default_instance_,
      NotifyUserInfoChange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyUserInfoChange, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyUserInfoChange, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyUserInfoChange));
  NotifyNewSkillCfgList_descriptor_ = file->message_type(22);
  static const int NotifyNewSkillCfgList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyNewSkillCfgList, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyNewSkillCfgList, cfg_),
  };
  NotifyNewSkillCfgList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyNewSkillCfgList_descriptor_,
      NotifyNewSkillCfgList::default_instance_,
      NotifyNewSkillCfgList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyNewSkillCfgList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyNewSkillCfgList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyNewSkillCfgList));
  NotifySkillModelAccountCfgCfgList_descriptor_ = file->message_type(23);
  static const int NotifySkillModelAccountCfgCfgList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelAccountCfgCfgList, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelAccountCfgCfgList, cfg_),
  };
  NotifySkillModelAccountCfgCfgList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifySkillModelAccountCfgCfgList_descriptor_,
      NotifySkillModelAccountCfgCfgList::default_instance_,
      NotifySkillModelAccountCfgCfgList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelAccountCfgCfgList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelAccountCfgCfgList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifySkillModelAccountCfgCfgList));
  NotifySkillModelRangeCfgList_descriptor_ = file->message_type(24);
  static const int NotifySkillModelRangeCfgList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelRangeCfgList, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelRangeCfgList, cfg_),
  };
  NotifySkillModelRangeCfgList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifySkillModelRangeCfgList_descriptor_,
      NotifySkillModelRangeCfgList::default_instance_,
      NotifySkillModelRangeCfgList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelRangeCfgList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelRangeCfgList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifySkillModelRangeCfgList));
  NotifySkillModelLeadingCfgList_descriptor_ = file->message_type(25);
  static const int NotifySkillModelLeadingCfgList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelLeadingCfgList, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelLeadingCfgList, cfg_),
  };
  NotifySkillModelLeadingCfgList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifySkillModelLeadingCfgList_descriptor_,
      NotifySkillModelLeadingCfgList::default_instance_,
      NotifySkillModelLeadingCfgList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelLeadingCfgList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelLeadingCfgList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifySkillModelLeadingCfgList));
  NotifySkillModelEmitCfgList_descriptor_ = file->message_type(26);
  static const int NotifySkillModelEmitCfgList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelEmitCfgList, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelEmitCfgList, cfg_),
  };
  NotifySkillModelEmitCfgList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifySkillModelEmitCfgList_descriptor_,
      NotifySkillModelEmitCfgList::default_instance_,
      NotifySkillModelEmitCfgList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelEmitCfgList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelEmitCfgList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifySkillModelEmitCfgList));
  NotifySkillModelBufCfgList_descriptor_ = file->message_type(27);
  static const int NotifySkillModelBufCfgList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelBufCfgList, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelBufCfgList, cfg_),
  };
  NotifySkillModelBufCfgList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifySkillModelBufCfgList_descriptor_,
      NotifySkillModelBufCfgList::default_instance_,
      NotifySkillModelBufCfgList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelBufCfgList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelBufCfgList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifySkillModelBufCfgList));
  NotifySkillModelSummonCfgList_descriptor_ = file->message_type(28);
  static const int NotifySkillModelSummonCfgList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelSummonCfgList, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelSummonCfgList, cfg_),
  };
  NotifySkillModelSummonCfgList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifySkillModelSummonCfgList_descriptor_,
      NotifySkillModelSummonCfgList::default_instance_,
      NotifySkillModelSummonCfgList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelSummonCfgList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelSummonCfgList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifySkillModelSummonCfgList));
  NotifySkillModelMoveCfgList_descriptor_ = file->message_type(29);
  static const int NotifySkillModelMoveCfgList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelMoveCfgList, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelMoveCfgList, cfg_),
  };
  NotifySkillModelMoveCfgList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifySkillModelMoveCfgList_descriptor_,
      NotifySkillModelMoveCfgList::default_instance_,
      NotifySkillModelMoveCfgList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelMoveCfgList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelMoveCfgList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifySkillModelMoveCfgList));
  NotifySkillModelSwitchCfgList_descriptor_ = file->message_type(30);
  static const int NotifySkillModelSwitchCfgList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelSwitchCfgList, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelSwitchCfgList, cfg_),
  };
  NotifySkillModelSwitchCfgList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifySkillModelSwitchCfgList_descriptor_,
      NotifySkillModelSwitchCfgList::default_instance_,
      NotifySkillModelSwitchCfgList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelSwitchCfgList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelSwitchCfgList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifySkillModelSwitchCfgList));
  NotifySkillModelPurificationCfgList_descriptor_ = file->message_type(31);
  static const int NotifySkillModelPurificationCfgList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelPurificationCfgList, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelPurificationCfgList, cfg_),
  };
  NotifySkillModelPurificationCfgList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifySkillModelPurificationCfgList_descriptor_,
      NotifySkillModelPurificationCfgList::default_instance_,
      NotifySkillModelPurificationCfgList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelPurificationCfgList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelPurificationCfgList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifySkillModelPurificationCfgList));
  NotifySkillModelLinkCfgList_descriptor_ = file->message_type(32);
  static const int NotifySkillModelLinkCfgList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelLinkCfgList, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelLinkCfgList, cfg_),
  };
  NotifySkillModelLinkCfgList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifySkillModelLinkCfgList_descriptor_,
      NotifySkillModelLinkCfgList::default_instance_,
      NotifySkillModelLinkCfgList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelLinkCfgList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifySkillModelLinkCfgList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifySkillModelLinkCfgList));
  NotifyPassitiveSkillCfgList_descriptor_ = file->message_type(33);
  static const int NotifyPassitiveSkillCfgList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPassitiveSkillCfgList, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPassitiveSkillCfgList, cfg_),
  };
  NotifyPassitiveSkillCfgList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyPassitiveSkillCfgList_descriptor_,
      NotifyPassitiveSkillCfgList::default_instance_,
      NotifyPassitiveSkillCfgList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPassitiveSkillCfgList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPassitiveSkillCfgList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyPassitiveSkillCfgList));
  NotifyPassitiveEffectBloodSeekCfgList_descriptor_ = file->message_type(34);
  static const int NotifyPassitiveEffectBloodSeekCfgList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPassitiveEffectBloodSeekCfgList, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPassitiveEffectBloodSeekCfgList, cfg_),
  };
  NotifyPassitiveEffectBloodSeekCfgList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyPassitiveEffectBloodSeekCfgList_descriptor_,
      NotifyPassitiveEffectBloodSeekCfgList::default_instance_,
      NotifyPassitiveEffectBloodSeekCfgList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPassitiveEffectBloodSeekCfgList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPassitiveEffectBloodSeekCfgList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyPassitiveEffectBloodSeekCfgList));
  NotifyPassitiveEffectReboundCfgList_descriptor_ = file->message_type(35);
  static const int NotifyPassitiveEffectReboundCfgList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPassitiveEffectReboundCfgList, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPassitiveEffectReboundCfgList, cfg_),
  };
  NotifyPassitiveEffectReboundCfgList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyPassitiveEffectReboundCfgList_descriptor_,
      NotifyPassitiveEffectReboundCfgList::default_instance_,
      NotifyPassitiveEffectReboundCfgList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPassitiveEffectReboundCfgList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPassitiveEffectReboundCfgList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyPassitiveEffectReboundCfgList));
  NotifyPassitiveEffectReliveCfgList_descriptor_ = file->message_type(36);
  static const int NotifyPassitiveEffectReliveCfgList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPassitiveEffectReliveCfgList, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPassitiveEffectReliveCfgList, cfg_),
  };
  NotifyPassitiveEffectReliveCfgList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyPassitiveEffectReliveCfgList_descriptor_,
      NotifyPassitiveEffectReliveCfgList::default_instance_,
      NotifyPassitiveEffectReliveCfgList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPassitiveEffectReliveCfgList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPassitiveEffectReliveCfgList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyPassitiveEffectReliveCfgList));
  NotifyRobotAICfgList_descriptor_ = file->message_type(37);
  static const int NotifyRobotAICfgList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRobotAICfgList, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRobotAICfgList, cfg_),
  };
  NotifyRobotAICfgList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyRobotAICfgList_descriptor_,
      NotifyRobotAICfgList::default_instance_,
      NotifyRobotAICfgList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRobotAICfgList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRobotAICfgList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyRobotAICfgList));
  NotifyRobotAIPathCfgList_descriptor_ = file->message_type(38);
  static const int NotifyRobotAIPathCfgList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRobotAIPathCfgList, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRobotAIPathCfgList, cfg_),
  };
  NotifyRobotAIPathCfgList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyRobotAIPathCfgList_descriptor_,
      NotifyRobotAIPathCfgList::default_instance_,
      NotifyRobotAIPathCfgList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRobotAIPathCfgList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRobotAIPathCfgList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyRobotAIPathCfgList));
  NotifyOBUser_descriptor_ = file->message_type(39);
  static const int NotifyOBUser_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyOBUser, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyOBUser, obinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyOBUser, battleid_),
  };
  NotifyOBUser_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyOBUser_descriptor_,
      NotifyOBUser::default_instance_,
      NotifyOBUser_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyOBUser, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyOBUser, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyOBUser));
  NotifyOBUser_OBPosInfo_descriptor_ = NotifyOBUser_descriptor_->nested_type(0);
  static const int NotifyOBUser_OBPosInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyOBUser_OBPosInfo, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyOBUser_OBPosInfo, guid_),
  };
  NotifyOBUser_OBPosInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyOBUser_OBPosInfo_descriptor_,
      NotifyOBUser_OBPosInfo::default_instance_,
      NotifyOBUser_OBPosInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyOBUser_OBPosInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyOBUser_OBPosInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyOBUser_OBPosInfo));
  NotifyUserReconnectGame_descriptor_ = file->message_type(40);
  static const int NotifyUserReconnectGame_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyUserReconnectGame, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyUserReconnectGame, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyUserReconnectGame, battleid_),
  };
  NotifyUserReconnectGame_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyUserReconnectGame_descriptor_,
      NotifyUserReconnectGame::default_instance_,
      NotifyUserReconnectGame_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyUserReconnectGame, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyUserReconnectGame, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyUserReconnectGame));
  BattleKickOneUser_descriptor_ = file->message_type(41);
  static const int BattleKickOneUser_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleKickOneUser, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleKickOneUser, battleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleKickOneUser, userkey_),
  };
  BattleKickOneUser_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BattleKickOneUser_descriptor_,
      BattleKickOneUser::default_instance_,
      BattleKickOneUser_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleKickOneUser, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleKickOneUser, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BattleKickOneUser));
  CreateBattle_descriptor_ = file->message_type(42);
  static const int CreateBattle_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle, battleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle, mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle, battletype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle, userinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle, airobotlist_),
  };
  CreateBattle_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateBattle_descriptor_,
      CreateBattle::default_instance_,
      CreateBattle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateBattle));
  CreateBattle_CreateBattleUserInfo_descriptor_ = CreateBattle_descriptor_->nested_type(0);
  static const int CreateBattle_CreateBattleUserInfo_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_CreateBattleUserInfo, usernetinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_CreateBattleUserInfo, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_CreateBattleUserInfo, seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_CreateBattleUserInfo, grpid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_CreateBattleUserInfo, nickname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_CreateBattleUserInfo, diamond_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_CreateBattleUserInfo, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_CreateBattleUserInfo, viplv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_CreateBattleUserInfo, ifob_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_CreateBattleUserInfo, ifgm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_CreateBattleUserInfo, canuseherolist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_CreateBattleUserInfo, runepages_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_CreateBattleUserInfo, ifairobot_),
  };
  CreateBattle_CreateBattleUserInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateBattle_CreateBattleUserInfo_descriptor_,
      CreateBattle_CreateBattleUserInfo::default_instance_,
      CreateBattle_CreateBattleUserInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_CreateBattleUserInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_CreateBattleUserInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateBattle_CreateBattleUserInfo));
  CreateBattle_CreateBattleUserInfo_RunePage_descriptor_ = CreateBattle_CreateBattleUserInfo_descriptor_->nested_type(0);
  static const int CreateBattle_CreateBattleUserInfo_RunePage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_CreateBattleUserInfo_RunePage, runepage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_CreateBattleUserInfo_RunePage, runeeffects_),
  };
  CreateBattle_CreateBattleUserInfo_RunePage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateBattle_CreateBattleUserInfo_RunePage_descriptor_,
      CreateBattle_CreateBattleUserInfo_RunePage::default_instance_,
      CreateBattle_CreateBattleUserInfo_RunePage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_CreateBattleUserInfo_RunePage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_CreateBattleUserInfo_RunePage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateBattle_CreateBattleUserInfo_RunePage));
  CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo_descriptor_ = CreateBattle_CreateBattleUserInfo_RunePage_descriptor_->nested_type(0);
  static const int CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo, effectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo, effectname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo, effectvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo, effectper_),
  };
  CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo_descriptor_,
      CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::default_instance_,
      CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo));
  CreateBattle_AiRobotInfo_descriptor_ = CreateBattle_descriptor_->nested_type(1);
  static const int CreateBattle_AiRobotInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_AiRobotInfo, seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_AiRobotInfo, aitype_),
  };
  CreateBattle_AiRobotInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateBattle_AiRobotInfo_descriptor_,
      CreateBattle_AiRobotInfo::default_instance_,
      CreateBattle_AiRobotInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_AiRobotInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBattle_AiRobotInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateBattle_AiRobotInfo));
  CreateBattle_BattleType_descriptor_ = CreateBattle_descriptor_->enum_type(0);
  NotifyUserOnline_descriptor_ = file->message_type(43);
  static const int NotifyUserOnline_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyUserOnline, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyUserOnline, battleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyUserOnline, userguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyUserOnline, usernetinfo_),
  };
  NotifyUserOnline_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyUserOnline_descriptor_,
      NotifyUserOnline::default_instance_,
      NotifyUserOnline_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyUserOnline, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyUserOnline, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyUserOnline));
  NotifyUserOffline_descriptor_ = file->message_type(44);
  static const int NotifyUserOffline_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyUserOffline, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyUserOffline, battleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyUserOffline, userguid_),
  };
  NotifyUserOffline_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyUserOffline_descriptor_,
      NotifyUserOffline::default_instance_,
      NotifyUserOffline_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyUserOffline, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyUserOffline, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyUserOffline));
  FinishBattleResponse_descriptor_ = file->message_type(45);
  static const int FinishBattleResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishBattleResponse, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishBattleResponse, battleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishBattleResponse, rst_),
  };
  FinishBattleResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FinishBattleResponse_descriptor_,
      FinishBattleResponse::default_instance_,
      FinishBattleResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishBattleResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishBattleResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FinishBattleResponse));
  MsgId_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CSToSS_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SSGameFuncSwitch_descriptor_, &SSGameFuncSwitch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifySSGuideBattleEnd_descriptor_, &NotifySSGuideBattleEnd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReportSSMsg_descriptor_, &ReportSSMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AskRegisteRet_descriptor_, &AskRegisteRet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AskRegisteRet_GSInfo_descriptor_, &AskRegisteRet_GSInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SUserNetInfo_descriptor_, &SUserNetInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserInfo_descriptor_, &UserInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserInfo_SUserDBData_descriptor_, &UserInfo_SUserDBData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserInfo_SUserDBData_SUserGuideSteps_descriptor_, &UserInfo_SUserDBData_SUserGuideSteps::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserInfo_SUserRunesRuntimeData_descriptor_, &UserInfo_SUserRunesRuntimeData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserRoomInfo_descriptor_, &UserRoomInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OrderBeginNewBattle_descriptor_, &OrderBeginNewBattle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyBattleStateChange_descriptor_, &NotifyBattleStateChange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyUsetNetInfoChange_descriptor_, &NotifyUsetNetInfoChange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PingRet_descriptor_, &PingRet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyBuffCfgList_descriptor_, &NotifyBuffCfgList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifySkillCfgList_descriptor_, &NotifySkillCfgList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyNPCCfgList_descriptor_, &NotifyNPCCfgList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyHeroCfgList_descriptor_, &NotifyHeroCfgList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyShopCfgList_descriptor_, &NotifyShopCfgList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyGoodsCfgList_descriptor_, &NotifyGoodsCfgList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyPublicLuaStr_descriptor_, &NotifyPublicLuaStr::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyRunesCfgList_descriptor_, &NotifyRunesCfgList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyRunesSlotCfgList_descriptor_, &NotifyRunesSlotCfgList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyWildMonsterCfgList_descriptor_, &NotifyWildMonsterCfgList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyUserInfoChange_descriptor_, &NotifyUserInfoChange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyNewSkillCfgList_descriptor_, &NotifyNewSkillCfgList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifySkillModelAccountCfgCfgList_descriptor_, &NotifySkillModelAccountCfgCfgList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifySkillModelRangeCfgList_descriptor_, &NotifySkillModelRangeCfgList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifySkillModelLeadingCfgList_descriptor_, &NotifySkillModelLeadingCfgList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifySkillModelEmitCfgList_descriptor_, &NotifySkillModelEmitCfgList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifySkillModelBufCfgList_descriptor_, &NotifySkillModelBufCfgList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifySkillModelSummonCfgList_descriptor_, &NotifySkillModelSummonCfgList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifySkillModelMoveCfgList_descriptor_, &NotifySkillModelMoveCfgList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifySkillModelSwitchCfgList_descriptor_, &NotifySkillModelSwitchCfgList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifySkillModelPurificationCfgList_descriptor_, &NotifySkillModelPurificationCfgList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifySkillModelLinkCfgList_descriptor_, &NotifySkillModelLinkCfgList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyPassitiveSkillCfgList_descriptor_, &NotifyPassitiveSkillCfgList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyPassitiveEffectBloodSeekCfgList_descriptor_, &NotifyPassitiveEffectBloodSeekCfgList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyPassitiveEffectReboundCfgList_descriptor_, &NotifyPassitiveEffectReboundCfgList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyPassitiveEffectReliveCfgList_descriptor_, &NotifyPassitiveEffectReliveCfgList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyRobotAICfgList_descriptor_, &NotifyRobotAICfgList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyRobotAIPathCfgList_descriptor_, &NotifyRobotAIPathCfgList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyOBUser_descriptor_, &NotifyOBUser::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyOBUser_OBPosInfo_descriptor_, &NotifyOBUser_OBPosInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyUserReconnectGame_descriptor_, &NotifyUserReconnectGame::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BattleKickOneUser_descriptor_, &BattleKickOneUser::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateBattle_descriptor_, &CreateBattle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateBattle_CreateBattleUserInfo_descriptor_, &CreateBattle_CreateBattleUserInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateBattle_CreateBattleUserInfo_RunePage_descriptor_, &CreateBattle_CreateBattleUserInfo_RunePage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo_descriptor_, &CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateBattle_AiRobotInfo_descriptor_, &CreateBattle_AiRobotInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyUserOnline_descriptor_, &NotifyUserOnline::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyUserOffline_descriptor_, &NotifyUserOffline::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FinishBattleResponse_descriptor_, &FinishBattleResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CSToSS_2eproto() {
  delete SSGameFuncSwitch::default_instance_;
  delete SSGameFuncSwitch_reflection_;
  delete NotifySSGuideBattleEnd::default_instance_;
  delete NotifySSGuideBattleEnd_reflection_;
  delete ReportSSMsg::default_instance_;
  delete ReportSSMsg_reflection_;
  delete AskRegisteRet::default_instance_;
  delete AskRegisteRet_reflection_;
  delete AskRegisteRet_GSInfo::default_instance_;
  delete AskRegisteRet_GSInfo_reflection_;
  delete SUserNetInfo::default_instance_;
  delete SUserNetInfo_reflection_;
  delete UserInfo::default_instance_;
  delete UserInfo_reflection_;
  delete UserInfo_SUserDBData::default_instance_;
  delete UserInfo_SUserDBData_reflection_;
  delete UserInfo_SUserDBData_SUserGuideSteps::default_instance_;
  delete UserInfo_SUserDBData_SUserGuideSteps_reflection_;
  delete UserInfo_SUserRunesRuntimeData::default_instance_;
  delete UserInfo_SUserRunesRuntimeData_reflection_;
  delete UserRoomInfo::default_instance_;
  delete UserRoomInfo_reflection_;
  delete OrderBeginNewBattle::default_instance_;
  delete OrderBeginNewBattle_reflection_;
  delete NotifyBattleStateChange::default_instance_;
  delete NotifyBattleStateChange_reflection_;
  delete NotifyUsetNetInfoChange::default_instance_;
  delete NotifyUsetNetInfoChange_reflection_;
  delete PingRet::default_instance_;
  delete PingRet_reflection_;
  delete NotifyBuffCfgList::default_instance_;
  delete NotifyBuffCfgList_reflection_;
  delete NotifySkillCfgList::default_instance_;
  delete NotifySkillCfgList_reflection_;
  delete NotifyNPCCfgList::default_instance_;
  delete NotifyNPCCfgList_reflection_;
  delete NotifyHeroCfgList::default_instance_;
  delete NotifyHeroCfgList_reflection_;
  delete NotifyShopCfgList::default_instance_;
  delete NotifyShopCfgList_reflection_;
  delete NotifyGoodsCfgList::default_instance_;
  delete NotifyGoodsCfgList_reflection_;
  delete NotifyPublicLuaStr::default_instance_;
  delete NotifyPublicLuaStr_reflection_;
  delete NotifyRunesCfgList::default_instance_;
  delete NotifyRunesCfgList_reflection_;
  delete NotifyRunesSlotCfgList::default_instance_;
  delete NotifyRunesSlotCfgList_reflection_;
  delete NotifyWildMonsterCfgList::default_instance_;
  delete NotifyWildMonsterCfgList_reflection_;
  delete NotifyUserInfoChange::default_instance_;
  delete NotifyUserInfoChange_reflection_;
  delete NotifyNewSkillCfgList::default_instance_;
  delete NotifyNewSkillCfgList_reflection_;
  delete NotifySkillModelAccountCfgCfgList::default_instance_;
  delete NotifySkillModelAccountCfgCfgList_reflection_;
  delete NotifySkillModelRangeCfgList::default_instance_;
  delete NotifySkillModelRangeCfgList_reflection_;
  delete NotifySkillModelLeadingCfgList::default_instance_;
  delete NotifySkillModelLeadingCfgList_reflection_;
  delete NotifySkillModelEmitCfgList::default_instance_;
  delete NotifySkillModelEmitCfgList_reflection_;
  delete NotifySkillModelBufCfgList::default_instance_;
  delete NotifySkillModelBufCfgList_reflection_;
  delete NotifySkillModelSummonCfgList::default_instance_;
  delete NotifySkillModelSummonCfgList_reflection_;
  delete NotifySkillModelMoveCfgList::default_instance_;
  delete NotifySkillModelMoveCfgList_reflection_;
  delete NotifySkillModelSwitchCfgList::default_instance_;
  delete NotifySkillModelSwitchCfgList_reflection_;
  delete NotifySkillModelPurificationCfgList::default_instance_;
  delete NotifySkillModelPurificationCfgList_reflection_;
  delete NotifySkillModelLinkCfgList::default_instance_;
  delete NotifySkillModelLinkCfgList_reflection_;
  delete NotifyPassitiveSkillCfgList::default_instance_;
  delete NotifyPassitiveSkillCfgList_reflection_;
  delete NotifyPassitiveEffectBloodSeekCfgList::default_instance_;
  delete NotifyPassitiveEffectBloodSeekCfgList_reflection_;
  delete NotifyPassitiveEffectReboundCfgList::default_instance_;
  delete NotifyPassitiveEffectReboundCfgList_reflection_;
  delete NotifyPassitiveEffectReliveCfgList::default_instance_;
  delete NotifyPassitiveEffectReliveCfgList_reflection_;
  delete NotifyRobotAICfgList::default_instance_;
  delete NotifyRobotAICfgList_reflection_;
  delete NotifyRobotAIPathCfgList::default_instance_;
  delete NotifyRobotAIPathCfgList_reflection_;
  delete NotifyOBUser::default_instance_;
  delete NotifyOBUser_reflection_;
  delete NotifyOBUser_OBPosInfo::default_instance_;
  delete NotifyOBUser_OBPosInfo_reflection_;
  delete NotifyUserReconnectGame::default_instance_;
  delete NotifyUserReconnectGame_reflection_;
  delete BattleKickOneUser::default_instance_;
  delete BattleKickOneUser_reflection_;
  delete CreateBattle::default_instance_;
  delete CreateBattle_reflection_;
  delete CreateBattle_CreateBattleUserInfo::default_instance_;
  delete CreateBattle_CreateBattleUserInfo_reflection_;
  delete CreateBattle_CreateBattleUserInfo_RunePage::default_instance_;
  delete CreateBattle_CreateBattleUserInfo_RunePage_reflection_;
  delete CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::default_instance_;
  delete CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo_reflection_;
  delete CreateBattle_AiRobotInfo::default_instance_;
  delete CreateBattle_AiRobotInfo_reflection_;
  delete NotifyUserOnline::default_instance_;
  delete NotifyUserOnline_reflection_;
  delete NotifyUserOffline::default_instance_;
  delete NotifyUserOffline_reflection_;
  delete FinishBattleResponse::default_instance_;
  delete FinishBattleResponse_reflection_;
}

void protobuf_AddDesc_CSToSS_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014CSToSS.proto\022\006CSToSS\"\323\001\n\020SSGameFuncSwi"
    "tch\022\?\n\005msgid\030\001 \001(\0162\r.CSToSS.MsgId:!eMsgT"
    "oSSFromCS_NotifySSGameSwitch\022\021\n\tlog_witc"
    "h\030\002 \001(\r\022\020\n\010gm_witch\030\003 \001(\r\022\023\n\013solderwitch"
    "\030\004 \001(\r\022\024\n\014monsterwitch\030\005 \001(\r\022\030\n\020altarsol"
    "derwitch\030\006 \001(\r\022\024\n\014logrefshtime\030\007 \001(\r\"}\n\026"
    "NotifySSGuideBattleEnd\022C\n\005msgid\030\001 \001(\0162\r."
    "CSToSS.MsgId:%eMsgToSSFromCS_NotifySSGui"
    "deBattleEnd\022\020\n\010battleid\030\002 \001(\004\022\014\n\004guid\030\003 "
    "\001(\004\"k\n\013ReportSSMsg\0228\n\005msgid\030\001 \001(\0162\r.CSTo"
    "SS.MsgId:\032eMsgToSSFromCS_ReportSSMsg\022\020\n\010"
    "battleid\030\002 \001(\004\022\020\n\010othermsg\030\003 \001(\t\"\317\001\n\rAsk"
    "RegisteRet\022:\n\005msgid\030\001 \001(\0162\r.CSToSS.MsgId"
    ":\034eMsgToSSFromCS_AskRegisteRet\022\013\n\003ret\030\002 "
    "\001(\005\022\014\n\004time\030\003 \001(\003\022\020\n\010basegsid\030\004 \001(\005\022,\n\006g"
    "sinfo\030\005 \003(\0132\034.CSToSS.AskRegisteRet.GSInf"
    "o\032\'\n\006GSInfo\022\014\n\004gsid\030\001 \001(\005\022\017\n\007userpwd\030\002 \001"
    "(\t\"2\n\014SUserNetInfo\022\017\n\007n32GSID\030\001 \001(\005\022\021\n\tn"
    "32GCNSID\030\002 \001(\005\"\354\r\n\010UserInfo\022)\n\013usernetin"
    "fo\030\002 \001(\0132\024.CSToSS.SUserNetInfo\022.\n\010userda"
    "ta\030\003 \001(\0132\034.CSToSS.UserInfo.SUserDBData\022\020"
    "\n\010herolist\030\004 \003(\005\0228\n\010RunesBag\030\005 \003(\0132&.CST"
    "oSS.UserInfo.SUserRunesRuntimeData\0229\n\tRu"
    "nesSlot\030\006 \003(\0132&.CSToSS.UserInfo.SUserRun"
    "esRuntimeData\022\017\n\007ifGuide\030\007 \001(\010\032\202\013\n\013SUser"
    "DBData\022:\n\010eObjType\030\001 \001(\0162(.CSToSS.UserIn"
    "fo.SUserDBData.EObjectType\022\022\n\nun64ObjIdx"
    "\030\002 \001(\003\0229\n\teUserCate\030\003 \001(\0162&.CSToSS.UserI"
    "nfo.SUserDBData.EUserCate\022A\n\reUserPlatfo"
    "rm\030\004 \001(\0162*.CSToSS.UserInfo.SUserDBData.E"
    "UserPlatform\022\022\n\nszUserName\030\005 \001(\t\022\021\n\tszUs"
    "erPwd\030\006 \001(\t\022\022\n\nszNickName\030\007 \001(\t\022\024\n\014un32H"
    "eaderID\030\010 \001(\005\022\r\n\005n8Sex\030\t \001(\005\022\020\n\010n64Score"
    "\030\n \001(\003\022\022\n\nn64Diamond\030\013 \001(\003\022\017\n\007n64Gold\030\014 "
    "\001(\003\022\033\n\023tRegisteUTCMillisec\030\r \001(\003\022\035\n\025tLas"
    "tLoginUTCMillisec\030\016 \001(\003\022\022\n\nn32HeroNum\030\017 "
    "\001(\003\022\033\n\023n32RunesSlotOpenNum\030\020 \001(\003\022\026\n\016n32R"
    "unesBagNum\030\021 \001(\005\022\027\n\017n32RunesSlotNum\030\022 \001("
    "\005\022\025\n\rn32FriendsNum\030\023 \001(\005\022\027\n\017n32Blacklist"
    "Num\030\024 \001(\005\022\031\n\021un32TotalGameInns\030\025 \001(\005\022\030\n\020"
    "un32TotalWinInns\030\026 \001(\005\022\032\n\022un32TotalHeroK"
    "ills\030\027 \001(\005\022!\n\031un32TotalDestoryBuildings\030"
    "\030 \001(\005\022\032\n\022un32TotalDeadTimes\030\031 \001(\005\022\022\n\nun1"
    "6UserLv\030\032 \001(\005\022\030\n\020un32UserCurLvExp\030\033 \001(\005\022"
    "\031\n\021tLastFirstWinTime\030\034 \001(\003\022A\n\013mGuideStep"
    "s\030\035 \001(\0132,.CSToSS.UserInfo.SUserDBData.SU"
    "serGuideSteps\022\021\n\tszFriends\030\036 \001(\t\032]\n\017SUse"
    "rGuideSteps\022\031\n\021szCSContinueGuide\030\001 \001(\t\022\033"
    "\n\023szCSNoContinueGuide\030\002 \001(\t\022\022\n\nszSSGuide"
    "s\030\003 \001(\t\"\246\001\n\013EObjectType\022\024\n\020eObjectType_N"
    "one\020\000\022\025\n\021eObjectType_Guild\020\001\022\024\n\020eObjectT"
    "ype_User\020\002\022\032\n\025eObjectType_HeroBegin\020\220N\022\032"
    "\n\024eObjectType_NPCBegin\020\240\234\001\022\034\n\026eObjectTyp"
    "e_GoodsBegin\020\260\352\001\"\301\001\n\tEUserCate\022\023\n\017eUserC"
    "ate_Admin\020\000\022\020\n\014eUserCate_GM\020\001\022\023\n\017eUserCa"
    "te_Robot\020\002\022\030\n\024eUserCate_DiamondVIP\020\003\022\026\n\022"
    "eUserCate_GloldVIP\020\004\022\027\n\023eUserCate_Silver"
    "VIP\020\005\022\027\n\023eUserCate_CopperVIP\020\006\022\024\n\020eUserC"
    "ate_Normal\020\007\"E\n\rEUserPlatform\022\014\n\010eUP_Non"
    "e\020\000\022\r\n\teUP_Apple\020\001\022\n\n\006eUP_QQ\020\002\022\013\n\007eUP_36"
    "0\020\003\032h\n\025SUserRunesRuntimeData\022\027\n\017un32Rune"
    "sTypeID\030\001 \001(\005\022\016\n\006n16Pos\030\002 \001(\005\022\016\n\006n16Num\030"
    "\003 \001(\005\022\026\n\016n16RemainTimes\030\004 \001(\005\"K\n\014UserRoo"
    "mInfo\022\020\n\010ifmaster\030\001 \001(\010\022\016\n\006heroid\030\002 \001(\r\022"
    "\014\n\004guid\030\003 \001(\004\022\013\n\003pos\030\004 \001(\005\"\345\001\n\023OrderBegi"
    "nNewBattle\022@\n\005msgid\030\001 \001(\0162\r.CSToSS.MsgId"
    ":\"eMsgToSSFromCS_OrderBeginNewBattle\022\020\n\010"
    "battleid\030\002 \001(\004\022\r\n\005state\030\003 \001(\005\022\r\n\005mapid\030\004"
    " \001(\005\022\014\n\004ssid\030\005 \001(\005\022*\n\014userRoomInfo\030\006 \003(\013"
    "2\024.CSToSS.UserRoomInfo\022\"\n\010userinfo\030\007 \003(\013"
    "2\020.CSToSS.UserInfo\"\200\001\n\027NotifyBattleState"
    "Change\022D\n\005msgid\030\001 \001(\0162\r.CSToSS.MsgId:&eM"
    "sgToSSFromCS_NotifyBattleStateChange\022\020\n\010"
    "battleid\030\002 \001(\004\022\r\n\005state\030\003 \001(\005\"\224\001\n\027Notify"
    "UsetNetInfoChange\022D\n\005msgid\030\001 \001(\0162\r.CSToS"
    "S.MsgId:&eMsgToSSFromCS_NotifyUsetNetInf"
    "oChange\022\014\n\004guid\030\002 \001(\004\022%\n\007netinfo\030\003 \001(\0132\024"
    ".CSToSS.SUserNetInfo\"P\n\007PingRet\0227\n\005msgid"
    "\030\001 \001(\0162\r.CSToSS.MsgId:\031eMsgToSSFromCS_As"
    "kPingRet\022\014\n\004time\030\002 \001(\003\"a\n\021NotifyBuffCfgL"
    "ist\022>\n\005msgid\030\001 \001(\0162\r.CSToSS.MsgId: eMsgT"
    "oSSFromCS_NotifyBuffCfgList\022\014\n\004time\030\002 \001("
    "\003\"c\n\022NotifySkillCfgList\022\?\n\005msgid\030\001 \001(\0162\r"
    ".CSToSS.MsgId:!eMsgToSSFromCS_NotifySkil"
    "lCfgList\022\014\n\004time\030\002 \001(\003\"^\n\020NotifyNPCCfgLi"
    "st\022=\n\005msgid\030\001 \001(\0162\r.CSToSS.MsgId:\037eMsgTo"
    "SSFromCS_NotifyNPCCfgList\022\013\n\003cfg\030\002 \003(\t\"`"
    "\n\021NotifyHeroCfgList\022>\n\005msgid\030\001 \001(\0162\r.CST"
    "oSS.MsgId: eMsgToSSFromCS_NotifyHeroCfgL"
    "ist\022\013\n\003cfg\030\002 \003(\t\"`\n\021NotifyShopCfgList\022>\n"
    "\005msgid\030\001 \001(\0162\r.CSToSS.MsgId: eMsgToSSFro"
    "mCS_NotifyShopCfgList\022\013\n\003cfg\030\002 \003(\t\"b\n\022No"
    "tifyGoodsCfgList\022\?\n\005msgid\030\001 \001(\0162\r.CSToSS"
    ".MsgId:!eMsgToSSFromCS_NotifyGoodsCfgLis"
    "t\022\013\n\003cfg\030\002 \003(\t\"b\n\022NotifyPublicLuaStr\022\?\n\005"
    "msgid\030\001 \001(\0162\r.CSToSS.MsgId:!eMsgToSSFrom"
    "CS_NotifyPublicLuaStr\022\013\n\003cfg\030\002 \003(\t\"b\n\022No"
    "tifyRunesCfgList\022\?\n\005msgid\030\001 \001(\0162\r.CSToSS"
    ".MsgId:!eMsgToSSFromCS_NotifyRunesCfgLis"
    "t\022\013\n\003cfg\030\002 \003(\t\"j\n\026NotifyRunesSlotCfgList"
    "\022C\n\005msgid\030\001 \001(\0162\r.CSToSS.MsgId:%eMsgToSS"
    "FromCS_NotifyRunesSlotCfgList\022\013\n\003cfg\030\002 \003"
    "(\t\"n\n\030NotifyWildMonsterCfgList\022E\n\005msgid\030"
    "\001 \001(\0162\r.CSToSS.MsgId:\'eMsgToSSFromCS_Not"
    "ifyWildMonsterCfgList\022\013\n\003cfg\030\002 \003(\t\"u\n\024No"
    "tifyUserInfoChange\022A\n\005msgid\030\001 \001(\0162\r.CSTo"
    "SS.MsgId:#eMsgToSSFromCS_NotifyUserInfoC"
    "hange\022\014\n\004guid\030\002 \001(\004\022\014\n\004gold\030\003 \001(\003\"h\n\025Not"
    "ifyNewSkillCfgList\022B\n\005msgid\030\001 \001(\0162\r.CSTo"
    "SS.MsgId:$eMsgToSSFromCS_NotifyNewSkillC"
    "fgList\022\013\n\003cfg\030\002 \003(\t\"\200\001\n!NotifySkillModel"
    "AccountCfgCfgList\022N\n\005msgid\030\001 \001(\0162\r.CSToS"
    "S.MsgId:0eMsgToSSFromCS_NotifySkillModel"
    "AccountCfgCfgList\022\013\n\003cfg\030\002 \003(\t\"v\n\034Notify"
    "SkillModelRangeCfgList\022I\n\005msgid\030\001 \001(\0162\r."
    "CSToSS.MsgId:+eMsgToSSFromCS_NotifySkill"
    "ModelRangeCfgList\022\013\n\003cfg\030\002 \003(\t\"z\n\036Notify"
    "SkillModelLeadingCfgList\022K\n\005msgid\030\001 \001(\0162"
    "\r.CSToSS.MsgId:-eMsgToSSFromCS_NotifySki"
    "llModelLeadingCfgList\022\013\n\003cfg\030\002 \003(\t\"t\n\033No"
    "tifySkillModelEmitCfgList\022H\n\005msgid\030\001 \001(\016"
    "2\r.CSToSS.MsgId:*eMsgToSSFromCS_NotifySk"
    "illModelEmitCfgList\022\013\n\003cfg\030\002 \003(\t\"r\n\032Noti"
    "fySkillModelBufCfgList\022G\n\005msgid\030\001 \001(\0162\r."
    "CSToSS.MsgId:)eMsgToSSFromCS_NotifySkill"
    "ModelBufCfgList\022\013\n\003cfg\030\002 \003(\t\"x\n\035NotifySk"
    "illModelSummonCfgList\022J\n\005msgid\030\001 \001(\0162\r.C"
    "SToSS.MsgId:,eMsgToSSFromCS_NotifySkillM"
    "odelSummonCfgList\022\013\n\003cfg\030\002 \003(\t\"t\n\033Notify"
    "SkillModelMoveCfgList\022H\n\005msgid\030\001 \001(\0162\r.C"
    "SToSS.MsgId:*eMsgToSSFromCS_NotifySkillM"
    "odelMoveCfgList\022\013\n\003cfg\030\002 \003(\t\"x\n\035NotifySk"
    "illModelSwitchCfgList\022J\n\005msgid\030\001 \001(\0162\r.C"
    "SToSS.MsgId:,eMsgToSSFromCS_NotifySkillM"
    "odelSwitchCfgList\022\013\n\003cfg\030\002 \003(\t\"\204\001\n#Notif"
    "ySkillModelPurificationCfgList\022P\n\005msgid\030"
    "\001 \001(\0162\r.CSToSS.MsgId:2eMsgToSSFromCS_Not"
    "ifySkillModelPurificationCfgList\022\013\n\003cfg\030"
    "\002 \003(\t\"t\n\033NotifySkillModelLinkCfgList\022H\n\005"
    "msgid\030\001 \001(\0162\r.CSToSS.MsgId:*eMsgToSSFrom"
    "CS_NotifySkillModelLinkCfgList\022\013\n\003cfg\030\002 "
    "\003(\t\"t\n\033NotifyPassitiveSkillCfgList\022H\n\005ms"
    "gid\030\001 \001(\0162\r.CSToSS.MsgId:*eMsgToSSFromCS"
    "_NotifyPassitiveSkillCfgList\022\013\n\003cfg\030\002 \003("
    "\t\"\210\001\n%NotifyPassitiveEffectBloodSeekCfgL"
    "ist\022R\n\005msgid\030\001 \001(\0162\r.CSToSS.MsgId:4eMsgT"
    "oSSFromCS_NotifyPassitiveEffectBloodSeek"
    "CfgList\022\013\n\003cfg\030\002 \003(\t\"\204\001\n#NotifyPassitive"
    "EffectReboundCfgList\022P\n\005msgid\030\001 \001(\0162\r.CS"
    "ToSS.MsgId:2eMsgToSSFromCS_NotifyPassiti"
    "veEffectReboundCfgList\022\013\n\003cfg\030\002 \003(\t\"\202\001\n\""
    "NotifyPassitiveEffectReliveCfgList\022O\n\005ms"
    "gid\030\001 \001(\0162\r.CSToSS.MsgId:1eMsgToSSFromCS"
    "_NotifyPassitiveEffectReliveCfgList\022\013\n\003c"
    "fg\030\002 \003(\t\"f\n\024NotifyRobotAICfgList\022A\n\005msgi"
    "d\030\001 \001(\0162\r.CSToSS.MsgId:#eMsgToSSFromCS_N"
    "otifyRobotAICfgList\022\013\n\003cfg\030\002 \003(\t\"n\n\030Noti"
    "fyRobotAIPathCfgList\022E\n\005msgid\030\001 \001(\0162\r.CS"
    "ToSS.MsgId:\'eMsgToSSFromCS_NotifyRobotAI"
    "PathCfgList\022\013\n\003cfg\030\002 \003(\t\"\263\001\n\014NotifyOBUse"
    "r\0229\n\005msgid\030\001 \001(\0162\r.CSToSS.MsgId:\033eMsgToS"
    "SFromCS_NotifyOBUser\022.\n\006obinfo\030\002 \003(\0132\036.C"
    "SToSS.NotifyOBUser.OBPosInfo\022\020\n\010battleid"
    "\030\003 \001(\004\032&\n\tOBPosInfo\022\013\n\003pos\030\001 \001(\005\022\014\n\004guid"
    "\030\002 \001(\004\"\177\n\027NotifyUserReconnectGame\022D\n\005msg"
    "id\030\001 \001(\0162\r.CSToSS.MsgId:&eMsgToSSFromCS_"
    "NotifyUserReconnectGame\022\014\n\004guid\030\002 \001(\004\022\020\n"
    "\010battleid\030\003 \001(\004\"v\n\021BattleKickOneUser\022>\n\005"
    "msgid\030\001 \001(\0162\r.CSToSS.MsgId: eMsgToSSFrom"
    "CS_BattleKickOneUser\022\020\n\010battleid\030\002 \001(\004\022\017"
    "\n\007userkey\030\003 \001(\004\"\311\007\n\014CreateBattle\0229\n\005msgi"
    "d\030\001 \001(\0162\r.CSToSS.MsgId:\033eMsgToSSFromCS_C"
    "reateBattle\022\020\n\010battleid\030\002 \001(\004\022\r\n\005mapid\030\003"
    " \001(\005\0223\n\nbattletype\030\004 \001(\0162\037.CSToSS.Create"
    "Battle.BattleType\022;\n\010userinfo\030\005 \003(\0132).CS"
    "ToSS.CreateBattle.CreateBattleUserInfo\0225"
    "\n\013aiRobotList\030\006 \003(\0132 .CSToSS.CreateBattl"
    "e.AiRobotInfo\032\205\004\n\024CreateBattleUserInfo\022)"
    "\n\013usernetinfo\030\001 \001(\0132\024.CSToSS.SUserNetInf"
    "o\022\014\n\004guid\030\002 \001(\003\022\014\n\004seat\030\003 \001(\005\022\r\n\005grpID\030\004"
    " \001(\005\022\020\n\010nickName\030\005 \001(\t\022\017\n\007diamond\030\006 \001(\003\022"
    "\014\n\004gold\030\007 \001(\003\022\r\n\005vipLv\030\010 \001(\005\022\014\n\004ifOB\030\t \001"
    "(\010\022\014\n\004ifGM\030\n \001(\010\022\026\n\016canUseHeroList\030\013 \003(\005"
    "\022E\n\trunePages\030\014 \003(\01322.CSToSS.CreateBattl"
    "e.CreateBattleUserInfo.RunePage\022\021\n\tifAiR"
    "obot\030\r \001(\010\032\310\001\n\010RunePage\022\020\n\010runePage\030\001 \001("
    "\005\022P\n\013runeEffects\030\002 \003(\0132;.CSToSS.CreateBa"
    "ttle.CreateBattleUserInfo.RunePage.RuneI"
    "nfo\032X\n\010RuneInfo\022\020\n\010effectId\030\001 \001(\005\022\022\n\neff"
    "ectName\030\002 \001(\t\022\023\n\013effectValue\030\003 \001(\002\022\021\n\tef"
    "fectPer\030\004 \001(\002\032+\n\013AiRobotInfo\022\014\n\004seat\030\001 \001"
    "(\r\022\016\n\006aitype\030\002 \001(\r\"\177\n\nBattleType\022\024\n\020eBat"
    "tleType_Free\020\000\022\024\n\020eBattleType_Room\020\001\022\025\n\021"
    "eBattleType_Match\020\002\022\026\n\022eBattleType_Guide"
    "1\020\003\022\026\n\022eBattleType_Guide2\020\004\"\235\001\n\020NotifyUs"
    "erOnline\022:\n\005msgid\030\001 \001(\0162\r.CSToSS.MsgId:\034"
    "eMsgToSSFromCS_OneUserOnline\022\020\n\010battleid"
    "\030\002 \001(\004\022\020\n\010userguid\030\003 \001(\004\022)\n\013usernetinfo\030"
    "\004 \001(\0132\024.CSToSS.SUserNetInfo\"t\n\021NotifyUse"
    "rOffline\022;\n\005msgid\030\001 \001(\0162\r.CSToSS.MsgId:\035"
    "eMsgToSSFromCS_OneUserOffline\022\020\n\010battlei"
    "d\030\002 \001(\004\022\020\n\010userguid\030\003 \001(\004\"x\n\024FinishBattl"
    "eResponse\022A\n\005msgid\030\001 \001(\0162\r.CSToSS.MsgId:"
    "#eMsgToSSFromCS_FinishBattleResponse\022\020\n\010"
    "battleid\030\002 \001(\004\022\013\n\003rst\030\003 \001(\010*\271\021\n\005MsgId\022\032\n"
    "\024eMsgToSSFromCS_Begin\020\200\200\001\022\037\n\031eMsgToSSFro"
    "mCS_AskPingRet\020\201\200\001\022\"\n\034eMsgToSSFromCS_Ask"
    "RegisteRet\020\202\200\001\022#\n\035eMsgToSSFromCS_NotifyU"
    "serInfo\020\203\200\001\022(\n\"eMsgToSSFromCS_OrderBegin"
    "NewBattle\020\204\200\001\022,\n&eMsgToSSFromCS_NotifyBa"
    "ttleStateChange\020\205\200\001\022,\n&eMsgToSSFromCS_No"
    "tifyUsetNetInfoChange\020\206\200\001\022&\n eMsgToSSFro"
    "mCS_NotifyBuffCfgList\020\207\200\001\022\'\n!eMsgToSSFro"
    "mCS_NotifySkillCfgList\020\210\200\001\022%\n\037eMsgToSSFr"
    "omCS_NotifyNPCCfgList\020\211\200\001\022&\n eMsgToSSFro"
    "mCS_NotifyHeroCfgList\020\212\200\001\022&\n eMsgToSSFro"
    "mCS_NotifyShopCfgList\020\213\200\001\022\'\n!eMsgToSSFro"
    "mCS_NotifyGoodsCfgList\020\214\200\001\022\'\n!eMsgToSSFr"
    "omCS_NotifyPublicLuaStr\020\215\200\001\022%\n\037eMsgToSSF"
    "romCS_NotifyMapCfgList\020\216\200\001\022%\n\037eMsgToSSFr"
    "omCS_NotifyMapCfgData\020\217\200\001\022\'\n!eMsgToSSFro"
    "mCS_NotifyRunesCfgList\020\220\200\001\022+\n%eMsgToSSFr"
    "omCS_NotifyRunesSlotCfgList\020\221\200\001\022-\n\'eMsgT"
    "oSSFromCS_NotifyWildMonsterCfgList\020\222\200\001\022*"
    "\n$eMsgToSSFromCS_NotifyNewSkillCfgList\020\224"
    "\200\001\0226\n0eMsgToSSFromCS_NotifySkillModelAcc"
    "ountCfgCfgList\020\225\200\001\0220\n*eMsgToSSFromCS_Not"
    "ifySkillModelEmitCfgList\020\226\200\001\0221\n+eMsgToSS"
    "FromCS_NotifySkillModelRangeCfgList\020\227\200\001\022"
    "3\n-eMsgToSSFromCS_NotifySkillModelLeadin"
    "gCfgList\020\230\200\001\022/\n)eMsgToSSFromCS_NotifySki"
    "llModelBufCfgList\020\231\200\001\0222\n,eMsgToSSFromCS_"
    "NotifySkillModelSummonCfgList\020\232\200\001\0220\n*eMs"
    "gToSSFromCS_NotifySkillModelMoveCfgList\020"
    "\233\200\001\0222\n,eMsgToSSFromCS_NotifySkillModelSw"
    "itchCfgList\020\234\200\001\0220\n*eMsgToSSFromCS_Notify"
    "PassitiveSkillCfgList\020\235\200\001\022:\n4eMsgToSSFro"
    "mCS_NotifyPassitiveEffectBloodSeekCfgLis"
    "t\020\236\200\001\0228\n2eMsgToSSFromCS_NotifyPassitiveE"
    "ffectReboundCfgList\020\237\200\001\0227\n1eMsgToSSFromC"
    "S_NotifyPassitiveEffectReliveCfgList\020\240\200\001"
    "\022)\n#eMsgToSSFromCS_NotifyRobotAICfgList\020"
    "\241\200\001\0228\n2eMsgToSSFromCS_NotifySkillModelPu"
    "rificationCfgList\020\242\200\001\022-\n\'eMsgToSSFromCS_"
    "NotifyRobotAIPathCfgList\020\243\200\001\0220\n*eMsgToSS"
    "FromCS_NotifySkillModelLinkCfgList\020\244\200\001\022\'"
    "\n!eMsgToSSFromCS_NotifySSGameSwitch\020\252\200\001\022"
    "(\n\"eMsgToSSFromCS_NotifyOBEnterBattle\020\253\200"
    "\001\022(\n\"eMsgToSSFromCS_NotifyUserReconnect\020"
    "\254\200\001\022!\n\033eMsgToSSFromCS_NotifyOBUser\020\255\200\001\022,"
    "\n&eMsgToSSFromCS_NotifyUserReconnectGame"
    "\020\256\200\001\022&\n eMsgToSSFromCS_NotifyUserOffline"
    "\020\257\200\001\022 \n\032eMsgToSSFromCS_ReportSSMsg\020\260\200\001\022&"
    "\n eMsgToSSFromCS_BattleKickOneUser\020\261\200\001\022+"
    "\n%eMsgToSSFromCS_NotifySSGuideBattleEnd\020"
    "\262\200\001\022)\n#eMsgToSSFromCS_NotifyUserInfoChan"
    "ge\020\264\200\001\022!\n\033eMsgToSSFromCS_CreateBattle\020\364\200"
    "\001\022\"\n\034eMsgToSSFromCS_OneUserOnline\020\365\200\001\022#\n"
    "\035eMsgToSSFromCS_OneUserOffline\020\366\200\001\022)\n#eM"
    "sgToSSFromCS_FinishBattleResponse\020\376\200\001\022\030\n"
    "\022eMsgToSSFromCS_End\020\350\204\001", 10423);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CSToSS.proto", &protobuf_RegisterTypes);
  SSGameFuncSwitch::default_instance_ = new SSGameFuncSwitch();
  NotifySSGuideBattleEnd::default_instance_ = new NotifySSGuideBattleEnd();
  ReportSSMsg::default_instance_ = new ReportSSMsg();
  AskRegisteRet::default_instance_ = new AskRegisteRet();
  AskRegisteRet_GSInfo::default_instance_ = new AskRegisteRet_GSInfo();
  SUserNetInfo::default_instance_ = new SUserNetInfo();
  UserInfo::default_instance_ = new UserInfo();
  UserInfo_SUserDBData::default_instance_ = new UserInfo_SUserDBData();
  UserInfo_SUserDBData_SUserGuideSteps::default_instance_ = new UserInfo_SUserDBData_SUserGuideSteps();
  UserInfo_SUserRunesRuntimeData::default_instance_ = new UserInfo_SUserRunesRuntimeData();
  UserRoomInfo::default_instance_ = new UserRoomInfo();
  OrderBeginNewBattle::default_instance_ = new OrderBeginNewBattle();
  NotifyBattleStateChange::default_instance_ = new NotifyBattleStateChange();
  NotifyUsetNetInfoChange::default_instance_ = new NotifyUsetNetInfoChange();
  PingRet::default_instance_ = new PingRet();
  NotifyBuffCfgList::default_instance_ = new NotifyBuffCfgList();
  NotifySkillCfgList::default_instance_ = new NotifySkillCfgList();
  NotifyNPCCfgList::default_instance_ = new NotifyNPCCfgList();
  NotifyHeroCfgList::default_instance_ = new NotifyHeroCfgList();
  NotifyShopCfgList::default_instance_ = new NotifyShopCfgList();
  NotifyGoodsCfgList::default_instance_ = new NotifyGoodsCfgList();
  NotifyPublicLuaStr::default_instance_ = new NotifyPublicLuaStr();
  NotifyRunesCfgList::default_instance_ = new NotifyRunesCfgList();
  NotifyRunesSlotCfgList::default_instance_ = new NotifyRunesSlotCfgList();
  NotifyWildMonsterCfgList::default_instance_ = new NotifyWildMonsterCfgList();
  NotifyUserInfoChange::default_instance_ = new NotifyUserInfoChange();
  NotifyNewSkillCfgList::default_instance_ = new NotifyNewSkillCfgList();
  NotifySkillModelAccountCfgCfgList::default_instance_ = new NotifySkillModelAccountCfgCfgList();
  NotifySkillModelRangeCfgList::default_instance_ = new NotifySkillModelRangeCfgList();
  NotifySkillModelLeadingCfgList::default_instance_ = new NotifySkillModelLeadingCfgList();
  NotifySkillModelEmitCfgList::default_instance_ = new NotifySkillModelEmitCfgList();
  NotifySkillModelBufCfgList::default_instance_ = new NotifySkillModelBufCfgList();
  NotifySkillModelSummonCfgList::default_instance_ = new NotifySkillModelSummonCfgList();
  NotifySkillModelMoveCfgList::default_instance_ = new NotifySkillModelMoveCfgList();
  NotifySkillModelSwitchCfgList::default_instance_ = new NotifySkillModelSwitchCfgList();
  NotifySkillModelPurificationCfgList::default_instance_ = new NotifySkillModelPurificationCfgList();
  NotifySkillModelLinkCfgList::default_instance_ = new NotifySkillModelLinkCfgList();
  NotifyPassitiveSkillCfgList::default_instance_ = new NotifyPassitiveSkillCfgList();
  NotifyPassitiveEffectBloodSeekCfgList::default_instance_ = new NotifyPassitiveEffectBloodSeekCfgList();
  NotifyPassitiveEffectReboundCfgList::default_instance_ = new NotifyPassitiveEffectReboundCfgList();
  NotifyPassitiveEffectReliveCfgList::default_instance_ = new NotifyPassitiveEffectReliveCfgList();
  NotifyRobotAICfgList::default_instance_ = new NotifyRobotAICfgList();
  NotifyRobotAIPathCfgList::default_instance_ = new NotifyRobotAIPathCfgList();
  NotifyOBUser::default_instance_ = new NotifyOBUser();
  NotifyOBUser_OBPosInfo::default_instance_ = new NotifyOBUser_OBPosInfo();
  NotifyUserReconnectGame::default_instance_ = new NotifyUserReconnectGame();
  BattleKickOneUser::default_instance_ = new BattleKickOneUser();
  CreateBattle::default_instance_ = new CreateBattle();
  CreateBattle_CreateBattleUserInfo::default_instance_ = new CreateBattle_CreateBattleUserInfo();
  CreateBattle_CreateBattleUserInfo_RunePage::default_instance_ = new CreateBattle_CreateBattleUserInfo_RunePage();
  CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::default_instance_ = new CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo();
  CreateBattle_AiRobotInfo::default_instance_ = new CreateBattle_AiRobotInfo();
  NotifyUserOnline::default_instance_ = new NotifyUserOnline();
  NotifyUserOffline::default_instance_ = new NotifyUserOffline();
  FinishBattleResponse::default_instance_ = new FinishBattleResponse();
  SSGameFuncSwitch::default_instance_->InitAsDefaultInstance();
  NotifySSGuideBattleEnd::default_instance_->InitAsDefaultInstance();
  ReportSSMsg::default_instance_->InitAsDefaultInstance();
  AskRegisteRet::default_instance_->InitAsDefaultInstance();
  AskRegisteRet_GSInfo::default_instance_->InitAsDefaultInstance();
  SUserNetInfo::default_instance_->InitAsDefaultInstance();
  UserInfo::default_instance_->InitAsDefaultInstance();
  UserInfo_SUserDBData::default_instance_->InitAsDefaultInstance();
  UserInfo_SUserDBData_SUserGuideSteps::default_instance_->InitAsDefaultInstance();
  UserInfo_SUserRunesRuntimeData::default_instance_->InitAsDefaultInstance();
  UserRoomInfo::default_instance_->InitAsDefaultInstance();
  OrderBeginNewBattle::default_instance_->InitAsDefaultInstance();
  NotifyBattleStateChange::default_instance_->InitAsDefaultInstance();
  NotifyUsetNetInfoChange::default_instance_->InitAsDefaultInstance();
  PingRet::default_instance_->InitAsDefaultInstance();
  NotifyBuffCfgList::default_instance_->InitAsDefaultInstance();
  NotifySkillCfgList::default_instance_->InitAsDefaultInstance();
  NotifyNPCCfgList::default_instance_->InitAsDefaultInstance();
  NotifyHeroCfgList::default_instance_->InitAsDefaultInstance();
  NotifyShopCfgList::default_instance_->InitAsDefaultInstance();
  NotifyGoodsCfgList::default_instance_->InitAsDefaultInstance();
  NotifyPublicLuaStr::default_instance_->InitAsDefaultInstance();
  NotifyRunesCfgList::default_instance_->InitAsDefaultInstance();
  NotifyRunesSlotCfgList::default_instance_->InitAsDefaultInstance();
  NotifyWildMonsterCfgList::default_instance_->InitAsDefaultInstance();
  NotifyUserInfoChange::default_instance_->InitAsDefaultInstance();
  NotifyNewSkillCfgList::default_instance_->InitAsDefaultInstance();
  NotifySkillModelAccountCfgCfgList::default_instance_->InitAsDefaultInstance();
  NotifySkillModelRangeCfgList::default_instance_->InitAsDefaultInstance();
  NotifySkillModelLeadingCfgList::default_instance_->InitAsDefaultInstance();
  NotifySkillModelEmitCfgList::default_instance_->InitAsDefaultInstance();
  NotifySkillModelBufCfgList::default_instance_->InitAsDefaultInstance();
  NotifySkillModelSummonCfgList::default_instance_->InitAsDefaultInstance();
  NotifySkillModelMoveCfgList::default_instance_->InitAsDefaultInstance();
  NotifySkillModelSwitchCfgList::default_instance_->InitAsDefaultInstance();
  NotifySkillModelPurificationCfgList::default_instance_->InitAsDefaultInstance();
  NotifySkillModelLinkCfgList::default_instance_->InitAsDefaultInstance();
  NotifyPassitiveSkillCfgList::default_instance_->InitAsDefaultInstance();
  NotifyPassitiveEffectBloodSeekCfgList::default_instance_->InitAsDefaultInstance();
  NotifyPassitiveEffectReboundCfgList::default_instance_->InitAsDefaultInstance();
  NotifyPassitiveEffectReliveCfgList::default_instance_->InitAsDefaultInstance();
  NotifyRobotAICfgList::default_instance_->InitAsDefaultInstance();
  NotifyRobotAIPathCfgList::default_instance_->InitAsDefaultInstance();
  NotifyOBUser::default_instance_->InitAsDefaultInstance();
  NotifyOBUser_OBPosInfo::default_instance_->InitAsDefaultInstance();
  NotifyUserReconnectGame::default_instance_->InitAsDefaultInstance();
  BattleKickOneUser::default_instance_->InitAsDefaultInstance();
  CreateBattle::default_instance_->InitAsDefaultInstance();
  CreateBattle_CreateBattleUserInfo::default_instance_->InitAsDefaultInstance();
  CreateBattle_CreateBattleUserInfo_RunePage::default_instance_->InitAsDefaultInstance();
  CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::default_instance_->InitAsDefaultInstance();
  CreateBattle_AiRobotInfo::default_instance_->InitAsDefaultInstance();
  NotifyUserOnline::default_instance_->InitAsDefaultInstance();
  NotifyUserOffline::default_instance_->InitAsDefaultInstance();
  FinishBattleResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CSToSS_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CSToSS_2eproto {
  StaticDescriptorInitializer_CSToSS_2eproto() {
    protobuf_AddDesc_CSToSS_2eproto();
  }
} static_descriptor_initializer_CSToSS_2eproto_;
const ::google::protobuf::EnumDescriptor* MsgId_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgId_descriptor_;
}
bool MsgId_IsValid(int value) {
  switch(value) {
    case 16384:
    case 16385:
    case 16386:
    case 16387:
    case 16388:
    case 16389:
    case 16390:
    case 16391:
    case 16392:
    case 16393:
    case 16394:
    case 16395:
    case 16396:
    case 16397:
    case 16398:
    case 16399:
    case 16400:
    case 16401:
    case 16402:
    case 16404:
    case 16405:
    case 16406:
    case 16407:
    case 16408:
    case 16409:
    case 16410:
    case 16411:
    case 16412:
    case 16413:
    case 16414:
    case 16415:
    case 16416:
    case 16417:
    case 16418:
    case 16419:
    case 16420:
    case 16426:
    case 16427:
    case 16428:
    case 16429:
    case 16430:
    case 16431:
    case 16432:
    case 16433:
    case 16434:
    case 16436:
    case 16500:
    case 16501:
    case 16502:
    case 16510:
    case 17000:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int SSGameFuncSwitch::kMsgidFieldNumber;
const int SSGameFuncSwitch::kLogWitchFieldNumber;
const int SSGameFuncSwitch::kGmWitchFieldNumber;
const int SSGameFuncSwitch::kSolderwitchFieldNumber;
const int SSGameFuncSwitch::kMonsterwitchFieldNumber;
const int SSGameFuncSwitch::kAltarsolderwitchFieldNumber;
const int SSGameFuncSwitch::kLogrefshtimeFieldNumber;
#endif  // !_MSC_VER

SSGameFuncSwitch::SSGameFuncSwitch()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.SSGameFuncSwitch)
}

void SSGameFuncSwitch::InitAsDefaultInstance() {
}

SSGameFuncSwitch::SSGameFuncSwitch(const SSGameFuncSwitch& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.SSGameFuncSwitch)
}

void SSGameFuncSwitch::SharedCtor() {
  _cached_size_ = 0;
  msgid_ = 16426;
  log_witch_ = 0u;
  gm_witch_ = 0u;
  solderwitch_ = 0u;
  monsterwitch_ = 0u;
  altarsolderwitch_ = 0u;
  logrefshtime_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SSGameFuncSwitch::~SSGameFuncSwitch() {
  // @@protoc_insertion_point(destructor:CSToSS.SSGameFuncSwitch)
  SharedDtor();
}

void SSGameFuncSwitch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SSGameFuncSwitch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SSGameFuncSwitch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SSGameFuncSwitch_descriptor_;
}

const SSGameFuncSwitch& SSGameFuncSwitch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

SSGameFuncSwitch* SSGameFuncSwitch::default_instance_ = NULL;

SSGameFuncSwitch* SSGameFuncSwitch::New() const {
  return new SSGameFuncSwitch;
}

void SSGameFuncSwitch::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<SSGameFuncSwitch*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(log_witch_, logrefshtime_);
    msgid_ = 16426;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SSGameFuncSwitch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.SSGameFuncSwitch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySSGameSwitch];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_log_witch;
        break;
      }

      // optional uint32 log_witch = 2;
      case 2: {
        if (tag == 16) {
         parse_log_witch:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &log_witch_)));
          set_has_log_witch();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_gm_witch;
        break;
      }

      // optional uint32 gm_witch = 3;
      case 3: {
        if (tag == 24) {
         parse_gm_witch:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gm_witch_)));
          set_has_gm_witch();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_solderwitch;
        break;
      }

      // optional uint32 solderwitch = 4;
      case 4: {
        if (tag == 32) {
         parse_solderwitch:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &solderwitch_)));
          set_has_solderwitch();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_monsterwitch;
        break;
      }

      // optional uint32 monsterwitch = 5;
      case 5: {
        if (tag == 40) {
         parse_monsterwitch:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &monsterwitch_)));
          set_has_monsterwitch();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_altarsolderwitch;
        break;
      }

      // optional uint32 altarsolderwitch = 6;
      case 6: {
        if (tag == 48) {
         parse_altarsolderwitch:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &altarsolderwitch_)));
          set_has_altarsolderwitch();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_logrefshtime;
        break;
      }

      // optional uint32 logrefshtime = 7;
      case 7: {
        if (tag == 56) {
         parse_logrefshtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &logrefshtime_)));
          set_has_logrefshtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.SSGameFuncSwitch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.SSGameFuncSwitch)
  return false;
#undef DO_
}

void SSGameFuncSwitch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.SSGameFuncSwitch)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySSGameSwitch];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // optional uint32 log_witch = 2;
  if (has_log_witch()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->log_witch(), output);
  }

  // optional uint32 gm_witch = 3;
  if (has_gm_witch()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->gm_witch(), output);
  }

  // optional uint32 solderwitch = 4;
  if (has_solderwitch()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->solderwitch(), output);
  }

  // optional uint32 monsterwitch = 5;
  if (has_monsterwitch()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->monsterwitch(), output);
  }

  // optional uint32 altarsolderwitch = 6;
  if (has_altarsolderwitch()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->altarsolderwitch(), output);
  }

  // optional uint32 logrefshtime = 7;
  if (has_logrefshtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->logrefshtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.SSGameFuncSwitch)
}

::google::protobuf::uint8* SSGameFuncSwitch::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.SSGameFuncSwitch)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySSGameSwitch];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // optional uint32 log_witch = 2;
  if (has_log_witch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->log_witch(), target);
  }

  // optional uint32 gm_witch = 3;
  if (has_gm_witch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->gm_witch(), target);
  }

  // optional uint32 solderwitch = 4;
  if (has_solderwitch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->solderwitch(), target);
  }

  // optional uint32 monsterwitch = 5;
  if (has_monsterwitch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->monsterwitch(), target);
  }

  // optional uint32 altarsolderwitch = 6;
  if (has_altarsolderwitch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->altarsolderwitch(), target);
  }

  // optional uint32 logrefshtime = 7;
  if (has_logrefshtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->logrefshtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.SSGameFuncSwitch)
  return target;
}

int SSGameFuncSwitch::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySSGameSwitch];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

    // optional uint32 log_witch = 2;
    if (has_log_witch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->log_witch());
    }

    // optional uint32 gm_witch = 3;
    if (has_gm_witch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gm_witch());
    }

    // optional uint32 solderwitch = 4;
    if (has_solderwitch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->solderwitch());
    }

    // optional uint32 monsterwitch = 5;
    if (has_monsterwitch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->monsterwitch());
    }

    // optional uint32 altarsolderwitch = 6;
    if (has_altarsolderwitch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->altarsolderwitch());
    }

    // optional uint32 logrefshtime = 7;
    if (has_logrefshtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->logrefshtime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SSGameFuncSwitch::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SSGameFuncSwitch* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SSGameFuncSwitch*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SSGameFuncSwitch::MergeFrom(const SSGameFuncSwitch& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
    if (from.has_log_witch()) {
      set_log_witch(from.log_witch());
    }
    if (from.has_gm_witch()) {
      set_gm_witch(from.gm_witch());
    }
    if (from.has_solderwitch()) {
      set_solderwitch(from.solderwitch());
    }
    if (from.has_monsterwitch()) {
      set_monsterwitch(from.monsterwitch());
    }
    if (from.has_altarsolderwitch()) {
      set_altarsolderwitch(from.altarsolderwitch());
    }
    if (from.has_logrefshtime()) {
      set_logrefshtime(from.logrefshtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SSGameFuncSwitch::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSGameFuncSwitch::CopyFrom(const SSGameFuncSwitch& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSGameFuncSwitch::IsInitialized() const {

  return true;
}

void SSGameFuncSwitch::Swap(SSGameFuncSwitch* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    std::swap(log_witch_, other->log_witch_);
    std::swap(gm_witch_, other->gm_witch_);
    std::swap(solderwitch_, other->solderwitch_);
    std::swap(monsterwitch_, other->monsterwitch_);
    std::swap(altarsolderwitch_, other->altarsolderwitch_);
    std::swap(logrefshtime_, other->logrefshtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SSGameFuncSwitch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SSGameFuncSwitch_descriptor_;
  metadata.reflection = SSGameFuncSwitch_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifySSGuideBattleEnd::kMsgidFieldNumber;
const int NotifySSGuideBattleEnd::kBattleidFieldNumber;
const int NotifySSGuideBattleEnd::kGuidFieldNumber;
#endif  // !_MSC_VER

NotifySSGuideBattleEnd::NotifySSGuideBattleEnd()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifySSGuideBattleEnd)
}

void NotifySSGuideBattleEnd::InitAsDefaultInstance() {
}

NotifySSGuideBattleEnd::NotifySSGuideBattleEnd(const NotifySSGuideBattleEnd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifySSGuideBattleEnd)
}

void NotifySSGuideBattleEnd::SharedCtor() {
  _cached_size_ = 0;
  msgid_ = 16434;
  battleid_ = GOOGLE_ULONGLONG(0);
  guid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifySSGuideBattleEnd::~NotifySSGuideBattleEnd() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifySSGuideBattleEnd)
  SharedDtor();
}

void NotifySSGuideBattleEnd::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifySSGuideBattleEnd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifySSGuideBattleEnd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifySSGuideBattleEnd_descriptor_;
}

const NotifySSGuideBattleEnd& NotifySSGuideBattleEnd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifySSGuideBattleEnd* NotifySSGuideBattleEnd::default_instance_ = NULL;

NotifySSGuideBattleEnd* NotifySSGuideBattleEnd::New() const {
  return new NotifySSGuideBattleEnd;
}

void NotifySSGuideBattleEnd::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<NotifySSGuideBattleEnd*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(battleid_, guid_);
    msgid_ = 16434;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifySSGuideBattleEnd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifySSGuideBattleEnd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySSGuideBattleEnd];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_battleid;
        break;
      }

      // optional uint64 battleid = 2;
      case 2: {
        if (tag == 16) {
         parse_battleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battleid_)));
          set_has_battleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_guid;
        break;
      }

      // optional uint64 guid = 3;
      case 3: {
        if (tag == 24) {
         parse_guid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
          set_has_guid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifySSGuideBattleEnd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifySSGuideBattleEnd)
  return false;
#undef DO_
}

void NotifySSGuideBattleEnd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifySSGuideBattleEnd)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySSGuideBattleEnd];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // optional uint64 battleid = 2;
  if (has_battleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->battleid(), output);
  }

  // optional uint64 guid = 3;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->guid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifySSGuideBattleEnd)
}

::google::protobuf::uint8* NotifySSGuideBattleEnd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifySSGuideBattleEnd)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySSGuideBattleEnd];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // optional uint64 battleid = 2;
  if (has_battleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->battleid(), target);
  }

  // optional uint64 guid = 3;
  if (has_guid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->guid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifySSGuideBattleEnd)
  return target;
}

int NotifySSGuideBattleEnd::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySSGuideBattleEnd];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

    // optional uint64 battleid = 2;
    if (has_battleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->battleid());
    }

    // optional uint64 guid = 3;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->guid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifySSGuideBattleEnd::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifySSGuideBattleEnd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifySSGuideBattleEnd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifySSGuideBattleEnd::MergeFrom(const NotifySSGuideBattleEnd& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
    if (from.has_battleid()) {
      set_battleid(from.battleid());
    }
    if (from.has_guid()) {
      set_guid(from.guid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifySSGuideBattleEnd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifySSGuideBattleEnd::CopyFrom(const NotifySSGuideBattleEnd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifySSGuideBattleEnd::IsInitialized() const {

  return true;
}

void NotifySSGuideBattleEnd::Swap(NotifySSGuideBattleEnd* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    std::swap(battleid_, other->battleid_);
    std::swap(guid_, other->guid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifySSGuideBattleEnd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifySSGuideBattleEnd_descriptor_;
  metadata.reflection = NotifySSGuideBattleEnd_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReportSSMsg::kMsgidFieldNumber;
const int ReportSSMsg::kBattleidFieldNumber;
const int ReportSSMsg::kOthermsgFieldNumber;
#endif  // !_MSC_VER

ReportSSMsg::ReportSSMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.ReportSSMsg)
}

void ReportSSMsg::InitAsDefaultInstance() {
}

ReportSSMsg::ReportSSMsg(const ReportSSMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.ReportSSMsg)
}

void ReportSSMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 16432;
  battleid_ = GOOGLE_ULONGLONG(0);
  othermsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReportSSMsg::~ReportSSMsg() {
  // @@protoc_insertion_point(destructor:CSToSS.ReportSSMsg)
  SharedDtor();
}

void ReportSSMsg::SharedDtor() {
  if (othermsg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete othermsg_;
  }
  if (this != default_instance_) {
  }
}

void ReportSSMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReportSSMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReportSSMsg_descriptor_;
}

const ReportSSMsg& ReportSSMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

ReportSSMsg* ReportSSMsg::default_instance_ = NULL;

ReportSSMsg* ReportSSMsg::New() const {
  return new ReportSSMsg;
}

void ReportSSMsg::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgid_ = 16432;
    battleid_ = GOOGLE_ULONGLONG(0);
    if (has_othermsg()) {
      if (othermsg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        othermsg_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReportSSMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.ReportSSMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_ReportSSMsg];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_battleid;
        break;
      }

      // optional uint64 battleid = 2;
      case 2: {
        if (tag == 16) {
         parse_battleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battleid_)));
          set_has_battleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_othermsg;
        break;
      }

      // optional string othermsg = 3;
      case 3: {
        if (tag == 26) {
         parse_othermsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_othermsg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->othermsg().data(), this->othermsg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "othermsg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.ReportSSMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.ReportSSMsg)
  return false;
#undef DO_
}

void ReportSSMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.ReportSSMsg)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_ReportSSMsg];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // optional uint64 battleid = 2;
  if (has_battleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->battleid(), output);
  }

  // optional string othermsg = 3;
  if (has_othermsg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->othermsg().data(), this->othermsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "othermsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->othermsg(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.ReportSSMsg)
}

::google::protobuf::uint8* ReportSSMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.ReportSSMsg)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_ReportSSMsg];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // optional uint64 battleid = 2;
  if (has_battleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->battleid(), target);
  }

  // optional string othermsg = 3;
  if (has_othermsg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->othermsg().data(), this->othermsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "othermsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->othermsg(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.ReportSSMsg)
  return target;
}

int ReportSSMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_ReportSSMsg];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

    // optional uint64 battleid = 2;
    if (has_battleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->battleid());
    }

    // optional string othermsg = 3;
    if (has_othermsg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->othermsg());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReportSSMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReportSSMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReportSSMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReportSSMsg::MergeFrom(const ReportSSMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
    if (from.has_battleid()) {
      set_battleid(from.battleid());
    }
    if (from.has_othermsg()) {
      set_othermsg(from.othermsg());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReportSSMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportSSMsg::CopyFrom(const ReportSSMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportSSMsg::IsInitialized() const {

  return true;
}

void ReportSSMsg::Swap(ReportSSMsg* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    std::swap(battleid_, other->battleid_);
    std::swap(othermsg_, other->othermsg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReportSSMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReportSSMsg_descriptor_;
  metadata.reflection = ReportSSMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AskRegisteRet_GSInfo::kGsidFieldNumber;
const int AskRegisteRet_GSInfo::kUserpwdFieldNumber;
#endif  // !_MSC_VER

AskRegisteRet_GSInfo::AskRegisteRet_GSInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.AskRegisteRet.GSInfo)
}

void AskRegisteRet_GSInfo::InitAsDefaultInstance() {
}

AskRegisteRet_GSInfo::AskRegisteRet_GSInfo(const AskRegisteRet_GSInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.AskRegisteRet.GSInfo)
}

void AskRegisteRet_GSInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  gsid_ = 0;
  userpwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AskRegisteRet_GSInfo::~AskRegisteRet_GSInfo() {
  // @@protoc_insertion_point(destructor:CSToSS.AskRegisteRet.GSInfo)
  SharedDtor();
}

void AskRegisteRet_GSInfo::SharedDtor() {
  if (userpwd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete userpwd_;
  }
  if (this != default_instance_) {
  }
}

void AskRegisteRet_GSInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AskRegisteRet_GSInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AskRegisteRet_GSInfo_descriptor_;
}

const AskRegisteRet_GSInfo& AskRegisteRet_GSInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

AskRegisteRet_GSInfo* AskRegisteRet_GSInfo::default_instance_ = NULL;

AskRegisteRet_GSInfo* AskRegisteRet_GSInfo::New() const {
  return new AskRegisteRet_GSInfo;
}

void AskRegisteRet_GSInfo::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    gsid_ = 0;
    if (has_userpwd()) {
      if (userpwd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        userpwd_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AskRegisteRet_GSInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.AskRegisteRet.GSInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 gsid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gsid_)));
          set_has_gsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_userpwd;
        break;
      }

      // optional string userpwd = 2;
      case 2: {
        if (tag == 18) {
         parse_userpwd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userpwd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->userpwd().data(), this->userpwd().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "userpwd");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.AskRegisteRet.GSInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.AskRegisteRet.GSInfo)
  return false;
#undef DO_
}

void AskRegisteRet_GSInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.AskRegisteRet.GSInfo)
  // optional int32 gsid = 1;
  if (has_gsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->gsid(), output);
  }

  // optional string userpwd = 2;
  if (has_userpwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userpwd().data(), this->userpwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "userpwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userpwd(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.AskRegisteRet.GSInfo)
}

::google::protobuf::uint8* AskRegisteRet_GSInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.AskRegisteRet.GSInfo)
  // optional int32 gsid = 1;
  if (has_gsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->gsid(), target);
  }

  // optional string userpwd = 2;
  if (has_userpwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userpwd().data(), this->userpwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "userpwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userpwd(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.AskRegisteRet.GSInfo)
  return target;
}

int AskRegisteRet_GSInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 gsid = 1;
    if (has_gsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gsid());
    }

    // optional string userpwd = 2;
    if (has_userpwd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->userpwd());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AskRegisteRet_GSInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AskRegisteRet_GSInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AskRegisteRet_GSInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AskRegisteRet_GSInfo::MergeFrom(const AskRegisteRet_GSInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gsid()) {
      set_gsid(from.gsid());
    }
    if (from.has_userpwd()) {
      set_userpwd(from.userpwd());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AskRegisteRet_GSInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AskRegisteRet_GSInfo::CopyFrom(const AskRegisteRet_GSInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AskRegisteRet_GSInfo::IsInitialized() const {

  return true;
}

void AskRegisteRet_GSInfo::Swap(AskRegisteRet_GSInfo* other) {
  if (other != this) {
    std::swap(gsid_, other->gsid_);
    std::swap(userpwd_, other->userpwd_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AskRegisteRet_GSInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AskRegisteRet_GSInfo_descriptor_;
  metadata.reflection = AskRegisteRet_GSInfo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AskRegisteRet::kMsgidFieldNumber;
const int AskRegisteRet::kRetFieldNumber;
const int AskRegisteRet::kTimeFieldNumber;
const int AskRegisteRet::kBasegsidFieldNumber;
const int AskRegisteRet::kGsinfoFieldNumber;
#endif  // !_MSC_VER

AskRegisteRet::AskRegisteRet()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.AskRegisteRet)
}

void AskRegisteRet::InitAsDefaultInstance() {
}

AskRegisteRet::AskRegisteRet(const AskRegisteRet& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.AskRegisteRet)
}

void AskRegisteRet::SharedCtor() {
  _cached_size_ = 0;
  msgid_ = 16386;
  ret_ = 0;
  time_ = GOOGLE_LONGLONG(0);
  basegsid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AskRegisteRet::~AskRegisteRet() {
  // @@protoc_insertion_point(destructor:CSToSS.AskRegisteRet)
  SharedDtor();
}

void AskRegisteRet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AskRegisteRet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AskRegisteRet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AskRegisteRet_descriptor_;
}

const AskRegisteRet& AskRegisteRet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

AskRegisteRet* AskRegisteRet::default_instance_ = NULL;

AskRegisteRet* AskRegisteRet::New() const {
  return new AskRegisteRet;
}

void AskRegisteRet::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<AskRegisteRet*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(ret_, time_);
    msgid_ = 16386;
    basegsid_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  gsinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AskRegisteRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.AskRegisteRet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_AskRegisteRet];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ret;
        break;
      }

      // optional int32 ret = 2;
      case 2: {
        if (tag == 16) {
         parse_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_time;
        break;
      }

      // optional int64 time = 3;
      case 3: {
        if (tag == 24) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_basegsid;
        break;
      }

      // optional int32 basegsid = 4;
      case 4: {
        if (tag == 32) {
         parse_basegsid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &basegsid_)));
          set_has_basegsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_gsinfo;
        break;
      }

      // repeated .CSToSS.AskRegisteRet.GSInfo gsinfo = 5;
      case 5: {
        if (tag == 42) {
         parse_gsinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gsinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_gsinfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.AskRegisteRet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.AskRegisteRet)
  return false;
#undef DO_
}

void AskRegisteRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.AskRegisteRet)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_AskRegisteRet];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // optional int32 ret = 2;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ret(), output);
  }

  // optional int64 time = 3;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->time(), output);
  }

  // optional int32 basegsid = 4;
  if (has_basegsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->basegsid(), output);
  }

  // repeated .CSToSS.AskRegisteRet.GSInfo gsinfo = 5;
  for (int i = 0; i < this->gsinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->gsinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.AskRegisteRet)
}

::google::protobuf::uint8* AskRegisteRet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.AskRegisteRet)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_AskRegisteRet];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // optional int32 ret = 2;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ret(), target);
  }

  // optional int64 time = 3;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->time(), target);
  }

  // optional int32 basegsid = 4;
  if (has_basegsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->basegsid(), target);
  }

  // repeated .CSToSS.AskRegisteRet.GSInfo gsinfo = 5;
  for (int i = 0; i < this->gsinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->gsinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.AskRegisteRet)
  return target;
}

int AskRegisteRet::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_AskRegisteRet];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

    // optional int32 ret = 2;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int64 time = 3;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->time());
    }

    // optional int32 basegsid = 4;
    if (has_basegsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->basegsid());
    }

  }
  // repeated .CSToSS.AskRegisteRet.GSInfo gsinfo = 5;
  total_size += 1 * this->gsinfo_size();
  for (int i = 0; i < this->gsinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->gsinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AskRegisteRet::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AskRegisteRet* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AskRegisteRet*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AskRegisteRet::MergeFrom(const AskRegisteRet& from) {
  GOOGLE_CHECK_NE(&from, this);
  gsinfo_.MergeFrom(from.gsinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_basegsid()) {
      set_basegsid(from.basegsid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AskRegisteRet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AskRegisteRet::CopyFrom(const AskRegisteRet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AskRegisteRet::IsInitialized() const {

  return true;
}

void AskRegisteRet::Swap(AskRegisteRet* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    std::swap(ret_, other->ret_);
    std::swap(time_, other->time_);
    std::swap(basegsid_, other->basegsid_);
    gsinfo_.Swap(&other->gsinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AskRegisteRet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AskRegisteRet_descriptor_;
  metadata.reflection = AskRegisteRet_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SUserNetInfo::kN32GSIDFieldNumber;
const int SUserNetInfo::kN32GCNSIDFieldNumber;
#endif  // !_MSC_VER

SUserNetInfo::SUserNetInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.SUserNetInfo)
}

void SUserNetInfo::InitAsDefaultInstance() {
}

SUserNetInfo::SUserNetInfo(const SUserNetInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.SUserNetInfo)
}

void SUserNetInfo::SharedCtor() {
  _cached_size_ = 0;
  n32gsid_ = 0;
  n32gcnsid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SUserNetInfo::~SUserNetInfo() {
  // @@protoc_insertion_point(destructor:CSToSS.SUserNetInfo)
  SharedDtor();
}

void SUserNetInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SUserNetInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SUserNetInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SUserNetInfo_descriptor_;
}

const SUserNetInfo& SUserNetInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

SUserNetInfo* SUserNetInfo::default_instance_ = NULL;

SUserNetInfo* SUserNetInfo::New() const {
  return new SUserNetInfo;
}

void SUserNetInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<SUserNetInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(n32gsid_, n32gcnsid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SUserNetInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.SUserNetInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 n32GSID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &n32gsid_)));
          set_has_n32gsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_n32GCNSID;
        break;
      }

      // optional int32 n32GCNSID = 2;
      case 2: {
        if (tag == 16) {
         parse_n32GCNSID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &n32gcnsid_)));
          set_has_n32gcnsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.SUserNetInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.SUserNetInfo)
  return false;
#undef DO_
}

void SUserNetInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.SUserNetInfo)
  // optional int32 n32GSID = 1;
  if (has_n32gsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->n32gsid(), output);
  }

  // optional int32 n32GCNSID = 2;
  if (has_n32gcnsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->n32gcnsid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.SUserNetInfo)
}

::google::protobuf::uint8* SUserNetInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.SUserNetInfo)
  // optional int32 n32GSID = 1;
  if (has_n32gsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->n32gsid(), target);
  }

  // optional int32 n32GCNSID = 2;
  if (has_n32gcnsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->n32gcnsid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.SUserNetInfo)
  return target;
}

int SUserNetInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 n32GSID = 1;
    if (has_n32gsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->n32gsid());
    }

    // optional int32 n32GCNSID = 2;
    if (has_n32gcnsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->n32gcnsid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SUserNetInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SUserNetInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SUserNetInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SUserNetInfo::MergeFrom(const SUserNetInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_n32gsid()) {
      set_n32gsid(from.n32gsid());
    }
    if (from.has_n32gcnsid()) {
      set_n32gcnsid(from.n32gcnsid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SUserNetInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SUserNetInfo::CopyFrom(const SUserNetInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SUserNetInfo::IsInitialized() const {

  return true;
}

void SUserNetInfo::Swap(SUserNetInfo* other) {
  if (other != this) {
    std::swap(n32gsid_, other->n32gsid_);
    std::swap(n32gcnsid_, other->n32gcnsid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SUserNetInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SUserNetInfo_descriptor_;
  metadata.reflection = SUserNetInfo_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* UserInfo_SUserDBData_EObjectType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserInfo_SUserDBData_EObjectType_descriptor_;
}
bool UserInfo_SUserDBData_EObjectType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 10000:
    case 20000:
    case 30000:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const UserInfo_SUserDBData_EObjectType UserInfo_SUserDBData::eObjectType_None;
const UserInfo_SUserDBData_EObjectType UserInfo_SUserDBData::eObjectType_Guild;
const UserInfo_SUserDBData_EObjectType UserInfo_SUserDBData::eObjectType_User;
const UserInfo_SUserDBData_EObjectType UserInfo_SUserDBData::eObjectType_HeroBegin;
const UserInfo_SUserDBData_EObjectType UserInfo_SUserDBData::eObjectType_NPCBegin;
const UserInfo_SUserDBData_EObjectType UserInfo_SUserDBData::eObjectType_GoodsBegin;
const UserInfo_SUserDBData_EObjectType UserInfo_SUserDBData::EObjectType_MIN;
const UserInfo_SUserDBData_EObjectType UserInfo_SUserDBData::EObjectType_MAX;
const int UserInfo_SUserDBData::EObjectType_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* UserInfo_SUserDBData_EUserCate_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserInfo_SUserDBData_EUserCate_descriptor_;
}
bool UserInfo_SUserDBData_EUserCate_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const UserInfo_SUserDBData_EUserCate UserInfo_SUserDBData::eUserCate_Admin;
const UserInfo_SUserDBData_EUserCate UserInfo_SUserDBData::eUserCate_GM;
const UserInfo_SUserDBData_EUserCate UserInfo_SUserDBData::eUserCate_Robot;
const UserInfo_SUserDBData_EUserCate UserInfo_SUserDBData::eUserCate_DiamondVIP;
const UserInfo_SUserDBData_EUserCate UserInfo_SUserDBData::eUserCate_GloldVIP;
const UserInfo_SUserDBData_EUserCate UserInfo_SUserDBData::eUserCate_SilverVIP;
const UserInfo_SUserDBData_EUserCate UserInfo_SUserDBData::eUserCate_CopperVIP;
const UserInfo_SUserDBData_EUserCate UserInfo_SUserDBData::eUserCate_Normal;
const UserInfo_SUserDBData_EUserCate UserInfo_SUserDBData::EUserCate_MIN;
const UserInfo_SUserDBData_EUserCate UserInfo_SUserDBData::EUserCate_MAX;
const int UserInfo_SUserDBData::EUserCate_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* UserInfo_SUserDBData_EUserPlatform_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserInfo_SUserDBData_EUserPlatform_descriptor_;
}
bool UserInfo_SUserDBData_EUserPlatform_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const UserInfo_SUserDBData_EUserPlatform UserInfo_SUserDBData::eUP_None;
const UserInfo_SUserDBData_EUserPlatform UserInfo_SUserDBData::eUP_Apple;
const UserInfo_SUserDBData_EUserPlatform UserInfo_SUserDBData::eUP_QQ;
const UserInfo_SUserDBData_EUserPlatform UserInfo_SUserDBData::eUP_360;
const UserInfo_SUserDBData_EUserPlatform UserInfo_SUserDBData::EUserPlatform_MIN;
const UserInfo_SUserDBData_EUserPlatform UserInfo_SUserDBData::EUserPlatform_MAX;
const int UserInfo_SUserDBData::EUserPlatform_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int UserInfo_SUserDBData_SUserGuideSteps::kSzCSContinueGuideFieldNumber;
const int UserInfo_SUserDBData_SUserGuideSteps::kSzCSNoContinueGuideFieldNumber;
const int UserInfo_SUserDBData_SUserGuideSteps::kSzSSGuidesFieldNumber;
#endif  // !_MSC_VER

UserInfo_SUserDBData_SUserGuideSteps::UserInfo_SUserDBData_SUserGuideSteps()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.UserInfo.SUserDBData.SUserGuideSteps)
}

void UserInfo_SUserDBData_SUserGuideSteps::InitAsDefaultInstance() {
}

UserInfo_SUserDBData_SUserGuideSteps::UserInfo_SUserDBData_SUserGuideSteps(const UserInfo_SUserDBData_SUserGuideSteps& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.UserInfo.SUserDBData.SUserGuideSteps)
}

void UserInfo_SUserDBData_SUserGuideSteps::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  szcscontinueguide_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szcsnocontinueguide_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szssguides_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserInfo_SUserDBData_SUserGuideSteps::~UserInfo_SUserDBData_SUserGuideSteps() {
  // @@protoc_insertion_point(destructor:CSToSS.UserInfo.SUserDBData.SUserGuideSteps)
  SharedDtor();
}

void UserInfo_SUserDBData_SUserGuideSteps::SharedDtor() {
  if (szcscontinueguide_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szcscontinueguide_;
  }
  if (szcsnocontinueguide_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szcsnocontinueguide_;
  }
  if (szssguides_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szssguides_;
  }
  if (this != default_instance_) {
  }
}

void UserInfo_SUserDBData_SUserGuideSteps::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfo_SUserDBData_SUserGuideSteps::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserInfo_SUserDBData_SUserGuideSteps_descriptor_;
}

const UserInfo_SUserDBData_SUserGuideSteps& UserInfo_SUserDBData_SUserGuideSteps::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

UserInfo_SUserDBData_SUserGuideSteps* UserInfo_SUserDBData_SUserGuideSteps::default_instance_ = NULL;

UserInfo_SUserDBData_SUserGuideSteps* UserInfo_SUserDBData_SUserGuideSteps::New() const {
  return new UserInfo_SUserDBData_SUserGuideSteps;
}

void UserInfo_SUserDBData_SUserGuideSteps::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_szcscontinueguide()) {
      if (szcscontinueguide_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        szcscontinueguide_->clear();
      }
    }
    if (has_szcsnocontinueguide()) {
      if (szcsnocontinueguide_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        szcsnocontinueguide_->clear();
      }
    }
    if (has_szssguides()) {
      if (szssguides_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        szssguides_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserInfo_SUserDBData_SUserGuideSteps::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.UserInfo.SUserDBData.SUserGuideSteps)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string szCSContinueGuide = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szcscontinueguide()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->szcscontinueguide().data(), this->szcscontinueguide().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "szcscontinueguide");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_szCSNoContinueGuide;
        break;
      }

      // optional string szCSNoContinueGuide = 2;
      case 2: {
        if (tag == 18) {
         parse_szCSNoContinueGuide:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szcsnocontinueguide()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->szcsnocontinueguide().data(), this->szcsnocontinueguide().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "szcsnocontinueguide");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_szSSGuides;
        break;
      }

      // optional string szSSGuides = 3;
      case 3: {
        if (tag == 26) {
         parse_szSSGuides:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szssguides()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->szssguides().data(), this->szssguides().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "szssguides");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.UserInfo.SUserDBData.SUserGuideSteps)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.UserInfo.SUserDBData.SUserGuideSteps)
  return false;
#undef DO_
}

void UserInfo_SUserDBData_SUserGuideSteps::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.UserInfo.SUserDBData.SUserGuideSteps)
  // optional string szCSContinueGuide = 1;
  if (has_szcscontinueguide()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szcscontinueguide().data(), this->szcscontinueguide().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "szcscontinueguide");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->szcscontinueguide(), output);
  }

  // optional string szCSNoContinueGuide = 2;
  if (has_szcsnocontinueguide()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szcsnocontinueguide().data(), this->szcsnocontinueguide().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "szcsnocontinueguide");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->szcsnocontinueguide(), output);
  }

  // optional string szSSGuides = 3;
  if (has_szssguides()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szssguides().data(), this->szssguides().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "szssguides");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->szssguides(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.UserInfo.SUserDBData.SUserGuideSteps)
}

::google::protobuf::uint8* UserInfo_SUserDBData_SUserGuideSteps::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.UserInfo.SUserDBData.SUserGuideSteps)
  // optional string szCSContinueGuide = 1;
  if (has_szcscontinueguide()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szcscontinueguide().data(), this->szcscontinueguide().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "szcscontinueguide");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->szcscontinueguide(), target);
  }

  // optional string szCSNoContinueGuide = 2;
  if (has_szcsnocontinueguide()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szcsnocontinueguide().data(), this->szcsnocontinueguide().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "szcsnocontinueguide");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->szcsnocontinueguide(), target);
  }

  // optional string szSSGuides = 3;
  if (has_szssguides()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szssguides().data(), this->szssguides().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "szssguides");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->szssguides(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.UserInfo.SUserDBData.SUserGuideSteps)
  return target;
}

int UserInfo_SUserDBData_SUserGuideSteps::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string szCSContinueGuide = 1;
    if (has_szcscontinueguide()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->szcscontinueguide());
    }

    // optional string szCSNoContinueGuide = 2;
    if (has_szcsnocontinueguide()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->szcsnocontinueguide());
    }

    // optional string szSSGuides = 3;
    if (has_szssguides()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->szssguides());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserInfo_SUserDBData_SUserGuideSteps::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserInfo_SUserDBData_SUserGuideSteps* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserInfo_SUserDBData_SUserGuideSteps*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserInfo_SUserDBData_SUserGuideSteps::MergeFrom(const UserInfo_SUserDBData_SUserGuideSteps& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_szcscontinueguide()) {
      set_szcscontinueguide(from.szcscontinueguide());
    }
    if (from.has_szcsnocontinueguide()) {
      set_szcsnocontinueguide(from.szcsnocontinueguide());
    }
    if (from.has_szssguides()) {
      set_szssguides(from.szssguides());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserInfo_SUserDBData_SUserGuideSteps::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfo_SUserDBData_SUserGuideSteps::CopyFrom(const UserInfo_SUserDBData_SUserGuideSteps& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfo_SUserDBData_SUserGuideSteps::IsInitialized() const {

  return true;
}

void UserInfo_SUserDBData_SUserGuideSteps::Swap(UserInfo_SUserDBData_SUserGuideSteps* other) {
  if (other != this) {
    std::swap(szcscontinueguide_, other->szcscontinueguide_);
    std::swap(szcsnocontinueguide_, other->szcsnocontinueguide_);
    std::swap(szssguides_, other->szssguides_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserInfo_SUserDBData_SUserGuideSteps::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserInfo_SUserDBData_SUserGuideSteps_descriptor_;
  metadata.reflection = UserInfo_SUserDBData_SUserGuideSteps_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int UserInfo_SUserDBData::kEObjTypeFieldNumber;
const int UserInfo_SUserDBData::kUn64ObjIdxFieldNumber;
const int UserInfo_SUserDBData::kEUserCateFieldNumber;
const int UserInfo_SUserDBData::kEUserPlatformFieldNumber;
const int UserInfo_SUserDBData::kSzUserNameFieldNumber;
const int UserInfo_SUserDBData::kSzUserPwdFieldNumber;
const int UserInfo_SUserDBData::kSzNickNameFieldNumber;
const int UserInfo_SUserDBData::kUn32HeaderIDFieldNumber;
const int UserInfo_SUserDBData::kN8SexFieldNumber;
const int UserInfo_SUserDBData::kN64ScoreFieldNumber;
const int UserInfo_SUserDBData::kN64DiamondFieldNumber;
const int UserInfo_SUserDBData::kN64GoldFieldNumber;
const int UserInfo_SUserDBData::kTRegisteUTCMillisecFieldNumber;
const int UserInfo_SUserDBData::kTLastLoginUTCMillisecFieldNumber;
const int UserInfo_SUserDBData::kN32HeroNumFieldNumber;
const int UserInfo_SUserDBData::kN32RunesSlotOpenNumFieldNumber;
const int UserInfo_SUserDBData::kN32RunesBagNumFieldNumber;
const int UserInfo_SUserDBData::kN32RunesSlotNumFieldNumber;
const int UserInfo_SUserDBData::kN32FriendsNumFieldNumber;
const int UserInfo_SUserDBData::kN32BlacklistNumFieldNumber;
const int UserInfo_SUserDBData::kUn32TotalGameInnsFieldNumber;
const int UserInfo_SUserDBData::kUn32TotalWinInnsFieldNumber;
const int UserInfo_SUserDBData::kUn32TotalHeroKillsFieldNumber;
const int UserInfo_SUserDBData::kUn32TotalDestoryBuildingsFieldNumber;
const int UserInfo_SUserDBData::kUn32TotalDeadTimesFieldNumber;
const int UserInfo_SUserDBData::kUn16UserLvFieldNumber;
const int UserInfo_SUserDBData::kUn32UserCurLvExpFieldNumber;
const int UserInfo_SUserDBData::kTLastFirstWinTimeFieldNumber;
const int UserInfo_SUserDBData::kMGuideStepsFieldNumber;
const int UserInfo_SUserDBData::kSzFriendsFieldNumber;
#endif  // !_MSC_VER

UserInfo_SUserDBData::UserInfo_SUserDBData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.UserInfo.SUserDBData)
}

void UserInfo_SUserDBData::InitAsDefaultInstance() {
  mguidesteps_ = const_cast< ::CSToSS::UserInfo_SUserDBData_SUserGuideSteps*>(&::CSToSS::UserInfo_SUserDBData_SUserGuideSteps::default_instance());
}

UserInfo_SUserDBData::UserInfo_SUserDBData(const UserInfo_SUserDBData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.UserInfo.SUserDBData)
}

void UserInfo_SUserDBData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  eobjtype_ = 0;
  un64objidx_ = GOOGLE_LONGLONG(0);
  eusercate_ = 0;
  euserplatform_ = 0;
  szusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szuserpwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sznickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  un32headerid_ = 0;
  n8sex_ = 0;
  n64score_ = GOOGLE_LONGLONG(0);
  n64diamond_ = GOOGLE_LONGLONG(0);
  n64gold_ = GOOGLE_LONGLONG(0);
  tregisteutcmillisec_ = GOOGLE_LONGLONG(0);
  tlastloginutcmillisec_ = GOOGLE_LONGLONG(0);
  n32heronum_ = GOOGLE_LONGLONG(0);
  n32runesslotopennum_ = GOOGLE_LONGLONG(0);
  n32runesbagnum_ = 0;
  n32runesslotnum_ = 0;
  n32friendsnum_ = 0;
  n32blacklistnum_ = 0;
  un32totalgameinns_ = 0;
  un32totalwininns_ = 0;
  un32totalherokills_ = 0;
  un32totaldestorybuildings_ = 0;
  un32totaldeadtimes_ = 0;
  un16userlv_ = 0;
  un32usercurlvexp_ = 0;
  tlastfirstwintime_ = GOOGLE_LONGLONG(0);
  mguidesteps_ = NULL;
  szfriends_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserInfo_SUserDBData::~UserInfo_SUserDBData() {
  // @@protoc_insertion_point(destructor:CSToSS.UserInfo.SUserDBData)
  SharedDtor();
}

void UserInfo_SUserDBData::SharedDtor() {
  if (szusername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szusername_;
  }
  if (szuserpwd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szuserpwd_;
  }
  if (sznickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sznickname_;
  }
  if (szfriends_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szfriends_;
  }
  if (this != default_instance_) {
    delete mguidesteps_;
  }
}

void UserInfo_SUserDBData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfo_SUserDBData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserInfo_SUserDBData_descriptor_;
}

const UserInfo_SUserDBData& UserInfo_SUserDBData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

UserInfo_SUserDBData* UserInfo_SUserDBData::default_instance_ = NULL;

UserInfo_SUserDBData* UserInfo_SUserDBData::New() const {
  return new UserInfo_SUserDBData;
}

void UserInfo_SUserDBData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<UserInfo_SUserDBData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(un64objidx_, eusercate_);
    ZR_(euserplatform_, un32headerid_);
    if (has_szusername()) {
      if (szusername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        szusername_->clear();
      }
    }
    if (has_szuserpwd()) {
      if (szuserpwd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        szuserpwd_->clear();
      }
    }
    if (has_sznickname()) {
      if (sznickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sznickname_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(n64score_, n8sex_);
    ZR_(tlastloginutcmillisec_, n32runesslotopennum_);
  }
  if (_has_bits_[16 / 32] & 16711680) {
    ZR_(n32runesslotnum_, un32totaldestorybuildings_);
    n32runesbagnum_ = 0;
  }
  if (_has_bits_[24 / 32] & 1056964608) {
    ZR_(un32totaldeadtimes_, tlastfirstwintime_);
    if (has_mguidesteps()) {
      if (mguidesteps_ != NULL) mguidesteps_->::CSToSS::UserInfo_SUserDBData_SUserGuideSteps::Clear();
    }
    if (has_szfriends()) {
      if (szfriends_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        szfriends_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserInfo_SUserDBData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.UserInfo.SUserDBData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.UserInfo.SUserDBData.EObjectType eObjType = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::UserInfo_SUserDBData_EObjectType_IsValid(value)) {
            set_eobjtype(static_cast< ::CSToSS::UserInfo_SUserDBData_EObjectType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_un64ObjIdx;
        break;
      }

      // optional int64 un64ObjIdx = 2;
      case 2: {
        if (tag == 16) {
         parse_un64ObjIdx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &un64objidx_)));
          set_has_un64objidx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_eUserCate;
        break;
      }

      // optional .CSToSS.UserInfo.SUserDBData.EUserCate eUserCate = 3;
      case 3: {
        if (tag == 24) {
         parse_eUserCate:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::UserInfo_SUserDBData_EUserCate_IsValid(value)) {
            set_eusercate(static_cast< ::CSToSS::UserInfo_SUserDBData_EUserCate >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_eUserPlatform;
        break;
      }

      // optional .CSToSS.UserInfo.SUserDBData.EUserPlatform eUserPlatform = 4;
      case 4: {
        if (tag == 32) {
         parse_eUserPlatform:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::UserInfo_SUserDBData_EUserPlatform_IsValid(value)) {
            set_euserplatform(static_cast< ::CSToSS::UserInfo_SUserDBData_EUserPlatform >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_szUserName;
        break;
      }

      // optional string szUserName = 5;
      case 5: {
        if (tag == 42) {
         parse_szUserName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szusername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->szusername().data(), this->szusername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "szusername");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_szUserPwd;
        break;
      }

      // optional string szUserPwd = 6;
      case 6: {
        if (tag == 50) {
         parse_szUserPwd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szuserpwd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->szuserpwd().data(), this->szuserpwd().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "szuserpwd");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_szNickName;
        break;
      }

      // optional string szNickName = 7;
      case 7: {
        if (tag == 58) {
         parse_szNickName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sznickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sznickname().data(), this->sznickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sznickname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_un32HeaderID;
        break;
      }

      // optional int32 un32HeaderID = 8;
      case 8: {
        if (tag == 64) {
         parse_un32HeaderID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &un32headerid_)));
          set_has_un32headerid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_n8Sex;
        break;
      }

      // optional int32 n8Sex = 9;
      case 9: {
        if (tag == 72) {
         parse_n8Sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &n8sex_)));
          set_has_n8sex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_n64Score;
        break;
      }

      // optional int64 n64Score = 10;
      case 10: {
        if (tag == 80) {
         parse_n64Score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &n64score_)));
          set_has_n64score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_n64Diamond;
        break;
      }

      // optional int64 n64Diamond = 11;
      case 11: {
        if (tag == 88) {
         parse_n64Diamond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &n64diamond_)));
          set_has_n64diamond();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_n64Gold;
        break;
      }

      // optional int64 n64Gold = 12;
      case 12: {
        if (tag == 96) {
         parse_n64Gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &n64gold_)));
          set_has_n64gold();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_tRegisteUTCMillisec;
        break;
      }

      // optional int64 tRegisteUTCMillisec = 13;
      case 13: {
        if (tag == 104) {
         parse_tRegisteUTCMillisec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tregisteutcmillisec_)));
          set_has_tregisteutcmillisec();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_tLastLoginUTCMillisec;
        break;
      }

      // optional int64 tLastLoginUTCMillisec = 14;
      case 14: {
        if (tag == 112) {
         parse_tLastLoginUTCMillisec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tlastloginutcmillisec_)));
          set_has_tlastloginutcmillisec();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_n32HeroNum;
        break;
      }

      // optional int64 n32HeroNum = 15;
      case 15: {
        if (tag == 120) {
         parse_n32HeroNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &n32heronum_)));
          set_has_n32heronum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_n32RunesSlotOpenNum;
        break;
      }

      // optional int64 n32RunesSlotOpenNum = 16;
      case 16: {
        if (tag == 128) {
         parse_n32RunesSlotOpenNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &n32runesslotopennum_)));
          set_has_n32runesslotopennum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_n32RunesBagNum;
        break;
      }

      // optional int32 n32RunesBagNum = 17;
      case 17: {
        if (tag == 136) {
         parse_n32RunesBagNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &n32runesbagnum_)));
          set_has_n32runesbagnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_n32RunesSlotNum;
        break;
      }

      // optional int32 n32RunesSlotNum = 18;
      case 18: {
        if (tag == 144) {
         parse_n32RunesSlotNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &n32runesslotnum_)));
          set_has_n32runesslotnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_n32FriendsNum;
        break;
      }

      // optional int32 n32FriendsNum = 19;
      case 19: {
        if (tag == 152) {
         parse_n32FriendsNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &n32friendsnum_)));
          set_has_n32friendsnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_n32BlacklistNum;
        break;
      }

      // optional int32 n32BlacklistNum = 20;
      case 20: {
        if (tag == 160) {
         parse_n32BlacklistNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &n32blacklistnum_)));
          set_has_n32blacklistnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_un32TotalGameInns;
        break;
      }

      // optional int32 un32TotalGameInns = 21;
      case 21: {
        if (tag == 168) {
         parse_un32TotalGameInns:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &un32totalgameinns_)));
          set_has_un32totalgameinns();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_un32TotalWinInns;
        break;
      }

      // optional int32 un32TotalWinInns = 22;
      case 22: {
        if (tag == 176) {
         parse_un32TotalWinInns:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &un32totalwininns_)));
          set_has_un32totalwininns();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_un32TotalHeroKills;
        break;
      }

      // optional int32 un32TotalHeroKills = 23;
      case 23: {
        if (tag == 184) {
         parse_un32TotalHeroKills:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &un32totalherokills_)));
          set_has_un32totalherokills();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_un32TotalDestoryBuildings;
        break;
      }

      // optional int32 un32TotalDestoryBuildings = 24;
      case 24: {
        if (tag == 192) {
         parse_un32TotalDestoryBuildings:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &un32totaldestorybuildings_)));
          set_has_un32totaldestorybuildings();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_un32TotalDeadTimes;
        break;
      }

      // optional int32 un32TotalDeadTimes = 25;
      case 25: {
        if (tag == 200) {
         parse_un32TotalDeadTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &un32totaldeadtimes_)));
          set_has_un32totaldeadtimes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(208)) goto parse_un16UserLv;
        break;
      }

      // optional int32 un16UserLv = 26;
      case 26: {
        if (tag == 208) {
         parse_un16UserLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &un16userlv_)));
          set_has_un16userlv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(216)) goto parse_un32UserCurLvExp;
        break;
      }

      // optional int32 un32UserCurLvExp = 27;
      case 27: {
        if (tag == 216) {
         parse_un32UserCurLvExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &un32usercurlvexp_)));
          set_has_un32usercurlvexp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(224)) goto parse_tLastFirstWinTime;
        break;
      }

      // optional int64 tLastFirstWinTime = 28;
      case 28: {
        if (tag == 224) {
         parse_tLastFirstWinTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tlastfirstwintime_)));
          set_has_tlastfirstwintime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(234)) goto parse_mGuideSteps;
        break;
      }

      // optional .CSToSS.UserInfo.SUserDBData.SUserGuideSteps mGuideSteps = 29;
      case 29: {
        if (tag == 234) {
         parse_mGuideSteps:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mguidesteps()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(242)) goto parse_szFriends;
        break;
      }

      // optional string szFriends = 30;
      case 30: {
        if (tag == 242) {
         parse_szFriends:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szfriends()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->szfriends().data(), this->szfriends().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "szfriends");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.UserInfo.SUserDBData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.UserInfo.SUserDBData)
  return false;
#undef DO_
}

void UserInfo_SUserDBData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.UserInfo.SUserDBData)
  // optional .CSToSS.UserInfo.SUserDBData.EObjectType eObjType = 1;
  if (has_eobjtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->eobjtype(), output);
  }

  // optional int64 un64ObjIdx = 2;
  if (has_un64objidx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->un64objidx(), output);
  }

  // optional .CSToSS.UserInfo.SUserDBData.EUserCate eUserCate = 3;
  if (has_eusercate()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->eusercate(), output);
  }

  // optional .CSToSS.UserInfo.SUserDBData.EUserPlatform eUserPlatform = 4;
  if (has_euserplatform()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->euserplatform(), output);
  }

  // optional string szUserName = 5;
  if (has_szusername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szusername().data(), this->szusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "szusername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->szusername(), output);
  }

  // optional string szUserPwd = 6;
  if (has_szuserpwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szuserpwd().data(), this->szuserpwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "szuserpwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->szuserpwd(), output);
  }

  // optional string szNickName = 7;
  if (has_sznickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sznickname().data(), this->sznickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sznickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sznickname(), output);
  }

  // optional int32 un32HeaderID = 8;
  if (has_un32headerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->un32headerid(), output);
  }

  // optional int32 n8Sex = 9;
  if (has_n8sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->n8sex(), output);
  }

  // optional int64 n64Score = 10;
  if (has_n64score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->n64score(), output);
  }

  // optional int64 n64Diamond = 11;
  if (has_n64diamond()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->n64diamond(), output);
  }

  // optional int64 n64Gold = 12;
  if (has_n64gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->n64gold(), output);
  }

  // optional int64 tRegisteUTCMillisec = 13;
  if (has_tregisteutcmillisec()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->tregisteutcmillisec(), output);
  }

  // optional int64 tLastLoginUTCMillisec = 14;
  if (has_tlastloginutcmillisec()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->tlastloginutcmillisec(), output);
  }

  // optional int64 n32HeroNum = 15;
  if (has_n32heronum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->n32heronum(), output);
  }

  // optional int64 n32RunesSlotOpenNum = 16;
  if (has_n32runesslotopennum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->n32runesslotopennum(), output);
  }

  // optional int32 n32RunesBagNum = 17;
  if (has_n32runesbagnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->n32runesbagnum(), output);
  }

  // optional int32 n32RunesSlotNum = 18;
  if (has_n32runesslotnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->n32runesslotnum(), output);
  }

  // optional int32 n32FriendsNum = 19;
  if (has_n32friendsnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->n32friendsnum(), output);
  }

  // optional int32 n32BlacklistNum = 20;
  if (has_n32blacklistnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->n32blacklistnum(), output);
  }

  // optional int32 un32TotalGameInns = 21;
  if (has_un32totalgameinns()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->un32totalgameinns(), output);
  }

  // optional int32 un32TotalWinInns = 22;
  if (has_un32totalwininns()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->un32totalwininns(), output);
  }

  // optional int32 un32TotalHeroKills = 23;
  if (has_un32totalherokills()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->un32totalherokills(), output);
  }

  // optional int32 un32TotalDestoryBuildings = 24;
  if (has_un32totaldestorybuildings()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->un32totaldestorybuildings(), output);
  }

  // optional int32 un32TotalDeadTimes = 25;
  if (has_un32totaldeadtimes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->un32totaldeadtimes(), output);
  }

  // optional int32 un16UserLv = 26;
  if (has_un16userlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->un16userlv(), output);
  }

  // optional int32 un32UserCurLvExp = 27;
  if (has_un32usercurlvexp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->un32usercurlvexp(), output);
  }

  // optional int64 tLastFirstWinTime = 28;
  if (has_tlastfirstwintime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(28, this->tlastfirstwintime(), output);
  }

  // optional .CSToSS.UserInfo.SUserDBData.SUserGuideSteps mGuideSteps = 29;
  if (has_mguidesteps()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, this->mguidesteps(), output);
  }

  // optional string szFriends = 30;
  if (has_szfriends()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szfriends().data(), this->szfriends().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "szfriends");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      30, this->szfriends(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.UserInfo.SUserDBData)
}

::google::protobuf::uint8* UserInfo_SUserDBData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.UserInfo.SUserDBData)
  // optional .CSToSS.UserInfo.SUserDBData.EObjectType eObjType = 1;
  if (has_eobjtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->eobjtype(), target);
  }

  // optional int64 un64ObjIdx = 2;
  if (has_un64objidx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->un64objidx(), target);
  }

  // optional .CSToSS.UserInfo.SUserDBData.EUserCate eUserCate = 3;
  if (has_eusercate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->eusercate(), target);
  }

  // optional .CSToSS.UserInfo.SUserDBData.EUserPlatform eUserPlatform = 4;
  if (has_euserplatform()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->euserplatform(), target);
  }

  // optional string szUserName = 5;
  if (has_szusername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szusername().data(), this->szusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "szusername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->szusername(), target);
  }

  // optional string szUserPwd = 6;
  if (has_szuserpwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szuserpwd().data(), this->szuserpwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "szuserpwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->szuserpwd(), target);
  }

  // optional string szNickName = 7;
  if (has_sznickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sznickname().data(), this->sznickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sznickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->sznickname(), target);
  }

  // optional int32 un32HeaderID = 8;
  if (has_un32headerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->un32headerid(), target);
  }

  // optional int32 n8Sex = 9;
  if (has_n8sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->n8sex(), target);
  }

  // optional int64 n64Score = 10;
  if (has_n64score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->n64score(), target);
  }

  // optional int64 n64Diamond = 11;
  if (has_n64diamond()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->n64diamond(), target);
  }

  // optional int64 n64Gold = 12;
  if (has_n64gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->n64gold(), target);
  }

  // optional int64 tRegisteUTCMillisec = 13;
  if (has_tregisteutcmillisec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->tregisteutcmillisec(), target);
  }

  // optional int64 tLastLoginUTCMillisec = 14;
  if (has_tlastloginutcmillisec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->tlastloginutcmillisec(), target);
  }

  // optional int64 n32HeroNum = 15;
  if (has_n32heronum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->n32heronum(), target);
  }

  // optional int64 n32RunesSlotOpenNum = 16;
  if (has_n32runesslotopennum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->n32runesslotopennum(), target);
  }

  // optional int32 n32RunesBagNum = 17;
  if (has_n32runesbagnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->n32runesbagnum(), target);
  }

  // optional int32 n32RunesSlotNum = 18;
  if (has_n32runesslotnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->n32runesslotnum(), target);
  }

  // optional int32 n32FriendsNum = 19;
  if (has_n32friendsnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->n32friendsnum(), target);
  }

  // optional int32 n32BlacklistNum = 20;
  if (has_n32blacklistnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->n32blacklistnum(), target);
  }

  // optional int32 un32TotalGameInns = 21;
  if (has_un32totalgameinns()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->un32totalgameinns(), target);
  }

  // optional int32 un32TotalWinInns = 22;
  if (has_un32totalwininns()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->un32totalwininns(), target);
  }

  // optional int32 un32TotalHeroKills = 23;
  if (has_un32totalherokills()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->un32totalherokills(), target);
  }

  // optional int32 un32TotalDestoryBuildings = 24;
  if (has_un32totaldestorybuildings()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->un32totaldestorybuildings(), target);
  }

  // optional int32 un32TotalDeadTimes = 25;
  if (has_un32totaldeadtimes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->un32totaldeadtimes(), target);
  }

  // optional int32 un16UserLv = 26;
  if (has_un16userlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->un16userlv(), target);
  }

  // optional int32 un32UserCurLvExp = 27;
  if (has_un32usercurlvexp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->un32usercurlvexp(), target);
  }

  // optional int64 tLastFirstWinTime = 28;
  if (has_tlastfirstwintime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(28, this->tlastfirstwintime(), target);
  }

  // optional .CSToSS.UserInfo.SUserDBData.SUserGuideSteps mGuideSteps = 29;
  if (has_mguidesteps()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        29, this->mguidesteps(), target);
  }

  // optional string szFriends = 30;
  if (has_szfriends()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szfriends().data(), this->szfriends().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "szfriends");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        30, this->szfriends(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.UserInfo.SUserDBData)
  return target;
}

int UserInfo_SUserDBData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.UserInfo.SUserDBData.EObjectType eObjType = 1;
    if (has_eobjtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->eobjtype());
    }

    // optional int64 un64ObjIdx = 2;
    if (has_un64objidx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->un64objidx());
    }

    // optional .CSToSS.UserInfo.SUserDBData.EUserCate eUserCate = 3;
    if (has_eusercate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->eusercate());
    }

    // optional .CSToSS.UserInfo.SUserDBData.EUserPlatform eUserPlatform = 4;
    if (has_euserplatform()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->euserplatform());
    }

    // optional string szUserName = 5;
    if (has_szusername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->szusername());
    }

    // optional string szUserPwd = 6;
    if (has_szuserpwd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->szuserpwd());
    }

    // optional string szNickName = 7;
    if (has_sznickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sznickname());
    }

    // optional int32 un32HeaderID = 8;
    if (has_un32headerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->un32headerid());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 n8Sex = 9;
    if (has_n8sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->n8sex());
    }

    // optional int64 n64Score = 10;
    if (has_n64score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->n64score());
    }

    // optional int64 n64Diamond = 11;
    if (has_n64diamond()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->n64diamond());
    }

    // optional int64 n64Gold = 12;
    if (has_n64gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->n64gold());
    }

    // optional int64 tRegisteUTCMillisec = 13;
    if (has_tregisteutcmillisec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->tregisteutcmillisec());
    }

    // optional int64 tLastLoginUTCMillisec = 14;
    if (has_tlastloginutcmillisec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->tlastloginutcmillisec());
    }

    // optional int64 n32HeroNum = 15;
    if (has_n32heronum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->n32heronum());
    }

    // optional int64 n32RunesSlotOpenNum = 16;
    if (has_n32runesslotopennum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->n32runesslotopennum());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 n32RunesBagNum = 17;
    if (has_n32runesbagnum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->n32runesbagnum());
    }

    // optional int32 n32RunesSlotNum = 18;
    if (has_n32runesslotnum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->n32runesslotnum());
    }

    // optional int32 n32FriendsNum = 19;
    if (has_n32friendsnum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->n32friendsnum());
    }

    // optional int32 n32BlacklistNum = 20;
    if (has_n32blacklistnum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->n32blacklistnum());
    }

    // optional int32 un32TotalGameInns = 21;
    if (has_un32totalgameinns()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->un32totalgameinns());
    }

    // optional int32 un32TotalWinInns = 22;
    if (has_un32totalwininns()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->un32totalwininns());
    }

    // optional int32 un32TotalHeroKills = 23;
    if (has_un32totalherokills()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->un32totalherokills());
    }

    // optional int32 un32TotalDestoryBuildings = 24;
    if (has_un32totaldestorybuildings()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->un32totaldestorybuildings());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional int32 un32TotalDeadTimes = 25;
    if (has_un32totaldeadtimes()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->un32totaldeadtimes());
    }

    // optional int32 un16UserLv = 26;
    if (has_un16userlv()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->un16userlv());
    }

    // optional int32 un32UserCurLvExp = 27;
    if (has_un32usercurlvexp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->un32usercurlvexp());
    }

    // optional int64 tLastFirstWinTime = 28;
    if (has_tlastfirstwintime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->tlastfirstwintime());
    }

    // optional .CSToSS.UserInfo.SUserDBData.SUserGuideSteps mGuideSteps = 29;
    if (has_mguidesteps()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->mguidesteps());
    }

    // optional string szFriends = 30;
    if (has_szfriends()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->szfriends());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserInfo_SUserDBData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserInfo_SUserDBData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserInfo_SUserDBData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserInfo_SUserDBData::MergeFrom(const UserInfo_SUserDBData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_eobjtype()) {
      set_eobjtype(from.eobjtype());
    }
    if (from.has_un64objidx()) {
      set_un64objidx(from.un64objidx());
    }
    if (from.has_eusercate()) {
      set_eusercate(from.eusercate());
    }
    if (from.has_euserplatform()) {
      set_euserplatform(from.euserplatform());
    }
    if (from.has_szusername()) {
      set_szusername(from.szusername());
    }
    if (from.has_szuserpwd()) {
      set_szuserpwd(from.szuserpwd());
    }
    if (from.has_sznickname()) {
      set_sznickname(from.sznickname());
    }
    if (from.has_un32headerid()) {
      set_un32headerid(from.un32headerid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_n8sex()) {
      set_n8sex(from.n8sex());
    }
    if (from.has_n64score()) {
      set_n64score(from.n64score());
    }
    if (from.has_n64diamond()) {
      set_n64diamond(from.n64diamond());
    }
    if (from.has_n64gold()) {
      set_n64gold(from.n64gold());
    }
    if (from.has_tregisteutcmillisec()) {
      set_tregisteutcmillisec(from.tregisteutcmillisec());
    }
    if (from.has_tlastloginutcmillisec()) {
      set_tlastloginutcmillisec(from.tlastloginutcmillisec());
    }
    if (from.has_n32heronum()) {
      set_n32heronum(from.n32heronum());
    }
    if (from.has_n32runesslotopennum()) {
      set_n32runesslotopennum(from.n32runesslotopennum());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_n32runesbagnum()) {
      set_n32runesbagnum(from.n32runesbagnum());
    }
    if (from.has_n32runesslotnum()) {
      set_n32runesslotnum(from.n32runesslotnum());
    }
    if (from.has_n32friendsnum()) {
      set_n32friendsnum(from.n32friendsnum());
    }
    if (from.has_n32blacklistnum()) {
      set_n32blacklistnum(from.n32blacklistnum());
    }
    if (from.has_un32totalgameinns()) {
      set_un32totalgameinns(from.un32totalgameinns());
    }
    if (from.has_un32totalwininns()) {
      set_un32totalwininns(from.un32totalwininns());
    }
    if (from.has_un32totalherokills()) {
      set_un32totalherokills(from.un32totalherokills());
    }
    if (from.has_un32totaldestorybuildings()) {
      set_un32totaldestorybuildings(from.un32totaldestorybuildings());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_un32totaldeadtimes()) {
      set_un32totaldeadtimes(from.un32totaldeadtimes());
    }
    if (from.has_un16userlv()) {
      set_un16userlv(from.un16userlv());
    }
    if (from.has_un32usercurlvexp()) {
      set_un32usercurlvexp(from.un32usercurlvexp());
    }
    if (from.has_tlastfirstwintime()) {
      set_tlastfirstwintime(from.tlastfirstwintime());
    }
    if (from.has_mguidesteps()) {
      mutable_mguidesteps()->::CSToSS::UserInfo_SUserDBData_SUserGuideSteps::MergeFrom(from.mguidesteps());
    }
    if (from.has_szfriends()) {
      set_szfriends(from.szfriends());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserInfo_SUserDBData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfo_SUserDBData::CopyFrom(const UserInfo_SUserDBData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfo_SUserDBData::IsInitialized() const {

  return true;
}

void UserInfo_SUserDBData::Swap(UserInfo_SUserDBData* other) {
  if (other != this) {
    std::swap(eobjtype_, other->eobjtype_);
    std::swap(un64objidx_, other->un64objidx_);
    std::swap(eusercate_, other->eusercate_);
    std::swap(euserplatform_, other->euserplatform_);
    std::swap(szusername_, other->szusername_);
    std::swap(szuserpwd_, other->szuserpwd_);
    std::swap(sznickname_, other->sznickname_);
    std::swap(un32headerid_, other->un32headerid_);
    std::swap(n8sex_, other->n8sex_);
    std::swap(n64score_, other->n64score_);
    std::swap(n64diamond_, other->n64diamond_);
    std::swap(n64gold_, other->n64gold_);
    std::swap(tregisteutcmillisec_, other->tregisteutcmillisec_);
    std::swap(tlastloginutcmillisec_, other->tlastloginutcmillisec_);
    std::swap(n32heronum_, other->n32heronum_);
    std::swap(n32runesslotopennum_, other->n32runesslotopennum_);
    std::swap(n32runesbagnum_, other->n32runesbagnum_);
    std::swap(n32runesslotnum_, other->n32runesslotnum_);
    std::swap(n32friendsnum_, other->n32friendsnum_);
    std::swap(n32blacklistnum_, other->n32blacklistnum_);
    std::swap(un32totalgameinns_, other->un32totalgameinns_);
    std::swap(un32totalwininns_, other->un32totalwininns_);
    std::swap(un32totalherokills_, other->un32totalherokills_);
    std::swap(un32totaldestorybuildings_, other->un32totaldestorybuildings_);
    std::swap(un32totaldeadtimes_, other->un32totaldeadtimes_);
    std::swap(un16userlv_, other->un16userlv_);
    std::swap(un32usercurlvexp_, other->un32usercurlvexp_);
    std::swap(tlastfirstwintime_, other->tlastfirstwintime_);
    std::swap(mguidesteps_, other->mguidesteps_);
    std::swap(szfriends_, other->szfriends_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserInfo_SUserDBData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserInfo_SUserDBData_descriptor_;
  metadata.reflection = UserInfo_SUserDBData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int UserInfo_SUserRunesRuntimeData::kUn32RunesTypeIDFieldNumber;
const int UserInfo_SUserRunesRuntimeData::kN16PosFieldNumber;
const int UserInfo_SUserRunesRuntimeData::kN16NumFieldNumber;
const int UserInfo_SUserRunesRuntimeData::kN16RemainTimesFieldNumber;
#endif  // !_MSC_VER

UserInfo_SUserRunesRuntimeData::UserInfo_SUserRunesRuntimeData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.UserInfo.SUserRunesRuntimeData)
}

void UserInfo_SUserRunesRuntimeData::InitAsDefaultInstance() {
}

UserInfo_SUserRunesRuntimeData::UserInfo_SUserRunesRuntimeData(const UserInfo_SUserRunesRuntimeData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.UserInfo.SUserRunesRuntimeData)
}

void UserInfo_SUserRunesRuntimeData::SharedCtor() {
  _cached_size_ = 0;
  un32runestypeid_ = 0;
  n16pos_ = 0;
  n16num_ = 0;
  n16remaintimes_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserInfo_SUserRunesRuntimeData::~UserInfo_SUserRunesRuntimeData() {
  // @@protoc_insertion_point(destructor:CSToSS.UserInfo.SUserRunesRuntimeData)
  SharedDtor();
}

void UserInfo_SUserRunesRuntimeData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UserInfo_SUserRunesRuntimeData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfo_SUserRunesRuntimeData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserInfo_SUserRunesRuntimeData_descriptor_;
}

const UserInfo_SUserRunesRuntimeData& UserInfo_SUserRunesRuntimeData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

UserInfo_SUserRunesRuntimeData* UserInfo_SUserRunesRuntimeData::default_instance_ = NULL;

UserInfo_SUserRunesRuntimeData* UserInfo_SUserRunesRuntimeData::New() const {
  return new UserInfo_SUserRunesRuntimeData;
}

void UserInfo_SUserRunesRuntimeData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<UserInfo_SUserRunesRuntimeData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(un32runestypeid_, n16remaintimes_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserInfo_SUserRunesRuntimeData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.UserInfo.SUserRunesRuntimeData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 un32RunesTypeID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &un32runestypeid_)));
          set_has_un32runestypeid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_n16Pos;
        break;
      }

      // optional int32 n16Pos = 2;
      case 2: {
        if (tag == 16) {
         parse_n16Pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &n16pos_)));
          set_has_n16pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_n16Num;
        break;
      }

      // optional int32 n16Num = 3;
      case 3: {
        if (tag == 24) {
         parse_n16Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &n16num_)));
          set_has_n16num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_n16RemainTimes;
        break;
      }

      // optional int32 n16RemainTimes = 4;
      case 4: {
        if (tag == 32) {
         parse_n16RemainTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &n16remaintimes_)));
          set_has_n16remaintimes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.UserInfo.SUserRunesRuntimeData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.UserInfo.SUserRunesRuntimeData)
  return false;
#undef DO_
}

void UserInfo_SUserRunesRuntimeData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.UserInfo.SUserRunesRuntimeData)
  // optional int32 un32RunesTypeID = 1;
  if (has_un32runestypeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->un32runestypeid(), output);
  }

  // optional int32 n16Pos = 2;
  if (has_n16pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->n16pos(), output);
  }

  // optional int32 n16Num = 3;
  if (has_n16num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->n16num(), output);
  }

  // optional int32 n16RemainTimes = 4;
  if (has_n16remaintimes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->n16remaintimes(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.UserInfo.SUserRunesRuntimeData)
}

::google::protobuf::uint8* UserInfo_SUserRunesRuntimeData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.UserInfo.SUserRunesRuntimeData)
  // optional int32 un32RunesTypeID = 1;
  if (has_un32runestypeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->un32runestypeid(), target);
  }

  // optional int32 n16Pos = 2;
  if (has_n16pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->n16pos(), target);
  }

  // optional int32 n16Num = 3;
  if (has_n16num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->n16num(), target);
  }

  // optional int32 n16RemainTimes = 4;
  if (has_n16remaintimes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->n16remaintimes(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.UserInfo.SUserRunesRuntimeData)
  return target;
}

int UserInfo_SUserRunesRuntimeData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 un32RunesTypeID = 1;
    if (has_un32runestypeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->un32runestypeid());
    }

    // optional int32 n16Pos = 2;
    if (has_n16pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->n16pos());
    }

    // optional int32 n16Num = 3;
    if (has_n16num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->n16num());
    }

    // optional int32 n16RemainTimes = 4;
    if (has_n16remaintimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->n16remaintimes());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserInfo_SUserRunesRuntimeData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserInfo_SUserRunesRuntimeData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserInfo_SUserRunesRuntimeData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserInfo_SUserRunesRuntimeData::MergeFrom(const UserInfo_SUserRunesRuntimeData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_un32runestypeid()) {
      set_un32runestypeid(from.un32runestypeid());
    }
    if (from.has_n16pos()) {
      set_n16pos(from.n16pos());
    }
    if (from.has_n16num()) {
      set_n16num(from.n16num());
    }
    if (from.has_n16remaintimes()) {
      set_n16remaintimes(from.n16remaintimes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserInfo_SUserRunesRuntimeData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfo_SUserRunesRuntimeData::CopyFrom(const UserInfo_SUserRunesRuntimeData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfo_SUserRunesRuntimeData::IsInitialized() const {

  return true;
}

void UserInfo_SUserRunesRuntimeData::Swap(UserInfo_SUserRunesRuntimeData* other) {
  if (other != this) {
    std::swap(un32runestypeid_, other->un32runestypeid_);
    std::swap(n16pos_, other->n16pos_);
    std::swap(n16num_, other->n16num_);
    std::swap(n16remaintimes_, other->n16remaintimes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserInfo_SUserRunesRuntimeData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserInfo_SUserRunesRuntimeData_descriptor_;
  metadata.reflection = UserInfo_SUserRunesRuntimeData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int UserInfo::kUsernetinfoFieldNumber;
const int UserInfo::kUserdataFieldNumber;
const int UserInfo::kHerolistFieldNumber;
const int UserInfo::kRunesBagFieldNumber;
const int UserInfo::kRunesSlotFieldNumber;
const int UserInfo::kIfGuideFieldNumber;
#endif  // !_MSC_VER

UserInfo::UserInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.UserInfo)
}

void UserInfo::InitAsDefaultInstance() {
  usernetinfo_ = const_cast< ::CSToSS::SUserNetInfo*>(&::CSToSS::SUserNetInfo::default_instance());
  userdata_ = const_cast< ::CSToSS::UserInfo_SUserDBData*>(&::CSToSS::UserInfo_SUserDBData::default_instance());
}

UserInfo::UserInfo(const UserInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.UserInfo)
}

void UserInfo::SharedCtor() {
  _cached_size_ = 0;
  usernetinfo_ = NULL;
  userdata_ = NULL;
  ifguide_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:CSToSS.UserInfo)
  SharedDtor();
}

void UserInfo::SharedDtor() {
  if (this != default_instance_) {
    delete usernetinfo_;
    delete userdata_;
  }
}

void UserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserInfo_descriptor_;
}

const UserInfo& UserInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

UserInfo* UserInfo::default_instance_ = NULL;

UserInfo* UserInfo::New() const {
  return new UserInfo;
}

void UserInfo::Clear() {
  if (_has_bits_[0 / 32] & 35) {
    if (has_usernetinfo()) {
      if (usernetinfo_ != NULL) usernetinfo_->::CSToSS::SUserNetInfo::Clear();
    }
    if (has_userdata()) {
      if (userdata_ != NULL) userdata_->::CSToSS::UserInfo_SUserDBData::Clear();
    }
    ifguide_ = false;
  }
  herolist_.Clear();
  runesbag_.Clear();
  runesslot_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.UserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.SUserNetInfo usernetinfo = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_usernetinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_userdata;
        break;
      }

      // optional .CSToSS.UserInfo.SUserDBData userdata = 3;
      case 3: {
        if (tag == 26) {
         parse_userdata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_herolist;
        break;
      }

      // repeated int32 herolist = 4;
      case 4: {
        if (tag == 32) {
         parse_herolist:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_herolist())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_herolist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_herolist;
        if (input->ExpectTag(42)) goto parse_RunesBag;
        break;
      }

      // repeated .CSToSS.UserInfo.SUserRunesRuntimeData RunesBag = 5;
      case 5: {
        if (tag == 42) {
         parse_RunesBag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_runesbag()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_RunesBag;
        if (input->ExpectTag(50)) goto parse_RunesSlot;
        break;
      }

      // repeated .CSToSS.UserInfo.SUserRunesRuntimeData RunesSlot = 6;
      case 6: {
        if (tag == 50) {
         parse_RunesSlot:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_runesslot()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_RunesSlot;
        if (input->ExpectTag(56)) goto parse_ifGuide;
        break;
      }

      // optional bool ifGuide = 7;
      case 7: {
        if (tag == 56) {
         parse_ifGuide:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ifguide_)));
          set_has_ifguide();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.UserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.UserInfo)
  return false;
#undef DO_
}

void UserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.UserInfo)
  // optional .CSToSS.SUserNetInfo usernetinfo = 2;
  if (has_usernetinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->usernetinfo(), output);
  }

  // optional .CSToSS.UserInfo.SUserDBData userdata = 3;
  if (has_userdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->userdata(), output);
  }

  // repeated int32 herolist = 4;
  for (int i = 0; i < this->herolist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->herolist(i), output);
  }

  // repeated .CSToSS.UserInfo.SUserRunesRuntimeData RunesBag = 5;
  for (int i = 0; i < this->runesbag_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->runesbag(i), output);
  }

  // repeated .CSToSS.UserInfo.SUserRunesRuntimeData RunesSlot = 6;
  for (int i = 0; i < this->runesslot_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->runesslot(i), output);
  }

  // optional bool ifGuide = 7;
  if (has_ifguide()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->ifguide(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.UserInfo)
}

::google::protobuf::uint8* UserInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.UserInfo)
  // optional .CSToSS.SUserNetInfo usernetinfo = 2;
  if (has_usernetinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->usernetinfo(), target);
  }

  // optional .CSToSS.UserInfo.SUserDBData userdata = 3;
  if (has_userdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->userdata(), target);
  }

  // repeated int32 herolist = 4;
  for (int i = 0; i < this->herolist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->herolist(i), target);
  }

  // repeated .CSToSS.UserInfo.SUserRunesRuntimeData RunesBag = 5;
  for (int i = 0; i < this->runesbag_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->runesbag(i), target);
  }

  // repeated .CSToSS.UserInfo.SUserRunesRuntimeData RunesSlot = 6;
  for (int i = 0; i < this->runesslot_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->runesslot(i), target);
  }

  // optional bool ifGuide = 7;
  if (has_ifguide()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->ifguide(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.UserInfo)
  return target;
}

int UserInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.SUserNetInfo usernetinfo = 2;
    if (has_usernetinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->usernetinfo());
    }

    // optional .CSToSS.UserInfo.SUserDBData userdata = 3;
    if (has_userdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userdata());
    }

    // optional bool ifGuide = 7;
    if (has_ifguide()) {
      total_size += 1 + 1;
    }

  }
  // repeated int32 herolist = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->herolist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->herolist(i));
    }
    total_size += 1 * this->herolist_size() + data_size;
  }

  // repeated .CSToSS.UserInfo.SUserRunesRuntimeData RunesBag = 5;
  total_size += 1 * this->runesbag_size();
  for (int i = 0; i < this->runesbag_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->runesbag(i));
  }

  // repeated .CSToSS.UserInfo.SUserRunesRuntimeData RunesSlot = 6;
  total_size += 1 * this->runesslot_size();
  for (int i = 0; i < this->runesslot_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->runesslot(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserInfo::MergeFrom(const UserInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  herolist_.MergeFrom(from.herolist_);
  runesbag_.MergeFrom(from.runesbag_);
  runesslot_.MergeFrom(from.runesslot_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_usernetinfo()) {
      mutable_usernetinfo()->::CSToSS::SUserNetInfo::MergeFrom(from.usernetinfo());
    }
    if (from.has_userdata()) {
      mutable_userdata()->::CSToSS::UserInfo_SUserDBData::MergeFrom(from.userdata());
    }
    if (from.has_ifguide()) {
      set_ifguide(from.ifguide());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfo::CopyFrom(const UserInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfo::IsInitialized() const {

  return true;
}

void UserInfo::Swap(UserInfo* other) {
  if (other != this) {
    std::swap(usernetinfo_, other->usernetinfo_);
    std::swap(userdata_, other->userdata_);
    herolist_.Swap(&other->herolist_);
    runesbag_.Swap(&other->runesbag_);
    runesslot_.Swap(&other->runesslot_);
    std::swap(ifguide_, other->ifguide_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserInfo_descriptor_;
  metadata.reflection = UserInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UserRoomInfo::kIfmasterFieldNumber;
const int UserRoomInfo::kHeroidFieldNumber;
const int UserRoomInfo::kGuidFieldNumber;
const int UserRoomInfo::kPosFieldNumber;
#endif  // !_MSC_VER

UserRoomInfo::UserRoomInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.UserRoomInfo)
}

void UserRoomInfo::InitAsDefaultInstance() {
}

UserRoomInfo::UserRoomInfo(const UserRoomInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.UserRoomInfo)
}

void UserRoomInfo::SharedCtor() {
  _cached_size_ = 0;
  ifmaster_ = false;
  heroid_ = 0u;
  guid_ = GOOGLE_ULONGLONG(0);
  pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserRoomInfo::~UserRoomInfo() {
  // @@protoc_insertion_point(destructor:CSToSS.UserRoomInfo)
  SharedDtor();
}

void UserRoomInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UserRoomInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserRoomInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserRoomInfo_descriptor_;
}

const UserRoomInfo& UserRoomInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

UserRoomInfo* UserRoomInfo::default_instance_ = NULL;

UserRoomInfo* UserRoomInfo::New() const {
  return new UserRoomInfo;
}

void UserRoomInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<UserRoomInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(ifmaster_, pos_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserRoomInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.UserRoomInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool ifmaster = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ifmaster_)));
          set_has_ifmaster();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_heroid;
        break;
      }

      // optional uint32 heroid = 2;
      case 2: {
        if (tag == 16) {
         parse_heroid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_guid;
        break;
      }

      // optional uint64 guid = 3;
      case 3: {
        if (tag == 24) {
         parse_guid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
          set_has_guid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pos;
        break;
      }

      // optional int32 pos = 4;
      case 4: {
        if (tag == 32) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.UserRoomInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.UserRoomInfo)
  return false;
#undef DO_
}

void UserRoomInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.UserRoomInfo)
  // optional bool ifmaster = 1;
  if (has_ifmaster()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->ifmaster(), output);
  }

  // optional uint32 heroid = 2;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->heroid(), output);
  }

  // optional uint64 guid = 3;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->guid(), output);
  }

  // optional int32 pos = 4;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.UserRoomInfo)
}

::google::protobuf::uint8* UserRoomInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.UserRoomInfo)
  // optional bool ifmaster = 1;
  if (has_ifmaster()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->ifmaster(), target);
  }

  // optional uint32 heroid = 2;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->heroid(), target);
  }

  // optional uint64 guid = 3;
  if (has_guid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->guid(), target);
  }

  // optional int32 pos = 4;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.UserRoomInfo)
  return target;
}

int UserRoomInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool ifmaster = 1;
    if (has_ifmaster()) {
      total_size += 1 + 1;
    }

    // optional uint32 heroid = 2;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }

    // optional uint64 guid = 3;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->guid());
    }

    // optional int32 pos = 4;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserRoomInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserRoomInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserRoomInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserRoomInfo::MergeFrom(const UserRoomInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ifmaster()) {
      set_ifmaster(from.ifmaster());
    }
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
    if (from.has_guid()) {
      set_guid(from.guid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserRoomInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRoomInfo::CopyFrom(const UserRoomInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRoomInfo::IsInitialized() const {

  return true;
}

void UserRoomInfo::Swap(UserRoomInfo* other) {
  if (other != this) {
    std::swap(ifmaster_, other->ifmaster_);
    std::swap(heroid_, other->heroid_);
    std::swap(guid_, other->guid_);
    std::swap(pos_, other->pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserRoomInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserRoomInfo_descriptor_;
  metadata.reflection = UserRoomInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OrderBeginNewBattle::kMsgidFieldNumber;
const int OrderBeginNewBattle::kBattleidFieldNumber;
const int OrderBeginNewBattle::kStateFieldNumber;
const int OrderBeginNewBattle::kMapidFieldNumber;
const int OrderBeginNewBattle::kSsidFieldNumber;
const int OrderBeginNewBattle::kUserRoomInfoFieldNumber;
const int OrderBeginNewBattle::kUserinfoFieldNumber;
#endif  // !_MSC_VER

OrderBeginNewBattle::OrderBeginNewBattle()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.OrderBeginNewBattle)
}

void OrderBeginNewBattle::InitAsDefaultInstance() {
}

OrderBeginNewBattle::OrderBeginNewBattle(const OrderBeginNewBattle& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.OrderBeginNewBattle)
}

void OrderBeginNewBattle::SharedCtor() {
  _cached_size_ = 0;
  msgid_ = 16388;
  battleid_ = GOOGLE_ULONGLONG(0);
  state_ = 0;
  mapid_ = 0;
  ssid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OrderBeginNewBattle::~OrderBeginNewBattle() {
  // @@protoc_insertion_point(destructor:CSToSS.OrderBeginNewBattle)
  SharedDtor();
}

void OrderBeginNewBattle::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OrderBeginNewBattle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderBeginNewBattle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrderBeginNewBattle_descriptor_;
}

const OrderBeginNewBattle& OrderBeginNewBattle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

OrderBeginNewBattle* OrderBeginNewBattle::default_instance_ = NULL;

OrderBeginNewBattle* OrderBeginNewBattle::New() const {
  return new OrderBeginNewBattle;
}

void OrderBeginNewBattle::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<OrderBeginNewBattle*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(state_, ssid_);
    msgid_ = 16388;
    battleid_ = GOOGLE_ULONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  userroominfo_.Clear();
  userinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OrderBeginNewBattle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.OrderBeginNewBattle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_OrderBeginNewBattle];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_battleid;
        break;
      }

      // optional uint64 battleid = 2;
      case 2: {
        if (tag == 16) {
         parse_battleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battleid_)));
          set_has_battleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_state;
        break;
      }

      // optional int32 state = 3;
      case 3: {
        if (tag == 24) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_mapid;
        break;
      }

      // optional int32 mapid = 4;
      case 4: {
        if (tag == 32) {
         parse_mapid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapid_)));
          set_has_mapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ssid;
        break;
      }

      // optional int32 ssid = 5;
      case 5: {
        if (tag == 40) {
         parse_ssid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ssid_)));
          set_has_ssid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_userRoomInfo;
        break;
      }

      // repeated .CSToSS.UserRoomInfo userRoomInfo = 6;
      case 6: {
        if (tag == 50) {
         parse_userRoomInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_userroominfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_userRoomInfo;
        if (input->ExpectTag(58)) goto parse_userinfo;
        break;
      }

      // repeated .CSToSS.UserInfo userinfo = 7;
      case 7: {
        if (tag == 58) {
         parse_userinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_userinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_userinfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.OrderBeginNewBattle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.OrderBeginNewBattle)
  return false;
#undef DO_
}

void OrderBeginNewBattle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.OrderBeginNewBattle)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_OrderBeginNewBattle];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // optional uint64 battleid = 2;
  if (has_battleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->battleid(), output);
  }

  // optional int32 state = 3;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->state(), output);
  }

  // optional int32 mapid = 4;
  if (has_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->mapid(), output);
  }

  // optional int32 ssid = 5;
  if (has_ssid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->ssid(), output);
  }

  // repeated .CSToSS.UserRoomInfo userRoomInfo = 6;
  for (int i = 0; i < this->userroominfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->userroominfo(i), output);
  }

  // repeated .CSToSS.UserInfo userinfo = 7;
  for (int i = 0; i < this->userinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->userinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.OrderBeginNewBattle)
}

::google::protobuf::uint8* OrderBeginNewBattle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.OrderBeginNewBattle)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_OrderBeginNewBattle];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // optional uint64 battleid = 2;
  if (has_battleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->battleid(), target);
  }

  // optional int32 state = 3;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->state(), target);
  }

  // optional int32 mapid = 4;
  if (has_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->mapid(), target);
  }

  // optional int32 ssid = 5;
  if (has_ssid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->ssid(), target);
  }

  // repeated .CSToSS.UserRoomInfo userRoomInfo = 6;
  for (int i = 0; i < this->userroominfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->userroominfo(i), target);
  }

  // repeated .CSToSS.UserInfo userinfo = 7;
  for (int i = 0; i < this->userinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->userinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.OrderBeginNewBattle)
  return target;
}

int OrderBeginNewBattle::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_OrderBeginNewBattle];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

    // optional uint64 battleid = 2;
    if (has_battleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->battleid());
    }

    // optional int32 state = 3;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }

    // optional int32 mapid = 4;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapid());
    }

    // optional int32 ssid = 5;
    if (has_ssid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ssid());
    }

  }
  // repeated .CSToSS.UserRoomInfo userRoomInfo = 6;
  total_size += 1 * this->userroominfo_size();
  for (int i = 0; i < this->userroominfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->userroominfo(i));
  }

  // repeated .CSToSS.UserInfo userinfo = 7;
  total_size += 1 * this->userinfo_size();
  for (int i = 0; i < this->userinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->userinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderBeginNewBattle::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OrderBeginNewBattle* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OrderBeginNewBattle*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OrderBeginNewBattle::MergeFrom(const OrderBeginNewBattle& from) {
  GOOGLE_CHECK_NE(&from, this);
  userroominfo_.MergeFrom(from.userroominfo_);
  userinfo_.MergeFrom(from.userinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
    if (from.has_battleid()) {
      set_battleid(from.battleid());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_mapid()) {
      set_mapid(from.mapid());
    }
    if (from.has_ssid()) {
      set_ssid(from.ssid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OrderBeginNewBattle::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderBeginNewBattle::CopyFrom(const OrderBeginNewBattle& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderBeginNewBattle::IsInitialized() const {

  return true;
}

void OrderBeginNewBattle::Swap(OrderBeginNewBattle* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    std::swap(battleid_, other->battleid_);
    std::swap(state_, other->state_);
    std::swap(mapid_, other->mapid_);
    std::swap(ssid_, other->ssid_);
    userroominfo_.Swap(&other->userroominfo_);
    userinfo_.Swap(&other->userinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OrderBeginNewBattle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OrderBeginNewBattle_descriptor_;
  metadata.reflection = OrderBeginNewBattle_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyBattleStateChange::kMsgidFieldNumber;
const int NotifyBattleStateChange::kBattleidFieldNumber;
const int NotifyBattleStateChange::kStateFieldNumber;
#endif  // !_MSC_VER

NotifyBattleStateChange::NotifyBattleStateChange()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifyBattleStateChange)
}

void NotifyBattleStateChange::InitAsDefaultInstance() {
}

NotifyBattleStateChange::NotifyBattleStateChange(const NotifyBattleStateChange& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifyBattleStateChange)
}

void NotifyBattleStateChange::SharedCtor() {
  _cached_size_ = 0;
  msgid_ = 16389;
  battleid_ = GOOGLE_ULONGLONG(0);
  state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyBattleStateChange::~NotifyBattleStateChange() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifyBattleStateChange)
  SharedDtor();
}

void NotifyBattleStateChange::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyBattleStateChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyBattleStateChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyBattleStateChange_descriptor_;
}

const NotifyBattleStateChange& NotifyBattleStateChange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifyBattleStateChange* NotifyBattleStateChange::default_instance_ = NULL;

NotifyBattleStateChange* NotifyBattleStateChange::New() const {
  return new NotifyBattleStateChange;
}

void NotifyBattleStateChange::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgid_ = 16389;
    battleid_ = GOOGLE_ULONGLONG(0);
    state_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyBattleStateChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifyBattleStateChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyBattleStateChange];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_battleid;
        break;
      }

      // optional uint64 battleid = 2;
      case 2: {
        if (tag == 16) {
         parse_battleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battleid_)));
          set_has_battleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_state;
        break;
      }

      // optional int32 state = 3;
      case 3: {
        if (tag == 24) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifyBattleStateChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifyBattleStateChange)
  return false;
#undef DO_
}

void NotifyBattleStateChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifyBattleStateChange)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyBattleStateChange];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // optional uint64 battleid = 2;
  if (has_battleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->battleid(), output);
  }

  // optional int32 state = 3;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->state(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifyBattleStateChange)
}

::google::protobuf::uint8* NotifyBattleStateChange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifyBattleStateChange)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyBattleStateChange];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // optional uint64 battleid = 2;
  if (has_battleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->battleid(), target);
  }

  // optional int32 state = 3;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->state(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifyBattleStateChange)
  return target;
}

int NotifyBattleStateChange::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyBattleStateChange];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

    // optional uint64 battleid = 2;
    if (has_battleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->battleid());
    }

    // optional int32 state = 3;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyBattleStateChange::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyBattleStateChange* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyBattleStateChange*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyBattleStateChange::MergeFrom(const NotifyBattleStateChange& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
    if (from.has_battleid()) {
      set_battleid(from.battleid());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyBattleStateChange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyBattleStateChange::CopyFrom(const NotifyBattleStateChange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyBattleStateChange::IsInitialized() const {

  return true;
}

void NotifyBattleStateChange::Swap(NotifyBattleStateChange* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    std::swap(battleid_, other->battleid_);
    std::swap(state_, other->state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyBattleStateChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyBattleStateChange_descriptor_;
  metadata.reflection = NotifyBattleStateChange_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyUsetNetInfoChange::kMsgidFieldNumber;
const int NotifyUsetNetInfoChange::kGuidFieldNumber;
const int NotifyUsetNetInfoChange::kNetinfoFieldNumber;
#endif  // !_MSC_VER

NotifyUsetNetInfoChange::NotifyUsetNetInfoChange()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifyUsetNetInfoChange)
}

void NotifyUsetNetInfoChange::InitAsDefaultInstance() {
  netinfo_ = const_cast< ::CSToSS::SUserNetInfo*>(&::CSToSS::SUserNetInfo::default_instance());
}

NotifyUsetNetInfoChange::NotifyUsetNetInfoChange(const NotifyUsetNetInfoChange& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifyUsetNetInfoChange)
}

void NotifyUsetNetInfoChange::SharedCtor() {
  _cached_size_ = 0;
  msgid_ = 16390;
  guid_ = GOOGLE_ULONGLONG(0);
  netinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyUsetNetInfoChange::~NotifyUsetNetInfoChange() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifyUsetNetInfoChange)
  SharedDtor();
}

void NotifyUsetNetInfoChange::SharedDtor() {
  if (this != default_instance_) {
    delete netinfo_;
  }
}

void NotifyUsetNetInfoChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyUsetNetInfoChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyUsetNetInfoChange_descriptor_;
}

const NotifyUsetNetInfoChange& NotifyUsetNetInfoChange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifyUsetNetInfoChange* NotifyUsetNetInfoChange::default_instance_ = NULL;

NotifyUsetNetInfoChange* NotifyUsetNetInfoChange::New() const {
  return new NotifyUsetNetInfoChange;
}

void NotifyUsetNetInfoChange::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgid_ = 16390;
    guid_ = GOOGLE_ULONGLONG(0);
    if (has_netinfo()) {
      if (netinfo_ != NULL) netinfo_->::CSToSS::SUserNetInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyUsetNetInfoChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifyUsetNetInfoChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyUsetNetInfoChange];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_guid;
        break;
      }

      // optional uint64 guid = 2;
      case 2: {
        if (tag == 16) {
         parse_guid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
          set_has_guid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_netinfo;
        break;
      }

      // optional .CSToSS.SUserNetInfo netinfo = 3;
      case 3: {
        if (tag == 26) {
         parse_netinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_netinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifyUsetNetInfoChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifyUsetNetInfoChange)
  return false;
#undef DO_
}

void NotifyUsetNetInfoChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifyUsetNetInfoChange)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyUsetNetInfoChange];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // optional uint64 guid = 2;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  // optional .CSToSS.SUserNetInfo netinfo = 3;
  if (has_netinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->netinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifyUsetNetInfoChange)
}

::google::protobuf::uint8* NotifyUsetNetInfoChange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifyUsetNetInfoChange)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyUsetNetInfoChange];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // optional uint64 guid = 2;
  if (has_guid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  // optional .CSToSS.SUserNetInfo netinfo = 3;
  if (has_netinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->netinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifyUsetNetInfoChange)
  return target;
}

int NotifyUsetNetInfoChange::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyUsetNetInfoChange];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

    // optional uint64 guid = 2;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->guid());
    }

    // optional .CSToSS.SUserNetInfo netinfo = 3;
    if (has_netinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->netinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyUsetNetInfoChange::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyUsetNetInfoChange* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyUsetNetInfoChange*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyUsetNetInfoChange::MergeFrom(const NotifyUsetNetInfoChange& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
    if (from.has_guid()) {
      set_guid(from.guid());
    }
    if (from.has_netinfo()) {
      mutable_netinfo()->::CSToSS::SUserNetInfo::MergeFrom(from.netinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyUsetNetInfoChange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyUsetNetInfoChange::CopyFrom(const NotifyUsetNetInfoChange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyUsetNetInfoChange::IsInitialized() const {

  return true;
}

void NotifyUsetNetInfoChange::Swap(NotifyUsetNetInfoChange* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    std::swap(guid_, other->guid_);
    std::swap(netinfo_, other->netinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyUsetNetInfoChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyUsetNetInfoChange_descriptor_;
  metadata.reflection = NotifyUsetNetInfoChange_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PingRet::kMsgidFieldNumber;
const int PingRet::kTimeFieldNumber;
#endif  // !_MSC_VER

PingRet::PingRet()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.PingRet)
}

void PingRet::InitAsDefaultInstance() {
}

PingRet::PingRet(const PingRet& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.PingRet)
}

void PingRet::SharedCtor() {
  _cached_size_ = 0;
  msgid_ = 16385;
  time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PingRet::~PingRet() {
  // @@protoc_insertion_point(destructor:CSToSS.PingRet)
  SharedDtor();
}

void PingRet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PingRet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PingRet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PingRet_descriptor_;
}

const PingRet& PingRet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

PingRet* PingRet::default_instance_ = NULL;

PingRet* PingRet::New() const {
  return new PingRet;
}

void PingRet::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgid_ = 16385;
    time_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PingRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.PingRet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_AskPingRet];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_time;
        break;
      }

      // optional int64 time = 2;
      case 2: {
        if (tag == 16) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.PingRet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.PingRet)
  return false;
#undef DO_
}

void PingRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.PingRet)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_AskPingRet];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // optional int64 time = 2;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.PingRet)
}

::google::protobuf::uint8* PingRet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.PingRet)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_AskPingRet];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // optional int64 time = 2;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.PingRet)
  return target;
}

int PingRet::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_AskPingRet];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

    // optional int64 time = 2;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PingRet::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PingRet* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PingRet*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PingRet::MergeFrom(const PingRet& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PingRet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PingRet::CopyFrom(const PingRet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PingRet::IsInitialized() const {

  return true;
}

void PingRet::Swap(PingRet* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    std::swap(time_, other->time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PingRet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PingRet_descriptor_;
  metadata.reflection = PingRet_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyBuffCfgList::kMsgidFieldNumber;
const int NotifyBuffCfgList::kTimeFieldNumber;
#endif  // !_MSC_VER

NotifyBuffCfgList::NotifyBuffCfgList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifyBuffCfgList)
}

void NotifyBuffCfgList::InitAsDefaultInstance() {
}

NotifyBuffCfgList::NotifyBuffCfgList(const NotifyBuffCfgList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifyBuffCfgList)
}

void NotifyBuffCfgList::SharedCtor() {
  _cached_size_ = 0;
  msgid_ = 16391;
  time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyBuffCfgList::~NotifyBuffCfgList() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifyBuffCfgList)
  SharedDtor();
}

void NotifyBuffCfgList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyBuffCfgList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyBuffCfgList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyBuffCfgList_descriptor_;
}

const NotifyBuffCfgList& NotifyBuffCfgList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifyBuffCfgList* NotifyBuffCfgList::default_instance_ = NULL;

NotifyBuffCfgList* NotifyBuffCfgList::New() const {
  return new NotifyBuffCfgList;
}

void NotifyBuffCfgList::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgid_ = 16391;
    time_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyBuffCfgList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifyBuffCfgList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyBuffCfgList];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_time;
        break;
      }

      // optional int64 time = 2;
      case 2: {
        if (tag == 16) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifyBuffCfgList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifyBuffCfgList)
  return false;
#undef DO_
}

void NotifyBuffCfgList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifyBuffCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyBuffCfgList];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // optional int64 time = 2;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifyBuffCfgList)
}

::google::protobuf::uint8* NotifyBuffCfgList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifyBuffCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyBuffCfgList];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // optional int64 time = 2;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifyBuffCfgList)
  return target;
}

int NotifyBuffCfgList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyBuffCfgList];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

    // optional int64 time = 2;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyBuffCfgList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyBuffCfgList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyBuffCfgList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyBuffCfgList::MergeFrom(const NotifyBuffCfgList& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyBuffCfgList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyBuffCfgList::CopyFrom(const NotifyBuffCfgList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyBuffCfgList::IsInitialized() const {

  return true;
}

void NotifyBuffCfgList::Swap(NotifyBuffCfgList* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    std::swap(time_, other->time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyBuffCfgList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyBuffCfgList_descriptor_;
  metadata.reflection = NotifyBuffCfgList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifySkillCfgList::kMsgidFieldNumber;
const int NotifySkillCfgList::kTimeFieldNumber;
#endif  // !_MSC_VER

NotifySkillCfgList::NotifySkillCfgList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifySkillCfgList)
}

void NotifySkillCfgList::InitAsDefaultInstance() {
}

NotifySkillCfgList::NotifySkillCfgList(const NotifySkillCfgList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifySkillCfgList)
}

void NotifySkillCfgList::SharedCtor() {
  _cached_size_ = 0;
  msgid_ = 16392;
  time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifySkillCfgList::~NotifySkillCfgList() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifySkillCfgList)
  SharedDtor();
}

void NotifySkillCfgList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifySkillCfgList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifySkillCfgList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifySkillCfgList_descriptor_;
}

const NotifySkillCfgList& NotifySkillCfgList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifySkillCfgList* NotifySkillCfgList::default_instance_ = NULL;

NotifySkillCfgList* NotifySkillCfgList::New() const {
  return new NotifySkillCfgList;
}

void NotifySkillCfgList::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgid_ = 16392;
    time_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifySkillCfgList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifySkillCfgList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillCfgList];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_time;
        break;
      }

      // optional int64 time = 2;
      case 2: {
        if (tag == 16) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifySkillCfgList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifySkillCfgList)
  return false;
#undef DO_
}

void NotifySkillCfgList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifySkillCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillCfgList];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // optional int64 time = 2;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifySkillCfgList)
}

::google::protobuf::uint8* NotifySkillCfgList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifySkillCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillCfgList];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // optional int64 time = 2;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifySkillCfgList)
  return target;
}

int NotifySkillCfgList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillCfgList];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

    // optional int64 time = 2;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifySkillCfgList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifySkillCfgList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifySkillCfgList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifySkillCfgList::MergeFrom(const NotifySkillCfgList& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifySkillCfgList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifySkillCfgList::CopyFrom(const NotifySkillCfgList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifySkillCfgList::IsInitialized() const {

  return true;
}

void NotifySkillCfgList::Swap(NotifySkillCfgList* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    std::swap(time_, other->time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifySkillCfgList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifySkillCfgList_descriptor_;
  metadata.reflection = NotifySkillCfgList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyNPCCfgList::kMsgidFieldNumber;
const int NotifyNPCCfgList::kCfgFieldNumber;
#endif  // !_MSC_VER

NotifyNPCCfgList::NotifyNPCCfgList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifyNPCCfgList)
}

void NotifyNPCCfgList::InitAsDefaultInstance() {
}

NotifyNPCCfgList::NotifyNPCCfgList(const NotifyNPCCfgList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifyNPCCfgList)
}

void NotifyNPCCfgList::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 16393;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyNPCCfgList::~NotifyNPCCfgList() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifyNPCCfgList)
  SharedDtor();
}

void NotifyNPCCfgList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyNPCCfgList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyNPCCfgList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyNPCCfgList_descriptor_;
}

const NotifyNPCCfgList& NotifyNPCCfgList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifyNPCCfgList* NotifyNPCCfgList::default_instance_ = NULL;

NotifyNPCCfgList* NotifyNPCCfgList::New() const {
  return new NotifyNPCCfgList;
}

void NotifyNPCCfgList::Clear() {
  msgid_ = 16393;
  cfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyNPCCfgList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifyNPCCfgList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyNPCCfgList];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        break;
      }

      // repeated string cfg = 2;
      case 2: {
        if (tag == 18) {
         parse_cfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cfg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cfg(this->cfg_size() - 1).data(),
            this->cfg(this->cfg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cfg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifyNPCCfgList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifyNPCCfgList)
  return false;
#undef DO_
}

void NotifyNPCCfgList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifyNPCCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyNPCCfgList];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->cfg(i).data(), this->cfg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "cfg");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cfg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifyNPCCfgList)
}

::google::protobuf::uint8* NotifyNPCCfgList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifyNPCCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyNPCCfgList];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cfg(i).data(), this->cfg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cfg");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cfg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifyNPCCfgList)
  return target;
}

int NotifyNPCCfgList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyNPCCfgList];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

  }
  // repeated string cfg = 2;
  total_size += 1 * this->cfg_size();
  for (int i = 0; i < this->cfg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cfg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyNPCCfgList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyNPCCfgList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyNPCCfgList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyNPCCfgList::MergeFrom(const NotifyNPCCfgList& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfg_.MergeFrom(from.cfg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyNPCCfgList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyNPCCfgList::CopyFrom(const NotifyNPCCfgList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyNPCCfgList::IsInitialized() const {

  return true;
}

void NotifyNPCCfgList::Swap(NotifyNPCCfgList* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    cfg_.Swap(&other->cfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyNPCCfgList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyNPCCfgList_descriptor_;
  metadata.reflection = NotifyNPCCfgList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyHeroCfgList::kMsgidFieldNumber;
const int NotifyHeroCfgList::kCfgFieldNumber;
#endif  // !_MSC_VER

NotifyHeroCfgList::NotifyHeroCfgList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifyHeroCfgList)
}

void NotifyHeroCfgList::InitAsDefaultInstance() {
}

NotifyHeroCfgList::NotifyHeroCfgList(const NotifyHeroCfgList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifyHeroCfgList)
}

void NotifyHeroCfgList::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 16394;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyHeroCfgList::~NotifyHeroCfgList() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifyHeroCfgList)
  SharedDtor();
}

void NotifyHeroCfgList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyHeroCfgList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyHeroCfgList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyHeroCfgList_descriptor_;
}

const NotifyHeroCfgList& NotifyHeroCfgList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifyHeroCfgList* NotifyHeroCfgList::default_instance_ = NULL;

NotifyHeroCfgList* NotifyHeroCfgList::New() const {
  return new NotifyHeroCfgList;
}

void NotifyHeroCfgList::Clear() {
  msgid_ = 16394;
  cfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyHeroCfgList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifyHeroCfgList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyHeroCfgList];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        break;
      }

      // repeated string cfg = 2;
      case 2: {
        if (tag == 18) {
         parse_cfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cfg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cfg(this->cfg_size() - 1).data(),
            this->cfg(this->cfg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cfg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifyHeroCfgList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifyHeroCfgList)
  return false;
#undef DO_
}

void NotifyHeroCfgList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifyHeroCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyHeroCfgList];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->cfg(i).data(), this->cfg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "cfg");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cfg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifyHeroCfgList)
}

::google::protobuf::uint8* NotifyHeroCfgList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifyHeroCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyHeroCfgList];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cfg(i).data(), this->cfg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cfg");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cfg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifyHeroCfgList)
  return target;
}

int NotifyHeroCfgList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyHeroCfgList];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

  }
  // repeated string cfg = 2;
  total_size += 1 * this->cfg_size();
  for (int i = 0; i < this->cfg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cfg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyHeroCfgList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyHeroCfgList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyHeroCfgList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyHeroCfgList::MergeFrom(const NotifyHeroCfgList& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfg_.MergeFrom(from.cfg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyHeroCfgList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyHeroCfgList::CopyFrom(const NotifyHeroCfgList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyHeroCfgList::IsInitialized() const {

  return true;
}

void NotifyHeroCfgList::Swap(NotifyHeroCfgList* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    cfg_.Swap(&other->cfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyHeroCfgList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyHeroCfgList_descriptor_;
  metadata.reflection = NotifyHeroCfgList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyShopCfgList::kMsgidFieldNumber;
const int NotifyShopCfgList::kCfgFieldNumber;
#endif  // !_MSC_VER

NotifyShopCfgList::NotifyShopCfgList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifyShopCfgList)
}

void NotifyShopCfgList::InitAsDefaultInstance() {
}

NotifyShopCfgList::NotifyShopCfgList(const NotifyShopCfgList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifyShopCfgList)
}

void NotifyShopCfgList::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 16395;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyShopCfgList::~NotifyShopCfgList() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifyShopCfgList)
  SharedDtor();
}

void NotifyShopCfgList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyShopCfgList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyShopCfgList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyShopCfgList_descriptor_;
}

const NotifyShopCfgList& NotifyShopCfgList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifyShopCfgList* NotifyShopCfgList::default_instance_ = NULL;

NotifyShopCfgList* NotifyShopCfgList::New() const {
  return new NotifyShopCfgList;
}

void NotifyShopCfgList::Clear() {
  msgid_ = 16395;
  cfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyShopCfgList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifyShopCfgList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyShopCfgList];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        break;
      }

      // repeated string cfg = 2;
      case 2: {
        if (tag == 18) {
         parse_cfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cfg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cfg(this->cfg_size() - 1).data(),
            this->cfg(this->cfg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cfg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifyShopCfgList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifyShopCfgList)
  return false;
#undef DO_
}

void NotifyShopCfgList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifyShopCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyShopCfgList];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->cfg(i).data(), this->cfg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "cfg");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cfg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifyShopCfgList)
}

::google::protobuf::uint8* NotifyShopCfgList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifyShopCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyShopCfgList];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cfg(i).data(), this->cfg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cfg");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cfg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifyShopCfgList)
  return target;
}

int NotifyShopCfgList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyShopCfgList];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

  }
  // repeated string cfg = 2;
  total_size += 1 * this->cfg_size();
  for (int i = 0; i < this->cfg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cfg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyShopCfgList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyShopCfgList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyShopCfgList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyShopCfgList::MergeFrom(const NotifyShopCfgList& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfg_.MergeFrom(from.cfg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyShopCfgList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyShopCfgList::CopyFrom(const NotifyShopCfgList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyShopCfgList::IsInitialized() const {

  return true;
}

void NotifyShopCfgList::Swap(NotifyShopCfgList* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    cfg_.Swap(&other->cfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyShopCfgList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyShopCfgList_descriptor_;
  metadata.reflection = NotifyShopCfgList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyGoodsCfgList::kMsgidFieldNumber;
const int NotifyGoodsCfgList::kCfgFieldNumber;
#endif  // !_MSC_VER

NotifyGoodsCfgList::NotifyGoodsCfgList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifyGoodsCfgList)
}

void NotifyGoodsCfgList::InitAsDefaultInstance() {
}

NotifyGoodsCfgList::NotifyGoodsCfgList(const NotifyGoodsCfgList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifyGoodsCfgList)
}

void NotifyGoodsCfgList::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 16396;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyGoodsCfgList::~NotifyGoodsCfgList() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifyGoodsCfgList)
  SharedDtor();
}

void NotifyGoodsCfgList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyGoodsCfgList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyGoodsCfgList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyGoodsCfgList_descriptor_;
}

const NotifyGoodsCfgList& NotifyGoodsCfgList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifyGoodsCfgList* NotifyGoodsCfgList::default_instance_ = NULL;

NotifyGoodsCfgList* NotifyGoodsCfgList::New() const {
  return new NotifyGoodsCfgList;
}

void NotifyGoodsCfgList::Clear() {
  msgid_ = 16396;
  cfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyGoodsCfgList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifyGoodsCfgList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyGoodsCfgList];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        break;
      }

      // repeated string cfg = 2;
      case 2: {
        if (tag == 18) {
         parse_cfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cfg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cfg(this->cfg_size() - 1).data(),
            this->cfg(this->cfg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cfg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifyGoodsCfgList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifyGoodsCfgList)
  return false;
#undef DO_
}

void NotifyGoodsCfgList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifyGoodsCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyGoodsCfgList];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->cfg(i).data(), this->cfg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "cfg");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cfg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifyGoodsCfgList)
}

::google::protobuf::uint8* NotifyGoodsCfgList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifyGoodsCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyGoodsCfgList];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cfg(i).data(), this->cfg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cfg");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cfg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifyGoodsCfgList)
  return target;
}

int NotifyGoodsCfgList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyGoodsCfgList];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

  }
  // repeated string cfg = 2;
  total_size += 1 * this->cfg_size();
  for (int i = 0; i < this->cfg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cfg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyGoodsCfgList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyGoodsCfgList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyGoodsCfgList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyGoodsCfgList::MergeFrom(const NotifyGoodsCfgList& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfg_.MergeFrom(from.cfg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyGoodsCfgList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyGoodsCfgList::CopyFrom(const NotifyGoodsCfgList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyGoodsCfgList::IsInitialized() const {

  return true;
}

void NotifyGoodsCfgList::Swap(NotifyGoodsCfgList* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    cfg_.Swap(&other->cfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyGoodsCfgList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyGoodsCfgList_descriptor_;
  metadata.reflection = NotifyGoodsCfgList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyPublicLuaStr::kMsgidFieldNumber;
const int NotifyPublicLuaStr::kCfgFieldNumber;
#endif  // !_MSC_VER

NotifyPublicLuaStr::NotifyPublicLuaStr()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifyPublicLuaStr)
}

void NotifyPublicLuaStr::InitAsDefaultInstance() {
}

NotifyPublicLuaStr::NotifyPublicLuaStr(const NotifyPublicLuaStr& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifyPublicLuaStr)
}

void NotifyPublicLuaStr::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 16397;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyPublicLuaStr::~NotifyPublicLuaStr() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifyPublicLuaStr)
  SharedDtor();
}

void NotifyPublicLuaStr::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyPublicLuaStr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyPublicLuaStr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyPublicLuaStr_descriptor_;
}

const NotifyPublicLuaStr& NotifyPublicLuaStr::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifyPublicLuaStr* NotifyPublicLuaStr::default_instance_ = NULL;

NotifyPublicLuaStr* NotifyPublicLuaStr::New() const {
  return new NotifyPublicLuaStr;
}

void NotifyPublicLuaStr::Clear() {
  msgid_ = 16397;
  cfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyPublicLuaStr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifyPublicLuaStr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPublicLuaStr];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        break;
      }

      // repeated string cfg = 2;
      case 2: {
        if (tag == 18) {
         parse_cfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cfg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cfg(this->cfg_size() - 1).data(),
            this->cfg(this->cfg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cfg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifyPublicLuaStr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifyPublicLuaStr)
  return false;
#undef DO_
}

void NotifyPublicLuaStr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifyPublicLuaStr)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPublicLuaStr];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->cfg(i).data(), this->cfg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "cfg");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cfg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifyPublicLuaStr)
}

::google::protobuf::uint8* NotifyPublicLuaStr::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifyPublicLuaStr)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPublicLuaStr];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cfg(i).data(), this->cfg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cfg");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cfg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifyPublicLuaStr)
  return target;
}

int NotifyPublicLuaStr::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPublicLuaStr];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

  }
  // repeated string cfg = 2;
  total_size += 1 * this->cfg_size();
  for (int i = 0; i < this->cfg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cfg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyPublicLuaStr::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyPublicLuaStr* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyPublicLuaStr*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyPublicLuaStr::MergeFrom(const NotifyPublicLuaStr& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfg_.MergeFrom(from.cfg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyPublicLuaStr::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyPublicLuaStr::CopyFrom(const NotifyPublicLuaStr& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyPublicLuaStr::IsInitialized() const {

  return true;
}

void NotifyPublicLuaStr::Swap(NotifyPublicLuaStr* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    cfg_.Swap(&other->cfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyPublicLuaStr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyPublicLuaStr_descriptor_;
  metadata.reflection = NotifyPublicLuaStr_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyRunesCfgList::kMsgidFieldNumber;
const int NotifyRunesCfgList::kCfgFieldNumber;
#endif  // !_MSC_VER

NotifyRunesCfgList::NotifyRunesCfgList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifyRunesCfgList)
}

void NotifyRunesCfgList::InitAsDefaultInstance() {
}

NotifyRunesCfgList::NotifyRunesCfgList(const NotifyRunesCfgList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifyRunesCfgList)
}

void NotifyRunesCfgList::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 16400;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyRunesCfgList::~NotifyRunesCfgList() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifyRunesCfgList)
  SharedDtor();
}

void NotifyRunesCfgList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyRunesCfgList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyRunesCfgList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyRunesCfgList_descriptor_;
}

const NotifyRunesCfgList& NotifyRunesCfgList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifyRunesCfgList* NotifyRunesCfgList::default_instance_ = NULL;

NotifyRunesCfgList* NotifyRunesCfgList::New() const {
  return new NotifyRunesCfgList;
}

void NotifyRunesCfgList::Clear() {
  msgid_ = 16400;
  cfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyRunesCfgList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifyRunesCfgList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyRunesCfgList];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        break;
      }

      // repeated string cfg = 2;
      case 2: {
        if (tag == 18) {
         parse_cfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cfg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cfg(this->cfg_size() - 1).data(),
            this->cfg(this->cfg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cfg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifyRunesCfgList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifyRunesCfgList)
  return false;
#undef DO_
}

void NotifyRunesCfgList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifyRunesCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyRunesCfgList];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->cfg(i).data(), this->cfg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "cfg");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cfg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifyRunesCfgList)
}

::google::protobuf::uint8* NotifyRunesCfgList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifyRunesCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyRunesCfgList];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cfg(i).data(), this->cfg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cfg");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cfg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifyRunesCfgList)
  return target;
}

int NotifyRunesCfgList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyRunesCfgList];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

  }
  // repeated string cfg = 2;
  total_size += 1 * this->cfg_size();
  for (int i = 0; i < this->cfg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cfg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyRunesCfgList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyRunesCfgList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyRunesCfgList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyRunesCfgList::MergeFrom(const NotifyRunesCfgList& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfg_.MergeFrom(from.cfg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyRunesCfgList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyRunesCfgList::CopyFrom(const NotifyRunesCfgList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyRunesCfgList::IsInitialized() const {

  return true;
}

void NotifyRunesCfgList::Swap(NotifyRunesCfgList* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    cfg_.Swap(&other->cfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyRunesCfgList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyRunesCfgList_descriptor_;
  metadata.reflection = NotifyRunesCfgList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyRunesSlotCfgList::kMsgidFieldNumber;
const int NotifyRunesSlotCfgList::kCfgFieldNumber;
#endif  // !_MSC_VER

NotifyRunesSlotCfgList::NotifyRunesSlotCfgList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifyRunesSlotCfgList)
}

void NotifyRunesSlotCfgList::InitAsDefaultInstance() {
}

NotifyRunesSlotCfgList::NotifyRunesSlotCfgList(const NotifyRunesSlotCfgList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifyRunesSlotCfgList)
}

void NotifyRunesSlotCfgList::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 16401;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyRunesSlotCfgList::~NotifyRunesSlotCfgList() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifyRunesSlotCfgList)
  SharedDtor();
}

void NotifyRunesSlotCfgList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyRunesSlotCfgList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyRunesSlotCfgList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyRunesSlotCfgList_descriptor_;
}

const NotifyRunesSlotCfgList& NotifyRunesSlotCfgList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifyRunesSlotCfgList* NotifyRunesSlotCfgList::default_instance_ = NULL;

NotifyRunesSlotCfgList* NotifyRunesSlotCfgList::New() const {
  return new NotifyRunesSlotCfgList;
}

void NotifyRunesSlotCfgList::Clear() {
  msgid_ = 16401;
  cfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyRunesSlotCfgList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifyRunesSlotCfgList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyRunesSlotCfgList];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        break;
      }

      // repeated string cfg = 2;
      case 2: {
        if (tag == 18) {
         parse_cfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cfg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cfg(this->cfg_size() - 1).data(),
            this->cfg(this->cfg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cfg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifyRunesSlotCfgList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifyRunesSlotCfgList)
  return false;
#undef DO_
}

void NotifyRunesSlotCfgList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifyRunesSlotCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyRunesSlotCfgList];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->cfg(i).data(), this->cfg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "cfg");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cfg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifyRunesSlotCfgList)
}

::google::protobuf::uint8* NotifyRunesSlotCfgList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifyRunesSlotCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyRunesSlotCfgList];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cfg(i).data(), this->cfg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cfg");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cfg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifyRunesSlotCfgList)
  return target;
}

int NotifyRunesSlotCfgList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyRunesSlotCfgList];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

  }
  // repeated string cfg = 2;
  total_size += 1 * this->cfg_size();
  for (int i = 0; i < this->cfg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cfg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyRunesSlotCfgList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyRunesSlotCfgList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyRunesSlotCfgList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyRunesSlotCfgList::MergeFrom(const NotifyRunesSlotCfgList& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfg_.MergeFrom(from.cfg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyRunesSlotCfgList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyRunesSlotCfgList::CopyFrom(const NotifyRunesSlotCfgList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyRunesSlotCfgList::IsInitialized() const {

  return true;
}

void NotifyRunesSlotCfgList::Swap(NotifyRunesSlotCfgList* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    cfg_.Swap(&other->cfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyRunesSlotCfgList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyRunesSlotCfgList_descriptor_;
  metadata.reflection = NotifyRunesSlotCfgList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyWildMonsterCfgList::kMsgidFieldNumber;
const int NotifyWildMonsterCfgList::kCfgFieldNumber;
#endif  // !_MSC_VER

NotifyWildMonsterCfgList::NotifyWildMonsterCfgList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifyWildMonsterCfgList)
}

void NotifyWildMonsterCfgList::InitAsDefaultInstance() {
}

NotifyWildMonsterCfgList::NotifyWildMonsterCfgList(const NotifyWildMonsterCfgList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifyWildMonsterCfgList)
}

void NotifyWildMonsterCfgList::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 16402;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyWildMonsterCfgList::~NotifyWildMonsterCfgList() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifyWildMonsterCfgList)
  SharedDtor();
}

void NotifyWildMonsterCfgList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyWildMonsterCfgList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyWildMonsterCfgList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyWildMonsterCfgList_descriptor_;
}

const NotifyWildMonsterCfgList& NotifyWildMonsterCfgList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifyWildMonsterCfgList* NotifyWildMonsterCfgList::default_instance_ = NULL;

NotifyWildMonsterCfgList* NotifyWildMonsterCfgList::New() const {
  return new NotifyWildMonsterCfgList;
}

void NotifyWildMonsterCfgList::Clear() {
  msgid_ = 16402;
  cfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyWildMonsterCfgList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifyWildMonsterCfgList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyWildMonsterCfgList];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        break;
      }

      // repeated string cfg = 2;
      case 2: {
        if (tag == 18) {
         parse_cfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cfg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cfg(this->cfg_size() - 1).data(),
            this->cfg(this->cfg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cfg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifyWildMonsterCfgList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifyWildMonsterCfgList)
  return false;
#undef DO_
}

void NotifyWildMonsterCfgList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifyWildMonsterCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyWildMonsterCfgList];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->cfg(i).data(), this->cfg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "cfg");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cfg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifyWildMonsterCfgList)
}

::google::protobuf::uint8* NotifyWildMonsterCfgList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifyWildMonsterCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyWildMonsterCfgList];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cfg(i).data(), this->cfg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cfg");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cfg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifyWildMonsterCfgList)
  return target;
}

int NotifyWildMonsterCfgList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyWildMonsterCfgList];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

  }
  // repeated string cfg = 2;
  total_size += 1 * this->cfg_size();
  for (int i = 0; i < this->cfg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cfg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyWildMonsterCfgList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyWildMonsterCfgList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyWildMonsterCfgList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyWildMonsterCfgList::MergeFrom(const NotifyWildMonsterCfgList& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfg_.MergeFrom(from.cfg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyWildMonsterCfgList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyWildMonsterCfgList::CopyFrom(const NotifyWildMonsterCfgList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyWildMonsterCfgList::IsInitialized() const {

  return true;
}

void NotifyWildMonsterCfgList::Swap(NotifyWildMonsterCfgList* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    cfg_.Swap(&other->cfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyWildMonsterCfgList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyWildMonsterCfgList_descriptor_;
  metadata.reflection = NotifyWildMonsterCfgList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyUserInfoChange::kMsgidFieldNumber;
const int NotifyUserInfoChange::kGuidFieldNumber;
const int NotifyUserInfoChange::kGoldFieldNumber;
#endif  // !_MSC_VER

NotifyUserInfoChange::NotifyUserInfoChange()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifyUserInfoChange)
}

void NotifyUserInfoChange::InitAsDefaultInstance() {
}

NotifyUserInfoChange::NotifyUserInfoChange(const NotifyUserInfoChange& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifyUserInfoChange)
}

void NotifyUserInfoChange::SharedCtor() {
  _cached_size_ = 0;
  msgid_ = 16436;
  guid_ = GOOGLE_ULONGLONG(0);
  gold_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyUserInfoChange::~NotifyUserInfoChange() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifyUserInfoChange)
  SharedDtor();
}

void NotifyUserInfoChange::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyUserInfoChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyUserInfoChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyUserInfoChange_descriptor_;
}

const NotifyUserInfoChange& NotifyUserInfoChange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifyUserInfoChange* NotifyUserInfoChange::default_instance_ = NULL;

NotifyUserInfoChange* NotifyUserInfoChange::New() const {
  return new NotifyUserInfoChange;
}

void NotifyUserInfoChange::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<NotifyUserInfoChange*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(guid_, gold_);
    msgid_ = 16436;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyUserInfoChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifyUserInfoChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyUserInfoChange];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_guid;
        break;
      }

      // optional uint64 guid = 2;
      case 2: {
        if (tag == 16) {
         parse_guid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
          set_has_guid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_gold;
        break;
      }

      // optional int64 gold = 3;
      case 3: {
        if (tag == 24) {
         parse_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifyUserInfoChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifyUserInfoChange)
  return false;
#undef DO_
}

void NotifyUserInfoChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifyUserInfoChange)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyUserInfoChange];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // optional uint64 guid = 2;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  // optional int64 gold = 3;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->gold(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifyUserInfoChange)
}

::google::protobuf::uint8* NotifyUserInfoChange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifyUserInfoChange)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyUserInfoChange];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // optional uint64 guid = 2;
  if (has_guid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  // optional int64 gold = 3;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->gold(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifyUserInfoChange)
  return target;
}

int NotifyUserInfoChange::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyUserInfoChange];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

    // optional uint64 guid = 2;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->guid());
    }

    // optional int64 gold = 3;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->gold());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyUserInfoChange::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyUserInfoChange* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyUserInfoChange*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyUserInfoChange::MergeFrom(const NotifyUserInfoChange& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
    if (from.has_guid()) {
      set_guid(from.guid());
    }
    if (from.has_gold()) {
      set_gold(from.gold());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyUserInfoChange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyUserInfoChange::CopyFrom(const NotifyUserInfoChange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyUserInfoChange::IsInitialized() const {

  return true;
}

void NotifyUserInfoChange::Swap(NotifyUserInfoChange* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    std::swap(guid_, other->guid_);
    std::swap(gold_, other->gold_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyUserInfoChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyUserInfoChange_descriptor_;
  metadata.reflection = NotifyUserInfoChange_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyNewSkillCfgList::kMsgidFieldNumber;
const int NotifyNewSkillCfgList::kCfgFieldNumber;
#endif  // !_MSC_VER

NotifyNewSkillCfgList::NotifyNewSkillCfgList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifyNewSkillCfgList)
}

void NotifyNewSkillCfgList::InitAsDefaultInstance() {
}

NotifyNewSkillCfgList::NotifyNewSkillCfgList(const NotifyNewSkillCfgList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifyNewSkillCfgList)
}

void NotifyNewSkillCfgList::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 16404;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyNewSkillCfgList::~NotifyNewSkillCfgList() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifyNewSkillCfgList)
  SharedDtor();
}

void NotifyNewSkillCfgList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyNewSkillCfgList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyNewSkillCfgList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyNewSkillCfgList_descriptor_;
}

const NotifyNewSkillCfgList& NotifyNewSkillCfgList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifyNewSkillCfgList* NotifyNewSkillCfgList::default_instance_ = NULL;

NotifyNewSkillCfgList* NotifyNewSkillCfgList::New() const {
  return new NotifyNewSkillCfgList;
}

void NotifyNewSkillCfgList::Clear() {
  msgid_ = 16404;
  cfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyNewSkillCfgList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifyNewSkillCfgList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyNewSkillCfgList];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        break;
      }

      // repeated string cfg = 2;
      case 2: {
        if (tag == 18) {
         parse_cfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cfg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cfg(this->cfg_size() - 1).data(),
            this->cfg(this->cfg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cfg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifyNewSkillCfgList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifyNewSkillCfgList)
  return false;
#undef DO_
}

void NotifyNewSkillCfgList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifyNewSkillCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyNewSkillCfgList];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->cfg(i).data(), this->cfg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "cfg");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cfg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifyNewSkillCfgList)
}

::google::protobuf::uint8* NotifyNewSkillCfgList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifyNewSkillCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyNewSkillCfgList];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cfg(i).data(), this->cfg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cfg");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cfg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifyNewSkillCfgList)
  return target;
}

int NotifyNewSkillCfgList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyNewSkillCfgList];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

  }
  // repeated string cfg = 2;
  total_size += 1 * this->cfg_size();
  for (int i = 0; i < this->cfg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cfg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyNewSkillCfgList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyNewSkillCfgList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyNewSkillCfgList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyNewSkillCfgList::MergeFrom(const NotifyNewSkillCfgList& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfg_.MergeFrom(from.cfg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyNewSkillCfgList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyNewSkillCfgList::CopyFrom(const NotifyNewSkillCfgList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyNewSkillCfgList::IsInitialized() const {

  return true;
}

void NotifyNewSkillCfgList::Swap(NotifyNewSkillCfgList* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    cfg_.Swap(&other->cfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyNewSkillCfgList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyNewSkillCfgList_descriptor_;
  metadata.reflection = NotifyNewSkillCfgList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifySkillModelAccountCfgCfgList::kMsgidFieldNumber;
const int NotifySkillModelAccountCfgCfgList::kCfgFieldNumber;
#endif  // !_MSC_VER

NotifySkillModelAccountCfgCfgList::NotifySkillModelAccountCfgCfgList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifySkillModelAccountCfgCfgList)
}

void NotifySkillModelAccountCfgCfgList::InitAsDefaultInstance() {
}

NotifySkillModelAccountCfgCfgList::NotifySkillModelAccountCfgCfgList(const NotifySkillModelAccountCfgCfgList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifySkillModelAccountCfgCfgList)
}

void NotifySkillModelAccountCfgCfgList::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 16405;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifySkillModelAccountCfgCfgList::~NotifySkillModelAccountCfgCfgList() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifySkillModelAccountCfgCfgList)
  SharedDtor();
}

void NotifySkillModelAccountCfgCfgList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifySkillModelAccountCfgCfgList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifySkillModelAccountCfgCfgList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifySkillModelAccountCfgCfgList_descriptor_;
}

const NotifySkillModelAccountCfgCfgList& NotifySkillModelAccountCfgCfgList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifySkillModelAccountCfgCfgList* NotifySkillModelAccountCfgCfgList::default_instance_ = NULL;

NotifySkillModelAccountCfgCfgList* NotifySkillModelAccountCfgCfgList::New() const {
  return new NotifySkillModelAccountCfgCfgList;
}

void NotifySkillModelAccountCfgCfgList::Clear() {
  msgid_ = 16405;
  cfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifySkillModelAccountCfgCfgList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifySkillModelAccountCfgCfgList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelAccountCfgCfgList];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        break;
      }

      // repeated string cfg = 2;
      case 2: {
        if (tag == 18) {
         parse_cfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cfg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cfg(this->cfg_size() - 1).data(),
            this->cfg(this->cfg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cfg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifySkillModelAccountCfgCfgList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifySkillModelAccountCfgCfgList)
  return false;
#undef DO_
}

void NotifySkillModelAccountCfgCfgList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifySkillModelAccountCfgCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelAccountCfgCfgList];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->cfg(i).data(), this->cfg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "cfg");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cfg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifySkillModelAccountCfgCfgList)
}

::google::protobuf::uint8* NotifySkillModelAccountCfgCfgList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifySkillModelAccountCfgCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelAccountCfgCfgList];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cfg(i).data(), this->cfg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cfg");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cfg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifySkillModelAccountCfgCfgList)
  return target;
}

int NotifySkillModelAccountCfgCfgList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelAccountCfgCfgList];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

  }
  // repeated string cfg = 2;
  total_size += 1 * this->cfg_size();
  for (int i = 0; i < this->cfg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cfg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifySkillModelAccountCfgCfgList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifySkillModelAccountCfgCfgList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifySkillModelAccountCfgCfgList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifySkillModelAccountCfgCfgList::MergeFrom(const NotifySkillModelAccountCfgCfgList& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfg_.MergeFrom(from.cfg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifySkillModelAccountCfgCfgList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifySkillModelAccountCfgCfgList::CopyFrom(const NotifySkillModelAccountCfgCfgList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifySkillModelAccountCfgCfgList::IsInitialized() const {

  return true;
}

void NotifySkillModelAccountCfgCfgList::Swap(NotifySkillModelAccountCfgCfgList* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    cfg_.Swap(&other->cfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifySkillModelAccountCfgCfgList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifySkillModelAccountCfgCfgList_descriptor_;
  metadata.reflection = NotifySkillModelAccountCfgCfgList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifySkillModelRangeCfgList::kMsgidFieldNumber;
const int NotifySkillModelRangeCfgList::kCfgFieldNumber;
#endif  // !_MSC_VER

NotifySkillModelRangeCfgList::NotifySkillModelRangeCfgList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifySkillModelRangeCfgList)
}

void NotifySkillModelRangeCfgList::InitAsDefaultInstance() {
}

NotifySkillModelRangeCfgList::NotifySkillModelRangeCfgList(const NotifySkillModelRangeCfgList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifySkillModelRangeCfgList)
}

void NotifySkillModelRangeCfgList::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 16407;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifySkillModelRangeCfgList::~NotifySkillModelRangeCfgList() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifySkillModelRangeCfgList)
  SharedDtor();
}

void NotifySkillModelRangeCfgList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifySkillModelRangeCfgList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifySkillModelRangeCfgList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifySkillModelRangeCfgList_descriptor_;
}

const NotifySkillModelRangeCfgList& NotifySkillModelRangeCfgList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifySkillModelRangeCfgList* NotifySkillModelRangeCfgList::default_instance_ = NULL;

NotifySkillModelRangeCfgList* NotifySkillModelRangeCfgList::New() const {
  return new NotifySkillModelRangeCfgList;
}

void NotifySkillModelRangeCfgList::Clear() {
  msgid_ = 16407;
  cfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifySkillModelRangeCfgList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifySkillModelRangeCfgList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelRangeCfgList];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        break;
      }

      // repeated string cfg = 2;
      case 2: {
        if (tag == 18) {
         parse_cfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cfg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cfg(this->cfg_size() - 1).data(),
            this->cfg(this->cfg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cfg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifySkillModelRangeCfgList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifySkillModelRangeCfgList)
  return false;
#undef DO_
}

void NotifySkillModelRangeCfgList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifySkillModelRangeCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelRangeCfgList];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->cfg(i).data(), this->cfg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "cfg");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cfg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifySkillModelRangeCfgList)
}

::google::protobuf::uint8* NotifySkillModelRangeCfgList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifySkillModelRangeCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelRangeCfgList];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cfg(i).data(), this->cfg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cfg");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cfg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifySkillModelRangeCfgList)
  return target;
}

int NotifySkillModelRangeCfgList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelRangeCfgList];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

  }
  // repeated string cfg = 2;
  total_size += 1 * this->cfg_size();
  for (int i = 0; i < this->cfg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cfg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifySkillModelRangeCfgList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifySkillModelRangeCfgList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifySkillModelRangeCfgList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifySkillModelRangeCfgList::MergeFrom(const NotifySkillModelRangeCfgList& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfg_.MergeFrom(from.cfg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifySkillModelRangeCfgList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifySkillModelRangeCfgList::CopyFrom(const NotifySkillModelRangeCfgList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifySkillModelRangeCfgList::IsInitialized() const {

  return true;
}

void NotifySkillModelRangeCfgList::Swap(NotifySkillModelRangeCfgList* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    cfg_.Swap(&other->cfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifySkillModelRangeCfgList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifySkillModelRangeCfgList_descriptor_;
  metadata.reflection = NotifySkillModelRangeCfgList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifySkillModelLeadingCfgList::kMsgidFieldNumber;
const int NotifySkillModelLeadingCfgList::kCfgFieldNumber;
#endif  // !_MSC_VER

NotifySkillModelLeadingCfgList::NotifySkillModelLeadingCfgList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifySkillModelLeadingCfgList)
}

void NotifySkillModelLeadingCfgList::InitAsDefaultInstance() {
}

NotifySkillModelLeadingCfgList::NotifySkillModelLeadingCfgList(const NotifySkillModelLeadingCfgList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifySkillModelLeadingCfgList)
}

void NotifySkillModelLeadingCfgList::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 16408;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifySkillModelLeadingCfgList::~NotifySkillModelLeadingCfgList() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifySkillModelLeadingCfgList)
  SharedDtor();
}

void NotifySkillModelLeadingCfgList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifySkillModelLeadingCfgList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifySkillModelLeadingCfgList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifySkillModelLeadingCfgList_descriptor_;
}

const NotifySkillModelLeadingCfgList& NotifySkillModelLeadingCfgList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifySkillModelLeadingCfgList* NotifySkillModelLeadingCfgList::default_instance_ = NULL;

NotifySkillModelLeadingCfgList* NotifySkillModelLeadingCfgList::New() const {
  return new NotifySkillModelLeadingCfgList;
}

void NotifySkillModelLeadingCfgList::Clear() {
  msgid_ = 16408;
  cfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifySkillModelLeadingCfgList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifySkillModelLeadingCfgList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelLeadingCfgList];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        break;
      }

      // repeated string cfg = 2;
      case 2: {
        if (tag == 18) {
         parse_cfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cfg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cfg(this->cfg_size() - 1).data(),
            this->cfg(this->cfg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cfg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifySkillModelLeadingCfgList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifySkillModelLeadingCfgList)
  return false;
#undef DO_
}

void NotifySkillModelLeadingCfgList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifySkillModelLeadingCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelLeadingCfgList];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->cfg(i).data(), this->cfg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "cfg");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cfg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifySkillModelLeadingCfgList)
}

::google::protobuf::uint8* NotifySkillModelLeadingCfgList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifySkillModelLeadingCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelLeadingCfgList];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cfg(i).data(), this->cfg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cfg");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cfg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifySkillModelLeadingCfgList)
  return target;
}

int NotifySkillModelLeadingCfgList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelLeadingCfgList];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

  }
  // repeated string cfg = 2;
  total_size += 1 * this->cfg_size();
  for (int i = 0; i < this->cfg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cfg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifySkillModelLeadingCfgList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifySkillModelLeadingCfgList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifySkillModelLeadingCfgList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifySkillModelLeadingCfgList::MergeFrom(const NotifySkillModelLeadingCfgList& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfg_.MergeFrom(from.cfg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifySkillModelLeadingCfgList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifySkillModelLeadingCfgList::CopyFrom(const NotifySkillModelLeadingCfgList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifySkillModelLeadingCfgList::IsInitialized() const {

  return true;
}

void NotifySkillModelLeadingCfgList::Swap(NotifySkillModelLeadingCfgList* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    cfg_.Swap(&other->cfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifySkillModelLeadingCfgList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifySkillModelLeadingCfgList_descriptor_;
  metadata.reflection = NotifySkillModelLeadingCfgList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifySkillModelEmitCfgList::kMsgidFieldNumber;
const int NotifySkillModelEmitCfgList::kCfgFieldNumber;
#endif  // !_MSC_VER

NotifySkillModelEmitCfgList::NotifySkillModelEmitCfgList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifySkillModelEmitCfgList)
}

void NotifySkillModelEmitCfgList::InitAsDefaultInstance() {
}

NotifySkillModelEmitCfgList::NotifySkillModelEmitCfgList(const NotifySkillModelEmitCfgList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifySkillModelEmitCfgList)
}

void NotifySkillModelEmitCfgList::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 16406;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifySkillModelEmitCfgList::~NotifySkillModelEmitCfgList() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifySkillModelEmitCfgList)
  SharedDtor();
}

void NotifySkillModelEmitCfgList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifySkillModelEmitCfgList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifySkillModelEmitCfgList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifySkillModelEmitCfgList_descriptor_;
}

const NotifySkillModelEmitCfgList& NotifySkillModelEmitCfgList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifySkillModelEmitCfgList* NotifySkillModelEmitCfgList::default_instance_ = NULL;

NotifySkillModelEmitCfgList* NotifySkillModelEmitCfgList::New() const {
  return new NotifySkillModelEmitCfgList;
}

void NotifySkillModelEmitCfgList::Clear() {
  msgid_ = 16406;
  cfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifySkillModelEmitCfgList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifySkillModelEmitCfgList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelEmitCfgList];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        break;
      }

      // repeated string cfg = 2;
      case 2: {
        if (tag == 18) {
         parse_cfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cfg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cfg(this->cfg_size() - 1).data(),
            this->cfg(this->cfg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cfg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifySkillModelEmitCfgList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifySkillModelEmitCfgList)
  return false;
#undef DO_
}

void NotifySkillModelEmitCfgList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifySkillModelEmitCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelEmitCfgList];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->cfg(i).data(), this->cfg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "cfg");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cfg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifySkillModelEmitCfgList)
}

::google::protobuf::uint8* NotifySkillModelEmitCfgList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifySkillModelEmitCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelEmitCfgList];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cfg(i).data(), this->cfg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cfg");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cfg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifySkillModelEmitCfgList)
  return target;
}

int NotifySkillModelEmitCfgList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelEmitCfgList];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

  }
  // repeated string cfg = 2;
  total_size += 1 * this->cfg_size();
  for (int i = 0; i < this->cfg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cfg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifySkillModelEmitCfgList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifySkillModelEmitCfgList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifySkillModelEmitCfgList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifySkillModelEmitCfgList::MergeFrom(const NotifySkillModelEmitCfgList& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfg_.MergeFrom(from.cfg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifySkillModelEmitCfgList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifySkillModelEmitCfgList::CopyFrom(const NotifySkillModelEmitCfgList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifySkillModelEmitCfgList::IsInitialized() const {

  return true;
}

void NotifySkillModelEmitCfgList::Swap(NotifySkillModelEmitCfgList* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    cfg_.Swap(&other->cfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifySkillModelEmitCfgList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifySkillModelEmitCfgList_descriptor_;
  metadata.reflection = NotifySkillModelEmitCfgList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifySkillModelBufCfgList::kMsgidFieldNumber;
const int NotifySkillModelBufCfgList::kCfgFieldNumber;
#endif  // !_MSC_VER

NotifySkillModelBufCfgList::NotifySkillModelBufCfgList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifySkillModelBufCfgList)
}

void NotifySkillModelBufCfgList::InitAsDefaultInstance() {
}

NotifySkillModelBufCfgList::NotifySkillModelBufCfgList(const NotifySkillModelBufCfgList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifySkillModelBufCfgList)
}

void NotifySkillModelBufCfgList::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 16409;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifySkillModelBufCfgList::~NotifySkillModelBufCfgList() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifySkillModelBufCfgList)
  SharedDtor();
}

void NotifySkillModelBufCfgList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifySkillModelBufCfgList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifySkillModelBufCfgList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifySkillModelBufCfgList_descriptor_;
}

const NotifySkillModelBufCfgList& NotifySkillModelBufCfgList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifySkillModelBufCfgList* NotifySkillModelBufCfgList::default_instance_ = NULL;

NotifySkillModelBufCfgList* NotifySkillModelBufCfgList::New() const {
  return new NotifySkillModelBufCfgList;
}

void NotifySkillModelBufCfgList::Clear() {
  msgid_ = 16409;
  cfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifySkillModelBufCfgList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifySkillModelBufCfgList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelBufCfgList];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        break;
      }

      // repeated string cfg = 2;
      case 2: {
        if (tag == 18) {
         parse_cfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cfg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cfg(this->cfg_size() - 1).data(),
            this->cfg(this->cfg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cfg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifySkillModelBufCfgList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifySkillModelBufCfgList)
  return false;
#undef DO_
}

void NotifySkillModelBufCfgList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifySkillModelBufCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelBufCfgList];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->cfg(i).data(), this->cfg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "cfg");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cfg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifySkillModelBufCfgList)
}

::google::protobuf::uint8* NotifySkillModelBufCfgList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifySkillModelBufCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelBufCfgList];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cfg(i).data(), this->cfg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cfg");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cfg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifySkillModelBufCfgList)
  return target;
}

int NotifySkillModelBufCfgList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelBufCfgList];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

  }
  // repeated string cfg = 2;
  total_size += 1 * this->cfg_size();
  for (int i = 0; i < this->cfg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cfg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifySkillModelBufCfgList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifySkillModelBufCfgList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifySkillModelBufCfgList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifySkillModelBufCfgList::MergeFrom(const NotifySkillModelBufCfgList& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfg_.MergeFrom(from.cfg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifySkillModelBufCfgList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifySkillModelBufCfgList::CopyFrom(const NotifySkillModelBufCfgList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifySkillModelBufCfgList::IsInitialized() const {

  return true;
}

void NotifySkillModelBufCfgList::Swap(NotifySkillModelBufCfgList* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    cfg_.Swap(&other->cfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifySkillModelBufCfgList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifySkillModelBufCfgList_descriptor_;
  metadata.reflection = NotifySkillModelBufCfgList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifySkillModelSummonCfgList::kMsgidFieldNumber;
const int NotifySkillModelSummonCfgList::kCfgFieldNumber;
#endif  // !_MSC_VER

NotifySkillModelSummonCfgList::NotifySkillModelSummonCfgList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifySkillModelSummonCfgList)
}

void NotifySkillModelSummonCfgList::InitAsDefaultInstance() {
}

NotifySkillModelSummonCfgList::NotifySkillModelSummonCfgList(const NotifySkillModelSummonCfgList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifySkillModelSummonCfgList)
}

void NotifySkillModelSummonCfgList::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 16410;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifySkillModelSummonCfgList::~NotifySkillModelSummonCfgList() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifySkillModelSummonCfgList)
  SharedDtor();
}

void NotifySkillModelSummonCfgList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifySkillModelSummonCfgList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifySkillModelSummonCfgList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifySkillModelSummonCfgList_descriptor_;
}

const NotifySkillModelSummonCfgList& NotifySkillModelSummonCfgList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifySkillModelSummonCfgList* NotifySkillModelSummonCfgList::default_instance_ = NULL;

NotifySkillModelSummonCfgList* NotifySkillModelSummonCfgList::New() const {
  return new NotifySkillModelSummonCfgList;
}

void NotifySkillModelSummonCfgList::Clear() {
  msgid_ = 16410;
  cfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifySkillModelSummonCfgList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifySkillModelSummonCfgList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelSummonCfgList];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        break;
      }

      // repeated string cfg = 2;
      case 2: {
        if (tag == 18) {
         parse_cfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cfg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cfg(this->cfg_size() - 1).data(),
            this->cfg(this->cfg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cfg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifySkillModelSummonCfgList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifySkillModelSummonCfgList)
  return false;
#undef DO_
}

void NotifySkillModelSummonCfgList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifySkillModelSummonCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelSummonCfgList];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->cfg(i).data(), this->cfg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "cfg");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cfg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifySkillModelSummonCfgList)
}

::google::protobuf::uint8* NotifySkillModelSummonCfgList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifySkillModelSummonCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelSummonCfgList];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cfg(i).data(), this->cfg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cfg");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cfg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifySkillModelSummonCfgList)
  return target;
}

int NotifySkillModelSummonCfgList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelSummonCfgList];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

  }
  // repeated string cfg = 2;
  total_size += 1 * this->cfg_size();
  for (int i = 0; i < this->cfg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cfg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifySkillModelSummonCfgList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifySkillModelSummonCfgList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifySkillModelSummonCfgList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifySkillModelSummonCfgList::MergeFrom(const NotifySkillModelSummonCfgList& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfg_.MergeFrom(from.cfg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifySkillModelSummonCfgList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifySkillModelSummonCfgList::CopyFrom(const NotifySkillModelSummonCfgList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifySkillModelSummonCfgList::IsInitialized() const {

  return true;
}

void NotifySkillModelSummonCfgList::Swap(NotifySkillModelSummonCfgList* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    cfg_.Swap(&other->cfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifySkillModelSummonCfgList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifySkillModelSummonCfgList_descriptor_;
  metadata.reflection = NotifySkillModelSummonCfgList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifySkillModelMoveCfgList::kMsgidFieldNumber;
const int NotifySkillModelMoveCfgList::kCfgFieldNumber;
#endif  // !_MSC_VER

NotifySkillModelMoveCfgList::NotifySkillModelMoveCfgList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifySkillModelMoveCfgList)
}

void NotifySkillModelMoveCfgList::InitAsDefaultInstance() {
}

NotifySkillModelMoveCfgList::NotifySkillModelMoveCfgList(const NotifySkillModelMoveCfgList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifySkillModelMoveCfgList)
}

void NotifySkillModelMoveCfgList::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 16411;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifySkillModelMoveCfgList::~NotifySkillModelMoveCfgList() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifySkillModelMoveCfgList)
  SharedDtor();
}

void NotifySkillModelMoveCfgList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifySkillModelMoveCfgList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifySkillModelMoveCfgList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifySkillModelMoveCfgList_descriptor_;
}

const NotifySkillModelMoveCfgList& NotifySkillModelMoveCfgList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifySkillModelMoveCfgList* NotifySkillModelMoveCfgList::default_instance_ = NULL;

NotifySkillModelMoveCfgList* NotifySkillModelMoveCfgList::New() const {
  return new NotifySkillModelMoveCfgList;
}

void NotifySkillModelMoveCfgList::Clear() {
  msgid_ = 16411;
  cfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifySkillModelMoveCfgList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifySkillModelMoveCfgList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelMoveCfgList];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        break;
      }

      // repeated string cfg = 2;
      case 2: {
        if (tag == 18) {
         parse_cfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cfg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cfg(this->cfg_size() - 1).data(),
            this->cfg(this->cfg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cfg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifySkillModelMoveCfgList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifySkillModelMoveCfgList)
  return false;
#undef DO_
}

void NotifySkillModelMoveCfgList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifySkillModelMoveCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelMoveCfgList];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->cfg(i).data(), this->cfg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "cfg");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cfg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifySkillModelMoveCfgList)
}

::google::protobuf::uint8* NotifySkillModelMoveCfgList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifySkillModelMoveCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelMoveCfgList];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cfg(i).data(), this->cfg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cfg");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cfg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifySkillModelMoveCfgList)
  return target;
}

int NotifySkillModelMoveCfgList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelMoveCfgList];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

  }
  // repeated string cfg = 2;
  total_size += 1 * this->cfg_size();
  for (int i = 0; i < this->cfg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cfg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifySkillModelMoveCfgList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifySkillModelMoveCfgList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifySkillModelMoveCfgList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifySkillModelMoveCfgList::MergeFrom(const NotifySkillModelMoveCfgList& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfg_.MergeFrom(from.cfg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifySkillModelMoveCfgList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifySkillModelMoveCfgList::CopyFrom(const NotifySkillModelMoveCfgList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifySkillModelMoveCfgList::IsInitialized() const {

  return true;
}

void NotifySkillModelMoveCfgList::Swap(NotifySkillModelMoveCfgList* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    cfg_.Swap(&other->cfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifySkillModelMoveCfgList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifySkillModelMoveCfgList_descriptor_;
  metadata.reflection = NotifySkillModelMoveCfgList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifySkillModelSwitchCfgList::kMsgidFieldNumber;
const int NotifySkillModelSwitchCfgList::kCfgFieldNumber;
#endif  // !_MSC_VER

NotifySkillModelSwitchCfgList::NotifySkillModelSwitchCfgList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifySkillModelSwitchCfgList)
}

void NotifySkillModelSwitchCfgList::InitAsDefaultInstance() {
}

NotifySkillModelSwitchCfgList::NotifySkillModelSwitchCfgList(const NotifySkillModelSwitchCfgList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifySkillModelSwitchCfgList)
}

void NotifySkillModelSwitchCfgList::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 16412;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifySkillModelSwitchCfgList::~NotifySkillModelSwitchCfgList() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifySkillModelSwitchCfgList)
  SharedDtor();
}

void NotifySkillModelSwitchCfgList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifySkillModelSwitchCfgList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifySkillModelSwitchCfgList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifySkillModelSwitchCfgList_descriptor_;
}

const NotifySkillModelSwitchCfgList& NotifySkillModelSwitchCfgList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifySkillModelSwitchCfgList* NotifySkillModelSwitchCfgList::default_instance_ = NULL;

NotifySkillModelSwitchCfgList* NotifySkillModelSwitchCfgList::New() const {
  return new NotifySkillModelSwitchCfgList;
}

void NotifySkillModelSwitchCfgList::Clear() {
  msgid_ = 16412;
  cfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifySkillModelSwitchCfgList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifySkillModelSwitchCfgList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelSwitchCfgList];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        break;
      }

      // repeated string cfg = 2;
      case 2: {
        if (tag == 18) {
         parse_cfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cfg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cfg(this->cfg_size() - 1).data(),
            this->cfg(this->cfg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cfg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifySkillModelSwitchCfgList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifySkillModelSwitchCfgList)
  return false;
#undef DO_
}

void NotifySkillModelSwitchCfgList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifySkillModelSwitchCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelSwitchCfgList];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->cfg(i).data(), this->cfg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "cfg");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cfg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifySkillModelSwitchCfgList)
}

::google::protobuf::uint8* NotifySkillModelSwitchCfgList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifySkillModelSwitchCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelSwitchCfgList];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cfg(i).data(), this->cfg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cfg");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cfg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifySkillModelSwitchCfgList)
  return target;
}

int NotifySkillModelSwitchCfgList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelSwitchCfgList];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

  }
  // repeated string cfg = 2;
  total_size += 1 * this->cfg_size();
  for (int i = 0; i < this->cfg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cfg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifySkillModelSwitchCfgList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifySkillModelSwitchCfgList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifySkillModelSwitchCfgList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifySkillModelSwitchCfgList::MergeFrom(const NotifySkillModelSwitchCfgList& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfg_.MergeFrom(from.cfg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifySkillModelSwitchCfgList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifySkillModelSwitchCfgList::CopyFrom(const NotifySkillModelSwitchCfgList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifySkillModelSwitchCfgList::IsInitialized() const {

  return true;
}

void NotifySkillModelSwitchCfgList::Swap(NotifySkillModelSwitchCfgList* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    cfg_.Swap(&other->cfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifySkillModelSwitchCfgList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifySkillModelSwitchCfgList_descriptor_;
  metadata.reflection = NotifySkillModelSwitchCfgList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifySkillModelPurificationCfgList::kMsgidFieldNumber;
const int NotifySkillModelPurificationCfgList::kCfgFieldNumber;
#endif  // !_MSC_VER

NotifySkillModelPurificationCfgList::NotifySkillModelPurificationCfgList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifySkillModelPurificationCfgList)
}

void NotifySkillModelPurificationCfgList::InitAsDefaultInstance() {
}

NotifySkillModelPurificationCfgList::NotifySkillModelPurificationCfgList(const NotifySkillModelPurificationCfgList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifySkillModelPurificationCfgList)
}

void NotifySkillModelPurificationCfgList::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 16418;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifySkillModelPurificationCfgList::~NotifySkillModelPurificationCfgList() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifySkillModelPurificationCfgList)
  SharedDtor();
}

void NotifySkillModelPurificationCfgList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifySkillModelPurificationCfgList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifySkillModelPurificationCfgList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifySkillModelPurificationCfgList_descriptor_;
}

const NotifySkillModelPurificationCfgList& NotifySkillModelPurificationCfgList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifySkillModelPurificationCfgList* NotifySkillModelPurificationCfgList::default_instance_ = NULL;

NotifySkillModelPurificationCfgList* NotifySkillModelPurificationCfgList::New() const {
  return new NotifySkillModelPurificationCfgList;
}

void NotifySkillModelPurificationCfgList::Clear() {
  msgid_ = 16418;
  cfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifySkillModelPurificationCfgList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifySkillModelPurificationCfgList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelPurificationCfgList];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        break;
      }

      // repeated string cfg = 2;
      case 2: {
        if (tag == 18) {
         parse_cfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cfg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cfg(this->cfg_size() - 1).data(),
            this->cfg(this->cfg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cfg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifySkillModelPurificationCfgList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifySkillModelPurificationCfgList)
  return false;
#undef DO_
}

void NotifySkillModelPurificationCfgList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifySkillModelPurificationCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelPurificationCfgList];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->cfg(i).data(), this->cfg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "cfg");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cfg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifySkillModelPurificationCfgList)
}

::google::protobuf::uint8* NotifySkillModelPurificationCfgList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifySkillModelPurificationCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelPurificationCfgList];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cfg(i).data(), this->cfg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cfg");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cfg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifySkillModelPurificationCfgList)
  return target;
}

int NotifySkillModelPurificationCfgList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelPurificationCfgList];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

  }
  // repeated string cfg = 2;
  total_size += 1 * this->cfg_size();
  for (int i = 0; i < this->cfg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cfg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifySkillModelPurificationCfgList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifySkillModelPurificationCfgList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifySkillModelPurificationCfgList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifySkillModelPurificationCfgList::MergeFrom(const NotifySkillModelPurificationCfgList& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfg_.MergeFrom(from.cfg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifySkillModelPurificationCfgList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifySkillModelPurificationCfgList::CopyFrom(const NotifySkillModelPurificationCfgList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifySkillModelPurificationCfgList::IsInitialized() const {

  return true;
}

void NotifySkillModelPurificationCfgList::Swap(NotifySkillModelPurificationCfgList* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    cfg_.Swap(&other->cfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifySkillModelPurificationCfgList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifySkillModelPurificationCfgList_descriptor_;
  metadata.reflection = NotifySkillModelPurificationCfgList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifySkillModelLinkCfgList::kMsgidFieldNumber;
const int NotifySkillModelLinkCfgList::kCfgFieldNumber;
#endif  // !_MSC_VER

NotifySkillModelLinkCfgList::NotifySkillModelLinkCfgList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifySkillModelLinkCfgList)
}

void NotifySkillModelLinkCfgList::InitAsDefaultInstance() {
}

NotifySkillModelLinkCfgList::NotifySkillModelLinkCfgList(const NotifySkillModelLinkCfgList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifySkillModelLinkCfgList)
}

void NotifySkillModelLinkCfgList::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 16420;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifySkillModelLinkCfgList::~NotifySkillModelLinkCfgList() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifySkillModelLinkCfgList)
  SharedDtor();
}

void NotifySkillModelLinkCfgList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifySkillModelLinkCfgList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifySkillModelLinkCfgList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifySkillModelLinkCfgList_descriptor_;
}

const NotifySkillModelLinkCfgList& NotifySkillModelLinkCfgList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifySkillModelLinkCfgList* NotifySkillModelLinkCfgList::default_instance_ = NULL;

NotifySkillModelLinkCfgList* NotifySkillModelLinkCfgList::New() const {
  return new NotifySkillModelLinkCfgList;
}

void NotifySkillModelLinkCfgList::Clear() {
  msgid_ = 16420;
  cfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifySkillModelLinkCfgList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifySkillModelLinkCfgList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelLinkCfgList];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        break;
      }

      // repeated string cfg = 2;
      case 2: {
        if (tag == 18) {
         parse_cfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cfg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cfg(this->cfg_size() - 1).data(),
            this->cfg(this->cfg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cfg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifySkillModelLinkCfgList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifySkillModelLinkCfgList)
  return false;
#undef DO_
}

void NotifySkillModelLinkCfgList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifySkillModelLinkCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelLinkCfgList];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->cfg(i).data(), this->cfg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "cfg");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cfg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifySkillModelLinkCfgList)
}

::google::protobuf::uint8* NotifySkillModelLinkCfgList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifySkillModelLinkCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelLinkCfgList];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cfg(i).data(), this->cfg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cfg");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cfg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifySkillModelLinkCfgList)
  return target;
}

int NotifySkillModelLinkCfgList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelLinkCfgList];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

  }
  // repeated string cfg = 2;
  total_size += 1 * this->cfg_size();
  for (int i = 0; i < this->cfg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cfg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifySkillModelLinkCfgList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifySkillModelLinkCfgList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifySkillModelLinkCfgList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifySkillModelLinkCfgList::MergeFrom(const NotifySkillModelLinkCfgList& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfg_.MergeFrom(from.cfg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifySkillModelLinkCfgList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifySkillModelLinkCfgList::CopyFrom(const NotifySkillModelLinkCfgList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifySkillModelLinkCfgList::IsInitialized() const {

  return true;
}

void NotifySkillModelLinkCfgList::Swap(NotifySkillModelLinkCfgList* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    cfg_.Swap(&other->cfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifySkillModelLinkCfgList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifySkillModelLinkCfgList_descriptor_;
  metadata.reflection = NotifySkillModelLinkCfgList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyPassitiveSkillCfgList::kMsgidFieldNumber;
const int NotifyPassitiveSkillCfgList::kCfgFieldNumber;
#endif  // !_MSC_VER

NotifyPassitiveSkillCfgList::NotifyPassitiveSkillCfgList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifyPassitiveSkillCfgList)
}

void NotifyPassitiveSkillCfgList::InitAsDefaultInstance() {
}

NotifyPassitiveSkillCfgList::NotifyPassitiveSkillCfgList(const NotifyPassitiveSkillCfgList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifyPassitiveSkillCfgList)
}

void NotifyPassitiveSkillCfgList::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 16413;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyPassitiveSkillCfgList::~NotifyPassitiveSkillCfgList() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifyPassitiveSkillCfgList)
  SharedDtor();
}

void NotifyPassitiveSkillCfgList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyPassitiveSkillCfgList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyPassitiveSkillCfgList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyPassitiveSkillCfgList_descriptor_;
}

const NotifyPassitiveSkillCfgList& NotifyPassitiveSkillCfgList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifyPassitiveSkillCfgList* NotifyPassitiveSkillCfgList::default_instance_ = NULL;

NotifyPassitiveSkillCfgList* NotifyPassitiveSkillCfgList::New() const {
  return new NotifyPassitiveSkillCfgList;
}

void NotifyPassitiveSkillCfgList::Clear() {
  msgid_ = 16413;
  cfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyPassitiveSkillCfgList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifyPassitiveSkillCfgList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPassitiveSkillCfgList];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        break;
      }

      // repeated string cfg = 2;
      case 2: {
        if (tag == 18) {
         parse_cfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cfg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cfg(this->cfg_size() - 1).data(),
            this->cfg(this->cfg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cfg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifyPassitiveSkillCfgList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifyPassitiveSkillCfgList)
  return false;
#undef DO_
}

void NotifyPassitiveSkillCfgList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifyPassitiveSkillCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPassitiveSkillCfgList];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->cfg(i).data(), this->cfg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "cfg");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cfg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifyPassitiveSkillCfgList)
}

::google::protobuf::uint8* NotifyPassitiveSkillCfgList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifyPassitiveSkillCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPassitiveSkillCfgList];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cfg(i).data(), this->cfg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cfg");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cfg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifyPassitiveSkillCfgList)
  return target;
}

int NotifyPassitiveSkillCfgList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPassitiveSkillCfgList];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

  }
  // repeated string cfg = 2;
  total_size += 1 * this->cfg_size();
  for (int i = 0; i < this->cfg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cfg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyPassitiveSkillCfgList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyPassitiveSkillCfgList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyPassitiveSkillCfgList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyPassitiveSkillCfgList::MergeFrom(const NotifyPassitiveSkillCfgList& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfg_.MergeFrom(from.cfg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyPassitiveSkillCfgList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyPassitiveSkillCfgList::CopyFrom(const NotifyPassitiveSkillCfgList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyPassitiveSkillCfgList::IsInitialized() const {

  return true;
}

void NotifyPassitiveSkillCfgList::Swap(NotifyPassitiveSkillCfgList* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    cfg_.Swap(&other->cfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyPassitiveSkillCfgList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyPassitiveSkillCfgList_descriptor_;
  metadata.reflection = NotifyPassitiveSkillCfgList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyPassitiveEffectBloodSeekCfgList::kMsgidFieldNumber;
const int NotifyPassitiveEffectBloodSeekCfgList::kCfgFieldNumber;
#endif  // !_MSC_VER

NotifyPassitiveEffectBloodSeekCfgList::NotifyPassitiveEffectBloodSeekCfgList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifyPassitiveEffectBloodSeekCfgList)
}

void NotifyPassitiveEffectBloodSeekCfgList::InitAsDefaultInstance() {
}

NotifyPassitiveEffectBloodSeekCfgList::NotifyPassitiveEffectBloodSeekCfgList(const NotifyPassitiveEffectBloodSeekCfgList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifyPassitiveEffectBloodSeekCfgList)
}

void NotifyPassitiveEffectBloodSeekCfgList::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 16414;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyPassitiveEffectBloodSeekCfgList::~NotifyPassitiveEffectBloodSeekCfgList() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifyPassitiveEffectBloodSeekCfgList)
  SharedDtor();
}

void NotifyPassitiveEffectBloodSeekCfgList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyPassitiveEffectBloodSeekCfgList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyPassitiveEffectBloodSeekCfgList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyPassitiveEffectBloodSeekCfgList_descriptor_;
}

const NotifyPassitiveEffectBloodSeekCfgList& NotifyPassitiveEffectBloodSeekCfgList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifyPassitiveEffectBloodSeekCfgList* NotifyPassitiveEffectBloodSeekCfgList::default_instance_ = NULL;

NotifyPassitiveEffectBloodSeekCfgList* NotifyPassitiveEffectBloodSeekCfgList::New() const {
  return new NotifyPassitiveEffectBloodSeekCfgList;
}

void NotifyPassitiveEffectBloodSeekCfgList::Clear() {
  msgid_ = 16414;
  cfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyPassitiveEffectBloodSeekCfgList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifyPassitiveEffectBloodSeekCfgList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPassitiveEffectBloodSeekCfgList];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        break;
      }

      // repeated string cfg = 2;
      case 2: {
        if (tag == 18) {
         parse_cfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cfg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cfg(this->cfg_size() - 1).data(),
            this->cfg(this->cfg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cfg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifyPassitiveEffectBloodSeekCfgList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifyPassitiveEffectBloodSeekCfgList)
  return false;
#undef DO_
}

void NotifyPassitiveEffectBloodSeekCfgList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifyPassitiveEffectBloodSeekCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPassitiveEffectBloodSeekCfgList];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->cfg(i).data(), this->cfg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "cfg");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cfg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifyPassitiveEffectBloodSeekCfgList)
}

::google::protobuf::uint8* NotifyPassitiveEffectBloodSeekCfgList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifyPassitiveEffectBloodSeekCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPassitiveEffectBloodSeekCfgList];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cfg(i).data(), this->cfg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cfg");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cfg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifyPassitiveEffectBloodSeekCfgList)
  return target;
}

int NotifyPassitiveEffectBloodSeekCfgList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPassitiveEffectBloodSeekCfgList];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

  }
  // repeated string cfg = 2;
  total_size += 1 * this->cfg_size();
  for (int i = 0; i < this->cfg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cfg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyPassitiveEffectBloodSeekCfgList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyPassitiveEffectBloodSeekCfgList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyPassitiveEffectBloodSeekCfgList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyPassitiveEffectBloodSeekCfgList::MergeFrom(const NotifyPassitiveEffectBloodSeekCfgList& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfg_.MergeFrom(from.cfg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyPassitiveEffectBloodSeekCfgList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyPassitiveEffectBloodSeekCfgList::CopyFrom(const NotifyPassitiveEffectBloodSeekCfgList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyPassitiveEffectBloodSeekCfgList::IsInitialized() const {

  return true;
}

void NotifyPassitiveEffectBloodSeekCfgList::Swap(NotifyPassitiveEffectBloodSeekCfgList* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    cfg_.Swap(&other->cfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyPassitiveEffectBloodSeekCfgList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyPassitiveEffectBloodSeekCfgList_descriptor_;
  metadata.reflection = NotifyPassitiveEffectBloodSeekCfgList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyPassitiveEffectReboundCfgList::kMsgidFieldNumber;
const int NotifyPassitiveEffectReboundCfgList::kCfgFieldNumber;
#endif  // !_MSC_VER

NotifyPassitiveEffectReboundCfgList::NotifyPassitiveEffectReboundCfgList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifyPassitiveEffectReboundCfgList)
}

void NotifyPassitiveEffectReboundCfgList::InitAsDefaultInstance() {
}

NotifyPassitiveEffectReboundCfgList::NotifyPassitiveEffectReboundCfgList(const NotifyPassitiveEffectReboundCfgList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifyPassitiveEffectReboundCfgList)
}

void NotifyPassitiveEffectReboundCfgList::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 16415;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyPassitiveEffectReboundCfgList::~NotifyPassitiveEffectReboundCfgList() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifyPassitiveEffectReboundCfgList)
  SharedDtor();
}

void NotifyPassitiveEffectReboundCfgList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyPassitiveEffectReboundCfgList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyPassitiveEffectReboundCfgList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyPassitiveEffectReboundCfgList_descriptor_;
}

const NotifyPassitiveEffectReboundCfgList& NotifyPassitiveEffectReboundCfgList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifyPassitiveEffectReboundCfgList* NotifyPassitiveEffectReboundCfgList::default_instance_ = NULL;

NotifyPassitiveEffectReboundCfgList* NotifyPassitiveEffectReboundCfgList::New() const {
  return new NotifyPassitiveEffectReboundCfgList;
}

void NotifyPassitiveEffectReboundCfgList::Clear() {
  msgid_ = 16415;
  cfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyPassitiveEffectReboundCfgList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifyPassitiveEffectReboundCfgList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPassitiveEffectReboundCfgList];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        break;
      }

      // repeated string cfg = 2;
      case 2: {
        if (tag == 18) {
         parse_cfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cfg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cfg(this->cfg_size() - 1).data(),
            this->cfg(this->cfg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cfg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifyPassitiveEffectReboundCfgList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifyPassitiveEffectReboundCfgList)
  return false;
#undef DO_
}

void NotifyPassitiveEffectReboundCfgList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifyPassitiveEffectReboundCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPassitiveEffectReboundCfgList];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->cfg(i).data(), this->cfg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "cfg");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cfg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifyPassitiveEffectReboundCfgList)
}

::google::protobuf::uint8* NotifyPassitiveEffectReboundCfgList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifyPassitiveEffectReboundCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPassitiveEffectReboundCfgList];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cfg(i).data(), this->cfg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cfg");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cfg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifyPassitiveEffectReboundCfgList)
  return target;
}

int NotifyPassitiveEffectReboundCfgList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPassitiveEffectReboundCfgList];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

  }
  // repeated string cfg = 2;
  total_size += 1 * this->cfg_size();
  for (int i = 0; i < this->cfg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cfg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyPassitiveEffectReboundCfgList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyPassitiveEffectReboundCfgList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyPassitiveEffectReboundCfgList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyPassitiveEffectReboundCfgList::MergeFrom(const NotifyPassitiveEffectReboundCfgList& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfg_.MergeFrom(from.cfg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyPassitiveEffectReboundCfgList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyPassitiveEffectReboundCfgList::CopyFrom(const NotifyPassitiveEffectReboundCfgList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyPassitiveEffectReboundCfgList::IsInitialized() const {

  return true;
}

void NotifyPassitiveEffectReboundCfgList::Swap(NotifyPassitiveEffectReboundCfgList* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    cfg_.Swap(&other->cfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyPassitiveEffectReboundCfgList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyPassitiveEffectReboundCfgList_descriptor_;
  metadata.reflection = NotifyPassitiveEffectReboundCfgList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyPassitiveEffectReliveCfgList::kMsgidFieldNumber;
const int NotifyPassitiveEffectReliveCfgList::kCfgFieldNumber;
#endif  // !_MSC_VER

NotifyPassitiveEffectReliveCfgList::NotifyPassitiveEffectReliveCfgList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifyPassitiveEffectReliveCfgList)
}

void NotifyPassitiveEffectReliveCfgList::InitAsDefaultInstance() {
}

NotifyPassitiveEffectReliveCfgList::NotifyPassitiveEffectReliveCfgList(const NotifyPassitiveEffectReliveCfgList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifyPassitiveEffectReliveCfgList)
}

void NotifyPassitiveEffectReliveCfgList::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 16416;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyPassitiveEffectReliveCfgList::~NotifyPassitiveEffectReliveCfgList() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifyPassitiveEffectReliveCfgList)
  SharedDtor();
}

void NotifyPassitiveEffectReliveCfgList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyPassitiveEffectReliveCfgList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyPassitiveEffectReliveCfgList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyPassitiveEffectReliveCfgList_descriptor_;
}

const NotifyPassitiveEffectReliveCfgList& NotifyPassitiveEffectReliveCfgList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifyPassitiveEffectReliveCfgList* NotifyPassitiveEffectReliveCfgList::default_instance_ = NULL;

NotifyPassitiveEffectReliveCfgList* NotifyPassitiveEffectReliveCfgList::New() const {
  return new NotifyPassitiveEffectReliveCfgList;
}

void NotifyPassitiveEffectReliveCfgList::Clear() {
  msgid_ = 16416;
  cfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyPassitiveEffectReliveCfgList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifyPassitiveEffectReliveCfgList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPassitiveEffectReliveCfgList];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        break;
      }

      // repeated string cfg = 2;
      case 2: {
        if (tag == 18) {
         parse_cfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cfg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cfg(this->cfg_size() - 1).data(),
            this->cfg(this->cfg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cfg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifyPassitiveEffectReliveCfgList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifyPassitiveEffectReliveCfgList)
  return false;
#undef DO_
}

void NotifyPassitiveEffectReliveCfgList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifyPassitiveEffectReliveCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPassitiveEffectReliveCfgList];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->cfg(i).data(), this->cfg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "cfg");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cfg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifyPassitiveEffectReliveCfgList)
}

::google::protobuf::uint8* NotifyPassitiveEffectReliveCfgList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifyPassitiveEffectReliveCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPassitiveEffectReliveCfgList];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cfg(i).data(), this->cfg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cfg");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cfg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifyPassitiveEffectReliveCfgList)
  return target;
}

int NotifyPassitiveEffectReliveCfgList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPassitiveEffectReliveCfgList];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

  }
  // repeated string cfg = 2;
  total_size += 1 * this->cfg_size();
  for (int i = 0; i < this->cfg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cfg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyPassitiveEffectReliveCfgList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyPassitiveEffectReliveCfgList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyPassitiveEffectReliveCfgList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyPassitiveEffectReliveCfgList::MergeFrom(const NotifyPassitiveEffectReliveCfgList& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfg_.MergeFrom(from.cfg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyPassitiveEffectReliveCfgList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyPassitiveEffectReliveCfgList::CopyFrom(const NotifyPassitiveEffectReliveCfgList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyPassitiveEffectReliveCfgList::IsInitialized() const {

  return true;
}

void NotifyPassitiveEffectReliveCfgList::Swap(NotifyPassitiveEffectReliveCfgList* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    cfg_.Swap(&other->cfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyPassitiveEffectReliveCfgList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyPassitiveEffectReliveCfgList_descriptor_;
  metadata.reflection = NotifyPassitiveEffectReliveCfgList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyRobotAICfgList::kMsgidFieldNumber;
const int NotifyRobotAICfgList::kCfgFieldNumber;
#endif  // !_MSC_VER

NotifyRobotAICfgList::NotifyRobotAICfgList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifyRobotAICfgList)
}

void NotifyRobotAICfgList::InitAsDefaultInstance() {
}

NotifyRobotAICfgList::NotifyRobotAICfgList(const NotifyRobotAICfgList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifyRobotAICfgList)
}

void NotifyRobotAICfgList::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 16417;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyRobotAICfgList::~NotifyRobotAICfgList() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifyRobotAICfgList)
  SharedDtor();
}

void NotifyRobotAICfgList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyRobotAICfgList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyRobotAICfgList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyRobotAICfgList_descriptor_;
}

const NotifyRobotAICfgList& NotifyRobotAICfgList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifyRobotAICfgList* NotifyRobotAICfgList::default_instance_ = NULL;

NotifyRobotAICfgList* NotifyRobotAICfgList::New() const {
  return new NotifyRobotAICfgList;
}

void NotifyRobotAICfgList::Clear() {
  msgid_ = 16417;
  cfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyRobotAICfgList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifyRobotAICfgList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyRobotAICfgList];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        break;
      }

      // repeated string cfg = 2;
      case 2: {
        if (tag == 18) {
         parse_cfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cfg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cfg(this->cfg_size() - 1).data(),
            this->cfg(this->cfg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cfg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifyRobotAICfgList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifyRobotAICfgList)
  return false;
#undef DO_
}

void NotifyRobotAICfgList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifyRobotAICfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyRobotAICfgList];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->cfg(i).data(), this->cfg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "cfg");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cfg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifyRobotAICfgList)
}

::google::protobuf::uint8* NotifyRobotAICfgList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifyRobotAICfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyRobotAICfgList];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cfg(i).data(), this->cfg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cfg");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cfg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifyRobotAICfgList)
  return target;
}

int NotifyRobotAICfgList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyRobotAICfgList];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

  }
  // repeated string cfg = 2;
  total_size += 1 * this->cfg_size();
  for (int i = 0; i < this->cfg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cfg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyRobotAICfgList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyRobotAICfgList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyRobotAICfgList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyRobotAICfgList::MergeFrom(const NotifyRobotAICfgList& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfg_.MergeFrom(from.cfg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyRobotAICfgList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyRobotAICfgList::CopyFrom(const NotifyRobotAICfgList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyRobotAICfgList::IsInitialized() const {

  return true;
}

void NotifyRobotAICfgList::Swap(NotifyRobotAICfgList* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    cfg_.Swap(&other->cfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyRobotAICfgList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyRobotAICfgList_descriptor_;
  metadata.reflection = NotifyRobotAICfgList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyRobotAIPathCfgList::kMsgidFieldNumber;
const int NotifyRobotAIPathCfgList::kCfgFieldNumber;
#endif  // !_MSC_VER

NotifyRobotAIPathCfgList::NotifyRobotAIPathCfgList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifyRobotAIPathCfgList)
}

void NotifyRobotAIPathCfgList::InitAsDefaultInstance() {
}

NotifyRobotAIPathCfgList::NotifyRobotAIPathCfgList(const NotifyRobotAIPathCfgList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifyRobotAIPathCfgList)
}

void NotifyRobotAIPathCfgList::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 16419;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyRobotAIPathCfgList::~NotifyRobotAIPathCfgList() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifyRobotAIPathCfgList)
  SharedDtor();
}

void NotifyRobotAIPathCfgList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyRobotAIPathCfgList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyRobotAIPathCfgList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyRobotAIPathCfgList_descriptor_;
}

const NotifyRobotAIPathCfgList& NotifyRobotAIPathCfgList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifyRobotAIPathCfgList* NotifyRobotAIPathCfgList::default_instance_ = NULL;

NotifyRobotAIPathCfgList* NotifyRobotAIPathCfgList::New() const {
  return new NotifyRobotAIPathCfgList;
}

void NotifyRobotAIPathCfgList::Clear() {
  msgid_ = 16419;
  cfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyRobotAIPathCfgList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifyRobotAIPathCfgList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyRobotAIPathCfgList];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        break;
      }

      // repeated string cfg = 2;
      case 2: {
        if (tag == 18) {
         parse_cfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cfg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cfg(this->cfg_size() - 1).data(),
            this->cfg(this->cfg_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cfg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfg;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifyRobotAIPathCfgList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifyRobotAIPathCfgList)
  return false;
#undef DO_
}

void NotifyRobotAIPathCfgList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifyRobotAIPathCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyRobotAIPathCfgList];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->cfg(i).data(), this->cfg(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "cfg");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cfg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifyRobotAIPathCfgList)
}

::google::protobuf::uint8* NotifyRobotAIPathCfgList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifyRobotAIPathCfgList)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyRobotAIPathCfgList];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // repeated string cfg = 2;
  for (int i = 0; i < this->cfg_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cfg(i).data(), this->cfg(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cfg");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cfg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifyRobotAIPathCfgList)
  return target;
}

int NotifyRobotAIPathCfgList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyRobotAIPathCfgList];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

  }
  // repeated string cfg = 2;
  total_size += 1 * this->cfg_size();
  for (int i = 0; i < this->cfg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cfg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyRobotAIPathCfgList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyRobotAIPathCfgList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyRobotAIPathCfgList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyRobotAIPathCfgList::MergeFrom(const NotifyRobotAIPathCfgList& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfg_.MergeFrom(from.cfg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyRobotAIPathCfgList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyRobotAIPathCfgList::CopyFrom(const NotifyRobotAIPathCfgList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyRobotAIPathCfgList::IsInitialized() const {

  return true;
}

void NotifyRobotAIPathCfgList::Swap(NotifyRobotAIPathCfgList* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    cfg_.Swap(&other->cfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyRobotAIPathCfgList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyRobotAIPathCfgList_descriptor_;
  metadata.reflection = NotifyRobotAIPathCfgList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyOBUser_OBPosInfo::kPosFieldNumber;
const int NotifyOBUser_OBPosInfo::kGuidFieldNumber;
#endif  // !_MSC_VER

NotifyOBUser_OBPosInfo::NotifyOBUser_OBPosInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifyOBUser.OBPosInfo)
}

void NotifyOBUser_OBPosInfo::InitAsDefaultInstance() {
}

NotifyOBUser_OBPosInfo::NotifyOBUser_OBPosInfo(const NotifyOBUser_OBPosInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifyOBUser.OBPosInfo)
}

void NotifyOBUser_OBPosInfo::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0;
  guid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyOBUser_OBPosInfo::~NotifyOBUser_OBPosInfo() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifyOBUser.OBPosInfo)
  SharedDtor();
}

void NotifyOBUser_OBPosInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyOBUser_OBPosInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyOBUser_OBPosInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyOBUser_OBPosInfo_descriptor_;
}

const NotifyOBUser_OBPosInfo& NotifyOBUser_OBPosInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifyOBUser_OBPosInfo* NotifyOBUser_OBPosInfo::default_instance_ = NULL;

NotifyOBUser_OBPosInfo* NotifyOBUser_OBPosInfo::New() const {
  return new NotifyOBUser_OBPosInfo;
}

void NotifyOBUser_OBPosInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<NotifyOBUser_OBPosInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(guid_, pos_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyOBUser_OBPosInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifyOBUser.OBPosInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pos = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_guid;
        break;
      }

      // optional uint64 guid = 2;
      case 2: {
        if (tag == 16) {
         parse_guid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
          set_has_guid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifyOBUser.OBPosInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifyOBUser.OBPosInfo)
  return false;
#undef DO_
}

void NotifyOBUser_OBPosInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifyOBUser.OBPosInfo)
  // optional int32 pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pos(), output);
  }

  // optional uint64 guid = 2;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifyOBUser.OBPosInfo)
}

::google::protobuf::uint8* NotifyOBUser_OBPosInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifyOBUser.OBPosInfo)
  // optional int32 pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pos(), target);
  }

  // optional uint64 guid = 2;
  if (has_guid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifyOBUser.OBPosInfo)
  return target;
}

int NotifyOBUser_OBPosInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

    // optional uint64 guid = 2;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->guid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyOBUser_OBPosInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyOBUser_OBPosInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyOBUser_OBPosInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyOBUser_OBPosInfo::MergeFrom(const NotifyOBUser_OBPosInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_guid()) {
      set_guid(from.guid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyOBUser_OBPosInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyOBUser_OBPosInfo::CopyFrom(const NotifyOBUser_OBPosInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyOBUser_OBPosInfo::IsInitialized() const {

  return true;
}

void NotifyOBUser_OBPosInfo::Swap(NotifyOBUser_OBPosInfo* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(guid_, other->guid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyOBUser_OBPosInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyOBUser_OBPosInfo_descriptor_;
  metadata.reflection = NotifyOBUser_OBPosInfo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int NotifyOBUser::kMsgidFieldNumber;
const int NotifyOBUser::kObinfoFieldNumber;
const int NotifyOBUser::kBattleidFieldNumber;
#endif  // !_MSC_VER

NotifyOBUser::NotifyOBUser()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifyOBUser)
}

void NotifyOBUser::InitAsDefaultInstance() {
}

NotifyOBUser::NotifyOBUser(const NotifyOBUser& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifyOBUser)
}

void NotifyOBUser::SharedCtor() {
  _cached_size_ = 0;
  msgid_ = 16429;
  battleid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyOBUser::~NotifyOBUser() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifyOBUser)
  SharedDtor();
}

void NotifyOBUser::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyOBUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyOBUser::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyOBUser_descriptor_;
}

const NotifyOBUser& NotifyOBUser::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifyOBUser* NotifyOBUser::default_instance_ = NULL;

NotifyOBUser* NotifyOBUser::New() const {
  return new NotifyOBUser;
}

void NotifyOBUser::Clear() {
  if (_has_bits_[0 / 32] & 5) {
    msgid_ = 16429;
    battleid_ = GOOGLE_ULONGLONG(0);
  }
  obinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyOBUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifyOBUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyOBUser];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_obinfo;
        break;
      }

      // repeated .CSToSS.NotifyOBUser.OBPosInfo obinfo = 2;
      case 2: {
        if (tag == 18) {
         parse_obinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_obinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_obinfo;
        if (input->ExpectTag(24)) goto parse_battleid;
        break;
      }

      // optional uint64 battleid = 3;
      case 3: {
        if (tag == 24) {
         parse_battleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battleid_)));
          set_has_battleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifyOBUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifyOBUser)
  return false;
#undef DO_
}

void NotifyOBUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifyOBUser)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyOBUser];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // repeated .CSToSS.NotifyOBUser.OBPosInfo obinfo = 2;
  for (int i = 0; i < this->obinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->obinfo(i), output);
  }

  // optional uint64 battleid = 3;
  if (has_battleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->battleid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifyOBUser)
}

::google::protobuf::uint8* NotifyOBUser::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifyOBUser)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyOBUser];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // repeated .CSToSS.NotifyOBUser.OBPosInfo obinfo = 2;
  for (int i = 0; i < this->obinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->obinfo(i), target);
  }

  // optional uint64 battleid = 3;
  if (has_battleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->battleid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifyOBUser)
  return target;
}

int NotifyOBUser::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyOBUser];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

    // optional uint64 battleid = 3;
    if (has_battleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->battleid());
    }

  }
  // repeated .CSToSS.NotifyOBUser.OBPosInfo obinfo = 2;
  total_size += 1 * this->obinfo_size();
  for (int i = 0; i < this->obinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->obinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyOBUser::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyOBUser* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyOBUser*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyOBUser::MergeFrom(const NotifyOBUser& from) {
  GOOGLE_CHECK_NE(&from, this);
  obinfo_.MergeFrom(from.obinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
    if (from.has_battleid()) {
      set_battleid(from.battleid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyOBUser::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyOBUser::CopyFrom(const NotifyOBUser& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyOBUser::IsInitialized() const {

  return true;
}

void NotifyOBUser::Swap(NotifyOBUser* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    obinfo_.Swap(&other->obinfo_);
    std::swap(battleid_, other->battleid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyOBUser::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyOBUser_descriptor_;
  metadata.reflection = NotifyOBUser_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyUserReconnectGame::kMsgidFieldNumber;
const int NotifyUserReconnectGame::kGuidFieldNumber;
const int NotifyUserReconnectGame::kBattleidFieldNumber;
#endif  // !_MSC_VER

NotifyUserReconnectGame::NotifyUserReconnectGame()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifyUserReconnectGame)
}

void NotifyUserReconnectGame::InitAsDefaultInstance() {
}

NotifyUserReconnectGame::NotifyUserReconnectGame(const NotifyUserReconnectGame& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifyUserReconnectGame)
}

void NotifyUserReconnectGame::SharedCtor() {
  _cached_size_ = 0;
  msgid_ = 16430;
  guid_ = GOOGLE_ULONGLONG(0);
  battleid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyUserReconnectGame::~NotifyUserReconnectGame() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifyUserReconnectGame)
  SharedDtor();
}

void NotifyUserReconnectGame::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyUserReconnectGame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyUserReconnectGame::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyUserReconnectGame_descriptor_;
}

const NotifyUserReconnectGame& NotifyUserReconnectGame::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifyUserReconnectGame* NotifyUserReconnectGame::default_instance_ = NULL;

NotifyUserReconnectGame* NotifyUserReconnectGame::New() const {
  return new NotifyUserReconnectGame;
}

void NotifyUserReconnectGame::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<NotifyUserReconnectGame*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(guid_, battleid_);
    msgid_ = 16430;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyUserReconnectGame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifyUserReconnectGame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyUserReconnectGame];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_guid;
        break;
      }

      // optional uint64 guid = 2;
      case 2: {
        if (tag == 16) {
         parse_guid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
          set_has_guid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_battleid;
        break;
      }

      // optional uint64 battleid = 3;
      case 3: {
        if (tag == 24) {
         parse_battleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battleid_)));
          set_has_battleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifyUserReconnectGame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifyUserReconnectGame)
  return false;
#undef DO_
}

void NotifyUserReconnectGame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifyUserReconnectGame)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyUserReconnectGame];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // optional uint64 guid = 2;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  // optional uint64 battleid = 3;
  if (has_battleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->battleid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifyUserReconnectGame)
}

::google::protobuf::uint8* NotifyUserReconnectGame::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifyUserReconnectGame)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyUserReconnectGame];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // optional uint64 guid = 2;
  if (has_guid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  // optional uint64 battleid = 3;
  if (has_battleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->battleid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifyUserReconnectGame)
  return target;
}

int NotifyUserReconnectGame::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyUserReconnectGame];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

    // optional uint64 guid = 2;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->guid());
    }

    // optional uint64 battleid = 3;
    if (has_battleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->battleid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyUserReconnectGame::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyUserReconnectGame* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyUserReconnectGame*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyUserReconnectGame::MergeFrom(const NotifyUserReconnectGame& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
    if (from.has_guid()) {
      set_guid(from.guid());
    }
    if (from.has_battleid()) {
      set_battleid(from.battleid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyUserReconnectGame::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyUserReconnectGame::CopyFrom(const NotifyUserReconnectGame& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyUserReconnectGame::IsInitialized() const {

  return true;
}

void NotifyUserReconnectGame::Swap(NotifyUserReconnectGame* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    std::swap(guid_, other->guid_);
    std::swap(battleid_, other->battleid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyUserReconnectGame::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyUserReconnectGame_descriptor_;
  metadata.reflection = NotifyUserReconnectGame_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BattleKickOneUser::kMsgidFieldNumber;
const int BattleKickOneUser::kBattleidFieldNumber;
const int BattleKickOneUser::kUserkeyFieldNumber;
#endif  // !_MSC_VER

BattleKickOneUser::BattleKickOneUser()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.BattleKickOneUser)
}

void BattleKickOneUser::InitAsDefaultInstance() {
}

BattleKickOneUser::BattleKickOneUser(const BattleKickOneUser& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.BattleKickOneUser)
}

void BattleKickOneUser::SharedCtor() {
  _cached_size_ = 0;
  msgid_ = 16433;
  battleid_ = GOOGLE_ULONGLONG(0);
  userkey_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BattleKickOneUser::~BattleKickOneUser() {
  // @@protoc_insertion_point(destructor:CSToSS.BattleKickOneUser)
  SharedDtor();
}

void BattleKickOneUser::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BattleKickOneUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BattleKickOneUser::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BattleKickOneUser_descriptor_;
}

const BattleKickOneUser& BattleKickOneUser::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

BattleKickOneUser* BattleKickOneUser::default_instance_ = NULL;

BattleKickOneUser* BattleKickOneUser::New() const {
  return new BattleKickOneUser;
}

void BattleKickOneUser::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BattleKickOneUser*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(battleid_, userkey_);
    msgid_ = 16433;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BattleKickOneUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.BattleKickOneUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_BattleKickOneUser];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_battleid;
        break;
      }

      // optional uint64 battleid = 2;
      case 2: {
        if (tag == 16) {
         parse_battleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battleid_)));
          set_has_battleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_userkey;
        break;
      }

      // optional uint64 userkey = 3;
      case 3: {
        if (tag == 24) {
         parse_userkey:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userkey_)));
          set_has_userkey();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.BattleKickOneUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.BattleKickOneUser)
  return false;
#undef DO_
}

void BattleKickOneUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.BattleKickOneUser)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_BattleKickOneUser];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // optional uint64 battleid = 2;
  if (has_battleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->battleid(), output);
  }

  // optional uint64 userkey = 3;
  if (has_userkey()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->userkey(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.BattleKickOneUser)
}

::google::protobuf::uint8* BattleKickOneUser::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.BattleKickOneUser)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_BattleKickOneUser];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // optional uint64 battleid = 2;
  if (has_battleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->battleid(), target);
  }

  // optional uint64 userkey = 3;
  if (has_userkey()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->userkey(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.BattleKickOneUser)
  return target;
}

int BattleKickOneUser::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_BattleKickOneUser];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

    // optional uint64 battleid = 2;
    if (has_battleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->battleid());
    }

    // optional uint64 userkey = 3;
    if (has_userkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->userkey());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BattleKickOneUser::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BattleKickOneUser* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BattleKickOneUser*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BattleKickOneUser::MergeFrom(const BattleKickOneUser& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
    if (from.has_battleid()) {
      set_battleid(from.battleid());
    }
    if (from.has_userkey()) {
      set_userkey(from.userkey());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BattleKickOneUser::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BattleKickOneUser::CopyFrom(const BattleKickOneUser& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BattleKickOneUser::IsInitialized() const {

  return true;
}

void BattleKickOneUser::Swap(BattleKickOneUser* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    std::swap(battleid_, other->battleid_);
    std::swap(userkey_, other->userkey_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BattleKickOneUser::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BattleKickOneUser_descriptor_;
  metadata.reflection = BattleKickOneUser_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CreateBattle_BattleType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateBattle_BattleType_descriptor_;
}
bool CreateBattle_BattleType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CreateBattle_BattleType CreateBattle::eBattleType_Free;
const CreateBattle_BattleType CreateBattle::eBattleType_Room;
const CreateBattle_BattleType CreateBattle::eBattleType_Match;
const CreateBattle_BattleType CreateBattle::eBattleType_Guide1;
const CreateBattle_BattleType CreateBattle::eBattleType_Guide2;
const CreateBattle_BattleType CreateBattle::BattleType_MIN;
const CreateBattle_BattleType CreateBattle::BattleType_MAX;
const int CreateBattle::BattleType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::kEffectIdFieldNumber;
const int CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::kEffectNameFieldNumber;
const int CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::kEffectValueFieldNumber;
const int CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::kEffectPerFieldNumber;
#endif  // !_MSC_VER

CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo)
}

void CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::InitAsDefaultInstance() {
}

CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo(const CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo)
}

void CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  effectid_ = 0;
  effectname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  effectvalue_ = 0;
  effectper_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::~CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo() {
  // @@protoc_insertion_point(destructor:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo)
  SharedDtor();
}

void CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::SharedDtor() {
  if (effectname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete effectname_;
  }
  if (this != default_instance_) {
  }
}

void CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo_descriptor_;
}

const CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo& CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo* CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::default_instance_ = NULL;

CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo* CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::New() const {
  return new CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo;
}

void CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(effectid_, effectper_);
    if (has_effectname()) {
      if (effectname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        effectname_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 effectId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &effectid_)));
          set_has_effectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_effectName;
        break;
      }

      // optional string effectName = 2;
      case 2: {
        if (tag == 18) {
         parse_effectName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_effectname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->effectname().data(), this->effectname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "effectname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_effectValue;
        break;
      }

      // optional float effectValue = 3;
      case 3: {
        if (tag == 29) {
         parse_effectValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &effectvalue_)));
          set_has_effectvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_effectPer;
        break;
      }

      // optional float effectPer = 4;
      case 4: {
        if (tag == 37) {
         parse_effectPer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &effectper_)));
          set_has_effectper();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo)
  return false;
#undef DO_
}

void CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo)
  // optional int32 effectId = 1;
  if (has_effectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->effectid(), output);
  }

  // optional string effectName = 2;
  if (has_effectname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->effectname().data(), this->effectname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "effectname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->effectname(), output);
  }

  // optional float effectValue = 3;
  if (has_effectvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->effectvalue(), output);
  }

  // optional float effectPer = 4;
  if (has_effectper()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->effectper(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo)
}

::google::protobuf::uint8* CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo)
  // optional int32 effectId = 1;
  if (has_effectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->effectid(), target);
  }

  // optional string effectName = 2;
  if (has_effectname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->effectname().data(), this->effectname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "effectname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->effectname(), target);
  }

  // optional float effectValue = 3;
  if (has_effectvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->effectvalue(), target);
  }

  // optional float effectPer = 4;
  if (has_effectper()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->effectper(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo)
  return target;
}

int CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 effectId = 1;
    if (has_effectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->effectid());
    }

    // optional string effectName = 2;
    if (has_effectname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->effectname());
    }

    // optional float effectValue = 3;
    if (has_effectvalue()) {
      total_size += 1 + 4;
    }

    // optional float effectPer = 4;
    if (has_effectper()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::MergeFrom(const CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_effectid()) {
      set_effectid(from.effectid());
    }
    if (from.has_effectname()) {
      set_effectname(from.effectname());
    }
    if (from.has_effectvalue()) {
      set_effectvalue(from.effectvalue());
    }
    if (from.has_effectper()) {
      set_effectper(from.effectper());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::CopyFrom(const CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::IsInitialized() const {

  return true;
}

void CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::Swap(CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo* other) {
  if (other != this) {
    std::swap(effectid_, other->effectid_);
    std::swap(effectname_, other->effectname_);
    std::swap(effectvalue_, other->effectvalue_);
    std::swap(effectper_, other->effectper_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo_descriptor_;
  metadata.reflection = CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CreateBattle_CreateBattleUserInfo_RunePage::kRunePageFieldNumber;
const int CreateBattle_CreateBattleUserInfo_RunePage::kRuneEffectsFieldNumber;
#endif  // !_MSC_VER

CreateBattle_CreateBattleUserInfo_RunePage::CreateBattle_CreateBattleUserInfo_RunePage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage)
}

void CreateBattle_CreateBattleUserInfo_RunePage::InitAsDefaultInstance() {
}

CreateBattle_CreateBattleUserInfo_RunePage::CreateBattle_CreateBattleUserInfo_RunePage(const CreateBattle_CreateBattleUserInfo_RunePage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage)
}

void CreateBattle_CreateBattleUserInfo_RunePage::SharedCtor() {
  _cached_size_ = 0;
  runepage_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateBattle_CreateBattleUserInfo_RunePage::~CreateBattle_CreateBattleUserInfo_RunePage() {
  // @@protoc_insertion_point(destructor:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage)
  SharedDtor();
}

void CreateBattle_CreateBattleUserInfo_RunePage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CreateBattle_CreateBattleUserInfo_RunePage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateBattle_CreateBattleUserInfo_RunePage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateBattle_CreateBattleUserInfo_RunePage_descriptor_;
}

const CreateBattle_CreateBattleUserInfo_RunePage& CreateBattle_CreateBattleUserInfo_RunePage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

CreateBattle_CreateBattleUserInfo_RunePage* CreateBattle_CreateBattleUserInfo_RunePage::default_instance_ = NULL;

CreateBattle_CreateBattleUserInfo_RunePage* CreateBattle_CreateBattleUserInfo_RunePage::New() const {
  return new CreateBattle_CreateBattleUserInfo_RunePage;
}

void CreateBattle_CreateBattleUserInfo_RunePage::Clear() {
  runepage_ = 0;
  runeeffects_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateBattle_CreateBattleUserInfo_RunePage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 runePage = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &runepage_)));
          set_has_runepage();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_runeEffects;
        break;
      }

      // repeated .CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo runeEffects = 2;
      case 2: {
        if (tag == 18) {
         parse_runeEffects:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_runeeffects()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_runeEffects;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage)
  return false;
#undef DO_
}

void CreateBattle_CreateBattleUserInfo_RunePage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage)
  // optional int32 runePage = 1;
  if (has_runepage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->runepage(), output);
  }

  // repeated .CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo runeEffects = 2;
  for (int i = 0; i < this->runeeffects_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->runeeffects(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage)
}

::google::protobuf::uint8* CreateBattle_CreateBattleUserInfo_RunePage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage)
  // optional int32 runePage = 1;
  if (has_runepage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->runepage(), target);
  }

  // repeated .CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo runeEffects = 2;
  for (int i = 0; i < this->runeeffects_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->runeeffects(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage)
  return target;
}

int CreateBattle_CreateBattleUserInfo_RunePage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 runePage = 1;
    if (has_runepage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->runepage());
    }

  }
  // repeated .CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo runeEffects = 2;
  total_size += 1 * this->runeeffects_size();
  for (int i = 0; i < this->runeeffects_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->runeeffects(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateBattle_CreateBattleUserInfo_RunePage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateBattle_CreateBattleUserInfo_RunePage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateBattle_CreateBattleUserInfo_RunePage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateBattle_CreateBattleUserInfo_RunePage::MergeFrom(const CreateBattle_CreateBattleUserInfo_RunePage& from) {
  GOOGLE_CHECK_NE(&from, this);
  runeeffects_.MergeFrom(from.runeeffects_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_runepage()) {
      set_runepage(from.runepage());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateBattle_CreateBattleUserInfo_RunePage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateBattle_CreateBattleUserInfo_RunePage::CopyFrom(const CreateBattle_CreateBattleUserInfo_RunePage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateBattle_CreateBattleUserInfo_RunePage::IsInitialized() const {

  return true;
}

void CreateBattle_CreateBattleUserInfo_RunePage::Swap(CreateBattle_CreateBattleUserInfo_RunePage* other) {
  if (other != this) {
    std::swap(runepage_, other->runepage_);
    runeeffects_.Swap(&other->runeeffects_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CreateBattle_CreateBattleUserInfo_RunePage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateBattle_CreateBattleUserInfo_RunePage_descriptor_;
  metadata.reflection = CreateBattle_CreateBattleUserInfo_RunePage_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CreateBattle_CreateBattleUserInfo::kUsernetinfoFieldNumber;
const int CreateBattle_CreateBattleUserInfo::kGuidFieldNumber;
const int CreateBattle_CreateBattleUserInfo::kSeatFieldNumber;
const int CreateBattle_CreateBattleUserInfo::kGrpIDFieldNumber;
const int CreateBattle_CreateBattleUserInfo::kNickNameFieldNumber;
const int CreateBattle_CreateBattleUserInfo::kDiamondFieldNumber;
const int CreateBattle_CreateBattleUserInfo::kGoldFieldNumber;
const int CreateBattle_CreateBattleUserInfo::kVipLvFieldNumber;
const int CreateBattle_CreateBattleUserInfo::kIfOBFieldNumber;
const int CreateBattle_CreateBattleUserInfo::kIfGMFieldNumber;
const int CreateBattle_CreateBattleUserInfo::kCanUseHeroListFieldNumber;
const int CreateBattle_CreateBattleUserInfo::kRunePagesFieldNumber;
const int CreateBattle_CreateBattleUserInfo::kIfAiRobotFieldNumber;
#endif  // !_MSC_VER

CreateBattle_CreateBattleUserInfo::CreateBattle_CreateBattleUserInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.CreateBattle.CreateBattleUserInfo)
}

void CreateBattle_CreateBattleUserInfo::InitAsDefaultInstance() {
  usernetinfo_ = const_cast< ::CSToSS::SUserNetInfo*>(&::CSToSS::SUserNetInfo::default_instance());
}

CreateBattle_CreateBattleUserInfo::CreateBattle_CreateBattleUserInfo(const CreateBattle_CreateBattleUserInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.CreateBattle.CreateBattleUserInfo)
}

void CreateBattle_CreateBattleUserInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  usernetinfo_ = NULL;
  guid_ = GOOGLE_LONGLONG(0);
  seat_ = 0;
  grpid_ = 0;
  nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  diamond_ = GOOGLE_LONGLONG(0);
  gold_ = GOOGLE_LONGLONG(0);
  viplv_ = 0;
  ifob_ = false;
  ifgm_ = false;
  ifairobot_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateBattle_CreateBattleUserInfo::~CreateBattle_CreateBattleUserInfo() {
  // @@protoc_insertion_point(destructor:CSToSS.CreateBattle.CreateBattleUserInfo)
  SharedDtor();
}

void CreateBattle_CreateBattleUserInfo::SharedDtor() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (this != default_instance_) {
    delete usernetinfo_;
  }
}

void CreateBattle_CreateBattleUserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateBattle_CreateBattleUserInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateBattle_CreateBattleUserInfo_descriptor_;
}

const CreateBattle_CreateBattleUserInfo& CreateBattle_CreateBattleUserInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

CreateBattle_CreateBattleUserInfo* CreateBattle_CreateBattleUserInfo::default_instance_ = NULL;

CreateBattle_CreateBattleUserInfo* CreateBattle_CreateBattleUserInfo::New() const {
  return new CreateBattle_CreateBattleUserInfo;
}

void CreateBattle_CreateBattleUserInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CreateBattle_CreateBattleUserInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(guid_, grpid_);
    ZR_(diamond_, viplv_);
    if (has_usernetinfo()) {
      if (usernetinfo_ != NULL) usernetinfo_->::CSToSS::SUserNetInfo::Clear();
    }
    if (has_nickname()) {
      if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        nickname_->clear();
      }
    }
  }
  ZR_(ifob_, ifairobot_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  canuseherolist_.Clear();
  runepages_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateBattle_CreateBattleUserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.CreateBattle.CreateBattleUserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.SUserNetInfo usernetinfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_usernetinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_guid;
        break;
      }

      // optional int64 guid = 2;
      case 2: {
        if (tag == 16) {
         parse_guid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
          set_has_guid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_seat;
        break;
      }

      // optional int32 seat = 3;
      case 3: {
        if (tag == 24) {
         parse_seat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seat_)));
          set_has_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_grpID;
        break;
      }

      // optional int32 grpID = 4;
      case 4: {
        if (tag == 32) {
         parse_grpID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &grpid_)));
          set_has_grpid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_nickName;
        break;
      }

      // optional string nickName = 5;
      case 5: {
        if (tag == 42) {
         parse_nickName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nickname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_diamond;
        break;
      }

      // optional int64 diamond = 6;
      case 6: {
        if (tag == 48) {
         parse_diamond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &diamond_)));
          set_has_diamond();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_gold;
        break;
      }

      // optional int64 gold = 7;
      case 7: {
        if (tag == 56) {
         parse_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_vipLv;
        break;
      }

      // optional int32 vipLv = 8;
      case 8: {
        if (tag == 64) {
         parse_vipLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &viplv_)));
          set_has_viplv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_ifOB;
        break;
      }

      // optional bool ifOB = 9;
      case 9: {
        if (tag == 72) {
         parse_ifOB:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ifob_)));
          set_has_ifob();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_ifGM;
        break;
      }

      // optional bool ifGM = 10;
      case 10: {
        if (tag == 80) {
         parse_ifGM:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ifgm_)));
          set_has_ifgm();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_canUseHeroList;
        break;
      }

      // repeated int32 canUseHeroList = 11;
      case 11: {
        if (tag == 88) {
         parse_canUseHeroList:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 88, input, this->mutable_canuseherolist())));
        } else if (tag == 90) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_canuseherolist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_canUseHeroList;
        if (input->ExpectTag(98)) goto parse_runePages;
        break;
      }

      // repeated .CSToSS.CreateBattle.CreateBattleUserInfo.RunePage runePages = 12;
      case 12: {
        if (tag == 98) {
         parse_runePages:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_runepages()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_runePages;
        if (input->ExpectTag(104)) goto parse_ifAiRobot;
        break;
      }

      // optional bool ifAiRobot = 13;
      case 13: {
        if (tag == 104) {
         parse_ifAiRobot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ifairobot_)));
          set_has_ifairobot();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.CreateBattle.CreateBattleUserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.CreateBattle.CreateBattleUserInfo)
  return false;
#undef DO_
}

void CreateBattle_CreateBattleUserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.CreateBattle.CreateBattleUserInfo)
  // optional .CSToSS.SUserNetInfo usernetinfo = 1;
  if (has_usernetinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->usernetinfo(), output);
  }

  // optional int64 guid = 2;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->guid(), output);
  }

  // optional int32 seat = 3;
  if (has_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->seat(), output);
  }

  // optional int32 grpID = 4;
  if (has_grpid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->grpid(), output);
  }

  // optional string nickName = 5;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->nickname(), output);
  }

  // optional int64 diamond = 6;
  if (has_diamond()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->diamond(), output);
  }

  // optional int64 gold = 7;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->gold(), output);
  }

  // optional int32 vipLv = 8;
  if (has_viplv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->viplv(), output);
  }

  // optional bool ifOB = 9;
  if (has_ifob()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->ifob(), output);
  }

  // optional bool ifGM = 10;
  if (has_ifgm()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->ifgm(), output);
  }

  // repeated int32 canUseHeroList = 11;
  for (int i = 0; i < this->canuseherolist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      11, this->canuseherolist(i), output);
  }

  // repeated .CSToSS.CreateBattle.CreateBattleUserInfo.RunePage runePages = 12;
  for (int i = 0; i < this->runepages_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->runepages(i), output);
  }

  // optional bool ifAiRobot = 13;
  if (has_ifairobot()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->ifairobot(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.CreateBattle.CreateBattleUserInfo)
}

::google::protobuf::uint8* CreateBattle_CreateBattleUserInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.CreateBattle.CreateBattleUserInfo)
  // optional .CSToSS.SUserNetInfo usernetinfo = 1;
  if (has_usernetinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->usernetinfo(), target);
  }

  // optional int64 guid = 2;
  if (has_guid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->guid(), target);
  }

  // optional int32 seat = 3;
  if (has_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->seat(), target);
  }

  // optional int32 grpID = 4;
  if (has_grpid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->grpid(), target);
  }

  // optional string nickName = 5;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->nickname(), target);
  }

  // optional int64 diamond = 6;
  if (has_diamond()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->diamond(), target);
  }

  // optional int64 gold = 7;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->gold(), target);
  }

  // optional int32 vipLv = 8;
  if (has_viplv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->viplv(), target);
  }

  // optional bool ifOB = 9;
  if (has_ifob()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->ifob(), target);
  }

  // optional bool ifGM = 10;
  if (has_ifgm()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->ifgm(), target);
  }

  // repeated int32 canUseHeroList = 11;
  for (int i = 0; i < this->canuseherolist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(11, this->canuseherolist(i), target);
  }

  // repeated .CSToSS.CreateBattle.CreateBattleUserInfo.RunePage runePages = 12;
  for (int i = 0; i < this->runepages_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->runepages(i), target);
  }

  // optional bool ifAiRobot = 13;
  if (has_ifairobot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->ifairobot(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.CreateBattle.CreateBattleUserInfo)
  return target;
}

int CreateBattle_CreateBattleUserInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.SUserNetInfo usernetinfo = 1;
    if (has_usernetinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->usernetinfo());
    }

    // optional int64 guid = 2;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->guid());
    }

    // optional int32 seat = 3;
    if (has_seat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->seat());
    }

    // optional int32 grpID = 4;
    if (has_grpid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->grpid());
    }

    // optional string nickName = 5;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional int64 diamond = 6;
    if (has_diamond()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->diamond());
    }

    // optional int64 gold = 7;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->gold());
    }

    // optional int32 vipLv = 8;
    if (has_viplv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->viplv());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional bool ifOB = 9;
    if (has_ifob()) {
      total_size += 1 + 1;
    }

    // optional bool ifGM = 10;
    if (has_ifgm()) {
      total_size += 1 + 1;
    }

    // optional bool ifAiRobot = 13;
    if (has_ifairobot()) {
      total_size += 1 + 1;
    }

  }
  // repeated int32 canUseHeroList = 11;
  {
    int data_size = 0;
    for (int i = 0; i < this->canuseherolist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->canuseherolist(i));
    }
    total_size += 1 * this->canuseherolist_size() + data_size;
  }

  // repeated .CSToSS.CreateBattle.CreateBattleUserInfo.RunePage runePages = 12;
  total_size += 1 * this->runepages_size();
  for (int i = 0; i < this->runepages_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->runepages(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateBattle_CreateBattleUserInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateBattle_CreateBattleUserInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateBattle_CreateBattleUserInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateBattle_CreateBattleUserInfo::MergeFrom(const CreateBattle_CreateBattleUserInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  canuseherolist_.MergeFrom(from.canuseherolist_);
  runepages_.MergeFrom(from.runepages_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_usernetinfo()) {
      mutable_usernetinfo()->::CSToSS::SUserNetInfo::MergeFrom(from.usernetinfo());
    }
    if (from.has_guid()) {
      set_guid(from.guid());
    }
    if (from.has_seat()) {
      set_seat(from.seat());
    }
    if (from.has_grpid()) {
      set_grpid(from.grpid());
    }
    if (from.has_nickname()) {
      set_nickname(from.nickname());
    }
    if (from.has_diamond()) {
      set_diamond(from.diamond());
    }
    if (from.has_gold()) {
      set_gold(from.gold());
    }
    if (from.has_viplv()) {
      set_viplv(from.viplv());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_ifob()) {
      set_ifob(from.ifob());
    }
    if (from.has_ifgm()) {
      set_ifgm(from.ifgm());
    }
    if (from.has_ifairobot()) {
      set_ifairobot(from.ifairobot());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateBattle_CreateBattleUserInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateBattle_CreateBattleUserInfo::CopyFrom(const CreateBattle_CreateBattleUserInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateBattle_CreateBattleUserInfo::IsInitialized() const {

  return true;
}

void CreateBattle_CreateBattleUserInfo::Swap(CreateBattle_CreateBattleUserInfo* other) {
  if (other != this) {
    std::swap(usernetinfo_, other->usernetinfo_);
    std::swap(guid_, other->guid_);
    std::swap(seat_, other->seat_);
    std::swap(grpid_, other->grpid_);
    std::swap(nickname_, other->nickname_);
    std::swap(diamond_, other->diamond_);
    std::swap(gold_, other->gold_);
    std::swap(viplv_, other->viplv_);
    std::swap(ifob_, other->ifob_);
    std::swap(ifgm_, other->ifgm_);
    canuseherolist_.Swap(&other->canuseherolist_);
    runepages_.Swap(&other->runepages_);
    std::swap(ifairobot_, other->ifairobot_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CreateBattle_CreateBattleUserInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateBattle_CreateBattleUserInfo_descriptor_;
  metadata.reflection = CreateBattle_CreateBattleUserInfo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CreateBattle_AiRobotInfo::kSeatFieldNumber;
const int CreateBattle_AiRobotInfo::kAitypeFieldNumber;
#endif  // !_MSC_VER

CreateBattle_AiRobotInfo::CreateBattle_AiRobotInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.CreateBattle.AiRobotInfo)
}

void CreateBattle_AiRobotInfo::InitAsDefaultInstance() {
}

CreateBattle_AiRobotInfo::CreateBattle_AiRobotInfo(const CreateBattle_AiRobotInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.CreateBattle.AiRobotInfo)
}

void CreateBattle_AiRobotInfo::SharedCtor() {
  _cached_size_ = 0;
  seat_ = 0u;
  aitype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateBattle_AiRobotInfo::~CreateBattle_AiRobotInfo() {
  // @@protoc_insertion_point(destructor:CSToSS.CreateBattle.AiRobotInfo)
  SharedDtor();
}

void CreateBattle_AiRobotInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CreateBattle_AiRobotInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateBattle_AiRobotInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateBattle_AiRobotInfo_descriptor_;
}

const CreateBattle_AiRobotInfo& CreateBattle_AiRobotInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

CreateBattle_AiRobotInfo* CreateBattle_AiRobotInfo::default_instance_ = NULL;

CreateBattle_AiRobotInfo* CreateBattle_AiRobotInfo::New() const {
  return new CreateBattle_AiRobotInfo;
}

void CreateBattle_AiRobotInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CreateBattle_AiRobotInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(seat_, aitype_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateBattle_AiRobotInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.CreateBattle.AiRobotInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 seat = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seat_)));
          set_has_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_aitype;
        break;
      }

      // optional uint32 aitype = 2;
      case 2: {
        if (tag == 16) {
         parse_aitype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &aitype_)));
          set_has_aitype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.CreateBattle.AiRobotInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.CreateBattle.AiRobotInfo)
  return false;
#undef DO_
}

void CreateBattle_AiRobotInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.CreateBattle.AiRobotInfo)
  // optional uint32 seat = 1;
  if (has_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seat(), output);
  }

  // optional uint32 aitype = 2;
  if (has_aitype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->aitype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.CreateBattle.AiRobotInfo)
}

::google::protobuf::uint8* CreateBattle_AiRobotInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.CreateBattle.AiRobotInfo)
  // optional uint32 seat = 1;
  if (has_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->seat(), target);
  }

  // optional uint32 aitype = 2;
  if (has_aitype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->aitype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.CreateBattle.AiRobotInfo)
  return target;
}

int CreateBattle_AiRobotInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 seat = 1;
    if (has_seat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->seat());
    }

    // optional uint32 aitype = 2;
    if (has_aitype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->aitype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateBattle_AiRobotInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateBattle_AiRobotInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateBattle_AiRobotInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateBattle_AiRobotInfo::MergeFrom(const CreateBattle_AiRobotInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seat()) {
      set_seat(from.seat());
    }
    if (from.has_aitype()) {
      set_aitype(from.aitype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateBattle_AiRobotInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateBattle_AiRobotInfo::CopyFrom(const CreateBattle_AiRobotInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateBattle_AiRobotInfo::IsInitialized() const {

  return true;
}

void CreateBattle_AiRobotInfo::Swap(CreateBattle_AiRobotInfo* other) {
  if (other != this) {
    std::swap(seat_, other->seat_);
    std::swap(aitype_, other->aitype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CreateBattle_AiRobotInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateBattle_AiRobotInfo_descriptor_;
  metadata.reflection = CreateBattle_AiRobotInfo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CreateBattle::kMsgidFieldNumber;
const int CreateBattle::kBattleidFieldNumber;
const int CreateBattle::kMapidFieldNumber;
const int CreateBattle::kBattletypeFieldNumber;
const int CreateBattle::kUserinfoFieldNumber;
const int CreateBattle::kAiRobotListFieldNumber;
#endif  // !_MSC_VER

CreateBattle::CreateBattle()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.CreateBattle)
}

void CreateBattle::InitAsDefaultInstance() {
}

CreateBattle::CreateBattle(const CreateBattle& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.CreateBattle)
}

void CreateBattle::SharedCtor() {
  _cached_size_ = 0;
  msgid_ = 16500;
  battleid_ = GOOGLE_ULONGLONG(0);
  mapid_ = 0;
  battletype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateBattle::~CreateBattle() {
  // @@protoc_insertion_point(destructor:CSToSS.CreateBattle)
  SharedDtor();
}

void CreateBattle::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CreateBattle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateBattle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateBattle_descriptor_;
}

const CreateBattle& CreateBattle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

CreateBattle* CreateBattle::default_instance_ = NULL;

CreateBattle* CreateBattle::New() const {
  return new CreateBattle;
}

void CreateBattle::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    msgid_ = 16500;
    battleid_ = GOOGLE_ULONGLONG(0);
    mapid_ = 0;
    battletype_ = 0;
  }
  userinfo_.Clear();
  airobotlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateBattle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.CreateBattle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_CreateBattle];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_battleid;
        break;
      }

      // optional uint64 battleid = 2;
      case 2: {
        if (tag == 16) {
         parse_battleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battleid_)));
          set_has_battleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mapid;
        break;
      }

      // optional int32 mapid = 3;
      case 3: {
        if (tag == 24) {
         parse_mapid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapid_)));
          set_has_mapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_battletype;
        break;
      }

      // optional .CSToSS.CreateBattle.BattleType battletype = 4;
      case 4: {
        if (tag == 32) {
         parse_battletype:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::CreateBattle_BattleType_IsValid(value)) {
            set_battletype(static_cast< ::CSToSS::CreateBattle_BattleType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_userinfo;
        break;
      }

      // repeated .CSToSS.CreateBattle.CreateBattleUserInfo userinfo = 5;
      case 5: {
        if (tag == 42) {
         parse_userinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_userinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_userinfo;
        if (input->ExpectTag(50)) goto parse_aiRobotList;
        break;
      }

      // repeated .CSToSS.CreateBattle.AiRobotInfo aiRobotList = 6;
      case 6: {
        if (tag == 50) {
         parse_aiRobotList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_airobotlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_aiRobotList;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.CreateBattle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.CreateBattle)
  return false;
#undef DO_
}

void CreateBattle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.CreateBattle)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_CreateBattle];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // optional uint64 battleid = 2;
  if (has_battleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->battleid(), output);
  }

  // optional int32 mapid = 3;
  if (has_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mapid(), output);
  }

  // optional .CSToSS.CreateBattle.BattleType battletype = 4;
  if (has_battletype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->battletype(), output);
  }

  // repeated .CSToSS.CreateBattle.CreateBattleUserInfo userinfo = 5;
  for (int i = 0; i < this->userinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->userinfo(i), output);
  }

  // repeated .CSToSS.CreateBattle.AiRobotInfo aiRobotList = 6;
  for (int i = 0; i < this->airobotlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->airobotlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.CreateBattle)
}

::google::protobuf::uint8* CreateBattle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.CreateBattle)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_CreateBattle];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // optional uint64 battleid = 2;
  if (has_battleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->battleid(), target);
  }

  // optional int32 mapid = 3;
  if (has_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mapid(), target);
  }

  // optional .CSToSS.CreateBattle.BattleType battletype = 4;
  if (has_battletype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->battletype(), target);
  }

  // repeated .CSToSS.CreateBattle.CreateBattleUserInfo userinfo = 5;
  for (int i = 0; i < this->userinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->userinfo(i), target);
  }

  // repeated .CSToSS.CreateBattle.AiRobotInfo aiRobotList = 6;
  for (int i = 0; i < this->airobotlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->airobotlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.CreateBattle)
  return target;
}

int CreateBattle::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_CreateBattle];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

    // optional uint64 battleid = 2;
    if (has_battleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->battleid());
    }

    // optional int32 mapid = 3;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapid());
    }

    // optional .CSToSS.CreateBattle.BattleType battletype = 4;
    if (has_battletype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->battletype());
    }

  }
  // repeated .CSToSS.CreateBattle.CreateBattleUserInfo userinfo = 5;
  total_size += 1 * this->userinfo_size();
  for (int i = 0; i < this->userinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->userinfo(i));
  }

  // repeated .CSToSS.CreateBattle.AiRobotInfo aiRobotList = 6;
  total_size += 1 * this->airobotlist_size();
  for (int i = 0; i < this->airobotlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->airobotlist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateBattle::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateBattle* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateBattle*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateBattle::MergeFrom(const CreateBattle& from) {
  GOOGLE_CHECK_NE(&from, this);
  userinfo_.MergeFrom(from.userinfo_);
  airobotlist_.MergeFrom(from.airobotlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
    if (from.has_battleid()) {
      set_battleid(from.battleid());
    }
    if (from.has_mapid()) {
      set_mapid(from.mapid());
    }
    if (from.has_battletype()) {
      set_battletype(from.battletype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateBattle::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateBattle::CopyFrom(const CreateBattle& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateBattle::IsInitialized() const {

  return true;
}

void CreateBattle::Swap(CreateBattle* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    std::swap(battleid_, other->battleid_);
    std::swap(mapid_, other->mapid_);
    std::swap(battletype_, other->battletype_);
    userinfo_.Swap(&other->userinfo_);
    airobotlist_.Swap(&other->airobotlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CreateBattle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateBattle_descriptor_;
  metadata.reflection = CreateBattle_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyUserOnline::kMsgidFieldNumber;
const int NotifyUserOnline::kBattleidFieldNumber;
const int NotifyUserOnline::kUserguidFieldNumber;
const int NotifyUserOnline::kUsernetinfoFieldNumber;
#endif  // !_MSC_VER

NotifyUserOnline::NotifyUserOnline()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifyUserOnline)
}

void NotifyUserOnline::InitAsDefaultInstance() {
  usernetinfo_ = const_cast< ::CSToSS::SUserNetInfo*>(&::CSToSS::SUserNetInfo::default_instance());
}

NotifyUserOnline::NotifyUserOnline(const NotifyUserOnline& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifyUserOnline)
}

void NotifyUserOnline::SharedCtor() {
  _cached_size_ = 0;
  msgid_ = 16501;
  battleid_ = GOOGLE_ULONGLONG(0);
  userguid_ = GOOGLE_ULONGLONG(0);
  usernetinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyUserOnline::~NotifyUserOnline() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifyUserOnline)
  SharedDtor();
}

void NotifyUserOnline::SharedDtor() {
  if (this != default_instance_) {
    delete usernetinfo_;
  }
}

void NotifyUserOnline::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyUserOnline::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyUserOnline_descriptor_;
}

const NotifyUserOnline& NotifyUserOnline::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifyUserOnline* NotifyUserOnline::default_instance_ = NULL;

NotifyUserOnline* NotifyUserOnline::New() const {
  return new NotifyUserOnline;
}

void NotifyUserOnline::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<NotifyUserOnline*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(battleid_, userguid_);
    msgid_ = 16501;
    if (has_usernetinfo()) {
      if (usernetinfo_ != NULL) usernetinfo_->::CSToSS::SUserNetInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyUserOnline::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifyUserOnline)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_OneUserOnline];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_battleid;
        break;
      }

      // optional uint64 battleid = 2;
      case 2: {
        if (tag == 16) {
         parse_battleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battleid_)));
          set_has_battleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_userguid;
        break;
      }

      // optional uint64 userguid = 3;
      case 3: {
        if (tag == 24) {
         parse_userguid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userguid_)));
          set_has_userguid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_usernetinfo;
        break;
      }

      // optional .CSToSS.SUserNetInfo usernetinfo = 4;
      case 4: {
        if (tag == 34) {
         parse_usernetinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_usernetinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifyUserOnline)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifyUserOnline)
  return false;
#undef DO_
}

void NotifyUserOnline::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifyUserOnline)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_OneUserOnline];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // optional uint64 battleid = 2;
  if (has_battleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->battleid(), output);
  }

  // optional uint64 userguid = 3;
  if (has_userguid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->userguid(), output);
  }

  // optional .CSToSS.SUserNetInfo usernetinfo = 4;
  if (has_usernetinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->usernetinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifyUserOnline)
}

::google::protobuf::uint8* NotifyUserOnline::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifyUserOnline)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_OneUserOnline];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // optional uint64 battleid = 2;
  if (has_battleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->battleid(), target);
  }

  // optional uint64 userguid = 3;
  if (has_userguid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->userguid(), target);
  }

  // optional .CSToSS.SUserNetInfo usernetinfo = 4;
  if (has_usernetinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->usernetinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifyUserOnline)
  return target;
}

int NotifyUserOnline::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_OneUserOnline];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

    // optional uint64 battleid = 2;
    if (has_battleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->battleid());
    }

    // optional uint64 userguid = 3;
    if (has_userguid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->userguid());
    }

    // optional .CSToSS.SUserNetInfo usernetinfo = 4;
    if (has_usernetinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->usernetinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyUserOnline::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyUserOnline* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyUserOnline*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyUserOnline::MergeFrom(const NotifyUserOnline& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
    if (from.has_battleid()) {
      set_battleid(from.battleid());
    }
    if (from.has_userguid()) {
      set_userguid(from.userguid());
    }
    if (from.has_usernetinfo()) {
      mutable_usernetinfo()->::CSToSS::SUserNetInfo::MergeFrom(from.usernetinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyUserOnline::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyUserOnline::CopyFrom(const NotifyUserOnline& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyUserOnline::IsInitialized() const {

  return true;
}

void NotifyUserOnline::Swap(NotifyUserOnline* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    std::swap(battleid_, other->battleid_);
    std::swap(userguid_, other->userguid_);
    std::swap(usernetinfo_, other->usernetinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyUserOnline::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyUserOnline_descriptor_;
  metadata.reflection = NotifyUserOnline_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyUserOffline::kMsgidFieldNumber;
const int NotifyUserOffline::kBattleidFieldNumber;
const int NotifyUserOffline::kUserguidFieldNumber;
#endif  // !_MSC_VER

NotifyUserOffline::NotifyUserOffline()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.NotifyUserOffline)
}

void NotifyUserOffline::InitAsDefaultInstance() {
}

NotifyUserOffline::NotifyUserOffline(const NotifyUserOffline& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.NotifyUserOffline)
}

void NotifyUserOffline::SharedCtor() {
  _cached_size_ = 0;
  msgid_ = 16502;
  battleid_ = GOOGLE_ULONGLONG(0);
  userguid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyUserOffline::~NotifyUserOffline() {
  // @@protoc_insertion_point(destructor:CSToSS.NotifyUserOffline)
  SharedDtor();
}

void NotifyUserOffline::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyUserOffline::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyUserOffline::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyUserOffline_descriptor_;
}

const NotifyUserOffline& NotifyUserOffline::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

NotifyUserOffline* NotifyUserOffline::default_instance_ = NULL;

NotifyUserOffline* NotifyUserOffline::New() const {
  return new NotifyUserOffline;
}

void NotifyUserOffline::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<NotifyUserOffline*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(battleid_, userguid_);
    msgid_ = 16502;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyUserOffline::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.NotifyUserOffline)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_OneUserOffline];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_battleid;
        break;
      }

      // optional uint64 battleid = 2;
      case 2: {
        if (tag == 16) {
         parse_battleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battleid_)));
          set_has_battleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_userguid;
        break;
      }

      // optional uint64 userguid = 3;
      case 3: {
        if (tag == 24) {
         parse_userguid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userguid_)));
          set_has_userguid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.NotifyUserOffline)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.NotifyUserOffline)
  return false;
#undef DO_
}

void NotifyUserOffline::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.NotifyUserOffline)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_OneUserOffline];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // optional uint64 battleid = 2;
  if (has_battleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->battleid(), output);
  }

  // optional uint64 userguid = 3;
  if (has_userguid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->userguid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.NotifyUserOffline)
}

::google::protobuf::uint8* NotifyUserOffline::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.NotifyUserOffline)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_OneUserOffline];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // optional uint64 battleid = 2;
  if (has_battleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->battleid(), target);
  }

  // optional uint64 userguid = 3;
  if (has_userguid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->userguid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.NotifyUserOffline)
  return target;
}

int NotifyUserOffline::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_OneUserOffline];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

    // optional uint64 battleid = 2;
    if (has_battleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->battleid());
    }

    // optional uint64 userguid = 3;
    if (has_userguid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->userguid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyUserOffline::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyUserOffline* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyUserOffline*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyUserOffline::MergeFrom(const NotifyUserOffline& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
    if (from.has_battleid()) {
      set_battleid(from.battleid());
    }
    if (from.has_userguid()) {
      set_userguid(from.userguid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyUserOffline::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyUserOffline::CopyFrom(const NotifyUserOffline& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyUserOffline::IsInitialized() const {

  return true;
}

void NotifyUserOffline::Swap(NotifyUserOffline* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    std::swap(battleid_, other->battleid_);
    std::swap(userguid_, other->userguid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyUserOffline::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyUserOffline_descriptor_;
  metadata.reflection = NotifyUserOffline_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FinishBattleResponse::kMsgidFieldNumber;
const int FinishBattleResponse::kBattleidFieldNumber;
const int FinishBattleResponse::kRstFieldNumber;
#endif  // !_MSC_VER

FinishBattleResponse::FinishBattleResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSToSS.FinishBattleResponse)
}

void FinishBattleResponse::InitAsDefaultInstance() {
}

FinishBattleResponse::FinishBattleResponse(const FinishBattleResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSToSS.FinishBattleResponse)
}

void FinishBattleResponse::SharedCtor() {
  _cached_size_ = 0;
  msgid_ = 16510;
  battleid_ = GOOGLE_ULONGLONG(0);
  rst_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FinishBattleResponse::~FinishBattleResponse() {
  // @@protoc_insertion_point(destructor:CSToSS.FinishBattleResponse)
  SharedDtor();
}

void FinishBattleResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FinishBattleResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FinishBattleResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FinishBattleResponse_descriptor_;
}

const FinishBattleResponse& FinishBattleResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSToSS_2eproto();
  return *default_instance_;
}

FinishBattleResponse* FinishBattleResponse::default_instance_ = NULL;

FinishBattleResponse* FinishBattleResponse::New() const {
  return new FinishBattleResponse;
}

void FinishBattleResponse::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgid_ = 16510;
    battleid_ = GOOGLE_ULONGLONG(0);
    rst_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FinishBattleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSToSS.FinishBattleResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_FinishBattleResponse];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CSToSS::MsgId_IsValid(value)) {
            set_msgid(static_cast< ::CSToSS::MsgId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_battleid;
        break;
      }

      // optional uint64 battleid = 2;
      case 2: {
        if (tag == 16) {
         parse_battleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battleid_)));
          set_has_battleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_rst;
        break;
      }

      // optional bool rst = 3;
      case 3: {
        if (tag == 24) {
         parse_rst:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rst_)));
          set_has_rst();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSToSS.FinishBattleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSToSS.FinishBattleResponse)
  return false;
#undef DO_
}

void FinishBattleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSToSS.FinishBattleResponse)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_FinishBattleResponse];
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgid(), output);
  }

  // optional uint64 battleid = 2;
  if (has_battleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->battleid(), output);
  }

  // optional bool rst = 3;
  if (has_rst()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->rst(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSToSS.FinishBattleResponse)
}

::google::protobuf::uint8* FinishBattleResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToSS.FinishBattleResponse)
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_FinishBattleResponse];
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgid(), target);
  }

  // optional uint64 battleid = 2;
  if (has_battleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->battleid(), target);
  }

  // optional bool rst = 3;
  if (has_rst()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->rst(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToSS.FinishBattleResponse)
  return target;
}

int FinishBattleResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_FinishBattleResponse];
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
    }

    // optional uint64 battleid = 2;
    if (has_battleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->battleid());
    }

    // optional bool rst = 3;
    if (has_rst()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FinishBattleResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FinishBattleResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FinishBattleResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FinishBattleResponse::MergeFrom(const FinishBattleResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
    if (from.has_battleid()) {
      set_battleid(from.battleid());
    }
    if (from.has_rst()) {
      set_rst(from.rst());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FinishBattleResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FinishBattleResponse::CopyFrom(const FinishBattleResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FinishBattleResponse::IsInitialized() const {

  return true;
}

void FinishBattleResponse::Swap(FinishBattleResponse* other) {
  if (other != this) {
    std::swap(msgid_, other->msgid_);
    std::swap(battleid_, other->battleid_);
    std::swap(rst_, other->rst_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FinishBattleResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FinishBattleResponse_descriptor_;
  metadata.reflection = FinishBattleResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CSToSS

// @@protoc_insertion_point(global_scope)
