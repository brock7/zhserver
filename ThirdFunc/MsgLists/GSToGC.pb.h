// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GSToGC.proto

#ifndef PROTOBUF_GSToGC_2eproto__INCLUDED
#define PROTOBUF_GSToGC_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace GSToGC {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GSToGC_2eproto();
void protobuf_AssignDesc_GSToGC_2eproto();
void protobuf_ShutdownFile_GSToGC_2eproto();

class TaskData;
class NotifyUpdateAllTask;
class NotifyUpdateAllDailyTask;
class NotifyAddOneTask;
class NotifyUpdateOneTask;
class NotifyDelOneTask;
class NotifyRewardsOneTask;
class NotifyMailRet;
class NotifyIsOnSS;
class NotifyOtherItemInfo;
class NotifyOtherItemInfo_OtherItem;
class RecoinRuneRet;
class UnloadRune;
class GuideCSStepInfo;
class GuideAward;
class GuideAward_awardtype;
class GuideKillsInfo;
class NotifyUserLvInfo;
class NotifyNewHeaderid;
class NotifyOneMatchNeedOne;
class NotifyNewNickname;
class RunesSlot;
class RunesBagInfo;
class NotifyRunesList;
class NotifyRemoveCommodity;
class NotifyGetNewCommodity;
class NotifyMatchTeamBaseInfo;
class NotifyMatchTeamPlayerInfo;
class NotifyMatchTeamSwitch;
class NotifyMatchInviteJoin;
class NotifyHerosInfo;
class NotifyHerosInfo_heropanelinfo;
class NotifyHerosInfo_heropanelinfo_goodsmsg;
class NotifyGoodsExpired;
class ShortMail;
class DelAndSortMail;
class MailInfo;
class NotifyMailList;
class GoodsCfgInfo;
class GoodsCfgInfo_Consume;
class GoodsBuyCfgInfo;
class HeroAttributes;
class HeroAssist;
class BattleMatcherCount;
class BattleSpanTime;
class BattleDelayTime;
class UserBaseUpLv;
class SecondGuideTask;
class SecondGuideTask_task_info;
class GameTips;
class NotifyUserReturnBattleRoom;
class BroadcastBattleHeroInfo;
class BroadcastBattleHeroInfo_HeroInfo;
class BroadcastBattleHeroInfo_BaseGoodsInfo;
class GuideLastStep;
class NotifyUserCLDays;
class GameNotice;
class GameNotice_Notice;
class GuideSteps;
class PingRet;
class NotifyQueryNickNameRet;
class NotifyQueryNickNameRet_QueryInfo;
class SNSInfo;
class NotifyUserSNSList;
class NotifyBattleManagerChange;
class NotifyBeAddFriendMs;
class NotifyMsgFromUser;
class NotifyUserSNSListChange;
class UserBeInvitedToBattle;
class NotifyAFPData;
class NotifyAFPData_FPInfo;
class UserBaseInfo;
class NotifySystemAnnounce;
class NetClash;
class WarningToSelectHero;
class NotifySkillModelLeading;
class AskRet;
class NotifyCSHeroList;
class NotifyCSHeroList_HeroListCfg;
class HeroList;
class BattleBaseInfo;
class RoomBaseInfo;
class BattleSeatPosInfo;
class BattleSeatPosInfo_PosInfo;
class BattleStateChange;
class CurBattleChange;
class Pos;
class Dir;
class GOAppear;
class GOAppear_AppearInfo;
class DisappearInfo;
class FreeState;
class RunningState;
class PrepareSkillState;
class ReleasingSkillState;
class UsingSkillState;
class LastingSkillState;
class DeadState;
class NotifyGoodsInfo;
class NotifyGoodsInfo_GoodsInfo;
class BattleLoadingState;
class HeroPosInfo;
class HeroInfo;
class ChatInRoom;
class SkillHitTar;
class HPChange;
class MpChange;
class TryToChooseHero;
class NotifyChooseHeroTimeEnd;
class SkillEntityInfo;
class FPInfo;
class NotifyHPInfo;
class NotifyHPInfo_HPInfo;
class NotifyMPInfo;
class NotifyMPInfo_MPInfo;
class NotifyHeroInfo;
class NotifySkillInfo;
class BattleFinish;
class Exp;
class LevelInfo;
class AbsorbBegin;
class AbsorbRes;
class CancelAbsorb;
class UserGameInfo;
class HeroKills;
class CurDeadTimes;
class CurCP;
class CurAtkSpeed;
class CurAtkSpeed_SpeedInfo;
class FuryVal;
class FuryState;
class NotifyHeroReborn;
class RebornTimes;
class RebornSuccess;
class PersonCPChange;
class BroadcastBatteleRes;
class BroadcastBatteleRes_ResInfo;
class BroadcastBattelePersonalRes;
class BroadcastBuildingDestory;
class HeroMoveInfo;
class PlayFinishVedio;
class LeaveBattleSuccess;
class BornSoler;
class SkillEnd;
class AltarBSIco;
class GOReleaseSkill;
class GOSkillCD;
class EmitSkill;
class DestroyEmitEffect;
class HitTar;
class RangeEffect;
class RangeEffectEnd;
class SummonEffect;
class BuffEffect;
class NotifySummonLifeTime;
class NotifySkillModelStartForceMove;
class NotifySkillModelStartForceMoveStop;
class NotifySkillModelStartForceMoveTeleport;
class NotifySkillModelPurification;
class NotifySkillModelStartLink;
class NotifySkillModelStopLink;
class NotifyPassitiveSkillRelease;
class NotifyPassitiveSkillLoad;
class NotifyPassitiveSkillUnLoad;
class NotifySkillModelEmitTurn;
class NotifyBornObj;
class NotifyReconnectInfo;
class NotifyReconnectInfo_ReconnectInfo;
class NotifyOBReturnBattleRoom;
class NotifyOBAppear;
class NotifyKillNPC;
class NotifyAltarBSIco;
class NotifySkillUpLv;
class NotifyBlastHurt;
class NotifyGameObjectReliveState;
class NotifyCurGold;
class NotifyCurDiamond;
class GetloginRewardSuccess;
class GetloginReward_Skin;
class GetloginReward_Rune;
class GetloginReward_Hero;
class CanInviteFriends;
class CanInviteFriends_Friends;
class LastHitNum;
class RoomInfo;
class AskRoomListRet;

enum GuideAward_dtype {
  GuideAward_dtype_type_gold = 1,
  GuideAward_dtype_type_diamond = 2,
  GuideAward_dtype_type_goodsid = 3
};
bool GuideAward_dtype_IsValid(int value);
const GuideAward_dtype GuideAward_dtype_dtype_MIN = GuideAward_dtype_type_gold;
const GuideAward_dtype GuideAward_dtype_dtype_MAX = GuideAward_dtype_type_goodsid;
const int GuideAward_dtype_dtype_ARRAYSIZE = GuideAward_dtype_dtype_MAX + 1;

const ::google::protobuf::EnumDescriptor* GuideAward_dtype_descriptor();
inline const ::std::string& GuideAward_dtype_Name(GuideAward_dtype value) {
  return ::google::protobuf::internal::NameOfEnum(
    GuideAward_dtype_descriptor(), value);
}
inline bool GuideAward_dtype_Parse(
    const ::std::string& name, GuideAward_dtype* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GuideAward_dtype>(
    GuideAward_dtype_descriptor(), name, value);
}
enum GoodsCfgInfo_CfgType {
  GoodsCfgInfo_CfgType_CfgType_Common = 0,
  GoodsCfgInfo_CfgType_CfgType_Discount = 1,
  GoodsCfgInfo_CfgType_CfgType_hot = 2,
  GoodsCfgInfo_CfgType_CfgType_New = 3
};
bool GoodsCfgInfo_CfgType_IsValid(int value);
const GoodsCfgInfo_CfgType GoodsCfgInfo_CfgType_CfgType_MIN = GoodsCfgInfo_CfgType_CfgType_Common;
const GoodsCfgInfo_CfgType GoodsCfgInfo_CfgType_CfgType_MAX = GoodsCfgInfo_CfgType_CfgType_New;
const int GoodsCfgInfo_CfgType_CfgType_ARRAYSIZE = GoodsCfgInfo_CfgType_CfgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GoodsCfgInfo_CfgType_descriptor();
inline const ::std::string& GoodsCfgInfo_CfgType_Name(GoodsCfgInfo_CfgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GoodsCfgInfo_CfgType_descriptor(), value);
}
inline bool GoodsCfgInfo_CfgType_Parse(
    const ::std::string& name, GoodsCfgInfo_CfgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GoodsCfgInfo_CfgType>(
    GoodsCfgInfo_CfgType_descriptor(), name, value);
}
enum NotifyAFPData_EnumFpType {
  NotifyAFPData_EnumFpType_PhyHurt = 1,
  NotifyAFPData_EnumFpType_MagicHurt = 2,
  NotifyAFPData_EnumFpType_CurHP = 3,
  NotifyAFPData_EnumFpType_CurMP = 4,
  NotifyAFPData_EnumFpType_PhyAttack = 5,
  NotifyAFPData_EnumFpType_MagicAttack = 6,
  NotifyAFPData_EnumFpType_PhyDefense = 7,
  NotifyAFPData_EnumFpType_MagicDefense = 8,
  NotifyAFPData_EnumFpType_MoveSpeed = 9,
  NotifyAFPData_EnumFpType_AttackSpeed = 10,
  NotifyAFPData_EnumFpType_MaxHP = 11,
  NotifyAFPData_EnumFpType_MaxMP = 12,
  NotifyAFPData_EnumFpType_HPRecoverRate = 13,
  NotifyAFPData_EnumFpType_MPRecoverRate = 14,
  NotifyAFPData_EnumFpType_ReliveTime = 15,
  NotifyAFPData_EnumFpType_Dizziness = 16,
  NotifyAFPData_EnumFpType_Silence = 17,
  NotifyAFPData_EnumFpType_PosMove = 18,
  NotifyAFPData_EnumFpType_Rebound = 19,
  NotifyAFPData_EnumFpType_PhySuckBlood = 20,
  NotifyAFPData_EnumFpType_Disarm = 21,
  NotifyAFPData_EnumFpType_Restrain = 22,
  NotifyAFPData_EnumFpType_CriPersent = 23,
  NotifyAFPData_EnumFpType_CriHarm = 24,
  NotifyAFPData_EnumFpType_CPRecover = 25,
  NotifyAFPData_EnumFpType_PassitiveSkill = 26,
  NotifyAFPData_EnumFpType_Invisible = 27,
  NotifyAFPData_EnumFpType_AttackDist = 28,
  NotifyAFPData_EnumFpType_TrueHurt = 29,
  NotifyAFPData_EnumFpType_PhyPassNum = 30,
  NotifyAFPData_EnumFpType_PhyPassPercent = 31,
  NotifyAFPData_EnumFpType_MagicPassNum = 32,
  NotifyAFPData_EnumFpType_MagicPassPercent = 33,
  NotifyAFPData_EnumFpType_CooldownReduce = 34,
  NotifyAFPData_EnumFpType_PhyDmgReduce = 35,
  NotifyAFPData_EnumFpType_MagicDmgReduce = 36,
  NotifyAFPData_EnumFpType_TrueDmgReduce = 37,
  NotifyAFPData_EnumFpType_PhyDmgReduceNum = 38,
  NotifyAFPData_EnumFpType_MagicDmgReduceNum = 39,
  NotifyAFPData_EnumFpType_TrueDmgReduceNum = 40,
  NotifyAFPData_EnumFpType_MagicSuckBlood = 41
};
bool NotifyAFPData_EnumFpType_IsValid(int value);
const NotifyAFPData_EnumFpType NotifyAFPData_EnumFpType_EnumFpType_MIN = NotifyAFPData_EnumFpType_PhyHurt;
const NotifyAFPData_EnumFpType NotifyAFPData_EnumFpType_EnumFpType_MAX = NotifyAFPData_EnumFpType_MagicSuckBlood;
const int NotifyAFPData_EnumFpType_EnumFpType_ARRAYSIZE = NotifyAFPData_EnumFpType_EnumFpType_MAX + 1;

const ::google::protobuf::EnumDescriptor* NotifyAFPData_EnumFpType_descriptor();
inline const ::std::string& NotifyAFPData_EnumFpType_Name(NotifyAFPData_EnumFpType value) {
  return ::google::protobuf::internal::NameOfEnum(
    NotifyAFPData_EnumFpType_descriptor(), value);
}
inline bool NotifyAFPData_EnumFpType_Parse(
    const ::std::string& name, NotifyAFPData_EnumFpType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NotifyAFPData_EnumFpType>(
    NotifyAFPData_EnumFpType_descriptor(), name, value);
}
enum MsgID {
  eMsgToGCFromGS_Begin = 0,
  eMsgToGCFromGS_GCAskPingRet = 1,
  eMsgToGCFromGS_NotifyUserBaseInfo = 2,
  eMsgToGCFromGS_NotifySystemAnnounce = 3,
  eMsgToGCFromGS_NotifyNetClash = 4,
  eMsgToGCFromGS_GCAskRet = 5,
  eMsgToGCFromGS_NotifyHeroList = 7,
  eMsgToGCFromGS_NotifyBattleBaseInfo = 8,
  eMsgToGCFromGS_NotifyBattleSeatPosInfo = 9,
  eMsgToGCFromGS_NotifyBattleStateChange = 10,
  eMsgToGCFromGS_NotifyCurBattleChange = 11,
  eMsgToGCFromGS_NotifyGameObjectAppear = 12,
  eMsgToGCFromGS_NotifyGameObjectDisappear = 13,
  eMsgToGCFromGS_NotifyGameObjectFreeState = 14,
  eMsgToGCFromGS_NotifyGameObjectRunState = 15,
  eMsgToGCFromGS_NotifyGameObjectPrepareSkillState = 16,
  eMsgToGCFromGS_NotifyGameObjectReleaseSkillState = 17,
  eMsgToGCFromGS_NotifyGameObjectDeadState = 18,
  eMsgToGCFromGS_NotifyGoodsInf = 19,
  eMsgToGCFromGS_NotifyBattleLoadingState = 20,
  eMsgToGCFromGS_NotifyBattleHeroInfo = 21,
  eMsgToGCFromGS_BagRunesInfoChange = 22,
  eMsgToGCFromGS_ExchangeGold = 23,
  eMsgToGCFromGS_ChatInRoom = 24,
  eMsgToGCFromGS_NotifySkillHitTarget = 25,
  eMsgToGCFromGS_NotifyHPChange = 26,
  eMsgToGCFromGS_NotifyMPChange = 27,
  eMsgToGCFromGS_NotifyTryToChooseHero = 28,
  eMsgToGCFromGS_NotifyChooseHeroTimeEnd = 29,
  eMsgToGCFromGS_NotifySkillEntityInfo = 30,
  eMsgToGCFromGS_NotifyFightPropertyInfo = 31,
  eMsgToGCFromGS_NotifyHPInfo = 34,
  eMsgToGCFromGS_NotifyMPInfo = 35,
  eMsgToGCFromGS_NotifyHeroInfo = 36,
  eMsgToGCFromGS_NotifyBuffInfo = 37,
  eMsgToGCFromGS_NotifyBuffRemove = 38,
  eMsgToGCFromGS_NotifySkillInfo = 39,
  eMsgToGCFromGS_NotifyBattleFinish = 40,
  eMsgToGCFromGS_NotifyExpInfo = 41,
  eMsgToGCFromGS_NotifyHeroLevelInfo = 42,
  eMsgToGCFromGS_NotifyAbsorbBegin = 43,
  eMsgToGCFromGS_NotifyAbsorbMonsterResult = 44,
  eMsgToGCFromGS_NotifyCancelAbsorbSkill = 45,
  eMsgToGCFromGS_NotifyUserGameInfo = 46,
  eMsgToGCFromGS_NotifyHeroKills = 47,
  eMsgToGCFromGS_NotifyCurDeadTimes = 48,
  eMsgToGCFromGS_NotifyCurCP = 49,
  eMsgToGCFromGS_NotifyCurAtkSpeed = 50,
  eMsgToGCFromGS_NotifyFuryValue = 51,
  eMsgToGCFromGS_NotifyFuryState = 52,
  eMsgToGCFromGS_NotifyHeroRebornTimes = 53,
  eMsgToGCFromGS_NotifyBuyRebornSuccess = 54,
  eMsgToGCFromGS_BroadcastBattleHeroInfo = 55,
  eMsgToGCFromGS_NotifyPersonalCPChange = 56,
  eMsgToGCFromGS_BroadCurBattleResult = 57,
  eMsgToGCFromGS_BroadBuildingDestroyByWho = 58,
  eMsgToGCFromGS_NotifyVoipRoomId = 59,
  eMsgToGCFromGS_NotifyHeroDisplacementInfo = 60,
  eMsgToGCFromGS_BroadcastPlayFinishVedio = 61,
  eMsgToGCFromGS_NotifyLeaveBattleSuccess = 62,
  eMsgToGCFromGS_NotifyBornSolder = 63,
  eMsgToGCFromGS_NotifySkillEnd = 64,
  eMsgToGCFromGS_NotifyAltarBSIco = 65,
  eMsgToGCFromGS_WarningToSelectHero = 66,
  eMsgToGCFromGS_NotifyGameObjectReleaseSkill = 67,
  eMsgToGCFromGS_NotifyGameObjectSkillCD = 68,
  eMsgToGCFromGS_NotifySkillModelEmit = 69,
  eMsgToGCFromGS_NotifySkillModelEmitDestroy = 70,
  eMsgToGCFromGS_NotifySkillModelHitTarget = 71,
  eMsgToGCFromGS_NotifySkillModelRange = 72,
  eMsgToGCFromGS_NotifySkillModelRangeEnd = 73,
  eMsgToGCFromGS_NotifySkillModelLeading = 74,
  eMsgToGCFromGS_NotifySkillModelSummonEffect = 75,
  eMsgToGCFromGS_NotifySkillModelBufEffect = 76,
  eMsgToGCFromGS_NotifySummonLifeTime = 77,
  eMsgToGCFromGS_NotifySkillModelStartForceMove = 78,
  eMsgToGCFromGS_NotifySkillModelStartForceMoveStop = 79,
  eMsgToGCFromGS_NotifySkillModelStartForceMoveTeleport = 80,
  eMsgToGCFromGS_NotifyPassitiveSkillRelease = 81,
  eMsgToGCFromGS_NotifyPassitiveSkillLoad = 82,
  eMsgToGCFromGS_NotifyPassitiveSkillUnload = 83,
  eMsgToGCFromGS_NotifySkillModelEmitTurn = 84,
  eMsgToGCFromGS_NotifyAFPData = 85,
  eMsgToGCFromGS_NotifyBattleManagerChange = 86,
  eMsgToGCFromGS_NotifyBornObj = 87,
  eMsgToGCFromGS_NotifyReconnectInfo = 88,
  eMsgToGCFromGS_NotifyHeroGoodsInfo = 89,
  eMsgToGCFromGS_NotifyOBReturnBattleRoom = 90,
  eMsgToGCFromGS_NotifyUserReturnBattleRoom = 91,
  eMsgToGCFromGS_NotifyBattleAllUserInfo = 92,
  eMsgToGCFromGS_NotifyUserBeAddedFirendInfo = 93,
  eMsgToGCFromCS_NotifyDefaultHeros = 94,
  eMsgToGCFromGS_NotifyOBAppear = 95,
  eMsgToGCFromGS_NotifyKillNPC = 96,
  eMsgToGCFromGS_NotifyAltarBSOk = 97,
  eMsgToGCFromGS_NotifySkillUpLv = 98,
  eMsgToGCFromGS_NotifyUserSNSList = 99,
  eMsgToGCFromGS_NotifyUserSNSListChange = 100,
  eMsgToGCFromGS_UserBeInvitedToBattle = 101,
  eMsgToGCFromGS_NotifyMsgFromUser = 102,
  eMsgToGCFromGS_NotifyBeAddFriendMsg = 103,
  eMsgToGCFromGS_NotifyQueryNickNameRet = 104,
  eMsgToGCFromCS_NotifyGuideLastComStep = 106,
  eMsgToGCFromGS_NotifyBlastHurt = 107,
  eMsgToGCFromGS_NotifyHeroReborn = 110,
  eMsgToGCFromGS_NotifyGameObjectReliveState = 111,
  eMsgToGCFromGS_NotifyUserGuideSetups = 112,
  eMsgToGCFromBS_AskGateAddressRet = 113,
  eMsgToGCFromGS_NotifyUserName = 114,
  eMsgToGCFromCS_NotifyReconnectInfo = 115,
  eMsgToSSFromCS_NotifyBornObj = 116,
  eMsgToGCFromGS_NotifyNotice = 117,
  eMsgToGCFromGS_NotifyGuideTips = 118,
  eMsgToGCFromGS_NotifyUserCLDays = 119,
  eMsgToGCFromGs_NotifySecondaryGuideTask = 121,
  eMsgToGCFromGs_NotifyCurGold = 122,
  eMsgToGCFromGs_NotifyCurDiamond = 123,
  eMsgToGCFromGS_NotifyGetloginRewardSuccess = 124,
  eMsgToGCFromGS_NotifyGetloginReward_Skin = 125,
  eMsgToGCFromGS_NotifyGetloginReward_Rune = 126,
  eMsgToGCFromGS_NotifyGetloginReward_Hero = 127,
  eMsgToGCFromGS_NotifyUserBaseUpLv = 128,
  eMsgToGCFromGS_NotifyBattleSpanTime = 129,
  eMsgToGCFromGS_NotifyBattleMatherCount = 130,
  eMsgToGCFromGS_NotifyHeroAssist = 131,
  eMsgToGCFromGS_NotifyHeroAttributes = 132,
  eMsgToGCFromGS_NotifyGoodsCfgInfo = 133,
  eMsgToGCFromGS_NotifyUserMail = 134,
  eMsgToGCFromGS_NotifyMailInfo = 135,
  eMsgToGCFromGS_NotifyIfMailDelAndSort = 136,
  eMsgToGCFromGS_NotifyRoomBaseInfo = 140,
  eMsgToGCFromBS_NotifyCanInviteFriends = 141,
  eMsgToGCFromBS_NotifyCurLastHitNum = 142,
  eMsgToGCFromGS_AskRoomListRet = 143,
  eMsgToGCFromBS_NotifyHerosInfo = 144,
  eMsgToGCFromBS_NotifyGoodsExpired = 145,
  eMsgToGCFromGS_NotifySkillModelPurification = 220,
  eMsgToGCFromGS_NotifyCSHeroList = 221,
  eMsgToGCFromGS_NotifyMatchTeamBaseInfo = 222,
  eMsgToGCFromGS_NotifyMatchTeamPlayerInfo = 223,
  eMsgToGCFromGS_NotifyMatchTeamSwitch = 224,
  eMsgToGCFromGS_NotifyMatchInviteJoin = 225,
  eMsgToGCFromGS_NotifyGetNewCommodity = 226,
  eMsgToGCFromGS_NotifyRemoveCommodity = 227,
  eMsgToGCFromGS_NotifyRunesList = 228,
  eMsgToGCFromGS_NotifyNewNickname = 229,
  eMsgToGCFromGS_NotifyOneMatchNeedOne = 230,
  eMsgToGCFromGS_NotifyNewHeaderid = 231,
  eMsgToGCFromGS_NotifyUserLvInfo = 232,
  eMsgToGCFromGS_BroadBattlePersonalResult = 233,
  eMsgToGCFromGS_UnloadRune = 234,
  eMsgToGCFromGS_NotifyBattleDelayTime = 235,
  eMsgToGCFromGS_RecoinRuneRet = 236,
  eMsgToGCFromGS_NotifyOtherItemInfo = 237,
  eMsgToGCFromCS_NotifyIsOnSS = 238,
  eMsgToGCFromGS_NotifyGameObjectUsingSkillState = 240,
  eMsgToGCFromGS_NotifyGameObjectLastingSkillState = 241,
  eMsgToGCFromGS_GuideResp = 300,
  eMsgToGCFromCS_GuideKillsInfo = 301,
  eMsgToGCFromGS_GuideAward = 302,
  eMsgToGCFromGS_UpdateAllTask = 400,
  eMsgToGCFromGS_UpdateAllDailyTask = 401,
  eMsgToGCFromGS_AddOneTask = 402,
  eMsgToGCFromGS_UpdateOneTask = 403,
  eMsgToGCFromGS_DelOneTask = 404,
  eMsgToGCFromGS_RewardsOneTask = 405,
  eMsgToGCFromGS_NotifySkillModelStartLink = 550,
  eMsgToGCFromGS_NotifySkillModelStopLink = 551,
  eMsgToGCFromGS_NotifyMailRet = 601,
  eMsgToGCFromGS_End = 1000
};
bool MsgID_IsValid(int value);
const MsgID MsgID_MIN = eMsgToGCFromGS_Begin;
const MsgID MsgID_MAX = eMsgToGCFromGS_End;
const int MsgID_ARRAYSIZE = MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgID_descriptor();
inline const ::std::string& MsgID_Name(MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgID_descriptor(), value);
}
inline bool MsgID_Parse(
    const ::std::string& name, MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgID>(
    MsgID_descriptor(), name, value);
}
enum MailType {
  mailType_None = 0,
  mailType_1 = 1,
  mailType_2 = 2,
  mailType_3 = 3,
  mailType_4 = 4
};
bool MailType_IsValid(int value);
const MailType MailType_MIN = mailType_None;
const MailType MailType_MAX = mailType_4;
const int MailType_ARRAYSIZE = MailType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MailType_descriptor();
inline const ::std::string& MailType_Name(MailType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MailType_descriptor(), value);
}
inline bool MailType_Parse(
    const ::std::string& name, MailType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MailType>(
    MailType_descriptor(), name, value);
}
enum EMailCurtState {
  eMailState_None = 0,
  eMailState_New = 1,
  eMailState_LookedButNotGotGift = 2,
  eMailState_Look = 3,
  eMailState_Del = 4
};
bool EMailCurtState_IsValid(int value);
const EMailCurtState EMailCurtState_MIN = eMailState_None;
const EMailCurtState EMailCurtState_MAX = eMailState_Del;
const int EMailCurtState_ARRAYSIZE = EMailCurtState_MAX + 1;

const ::google::protobuf::EnumDescriptor* EMailCurtState_descriptor();
inline const ::std::string& EMailCurtState_Name(EMailCurtState value) {
  return ::google::protobuf::internal::NameOfEnum(
    EMailCurtState_descriptor(), value);
}
inline bool EMailCurtState_Parse(
    const ::std::string& name, EMailCurtState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EMailCurtState>(
    EMailCurtState_descriptor(), name, value);
}
enum BattleState {
  free = 0,
  waiting = 1,
  selecthero = 2,
  loading = 3,
  playing = 4,
  finish = 5
};
bool BattleState_IsValid(int value);
const BattleState BattleState_MIN = free;
const BattleState BattleState_MAX = finish;
const int BattleState_ARRAYSIZE = BattleState_MAX + 1;

const ::google::protobuf::EnumDescriptor* BattleState_descriptor();
inline const ::std::string& BattleState_Name(BattleState value) {
  return ::google::protobuf::internal::NameOfEnum(
    BattleState_descriptor(), value);
}
inline bool BattleState_Parse(
    const ::std::string& name, BattleState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BattleState>(
    BattleState_descriptor(), name, value);
}
enum ObjType {
  ObjType_Hero = 1,
  ObjType_NPC = 2
};
bool ObjType_IsValid(int value);
const ObjType ObjType_MIN = ObjType_Hero;
const ObjType ObjType_MAX = ObjType_NPC;
const int ObjType_ARRAYSIZE = ObjType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ObjType_descriptor();
inline const ::std::string& ObjType_Name(ObjType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ObjType_descriptor(), value);
}
inline bool ObjType_Parse(
    const ::std::string& name, ObjType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ObjType>(
    ObjType_descriptor(), name, value);
}
enum HPMPChangeReason {
  NormalHurt = 0,
  BloastHurt = 1,
  SkillHurt = 2,
  RecoverHurt = 3,
  SkillConsume = 4,
  BuffEffectReason = 5
};
bool HPMPChangeReason_IsValid(int value);
const HPMPChangeReason HPMPChangeReason_MIN = NormalHurt;
const HPMPChangeReason HPMPChangeReason_MAX = BuffEffectReason;
const int HPMPChangeReason_ARRAYSIZE = HPMPChangeReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* HPMPChangeReason_descriptor();
inline const ::std::string& HPMPChangeReason_Name(HPMPChangeReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    HPMPChangeReason_descriptor(), value);
}
inline bool HPMPChangeReason_Parse(
    const ::std::string& name, HPMPChangeReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HPMPChangeReason>(
    HPMPChangeReason_descriptor(), name, value);
}
enum SkillState {
  sing = 0,
  prepare = 1,
  release = 2,
  end = 3
};
bool SkillState_IsValid(int value);
const SkillState SkillState_MIN = sing;
const SkillState SkillState_MAX = end;
const int SkillState_ARRAYSIZE = SkillState_MAX + 1;

const ::google::protobuf::EnumDescriptor* SkillState_descriptor();
inline const ::std::string& SkillState_Name(SkillState value) {
  return ::google::protobuf::internal::NameOfEnum(
    SkillState_descriptor(), value);
}
inline bool SkillState_Parse(
    const ::std::string& name, SkillState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SkillState>(
    SkillState_descriptor(), name, value);
}
// ===================================================================

class TaskData : public ::google::protobuf::Message {
 public:
  TaskData();
  virtual ~TaskData();

  TaskData(const TaskData& from);

  inline TaskData& operator=(const TaskData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskData& default_instance();

  void Swap(TaskData* other);

  // implements Message ----------------------------------------------

  TaskData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskData& from);
  void MergeFrom(const TaskData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);

  // optional uint32 task_guid = 2;
  inline bool has_task_guid() const;
  inline void clear_task_guid();
  static const int kTaskGuidFieldNumber = 2;
  inline ::google::protobuf::uint32 task_guid() const;
  inline void set_task_guid(::google::protobuf::uint32 value);

  // optional uint32 task_curCount = 3;
  inline bool has_task_curcount() const;
  inline void clear_task_curcount();
  static const int kTaskCurCountFieldNumber = 3;
  inline ::google::protobuf::uint32 task_curcount() const;
  inline void set_task_curcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.TaskData)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_task_guid();
  inline void clear_has_task_guid();
  inline void set_has_task_curcount();
  inline void clear_has_task_curcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 task_id_;
  ::google::protobuf::uint32 task_guid_;
  ::google::protobuf::uint32 task_curcount_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static TaskData* default_instance_;
};
// -------------------------------------------------------------------

class NotifyUpdateAllTask : public ::google::protobuf::Message {
 public:
  NotifyUpdateAllTask();
  virtual ~NotifyUpdateAllTask();

  NotifyUpdateAllTask(const NotifyUpdateAllTask& from);

  inline NotifyUpdateAllTask& operator=(const NotifyUpdateAllTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyUpdateAllTask& default_instance();

  void Swap(NotifyUpdateAllTask* other);

  // implements Message ----------------------------------------------

  NotifyUpdateAllTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyUpdateAllTask& from);
  void MergeFrom(const NotifyUpdateAllTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_UpdateAllTask];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // repeated .GSToGC.TaskData taskList = 2;
  inline int tasklist_size() const;
  inline void clear_tasklist();
  static const int kTaskListFieldNumber = 2;
  inline const ::GSToGC::TaskData& tasklist(int index) const;
  inline ::GSToGC::TaskData* mutable_tasklist(int index);
  inline ::GSToGC::TaskData* add_tasklist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::TaskData >&
      tasklist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::TaskData >*
      mutable_tasklist();

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyUpdateAllTask)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::TaskData > tasklist_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyUpdateAllTask* default_instance_;
};
// -------------------------------------------------------------------

class NotifyUpdateAllDailyTask : public ::google::protobuf::Message {
 public:
  NotifyUpdateAllDailyTask();
  virtual ~NotifyUpdateAllDailyTask();

  NotifyUpdateAllDailyTask(const NotifyUpdateAllDailyTask& from);

  inline NotifyUpdateAllDailyTask& operator=(const NotifyUpdateAllDailyTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyUpdateAllDailyTask& default_instance();

  void Swap(NotifyUpdateAllDailyTask* other);

  // implements Message ----------------------------------------------

  NotifyUpdateAllDailyTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyUpdateAllDailyTask& from);
  void MergeFrom(const NotifyUpdateAllDailyTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_UpdateAllDailyTask];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // repeated .GSToGC.TaskData taskList = 2;
  inline int tasklist_size() const;
  inline void clear_tasklist();
  static const int kTaskListFieldNumber = 2;
  inline const ::GSToGC::TaskData& tasklist(int index) const;
  inline ::GSToGC::TaskData* mutable_tasklist(int index);
  inline ::GSToGC::TaskData* add_tasklist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::TaskData >&
      tasklist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::TaskData >*
      mutable_tasklist();

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyUpdateAllDailyTask)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::TaskData > tasklist_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyUpdateAllDailyTask* default_instance_;
};
// -------------------------------------------------------------------

class NotifyAddOneTask : public ::google::protobuf::Message {
 public:
  NotifyAddOneTask();
  virtual ~NotifyAddOneTask();

  NotifyAddOneTask(const NotifyAddOneTask& from);

  inline NotifyAddOneTask& operator=(const NotifyAddOneTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyAddOneTask& default_instance();

  void Swap(NotifyAddOneTask* other);

  // implements Message ----------------------------------------------

  NotifyAddOneTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyAddOneTask& from);
  void MergeFrom(const NotifyAddOneTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_AddOneTask];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional .GSToGC.TaskData oneTask = 2;
  inline bool has_onetask() const;
  inline void clear_onetask();
  static const int kOneTaskFieldNumber = 2;
  inline const ::GSToGC::TaskData& onetask() const;
  inline ::GSToGC::TaskData* mutable_onetask();
  inline ::GSToGC::TaskData* release_onetask();
  inline void set_allocated_onetask(::GSToGC::TaskData* onetask);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyAddOneTask)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_onetask();
  inline void clear_has_onetask();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::GSToGC::TaskData* onetask_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyAddOneTask* default_instance_;
};
// -------------------------------------------------------------------

class NotifyUpdateOneTask : public ::google::protobuf::Message {
 public:
  NotifyUpdateOneTask();
  virtual ~NotifyUpdateOneTask();

  NotifyUpdateOneTask(const NotifyUpdateOneTask& from);

  inline NotifyUpdateOneTask& operator=(const NotifyUpdateOneTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyUpdateOneTask& default_instance();

  void Swap(NotifyUpdateOneTask* other);

  // implements Message ----------------------------------------------

  NotifyUpdateOneTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyUpdateOneTask& from);
  void MergeFrom(const NotifyUpdateOneTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_UpdateOneTask];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional .GSToGC.TaskData oneTask = 2;
  inline bool has_onetask() const;
  inline void clear_onetask();
  static const int kOneTaskFieldNumber = 2;
  inline const ::GSToGC::TaskData& onetask() const;
  inline ::GSToGC::TaskData* mutable_onetask();
  inline ::GSToGC::TaskData* release_onetask();
  inline void set_allocated_onetask(::GSToGC::TaskData* onetask);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyUpdateOneTask)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_onetask();
  inline void clear_has_onetask();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::GSToGC::TaskData* onetask_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyUpdateOneTask* default_instance_;
};
// -------------------------------------------------------------------

class NotifyDelOneTask : public ::google::protobuf::Message {
 public:
  NotifyDelOneTask();
  virtual ~NotifyDelOneTask();

  NotifyDelOneTask(const NotifyDelOneTask& from);

  inline NotifyDelOneTask& operator=(const NotifyDelOneTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyDelOneTask& default_instance();

  void Swap(NotifyDelOneTask* other);

  // implements Message ----------------------------------------------

  NotifyDelOneTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyDelOneTask& from);
  void MergeFrom(const NotifyDelOneTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_DelOneTask];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint32 task_guid = 2;
  inline bool has_task_guid() const;
  inline void clear_task_guid();
  static const int kTaskGuidFieldNumber = 2;
  inline ::google::protobuf::uint32 task_guid() const;
  inline void set_task_guid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyDelOneTask)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_task_guid();
  inline void clear_has_task_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::uint32 task_guid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyDelOneTask* default_instance_;
};
// -------------------------------------------------------------------

class NotifyRewardsOneTask : public ::google::protobuf::Message {
 public:
  NotifyRewardsOneTask();
  virtual ~NotifyRewardsOneTask();

  NotifyRewardsOneTask(const NotifyRewardsOneTask& from);

  inline NotifyRewardsOneTask& operator=(const NotifyRewardsOneTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyRewardsOneTask& default_instance();

  void Swap(NotifyRewardsOneTask* other);

  // implements Message ----------------------------------------------

  NotifyRewardsOneTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyRewardsOneTask& from);
  void MergeFrom(const NotifyRewardsOneTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_RewardsOneTask];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint32 task_guid = 2;
  inline bool has_task_guid() const;
  inline void clear_task_guid();
  static const int kTaskGuidFieldNumber = 2;
  inline ::google::protobuf::uint32 task_guid() const;
  inline void set_task_guid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyRewardsOneTask)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_task_guid();
  inline void clear_has_task_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::uint32 task_guid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyRewardsOneTask* default_instance_;
};
// -------------------------------------------------------------------

class NotifyMailRet : public ::google::protobuf::Message {
 public:
  NotifyMailRet();
  virtual ~NotifyMailRet();

  NotifyMailRet(const NotifyMailRet& from);

  inline NotifyMailRet& operator=(const NotifyMailRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyMailRet& default_instance();

  void Swap(NotifyMailRet* other);

  // implements Message ----------------------------------------------

  NotifyMailRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyMailRet& from);
  void MergeFrom(const NotifyMailRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyMailRet];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int32 mailid = 2;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailidFieldNumber = 2;
  inline ::google::protobuf::int32 mailid() const;
  inline void set_mailid(::google::protobuf::int32 value);

  // optional int32 errcode = 3;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 3;
  inline ::google::protobuf::int32 errcode() const;
  inline void set_errcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyMailRet)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_errcode();
  inline void clear_has_errcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::int32 mailid_;
  ::google::protobuf::int32 errcode_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyMailRet* default_instance_;
};
// -------------------------------------------------------------------

class NotifyIsOnSS : public ::google::protobuf::Message {
 public:
  NotifyIsOnSS();
  virtual ~NotifyIsOnSS();

  NotifyIsOnSS(const NotifyIsOnSS& from);

  inline NotifyIsOnSS& operator=(const NotifyIsOnSS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyIsOnSS& default_instance();

  void Swap(NotifyIsOnSS* other);

  // implements Message ----------------------------------------------

  NotifyIsOnSS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyIsOnSS& from);
  void MergeFrom(const NotifyIsOnSS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromCS_NotifyIsOnSS];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint32 ssid = 2;
  inline bool has_ssid() const;
  inline void clear_ssid();
  static const int kSsidFieldNumber = 2;
  inline ::google::protobuf::uint32 ssid() const;
  inline void set_ssid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyIsOnSS)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_ssid();
  inline void clear_has_ssid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::uint32 ssid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyIsOnSS* default_instance_;
};
// -------------------------------------------------------------------

class NotifyOtherItemInfo_OtherItem : public ::google::protobuf::Message {
 public:
  NotifyOtherItemInfo_OtherItem();
  virtual ~NotifyOtherItemInfo_OtherItem();

  NotifyOtherItemInfo_OtherItem(const NotifyOtherItemInfo_OtherItem& from);

  inline NotifyOtherItemInfo_OtherItem& operator=(const NotifyOtherItemInfo_OtherItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyOtherItemInfo_OtherItem& default_instance();

  void Swap(NotifyOtherItemInfo_OtherItem* other);

  // implements Message ----------------------------------------------

  NotifyOtherItemInfo_OtherItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyOtherItemInfo_OtherItem& from);
  void MergeFrom(const NotifyOtherItemInfo_OtherItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);

  // optional uint32 item_num = 2;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  inline ::google::protobuf::uint32 item_num() const;
  inline void set_item_num(::google::protobuf::uint32 value);

  // optional int64 expired_time = 3;
  inline bool has_expired_time() const;
  inline void clear_expired_time();
  static const int kExpiredTimeFieldNumber = 3;
  inline ::google::protobuf::int64 expired_time() const;
  inline void set_expired_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyOtherItemInfo.OtherItem)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  inline void set_has_expired_time();
  inline void clear_has_expired_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_num_;
  ::google::protobuf::int64 expired_time_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyOtherItemInfo_OtherItem* default_instance_;
};
// -------------------------------------------------------------------

class NotifyOtherItemInfo : public ::google::protobuf::Message {
 public:
  NotifyOtherItemInfo();
  virtual ~NotifyOtherItemInfo();

  NotifyOtherItemInfo(const NotifyOtherItemInfo& from);

  inline NotifyOtherItemInfo& operator=(const NotifyOtherItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyOtherItemInfo& default_instance();

  void Swap(NotifyOtherItemInfo* other);

  // implements Message ----------------------------------------------

  NotifyOtherItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyOtherItemInfo& from);
  void MergeFrom(const NotifyOtherItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef NotifyOtherItemInfo_OtherItem OtherItem;

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyOtherItemInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // repeated .GSToGC.NotifyOtherItemInfo.OtherItem item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::GSToGC::NotifyOtherItemInfo_OtherItem& item(int index) const;
  inline ::GSToGC::NotifyOtherItemInfo_OtherItem* mutable_item(int index);
  inline ::GSToGC::NotifyOtherItemInfo_OtherItem* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyOtherItemInfo_OtherItem >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyOtherItemInfo_OtherItem >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyOtherItemInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyOtherItemInfo_OtherItem > item_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyOtherItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class RecoinRuneRet : public ::google::protobuf::Message {
 public:
  RecoinRuneRet();
  virtual ~RecoinRuneRet();

  RecoinRuneRet(const RecoinRuneRet& from);

  inline RecoinRuneRet& operator=(const RecoinRuneRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecoinRuneRet& default_instance();

  void Swap(RecoinRuneRet* other);

  // implements Message ----------------------------------------------

  RecoinRuneRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecoinRuneRet& from);
  void MergeFrom(const RecoinRuneRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_RecoinRuneRet];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint32 rune_id = 2;
  inline bool has_rune_id() const;
  inline void clear_rune_id();
  static const int kRuneIdFieldNumber = 2;
  inline ::google::protobuf::uint32 rune_id() const;
  inline void set_rune_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.RecoinRuneRet)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_rune_id();
  inline void clear_has_rune_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::uint32 rune_id_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static RecoinRuneRet* default_instance_;
};
// -------------------------------------------------------------------

class UnloadRune : public ::google::protobuf::Message {
 public:
  UnloadRune();
  virtual ~UnloadRune();

  UnloadRune(const UnloadRune& from);

  inline UnloadRune& operator=(const UnloadRune& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnloadRune& default_instance();

  void Swap(UnloadRune* other);

  // implements Message ----------------------------------------------

  UnloadRune* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnloadRune& from);
  void MergeFrom(const UnloadRune& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_UnloadRune];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int32 page = 2;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 2;
  inline ::google::protobuf::int32 page() const;
  inline void set_page(::google::protobuf::int32 value);

  // optional int32 pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.UnloadRune)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_page();
  inline void clear_has_page();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::int32 page_;
  ::google::protobuf::int32 pos_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static UnloadRune* default_instance_;
};
// -------------------------------------------------------------------

class GuideCSStepInfo : public ::google::protobuf::Message {
 public:
  GuideCSStepInfo();
  virtual ~GuideCSStepInfo();

  GuideCSStepInfo(const GuideCSStepInfo& from);

  inline GuideCSStepInfo& operator=(const GuideCSStepInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuideCSStepInfo& default_instance();

  void Swap(GuideCSStepInfo* other);

  // implements Message ----------------------------------------------

  GuideCSStepInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuideCSStepInfo& from);
  void MergeFrom(const GuideCSStepInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_GuideResp];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional bool allcomp = 2;
  inline bool has_allcomp() const;
  inline void clear_allcomp();
  static const int kAllcompFieldNumber = 2;
  inline bool allcomp() const;
  inline void set_allcomp(bool value);

  // repeated uint32 taskid = 3;
  inline int taskid_size() const;
  inline void clear_taskid();
  static const int kTaskidFieldNumber = 3;
  inline ::google::protobuf::uint32 taskid(int index) const;
  inline void set_taskid(int index, ::google::protobuf::uint32 value);
  inline void add_taskid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      taskid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_taskid();

  // @@protoc_insertion_point(class_scope:GSToGC.GuideCSStepInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_allcomp();
  inline void clear_has_allcomp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  bool allcomp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > taskid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static GuideCSStepInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuideAward_awardtype : public ::google::protobuf::Message {
 public:
  GuideAward_awardtype();
  virtual ~GuideAward_awardtype();

  GuideAward_awardtype(const GuideAward_awardtype& from);

  inline GuideAward_awardtype& operator=(const GuideAward_awardtype& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuideAward_awardtype& default_instance();

  void Swap(GuideAward_awardtype* other);

  // implements Message ----------------------------------------------

  GuideAward_awardtype* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuideAward_awardtype& from);
  void MergeFrom(const GuideAward_awardtype& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.GuideAward.dtype dt = 1;
  inline bool has_dt() const;
  inline void clear_dt();
  static const int kDtFieldNumber = 1;
  inline ::GSToGC::GuideAward_dtype dt() const;
  inline void set_dt(::GSToGC::GuideAward_dtype value);

  // optional uint32 idxn = 2;
  inline bool has_idxn() const;
  inline void clear_idxn();
  static const int kIdxnFieldNumber = 2;
  inline ::google::protobuf::uint32 idxn() const;
  inline void set_idxn(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.GuideAward.awardtype)
 private:
  inline void set_has_dt();
  inline void clear_has_dt();
  inline void set_has_idxn();
  inline void clear_has_idxn();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int dt_;
  ::google::protobuf::uint32 idxn_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static GuideAward_awardtype* default_instance_;
};
// -------------------------------------------------------------------

class GuideAward : public ::google::protobuf::Message {
 public:
  GuideAward();
  virtual ~GuideAward();

  GuideAward(const GuideAward& from);

  inline GuideAward& operator=(const GuideAward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuideAward& default_instance();

  void Swap(GuideAward* other);

  // implements Message ----------------------------------------------

  GuideAward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuideAward& from);
  void MergeFrom(const GuideAward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GuideAward_awardtype awardtype;

  typedef GuideAward_dtype dtype;
  static const dtype type_gold = GuideAward_dtype_type_gold;
  static const dtype type_diamond = GuideAward_dtype_type_diamond;
  static const dtype type_goodsid = GuideAward_dtype_type_goodsid;
  static inline bool dtype_IsValid(int value) {
    return GuideAward_dtype_IsValid(value);
  }
  static const dtype dtype_MIN =
    GuideAward_dtype_dtype_MIN;
  static const dtype dtype_MAX =
    GuideAward_dtype_dtype_MAX;
  static const int dtype_ARRAYSIZE =
    GuideAward_dtype_dtype_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  dtype_descriptor() {
    return GuideAward_dtype_descriptor();
  }
  static inline const ::std::string& dtype_Name(dtype value) {
    return GuideAward_dtype_Name(value);
  }
  static inline bool dtype_Parse(const ::std::string& name,
      dtype* value) {
    return GuideAward_dtype_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_GuideAward];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // repeated .GSToGC.GuideAward.awardtype awardlist = 2;
  inline int awardlist_size() const;
  inline void clear_awardlist();
  static const int kAwardlistFieldNumber = 2;
  inline const ::GSToGC::GuideAward_awardtype& awardlist(int index) const;
  inline ::GSToGC::GuideAward_awardtype* mutable_awardlist(int index);
  inline ::GSToGC::GuideAward_awardtype* add_awardlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::GuideAward_awardtype >&
      awardlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::GuideAward_awardtype >*
      mutable_awardlist();

  // @@protoc_insertion_point(class_scope:GSToGC.GuideAward)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::GuideAward_awardtype > awardlist_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static GuideAward* default_instance_;
};
// -------------------------------------------------------------------

class GuideKillsInfo : public ::google::protobuf::Message {
 public:
  GuideKillsInfo();
  virtual ~GuideKillsInfo();

  GuideKillsInfo(const GuideKillsInfo& from);

  inline GuideKillsInfo& operator=(const GuideKillsInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuideKillsInfo& default_instance();

  void Swap(GuideKillsInfo* other);

  // implements Message ----------------------------------------------

  GuideKillsInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuideKillsInfo& from);
  void MergeFrom(const GuideKillsInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromCS_GuideKillsInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 npctype = 3;
  inline bool has_npctype() const;
  inline void clear_npctype();
  static const int kNpctypeFieldNumber = 3;
  inline ::google::protobuf::int32 npctype() const;
  inline void set_npctype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.GuideKillsInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_npctype();
  inline void clear_has_npctype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::int32 npctype_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static GuideKillsInfo* default_instance_;
};
// -------------------------------------------------------------------

class NotifyUserLvInfo : public ::google::protobuf::Message {
 public:
  NotifyUserLvInfo();
  virtual ~NotifyUserLvInfo();

  NotifyUserLvInfo(const NotifyUserLvInfo& from);

  inline NotifyUserLvInfo& operator=(const NotifyUserLvInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyUserLvInfo& default_instance();

  void Swap(NotifyUserLvInfo* other);

  // implements Message ----------------------------------------------

  NotifyUserLvInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyUserLvInfo& from);
  void MergeFrom(const NotifyUserLvInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyUserLvInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint32 curlv = 2;
  inline bool has_curlv() const;
  inline void clear_curlv();
  static const int kCurlvFieldNumber = 2;
  inline ::google::protobuf::uint32 curlv() const;
  inline void set_curlv(::google::protobuf::uint32 value);

  // optional uint32 curexp = 3;
  inline bool has_curexp() const;
  inline void clear_curexp();
  static const int kCurexpFieldNumber = 3;
  inline ::google::protobuf::uint32 curexp() const;
  inline void set_curexp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyUserLvInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_curlv();
  inline void clear_has_curlv();
  inline void set_has_curexp();
  inline void clear_has_curexp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::uint32 curlv_;
  ::google::protobuf::uint32 curexp_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyUserLvInfo* default_instance_;
};
// -------------------------------------------------------------------

class NotifyNewHeaderid : public ::google::protobuf::Message {
 public:
  NotifyNewHeaderid();
  virtual ~NotifyNewHeaderid();

  NotifyNewHeaderid(const NotifyNewHeaderid& from);

  inline NotifyNewHeaderid& operator=(const NotifyNewHeaderid& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyNewHeaderid& default_instance();

  void Swap(NotifyNewHeaderid* other);

  // implements Message ----------------------------------------------

  NotifyNewHeaderid* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyNewHeaderid& from);
  void MergeFrom(const NotifyNewHeaderid& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyNewHeaderid];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional uint32 newheaderid = 3;
  inline bool has_newheaderid() const;
  inline void clear_newheaderid();
  static const int kNewheaderidFieldNumber = 3;
  inline ::google::protobuf::uint32 newheaderid() const;
  inline void set_newheaderid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyNewHeaderid)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_newheaderid();
  inline void clear_has_newheaderid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::uint32 newheaderid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyNewHeaderid* default_instance_;
};
// -------------------------------------------------------------------

class NotifyOneMatchNeedOne : public ::google::protobuf::Message {
 public:
  NotifyOneMatchNeedOne();
  virtual ~NotifyOneMatchNeedOne();

  NotifyOneMatchNeedOne(const NotifyOneMatchNeedOne& from);

  inline NotifyOneMatchNeedOne& operator=(const NotifyOneMatchNeedOne& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyOneMatchNeedOne& default_instance();

  void Swap(NotifyOneMatchNeedOne* other);

  // implements Message ----------------------------------------------

  NotifyOneMatchNeedOne* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyOneMatchNeedOne& from);
  void MergeFrom(const NotifyOneMatchNeedOne& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyOneMatchNeedOne];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint32 mapid = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // optional uint32 fightid = 3;
  inline bool has_fightid() const;
  inline void clear_fightid();
  static const int kFightidFieldNumber = 3;
  inline ::google::protobuf::uint32 fightid() const;
  inline void set_fightid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyOneMatchNeedOne)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_fightid();
  inline void clear_has_fightid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 fightid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyOneMatchNeedOne* default_instance_;
};
// -------------------------------------------------------------------

class NotifyNewNickname : public ::google::protobuf::Message {
 public:
  NotifyNewNickname();
  virtual ~NotifyNewNickname();

  NotifyNewNickname(const NotifyNewNickname& from);

  inline NotifyNewNickname& operator=(const NotifyNewNickname& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyNewNickname& default_instance();

  void Swap(NotifyNewNickname* other);

  // implements Message ----------------------------------------------

  NotifyNewNickname* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyNewNickname& from);
  void MergeFrom(const NotifyNewNickname& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyNewNickname];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional string newnickname = 3;
  inline bool has_newnickname() const;
  inline void clear_newnickname();
  static const int kNewnicknameFieldNumber = 3;
  inline const ::std::string& newnickname() const;
  inline void set_newnickname(const ::std::string& value);
  inline void set_newnickname(const char* value);
  inline void set_newnickname(const char* value, size_t size);
  inline ::std::string* mutable_newnickname();
  inline ::std::string* release_newnickname();
  inline void set_allocated_newnickname(::std::string* newnickname);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyNewNickname)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_newnickname();
  inline void clear_has_newnickname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::std::string* newnickname_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyNewNickname* default_instance_;
};
// -------------------------------------------------------------------

class RunesSlot : public ::google::protobuf::Message {
 public:
  RunesSlot();
  virtual ~RunesSlot();

  RunesSlot(const RunesSlot& from);

  inline RunesSlot& operator=(const RunesSlot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RunesSlot& default_instance();

  void Swap(RunesSlot* other);

  // implements Message ----------------------------------------------

  RunesSlot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RunesSlot& from);
  void MergeFrom(const RunesSlot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 slotpos = 1;
  inline bool has_slotpos() const;
  inline void clear_slotpos();
  static const int kSlotposFieldNumber = 1;
  inline ::google::protobuf::int32 slotpos() const;
  inline void set_slotpos(::google::protobuf::int32 value);

  // optional uint32 runeid = 2;
  inline bool has_runeid() const;
  inline void clear_runeid();
  static const int kRuneidFieldNumber = 2;
  inline ::google::protobuf::uint32 runeid() const;
  inline void set_runeid(::google::protobuf::uint32 value);

  // optional int32 page = 3;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 3;
  inline ::google::protobuf::int32 page() const;
  inline void set_page(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.RunesSlot)
 private:
  inline void set_has_slotpos();
  inline void clear_has_slotpos();
  inline void set_has_runeid();
  inline void clear_has_runeid();
  inline void set_has_page();
  inline void clear_has_page();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 slotpos_;
  ::google::protobuf::uint32 runeid_;
  ::google::protobuf::int32 page_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static RunesSlot* default_instance_;
};
// -------------------------------------------------------------------

class RunesBagInfo : public ::google::protobuf::Message {
 public:
  RunesBagInfo();
  virtual ~RunesBagInfo();

  RunesBagInfo(const RunesBagInfo& from);

  inline RunesBagInfo& operator=(const RunesBagInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RunesBagInfo& default_instance();

  void Swap(RunesBagInfo* other);

  // implements Message ----------------------------------------------

  RunesBagInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RunesBagInfo& from);
  void MergeFrom(const RunesBagInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 runeid = 1;
  inline bool has_runeid() const;
  inline void clear_runeid();
  static const int kRuneidFieldNumber = 1;
  inline ::google::protobuf::uint32 runeid() const;
  inline void set_runeid(::google::protobuf::uint32 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int64 gottime = 3;
  inline bool has_gottime() const;
  inline void clear_gottime();
  static const int kGottimeFieldNumber = 3;
  inline ::google::protobuf::int64 gottime() const;
  inline void set_gottime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GSToGC.RunesBagInfo)
 private:
  inline void set_has_runeid();
  inline void clear_has_runeid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_gottime();
  inline void clear_has_gottime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 runeid_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int64 gottime_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static RunesBagInfo* default_instance_;
};
// -------------------------------------------------------------------

class NotifyRunesList : public ::google::protobuf::Message {
 public:
  NotifyRunesList();
  virtual ~NotifyRunesList();

  NotifyRunesList(const NotifyRunesList& from);

  inline NotifyRunesList& operator=(const NotifyRunesList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyRunesList& default_instance();

  void Swap(NotifyRunesList* other);

  // implements Message ----------------------------------------------

  NotifyRunesList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyRunesList& from);
  void MergeFrom(const NotifyRunesList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyRunesList];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // repeated .GSToGC.RunesBagInfo runesbaginfo = 2;
  inline int runesbaginfo_size() const;
  inline void clear_runesbaginfo();
  static const int kRunesbaginfoFieldNumber = 2;
  inline const ::GSToGC::RunesBagInfo& runesbaginfo(int index) const;
  inline ::GSToGC::RunesBagInfo* mutable_runesbaginfo(int index);
  inline ::GSToGC::RunesBagInfo* add_runesbaginfo();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::RunesBagInfo >&
      runesbaginfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::RunesBagInfo >*
      mutable_runesbaginfo();

  // repeated .GSToGC.RunesSlot runes_slot_info = 3;
  inline int runes_slot_info_size() const;
  inline void clear_runes_slot_info();
  static const int kRunesSlotInfoFieldNumber = 3;
  inline const ::GSToGC::RunesSlot& runes_slot_info(int index) const;
  inline ::GSToGC::RunesSlot* mutable_runes_slot_info(int index);
  inline ::GSToGC::RunesSlot* add_runes_slot_info();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::RunesSlot >&
      runes_slot_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::RunesSlot >*
      mutable_runes_slot_info();

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyRunesList)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::RunesBagInfo > runesbaginfo_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::RunesSlot > runes_slot_info_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyRunesList* default_instance_;
};
// -------------------------------------------------------------------

class NotifyRemoveCommodity : public ::google::protobuf::Message {
 public:
  NotifyRemoveCommodity();
  virtual ~NotifyRemoveCommodity();

  NotifyRemoveCommodity(const NotifyRemoveCommodity& from);

  inline NotifyRemoveCommodity& operator=(const NotifyRemoveCommodity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyRemoveCommodity& default_instance();

  void Swap(NotifyRemoveCommodity* other);

  // implements Message ----------------------------------------------

  NotifyRemoveCommodity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyRemoveCommodity& from);
  void MergeFrom(const NotifyRemoveCommodity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyRemoveCommodity];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // repeated uint32 Commodityid = 2;
  inline int commodityid_size() const;
  inline void clear_commodityid();
  static const int kCommodityidFieldNumber = 2;
  inline ::google::protobuf::uint32 commodityid(int index) const;
  inline void set_commodityid(int index, ::google::protobuf::uint32 value);
  inline void add_commodityid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      commodityid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_commodityid();

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyRemoveCommodity)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > commodityid_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyRemoveCommodity* default_instance_;
};
// -------------------------------------------------------------------

class NotifyGetNewCommodity : public ::google::protobuf::Message {
 public:
  NotifyGetNewCommodity();
  virtual ~NotifyGetNewCommodity();

  NotifyGetNewCommodity(const NotifyGetNewCommodity& from);

  inline NotifyGetNewCommodity& operator=(const NotifyGetNewCommodity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyGetNewCommodity& default_instance();

  void Swap(NotifyGetNewCommodity* other);

  // implements Message ----------------------------------------------

  NotifyGetNewCommodity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyGetNewCommodity& from);
  void MergeFrom(const NotifyGetNewCommodity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGetNewCommodity];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint32 Commodityid = 2;
  inline bool has_commodityid() const;
  inline void clear_commodityid();
  static const int kCommodityidFieldNumber = 2;
  inline ::google::protobuf::uint32 commodityid() const;
  inline void set_commodityid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyGetNewCommodity)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_commodityid();
  inline void clear_has_commodityid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::uint32 commodityid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyGetNewCommodity* default_instance_;
};
// -------------------------------------------------------------------

class NotifyMatchTeamBaseInfo : public ::google::protobuf::Message {
 public:
  NotifyMatchTeamBaseInfo();
  virtual ~NotifyMatchTeamBaseInfo();

  NotifyMatchTeamBaseInfo(const NotifyMatchTeamBaseInfo& from);

  inline NotifyMatchTeamBaseInfo& operator=(const NotifyMatchTeamBaseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyMatchTeamBaseInfo& default_instance();

  void Swap(NotifyMatchTeamBaseInfo* other);

  // implements Message ----------------------------------------------

  NotifyMatchTeamBaseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyMatchTeamBaseInfo& from);
  void MergeFrom(const NotifyMatchTeamBaseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyMatchTeamBaseInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint32 teamid = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 2;
  inline ::google::protobuf::uint32 teamid() const;
  inline void set_teamid(::google::protobuf::uint32 value);

  // optional uint32 matchtype = 3;
  inline bool has_matchtype() const;
  inline void clear_matchtype();
  static const int kMatchtypeFieldNumber = 3;
  inline ::google::protobuf::uint32 matchtype() const;
  inline void set_matchtype(::google::protobuf::uint32 value);

  // optional uint32 mapid = 4;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 4;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyMatchTeamBaseInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_matchtype();
  inline void clear_has_matchtype();
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::uint32 teamid_;
  ::google::protobuf::uint32 matchtype_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyMatchTeamBaseInfo* default_instance_;
};
// -------------------------------------------------------------------

class NotifyMatchTeamPlayerInfo : public ::google::protobuf::Message {
 public:
  NotifyMatchTeamPlayerInfo();
  virtual ~NotifyMatchTeamPlayerInfo();

  NotifyMatchTeamPlayerInfo(const NotifyMatchTeamPlayerInfo& from);

  inline NotifyMatchTeamPlayerInfo& operator=(const NotifyMatchTeamPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyMatchTeamPlayerInfo& default_instance();

  void Swap(NotifyMatchTeamPlayerInfo* other);

  // implements Message ----------------------------------------------

  NotifyMatchTeamPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyMatchTeamPlayerInfo& from);
  void MergeFrom(const NotifyMatchTeamPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyMatchTeamPlayerInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint32 postion = 2;
  inline bool has_postion() const;
  inline void clear_postion();
  static const int kPostionFieldNumber = 2;
  inline ::google::protobuf::uint32 postion() const;
  inline void set_postion(::google::protobuf::uint32 value);

  // optional bool isInsert = 3;
  inline bool has_isinsert() const;
  inline void clear_isinsert();
  static const int kIsInsertFieldNumber = 3;
  inline bool isinsert() const;
  inline void set_isinsert(bool value);

  // optional string nickname = 4;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 4;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional uint32 headid = 5;
  inline bool has_headid() const;
  inline void clear_headid();
  static const int kHeadidFieldNumber = 5;
  inline ::google::protobuf::uint32 headid() const;
  inline void set_headid(::google::protobuf::uint32 value);

  // optional uint32 userlevel = 6;
  inline bool has_userlevel() const;
  inline void clear_userlevel();
  static const int kUserlevelFieldNumber = 6;
  inline ::google::protobuf::uint32 userlevel() const;
  inline void set_userlevel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyMatchTeamPlayerInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_postion();
  inline void clear_has_postion();
  inline void set_has_isinsert();
  inline void clear_has_isinsert();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_headid();
  inline void clear_has_headid();
  inline void set_has_userlevel();
  inline void clear_has_userlevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::uint32 postion_;
  ::std::string* nickname_;
  bool isinsert_;
  ::google::protobuf::uint32 headid_;
  ::google::protobuf::uint32 userlevel_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyMatchTeamPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class NotifyMatchTeamSwitch : public ::google::protobuf::Message {
 public:
  NotifyMatchTeamSwitch();
  virtual ~NotifyMatchTeamSwitch();

  NotifyMatchTeamSwitch(const NotifyMatchTeamSwitch& from);

  inline NotifyMatchTeamSwitch& operator=(const NotifyMatchTeamSwitch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyMatchTeamSwitch& default_instance();

  void Swap(NotifyMatchTeamSwitch* other);

  // implements Message ----------------------------------------------

  NotifyMatchTeamSwitch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyMatchTeamSwitch& from);
  void MergeFrom(const NotifyMatchTeamSwitch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyMatchTeamSwitch];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional bool startflag = 2;
  inline bool has_startflag() const;
  inline void clear_startflag();
  static const int kStartflagFieldNumber = 2;
  inline bool startflag() const;
  inline void set_startflag(bool value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyMatchTeamSwitch)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_startflag();
  inline void clear_has_startflag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  bool startflag_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyMatchTeamSwitch* default_instance_;
};
// -------------------------------------------------------------------

class NotifyMatchInviteJoin : public ::google::protobuf::Message {
 public:
  NotifyMatchInviteJoin();
  virtual ~NotifyMatchInviteJoin();

  NotifyMatchInviteJoin(const NotifyMatchInviteJoin& from);

  inline NotifyMatchInviteJoin& operator=(const NotifyMatchInviteJoin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyMatchInviteJoin& default_instance();

  void Swap(NotifyMatchInviteJoin* other);

  // implements Message ----------------------------------------------

  NotifyMatchInviteJoin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyMatchInviteJoin& from);
  void MergeFrom(const NotifyMatchInviteJoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyMatchInviteJoin];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional string nickname = 2;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyMatchInviteJoin)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_nickname();
  inline void clear_has_nickname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* nickname_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyMatchInviteJoin* default_instance_;
};
// -------------------------------------------------------------------

class NotifyHerosInfo_heropanelinfo_goodsmsg : public ::google::protobuf::Message {
 public:
  NotifyHerosInfo_heropanelinfo_goodsmsg();
  virtual ~NotifyHerosInfo_heropanelinfo_goodsmsg();

  NotifyHerosInfo_heropanelinfo_goodsmsg(const NotifyHerosInfo_heropanelinfo_goodsmsg& from);

  inline NotifyHerosInfo_heropanelinfo_goodsmsg& operator=(const NotifyHerosInfo_heropanelinfo_goodsmsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyHerosInfo_heropanelinfo_goodsmsg& default_instance();

  void Swap(NotifyHerosInfo_heropanelinfo_goodsmsg* other);

  // implements Message ----------------------------------------------

  NotifyHerosInfo_heropanelinfo_goodsmsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyHerosInfo_heropanelinfo_goodsmsg& from);
  void MergeFrom(const NotifyHerosInfo_heropanelinfo_goodsmsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 grid = 1;
  inline bool has_grid() const;
  inline void clear_grid();
  static const int kGridFieldNumber = 1;
  inline ::google::protobuf::int32 grid() const;
  inline void set_grid(::google::protobuf::int32 value);

  // optional int32 goodid = 2;
  inline bool has_goodid() const;
  inline void clear_goodid();
  static const int kGoodidFieldNumber = 2;
  inline ::google::protobuf::int32 goodid() const;
  inline void set_goodid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyHerosInfo.heropanelinfo.goodsmsg)
 private:
  inline void set_has_grid();
  inline void clear_has_grid();
  inline void set_has_goodid();
  inline void clear_has_goodid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 grid_;
  ::google::protobuf::int32 goodid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyHerosInfo_heropanelinfo_goodsmsg* default_instance_;
};
// -------------------------------------------------------------------

class NotifyHerosInfo_heropanelinfo : public ::google::protobuf::Message {
 public:
  NotifyHerosInfo_heropanelinfo();
  virtual ~NotifyHerosInfo_heropanelinfo();

  NotifyHerosInfo_heropanelinfo(const NotifyHerosInfo_heropanelinfo& from);

  inline NotifyHerosInfo_heropanelinfo& operator=(const NotifyHerosInfo_heropanelinfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyHerosInfo_heropanelinfo& default_instance();

  void Swap(NotifyHerosInfo_heropanelinfo* other);

  // implements Message ----------------------------------------------

  NotifyHerosInfo_heropanelinfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyHerosInfo_heropanelinfo& from);
  void MergeFrom(const NotifyHerosInfo_heropanelinfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef NotifyHerosInfo_heropanelinfo_goodsmsg goodsmsg;

  // accessors -------------------------------------------------------

  // optional int32 camgpid = 1;
  inline bool has_camgpid() const;
  inline void clear_camgpid();
  static const int kCamgpidFieldNumber = 1;
  inline ::google::protobuf::int32 camgpid() const;
  inline void set_camgpid(::google::protobuf::int32 value);

  // optional int64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::int64 guid() const;
  inline void set_guid(::google::protobuf::int64 value);

  // optional int32 herolv = 3;
  inline bool has_herolv() const;
  inline void clear_herolv();
  static const int kHerolvFieldNumber = 3;
  inline ::google::protobuf::int32 herolv() const;
  inline void set_herolv(::google::protobuf::int32 value);

  // optional string nickname = 4;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 4;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional int32 killnum = 5;
  inline bool has_killnum() const;
  inline void clear_killnum();
  static const int kKillnumFieldNumber = 5;
  inline ::google::protobuf::int32 killnum() const;
  inline void set_killnum(::google::protobuf::int32 value);

  // optional int32 deadtimes = 6;
  inline bool has_deadtimes() const;
  inline void clear_deadtimes();
  static const int kDeadtimesFieldNumber = 6;
  inline ::google::protobuf::int32 deadtimes() const;
  inline void set_deadtimes(::google::protobuf::int32 value);

  // optional int32 asstimes = 7;
  inline bool has_asstimes() const;
  inline void clear_asstimes();
  static const int kAsstimesFieldNumber = 7;
  inline ::google::protobuf::int32 asstimes() const;
  inline void set_asstimes(::google::protobuf::int32 value);

  // optional int32 lasthit = 8;
  inline bool has_lasthit() const;
  inline void clear_lasthit();
  static const int kLasthitFieldNumber = 8;
  inline ::google::protobuf::int32 lasthit() const;
  inline void set_lasthit(::google::protobuf::int32 value);

  // repeated .GSToGC.NotifyHerosInfo.heropanelinfo.goodsmsg goods = 9;
  inline int goods_size() const;
  inline void clear_goods();
  static const int kGoodsFieldNumber = 9;
  inline const ::GSToGC::NotifyHerosInfo_heropanelinfo_goodsmsg& goods(int index) const;
  inline ::GSToGC::NotifyHerosInfo_heropanelinfo_goodsmsg* mutable_goods(int index);
  inline ::GSToGC::NotifyHerosInfo_heropanelinfo_goodsmsg* add_goods();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyHerosInfo_heropanelinfo_goodsmsg >&
      goods() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyHerosInfo_heropanelinfo_goodsmsg >*
      mutable_goods();

  // optional uint32 heroid = 10;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 10;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyHerosInfo.heropanelinfo)
 private:
  inline void set_has_camgpid();
  inline void clear_has_camgpid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_herolv();
  inline void clear_has_herolv();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_killnum();
  inline void clear_has_killnum();
  inline void set_has_deadtimes();
  inline void clear_has_deadtimes();
  inline void set_has_asstimes();
  inline void clear_has_asstimes();
  inline void set_has_lasthit();
  inline void clear_has_lasthit();
  inline void set_has_heroid();
  inline void clear_has_heroid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 guid_;
  ::google::protobuf::int32 camgpid_;
  ::google::protobuf::int32 herolv_;
  ::std::string* nickname_;
  ::google::protobuf::int32 killnum_;
  ::google::protobuf::int32 deadtimes_;
  ::google::protobuf::int32 asstimes_;
  ::google::protobuf::int32 lasthit_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyHerosInfo_heropanelinfo_goodsmsg > goods_;
  ::google::protobuf::uint32 heroid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyHerosInfo_heropanelinfo* default_instance_;
};
// -------------------------------------------------------------------

class NotifyHerosInfo : public ::google::protobuf::Message {
 public:
  NotifyHerosInfo();
  virtual ~NotifyHerosInfo();

  NotifyHerosInfo(const NotifyHerosInfo& from);

  inline NotifyHerosInfo& operator=(const NotifyHerosInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyHerosInfo& default_instance();

  void Swap(NotifyHerosInfo* other);

  // implements Message ----------------------------------------------

  NotifyHerosInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyHerosInfo& from);
  void MergeFrom(const NotifyHerosInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef NotifyHerosInfo_heropanelinfo heropanelinfo;

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromBS_NotifyHerosInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // repeated .GSToGC.NotifyHerosInfo.heropanelinfo info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::GSToGC::NotifyHerosInfo_heropanelinfo& info(int index) const;
  inline ::GSToGC::NotifyHerosInfo_heropanelinfo* mutable_info(int index);
  inline ::GSToGC::NotifyHerosInfo_heropanelinfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyHerosInfo_heropanelinfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyHerosInfo_heropanelinfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyHerosInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyHerosInfo_heropanelinfo > info_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyHerosInfo* default_instance_;
};
// -------------------------------------------------------------------

class NotifyGoodsExpired : public ::google::protobuf::Message {
 public:
  NotifyGoodsExpired();
  virtual ~NotifyGoodsExpired();

  NotifyGoodsExpired(const NotifyGoodsExpired& from);

  inline NotifyGoodsExpired& operator=(const NotifyGoodsExpired& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyGoodsExpired& default_instance();

  void Swap(NotifyGoodsExpired* other);

  // implements Message ----------------------------------------------

  NotifyGoodsExpired* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyGoodsExpired& from);
  void MergeFrom(const NotifyGoodsExpired& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromBS_NotifyGoodsExpired];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // repeated int32 commondityid = 2;
  inline int commondityid_size() const;
  inline void clear_commondityid();
  static const int kCommondityidFieldNumber = 2;
  inline ::google::protobuf::int32 commondityid(int index) const;
  inline void set_commondityid(int index, ::google::protobuf::int32 value);
  inline void add_commondityid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      commondityid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_commondityid();

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyGoodsExpired)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > commondityid_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyGoodsExpired* default_instance_;
};
// -------------------------------------------------------------------

class ShortMail : public ::google::protobuf::Message {
 public:
  ShortMail();
  virtual ~ShortMail();

  ShortMail(const ShortMail& from);

  inline ShortMail& operator=(const ShortMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShortMail& default_instance();

  void Swap(ShortMail* other);

  // implements Message ----------------------------------------------

  ShortMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShortMail& from);
  void MergeFrom(const ShortMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 mailid = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailidFieldNumber = 1;
  inline ::google::protobuf::int32 mailid() const;
  inline void set_mailid(::google::protobuf::int32 value);

  // optional .GSToGC.MailType mailType = 2;
  inline bool has_mailtype() const;
  inline void clear_mailtype();
  static const int kMailTypeFieldNumber = 2;
  inline ::GSToGC::MailType mailtype() const;
  inline void set_mailtype(::GSToGC::MailType value);

  // optional string mailTitle = 3;
  inline bool has_mailtitle() const;
  inline void clear_mailtitle();
  static const int kMailTitleFieldNumber = 3;
  inline const ::std::string& mailtitle() const;
  inline void set_mailtitle(const ::std::string& value);
  inline void set_mailtitle(const char* value);
  inline void set_mailtitle(const char* value, size_t size);
  inline ::std::string* mutable_mailtitle();
  inline ::std::string* release_mailtitle();
  inline void set_allocated_mailtitle(::std::string* mailtitle);

  // optional .GSToGC.EMailCurtState mailState = 4;
  inline bool has_mailstate() const;
  inline void clear_mailstate();
  static const int kMailStateFieldNumber = 4;
  inline ::GSToGC::EMailCurtState mailstate() const;
  inline void set_mailstate(::GSToGC::EMailCurtState value);

  // @@protoc_insertion_point(class_scope:GSToGC.ShortMail)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_mailtype();
  inline void clear_has_mailtype();
  inline void set_has_mailtitle();
  inline void clear_has_mailtitle();
  inline void set_has_mailstate();
  inline void clear_has_mailstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 mailid_;
  int mailtype_;
  ::std::string* mailtitle_;
  int mailstate_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static ShortMail* default_instance_;
};
// -------------------------------------------------------------------

class DelAndSortMail : public ::google::protobuf::Message {
 public:
  DelAndSortMail();
  virtual ~DelAndSortMail();

  DelAndSortMail(const DelAndSortMail& from);

  inline DelAndSortMail& operator=(const DelAndSortMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelAndSortMail& default_instance();

  void Swap(DelAndSortMail* other);

  // implements Message ----------------------------------------------

  DelAndSortMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DelAndSortMail& from);
  void MergeFrom(const DelAndSortMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyIfMailDelAndSort];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int32 mailid = 2;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailidFieldNumber = 2;
  inline ::google::protobuf::int32 mailid() const;
  inline void set_mailid(::google::protobuf::int32 value);

  // optional bool mailidDel = 3;
  inline bool has_mailiddel() const;
  inline void clear_mailiddel();
  static const int kMailidDelFieldNumber = 3;
  inline bool mailiddel() const;
  inline void set_mailiddel(bool value);

  // optional bool sort = 4;
  inline bool has_sort() const;
  inline void clear_sort();
  static const int kSortFieldNumber = 4;
  inline bool sort() const;
  inline void set_sort(bool value);

  // @@protoc_insertion_point(class_scope:GSToGC.DelAndSortMail)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_mailiddel();
  inline void clear_has_mailiddel();
  inline void set_has_sort();
  inline void clear_has_sort();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::int32 mailid_;
  bool mailiddel_;
  bool sort_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static DelAndSortMail* default_instance_;
};
// -------------------------------------------------------------------

class MailInfo : public ::google::protobuf::Message {
 public:
  MailInfo();
  virtual ~MailInfo();

  MailInfo(const MailInfo& from);

  inline MailInfo& operator=(const MailInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailInfo& default_instance();

  void Swap(MailInfo* other);

  // implements Message ----------------------------------------------

  MailInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailInfo& from);
  void MergeFrom(const MailInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyMailInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int32 mailid = 2;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailidFieldNumber = 2;
  inline ::google::protobuf::int32 mailid() const;
  inline void set_mailid(::google::protobuf::int32 value);

  // optional string mailcontent = 3;
  inline bool has_mailcontent() const;
  inline void clear_mailcontent();
  static const int kMailcontentFieldNumber = 3;
  inline const ::std::string& mailcontent() const;
  inline void set_mailcontent(const ::std::string& value);
  inline void set_mailcontent(const char* value);
  inline void set_mailcontent(const char* value, size_t size);
  inline ::std::string* mutable_mailcontent();
  inline ::std::string* release_mailcontent();
  inline void set_allocated_mailcontent(::std::string* mailcontent);

  // optional string sender = 4;
  inline bool has_sender() const;
  inline void clear_sender();
  static const int kSenderFieldNumber = 4;
  inline const ::std::string& sender() const;
  inline void set_sender(const ::std::string& value);
  inline void set_sender(const char* value);
  inline void set_sender(const char* value, size_t size);
  inline ::std::string* mutable_sender();
  inline ::std::string* release_sender();
  inline void set_allocated_sender(::std::string* sender);

  // optional string createTime = 5;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreateTimeFieldNumber = 5;
  inline const ::std::string& createtime() const;
  inline void set_createtime(const ::std::string& value);
  inline void set_createtime(const char* value);
  inline void set_createtime(const char* value, size_t size);
  inline ::std::string* mutable_createtime();
  inline ::std::string* release_createtime();
  inline void set_allocated_createtime(::std::string* createtime);

  // optional string mailgift = 6;
  inline bool has_mailgift() const;
  inline void clear_mailgift();
  static const int kMailgiftFieldNumber = 6;
  inline const ::std::string& mailgift() const;
  inline void set_mailgift(const ::std::string& value);
  inline void set_mailgift(const char* value);
  inline void set_mailgift(const char* value, size_t size);
  inline ::std::string* mutable_mailgift();
  inline ::std::string* release_mailgift();
  inline void set_allocated_mailgift(::std::string* mailgift);

  // @@protoc_insertion_point(class_scope:GSToGC.MailInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_mailcontent();
  inline void clear_has_mailcontent();
  inline void set_has_sender();
  inline void clear_has_sender();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_mailgift();
  inline void clear_has_mailgift();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::int32 mailid_;
  ::std::string* mailcontent_;
  ::std::string* sender_;
  ::std::string* createtime_;
  ::std::string* mailgift_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static MailInfo* default_instance_;
};
// -------------------------------------------------------------------

class NotifyMailList : public ::google::protobuf::Message {
 public:
  NotifyMailList();
  virtual ~NotifyMailList();

  NotifyMailList(const NotifyMailList& from);

  inline NotifyMailList& operator=(const NotifyMailList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyMailList& default_instance();

  void Swap(NotifyMailList* other);

  // implements Message ----------------------------------------------

  NotifyMailList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyMailList& from);
  void MergeFrom(const NotifyMailList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyUserMail];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // repeated .GSToGC.ShortMail mailList = 2;
  inline int maillist_size() const;
  inline void clear_maillist();
  static const int kMailListFieldNumber = 2;
  inline const ::GSToGC::ShortMail& maillist(int index) const;
  inline ::GSToGC::ShortMail* mutable_maillist(int index);
  inline ::GSToGC::ShortMail* add_maillist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::ShortMail >&
      maillist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::ShortMail >*
      mutable_maillist();

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyMailList)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::ShortMail > maillist_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyMailList* default_instance_;
};
// -------------------------------------------------------------------

class GoodsCfgInfo_Consume : public ::google::protobuf::Message {
 public:
  GoodsCfgInfo_Consume();
  virtual ~GoodsCfgInfo_Consume();

  GoodsCfgInfo_Consume(const GoodsCfgInfo_Consume& from);

  inline GoodsCfgInfo_Consume& operator=(const GoodsCfgInfo_Consume& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoodsCfgInfo_Consume& default_instance();

  void Swap(GoodsCfgInfo_Consume* other);

  // implements Message ----------------------------------------------

  GoodsCfgInfo_Consume* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoodsCfgInfo_Consume& from);
  void MergeFrom(const GoodsCfgInfo_Consume& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 consumetype = 1;
  inline bool has_consumetype() const;
  inline void clear_consumetype();
  static const int kConsumetypeFieldNumber = 1;
  inline ::google::protobuf::int32 consumetype() const;
  inline void set_consumetype(::google::protobuf::int32 value);

  // optional int32 price = 2;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 2;
  inline ::google::protobuf::int32 price() const;
  inline void set_price(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.GoodsCfgInfo.Consume)
 private:
  inline void set_has_consumetype();
  inline void clear_has_consumetype();
  inline void set_has_price();
  inline void clear_has_price();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 consumetype_;
  ::google::protobuf::int32 price_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static GoodsCfgInfo_Consume* default_instance_;
};
// -------------------------------------------------------------------

class GoodsCfgInfo : public ::google::protobuf::Message {
 public:
  GoodsCfgInfo();
  virtual ~GoodsCfgInfo();

  GoodsCfgInfo(const GoodsCfgInfo& from);

  inline GoodsCfgInfo& operator=(const GoodsCfgInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoodsCfgInfo& default_instance();

  void Swap(GoodsCfgInfo* other);

  // implements Message ----------------------------------------------

  GoodsCfgInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoodsCfgInfo& from);
  void MergeFrom(const GoodsCfgInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GoodsCfgInfo_Consume Consume;

  typedef GoodsCfgInfo_CfgType CfgType;
  static const CfgType CfgType_Common = GoodsCfgInfo_CfgType_CfgType_Common;
  static const CfgType CfgType_Discount = GoodsCfgInfo_CfgType_CfgType_Discount;
  static const CfgType CfgType_hot = GoodsCfgInfo_CfgType_CfgType_hot;
  static const CfgType CfgType_New = GoodsCfgInfo_CfgType_CfgType_New;
  static inline bool CfgType_IsValid(int value) {
    return GoodsCfgInfo_CfgType_IsValid(value);
  }
  static const CfgType CfgType_MIN =
    GoodsCfgInfo_CfgType_CfgType_MIN;
  static const CfgType CfgType_MAX =
    GoodsCfgInfo_CfgType_CfgType_MAX;
  static const int CfgType_ARRAYSIZE =
    GoodsCfgInfo_CfgType_CfgType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CfgType_descriptor() {
    return GoodsCfgInfo_CfgType_descriptor();
  }
  static inline const ::std::string& CfgType_Name(CfgType value) {
    return GoodsCfgInfo_CfgType_Name(value);
  }
  static inline bool CfgType_Parse(const ::std::string& name,
      CfgType* value) {
    return GoodsCfgInfo_CfgType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 goodid = 1;
  inline bool has_goodid() const;
  inline void clear_goodid();
  static const int kGoodidFieldNumber = 1;
  inline ::google::protobuf::int32 goodid() const;
  inline void set_goodid(::google::protobuf::int32 value);

  // repeated .GSToGC.GoodsCfgInfo.Consume consume = 2;
  inline int consume_size() const;
  inline void clear_consume();
  static const int kConsumeFieldNumber = 2;
  inline const ::GSToGC::GoodsCfgInfo_Consume& consume(int index) const;
  inline ::GSToGC::GoodsCfgInfo_Consume* mutable_consume(int index);
  inline ::GSToGC::GoodsCfgInfo_Consume* add_consume();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::GoodsCfgInfo_Consume >&
      consume() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::GoodsCfgInfo_Consume >*
      mutable_consume();

  // optional .GSToGC.GoodsCfgInfo.CfgType cfg_type = 3;
  inline bool has_cfg_type() const;
  inline void clear_cfg_type();
  static const int kCfgTypeFieldNumber = 3;
  inline ::GSToGC::GoodsCfgInfo_CfgType cfg_type() const;
  inline void set_cfg_type(::GSToGC::GoodsCfgInfo_CfgType value);

  // @@protoc_insertion_point(class_scope:GSToGC.GoodsCfgInfo)
 private:
  inline void set_has_goodid();
  inline void clear_has_goodid();
  inline void set_has_cfg_type();
  inline void clear_has_cfg_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::GoodsCfgInfo_Consume > consume_;
  ::google::protobuf::int32 goodid_;
  int cfg_type_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static GoodsCfgInfo* default_instance_;
};
// -------------------------------------------------------------------

class GoodsBuyCfgInfo : public ::google::protobuf::Message {
 public:
  GoodsBuyCfgInfo();
  virtual ~GoodsBuyCfgInfo();

  GoodsBuyCfgInfo(const GoodsBuyCfgInfo& from);

  inline GoodsBuyCfgInfo& operator=(const GoodsBuyCfgInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoodsBuyCfgInfo& default_instance();

  void Swap(GoodsBuyCfgInfo* other);

  // implements Message ----------------------------------------------

  GoodsBuyCfgInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoodsBuyCfgInfo& from);
  void MergeFrom(const GoodsBuyCfgInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGoodsCfgInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // repeated .GSToGC.GoodsCfgInfo info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::GSToGC::GoodsCfgInfo& info(int index) const;
  inline ::GSToGC::GoodsCfgInfo* mutable_info(int index);
  inline ::GSToGC::GoodsCfgInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::GoodsCfgInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::GoodsCfgInfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:GSToGC.GoodsBuyCfgInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::GoodsCfgInfo > info_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static GoodsBuyCfgInfo* default_instance_;
};
// -------------------------------------------------------------------

class HeroAttributes : public ::google::protobuf::Message {
 public:
  HeroAttributes();
  virtual ~HeroAttributes();

  HeroAttributes(const HeroAttributes& from);

  inline HeroAttributes& operator=(const HeroAttributes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroAttributes& default_instance();

  void Swap(HeroAttributes* other);

  // implements Message ----------------------------------------------

  HeroAttributes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroAttributes& from);
  void MergeFrom(const HeroAttributes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyHeroAttributes];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 PlayerSpeed = 3;
  inline bool has_playerspeed() const;
  inline void clear_playerspeed();
  static const int kPlayerSpeedFieldNumber = 3;
  inline ::google::protobuf::int32 playerspeed() const;
  inline void set_playerspeed(::google::protobuf::int32 value);

  // optional int32 AttackInterval = 4;
  inline bool has_attackinterval() const;
  inline void clear_attackinterval();
  static const int kAttackIntervalFieldNumber = 4;
  inline ::google::protobuf::int32 attackinterval() const;
  inline void set_attackinterval(::google::protobuf::int32 value);

  // optional int32 AttackRange = 5;
  inline bool has_attackrange() const;
  inline void clear_attackrange();
  static const int kAttackRangeFieldNumber = 5;
  inline ::google::protobuf::int32 attackrange() const;
  inline void set_attackrange(::google::protobuf::int32 value);

  // optional int32 ResurgenceTime = 6;
  inline bool has_resurgencetime() const;
  inline void clear_resurgencetime();
  static const int kResurgenceTimeFieldNumber = 6;
  inline ::google::protobuf::int32 resurgencetime() const;
  inline void set_resurgencetime(::google::protobuf::int32 value);

  // optional int32 PhysicAttack = 7;
  inline bool has_physicattack() const;
  inline void clear_physicattack();
  static const int kPhysicAttackFieldNumber = 7;
  inline ::google::protobuf::int32 physicattack() const;
  inline void set_physicattack(::google::protobuf::int32 value);

  // optional int32 SpellsAttack = 8;
  inline bool has_spellsattack() const;
  inline void clear_spellsattack();
  static const int kSpellsAttackFieldNumber = 8;
  inline ::google::protobuf::int32 spellsattack() const;
  inline void set_spellsattack(::google::protobuf::int32 value);

  // optional int32 PhysicDef = 9;
  inline bool has_physicdef() const;
  inline void clear_physicdef();
  static const int kPhysicDefFieldNumber = 9;
  inline ::google::protobuf::int32 physicdef() const;
  inline void set_physicdef(::google::protobuf::int32 value);

  // optional int32 SpellsDef = 10;
  inline bool has_spellsdef() const;
  inline void clear_spellsdef();
  static const int kSpellsDefFieldNumber = 10;
  inline ::google::protobuf::int32 spellsdef() const;
  inline void set_spellsdef(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.HeroAttributes)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_playerspeed();
  inline void clear_has_playerspeed();
  inline void set_has_attackinterval();
  inline void clear_has_attackinterval();
  inline void set_has_attackrange();
  inline void clear_has_attackrange();
  inline void set_has_resurgencetime();
  inline void clear_has_resurgencetime();
  inline void set_has_physicattack();
  inline void clear_has_physicattack();
  inline void set_has_spellsattack();
  inline void clear_has_spellsattack();
  inline void set_has_physicdef();
  inline void clear_has_physicdef();
  inline void set_has_spellsdef();
  inline void clear_has_spellsdef();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::int32 playerspeed_;
  ::google::protobuf::int32 attackinterval_;
  ::google::protobuf::int32 attackrange_;
  ::google::protobuf::int32 resurgencetime_;
  ::google::protobuf::int32 physicattack_;
  ::google::protobuf::int32 spellsattack_;
  ::google::protobuf::int32 physicdef_;
  ::google::protobuf::int32 spellsdef_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static HeroAttributes* default_instance_;
};
// -------------------------------------------------------------------

class HeroAssist : public ::google::protobuf::Message {
 public:
  HeroAssist();
  virtual ~HeroAssist();

  HeroAssist(const HeroAssist& from);

  inline HeroAssist& operator=(const HeroAssist& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroAssist& default_instance();

  void Swap(HeroAssist* other);

  // implements Message ----------------------------------------------

  HeroAssist* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroAssist& from);
  void MergeFrom(const HeroAssist& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyHeroAssist];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 assist = 3;
  inline bool has_assist() const;
  inline void clear_assist();
  static const int kAssistFieldNumber = 3;
  inline ::google::protobuf::int32 assist() const;
  inline void set_assist(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.HeroAssist)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_assist();
  inline void clear_has_assist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::int32 assist_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static HeroAssist* default_instance_;
};
// -------------------------------------------------------------------

class BattleMatcherCount : public ::google::protobuf::Message {
 public:
  BattleMatcherCount();
  virtual ~BattleMatcherCount();

  BattleMatcherCount(const BattleMatcherCount& from);

  inline BattleMatcherCount& operator=(const BattleMatcherCount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleMatcherCount& default_instance();

  void Swap(BattleMatcherCount* other);

  // implements Message ----------------------------------------------

  BattleMatcherCount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleMatcherCount& from);
  void MergeFrom(const BattleMatcherCount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBattleMatherCount];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // optional int32 maxcount = 3;
  inline bool has_maxcount() const;
  inline void clear_maxcount();
  static const int kMaxcountFieldNumber = 3;
  inline ::google::protobuf::int32 maxcount() const;
  inline void set_maxcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.BattleMatcherCount)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_maxcount();
  inline void clear_has_maxcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 maxcount_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static BattleMatcherCount* default_instance_;
};
// -------------------------------------------------------------------

class BattleSpanTime : public ::google::protobuf::Message {
 public:
  BattleSpanTime();
  virtual ~BattleSpanTime();

  BattleSpanTime(const BattleSpanTime& from);

  inline BattleSpanTime& operator=(const BattleSpanTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleSpanTime& default_instance();

  void Swap(BattleSpanTime* other);

  // implements Message ----------------------------------------------

  BattleSpanTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleSpanTime& from);
  void MergeFrom(const BattleSpanTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBattleSpanTime];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int64 spanTime = 2;
  inline bool has_spantime() const;
  inline void clear_spantime();
  static const int kSpanTimeFieldNumber = 2;
  inline ::google::protobuf::int64 spantime() const;
  inline void set_spantime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GSToGC.BattleSpanTime)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_spantime();
  inline void clear_has_spantime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 spantime_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static BattleSpanTime* default_instance_;
};
// -------------------------------------------------------------------

class BattleDelayTime : public ::google::protobuf::Message {
 public:
  BattleDelayTime();
  virtual ~BattleDelayTime();

  BattleDelayTime(const BattleDelayTime& from);

  inline BattleDelayTime& operator=(const BattleDelayTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleDelayTime& default_instance();

  void Swap(BattleDelayTime* other);

  // implements Message ----------------------------------------------

  BattleDelayTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleDelayTime& from);
  void MergeFrom(const BattleDelayTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBattleDelayTime];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int64 delayTime = 2;
  inline bool has_delaytime() const;
  inline void clear_delaytime();
  static const int kDelayTimeFieldNumber = 2;
  inline ::google::protobuf::int64 delaytime() const;
  inline void set_delaytime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GSToGC.BattleDelayTime)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_delaytime();
  inline void clear_has_delaytime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 delaytime_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static BattleDelayTime* default_instance_;
};
// -------------------------------------------------------------------

class UserBaseUpLv : public ::google::protobuf::Message {
 public:
  UserBaseUpLv();
  virtual ~UserBaseUpLv();

  UserBaseUpLv(const UserBaseUpLv& from);

  inline UserBaseUpLv& operator=(const UserBaseUpLv& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserBaseUpLv& default_instance();

  void Swap(UserBaseUpLv* other);

  // implements Message ----------------------------------------------

  UserBaseUpLv* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserBaseUpLv& from);
  void MergeFrom(const UserBaseUpLv& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyUserBaseUpLv];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int32 lv = 2;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 2;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.UserBaseUpLv)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_lv();
  inline void clear_has_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::int32 lv_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static UserBaseUpLv* default_instance_;
};
// -------------------------------------------------------------------

class SecondGuideTask_task_info : public ::google::protobuf::Message {
 public:
  SecondGuideTask_task_info();
  virtual ~SecondGuideTask_task_info();

  SecondGuideTask_task_info(const SecondGuideTask_task_info& from);

  inline SecondGuideTask_task_info& operator=(const SecondGuideTask_task_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SecondGuideTask_task_info& default_instance();

  void Swap(SecondGuideTask_task_info* other);

  // implements Message ----------------------------------------------

  SecondGuideTask_task_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SecondGuideTask_task_info& from);
  void MergeFrom(const SecondGuideTask_task_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 taskid = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskidFieldNumber = 1;
  inline ::google::protobuf::int32 taskid() const;
  inline void set_taskid(::google::protobuf::int32 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.SecondGuideTask.task_info)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 taskid_;
  ::google::protobuf::int32 num_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static SecondGuideTask_task_info* default_instance_;
};
// -------------------------------------------------------------------

class SecondGuideTask : public ::google::protobuf::Message {
 public:
  SecondGuideTask();
  virtual ~SecondGuideTask();

  SecondGuideTask(const SecondGuideTask& from);

  inline SecondGuideTask& operator=(const SecondGuideTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SecondGuideTask& default_instance();

  void Swap(SecondGuideTask* other);

  // implements Message ----------------------------------------------

  SecondGuideTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SecondGuideTask& from);
  void MergeFrom(const SecondGuideTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SecondGuideTask_task_info task_info;

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGs_NotifySecondaryGuideTask];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // repeated .GSToGC.SecondGuideTask.task_info taskinfo = 2;
  inline int taskinfo_size() const;
  inline void clear_taskinfo();
  static const int kTaskinfoFieldNumber = 2;
  inline const ::GSToGC::SecondGuideTask_task_info& taskinfo(int index) const;
  inline ::GSToGC::SecondGuideTask_task_info* mutable_taskinfo(int index);
  inline ::GSToGC::SecondGuideTask_task_info* add_taskinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::SecondGuideTask_task_info >&
      taskinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::SecondGuideTask_task_info >*
      mutable_taskinfo();

  // @@protoc_insertion_point(class_scope:GSToGC.SecondGuideTask)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::SecondGuideTask_task_info > taskinfo_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static SecondGuideTask* default_instance_;
};
// -------------------------------------------------------------------

class GameTips : public ::google::protobuf::Message {
 public:
  GameTips();
  virtual ~GameTips();

  GameTips(const GameTips& from);

  inline GameTips& operator=(const GameTips& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameTips& default_instance();

  void Swap(GameTips* other);

  // implements Message ----------------------------------------------

  GameTips* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameTips& from);
  void MergeFrom(const GameTips& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGuideTips];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int32 errocode = 2;
  inline bool has_errocode() const;
  inline void clear_errocode();
  static const int kErrocodeFieldNumber = 2;
  inline ::google::protobuf::int32 errocode() const;
  inline void set_errocode(::google::protobuf::int32 value);

  // optional int32 campid = 3;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampidFieldNumber = 3;
  inline ::google::protobuf::int32 campid() const;
  inline void set_campid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.GameTips)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_errocode();
  inline void clear_has_errocode();
  inline void set_has_campid();
  inline void clear_has_campid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::int32 errocode_;
  ::google::protobuf::int32 campid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static GameTips* default_instance_;
};
// -------------------------------------------------------------------

class NotifyUserReturnBattleRoom : public ::google::protobuf::Message {
 public:
  NotifyUserReturnBattleRoom();
  virtual ~NotifyUserReturnBattleRoom();

  NotifyUserReturnBattleRoom(const NotifyUserReturnBattleRoom& from);

  inline NotifyUserReturnBattleRoom& operator=(const NotifyUserReturnBattleRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyUserReturnBattleRoom& default_instance();

  void Swap(NotifyUserReturnBattleRoom* other);

  // implements Message ----------------------------------------------

  NotifyUserReturnBattleRoom* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyUserReturnBattleRoom& from);
  void MergeFrom(const NotifyUserReturnBattleRoom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyUserReturnBattleRoom];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyUserReturnBattleRoom)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyUserReturnBattleRoom* default_instance_;
};
// -------------------------------------------------------------------

class BroadcastBattleHeroInfo_HeroInfo : public ::google::protobuf::Message {
 public:
  BroadcastBattleHeroInfo_HeroInfo();
  virtual ~BroadcastBattleHeroInfo_HeroInfo();

  BroadcastBattleHeroInfo_HeroInfo(const BroadcastBattleHeroInfo_HeroInfo& from);

  inline BroadcastBattleHeroInfo_HeroInfo& operator=(const BroadcastBattleHeroInfo_HeroInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadcastBattleHeroInfo_HeroInfo& default_instance();

  void Swap(BroadcastBattleHeroInfo_HeroInfo* other);

  // implements Message ----------------------------------------------

  BroadcastBattleHeroInfo_HeroInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BroadcastBattleHeroInfo_HeroInfo& from);
  void MergeFrom(const BroadcastBattleHeroInfo_HeroInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional string nickname = 2;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 deadtimes = 4;
  inline bool has_deadtimes() const;
  inline void clear_deadtimes();
  static const int kDeadtimesFieldNumber = 4;
  inline ::google::protobuf::int32 deadtimes() const;
  inline void set_deadtimes(::google::protobuf::int32 value);

  // optional int32 campid = 5;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampidFieldNumber = 5;
  inline ::google::protobuf::int32 campid() const;
  inline void set_campid(::google::protobuf::int32 value);

  // optional int32 headid = 6;
  inline bool has_headid() const;
  inline void clear_headid();
  static const int kHeadidFieldNumber = 6;
  inline ::google::protobuf::int32 headid() const;
  inline void set_headid(::google::protobuf::int32 value);

  // optional int32 hp = 7;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 7;
  inline ::google::protobuf::int32 hp() const;
  inline void set_hp(::google::protobuf::int32 value);

  // optional int32 mp = 8;
  inline bool has_mp() const;
  inline void clear_mp();
  static const int kMpFieldNumber = 8;
  inline ::google::protobuf::int32 mp() const;
  inline void set_mp(::google::protobuf::int32 value);

  // optional int32 pos = 9;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 9;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // optional uint64 masterguid = 10;
  inline bool has_masterguid() const;
  inline void clear_masterguid();
  static const int kMasterguidFieldNumber = 10;
  inline ::google::protobuf::uint64 masterguid() const;
  inline void set_masterguid(::google::protobuf::uint64 value);

  // optional int32 kills = 11;
  inline bool has_kills() const;
  inline void clear_kills();
  static const int kKillsFieldNumber = 11;
  inline ::google::protobuf::int32 kills() const;
  inline void set_kills(::google::protobuf::int32 value);

  // optional int32 assist = 12;
  inline bool has_assist() const;
  inline void clear_assist();
  static const int kAssistFieldNumber = 12;
  inline ::google::protobuf::int32 assist() const;
  inline void set_assist(::google::protobuf::int32 value);

  // optional int32 heroid = 13;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 13;
  inline ::google::protobuf::int32 heroid() const;
  inline void set_heroid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.BroadcastBattleHeroInfo.HeroInfo)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_deadtimes();
  inline void clear_has_deadtimes();
  inline void set_has_campid();
  inline void clear_has_campid();
  inline void set_has_headid();
  inline void clear_has_headid();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_mp();
  inline void clear_has_mp();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_masterguid();
  inline void clear_has_masterguid();
  inline void set_has_kills();
  inline void clear_has_kills();
  inline void set_has_assist();
  inline void clear_has_assist();
  inline void set_has_heroid();
  inline void clear_has_heroid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::std::string* nickname_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 deadtimes_;
  ::google::protobuf::int32 campid_;
  ::google::protobuf::int32 headid_;
  ::google::protobuf::int32 hp_;
  ::google::protobuf::int32 mp_;
  ::google::protobuf::uint64 masterguid_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 kills_;
  ::google::protobuf::int32 assist_;
  ::google::protobuf::int32 heroid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static BroadcastBattleHeroInfo_HeroInfo* default_instance_;
};
// -------------------------------------------------------------------

class BroadcastBattleHeroInfo_BaseGoodsInfo : public ::google::protobuf::Message {
 public:
  BroadcastBattleHeroInfo_BaseGoodsInfo();
  virtual ~BroadcastBattleHeroInfo_BaseGoodsInfo();

  BroadcastBattleHeroInfo_BaseGoodsInfo(const BroadcastBattleHeroInfo_BaseGoodsInfo& from);

  inline BroadcastBattleHeroInfo_BaseGoodsInfo& operator=(const BroadcastBattleHeroInfo_BaseGoodsInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadcastBattleHeroInfo_BaseGoodsInfo& default_instance();

  void Swap(BroadcastBattleHeroInfo_BaseGoodsInfo* other);

  // implements Message ----------------------------------------------

  BroadcastBattleHeroInfo_BaseGoodsInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BroadcastBattleHeroInfo_BaseGoodsInfo& from);
  void MergeFrom(const BroadcastBattleHeroInfo_BaseGoodsInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 index = 13;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 13;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional int32 id = 14;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 14;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.BroadcastBattleHeroInfo.BaseGoodsInfo)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static BroadcastBattleHeroInfo_BaseGoodsInfo* default_instance_;
};
// -------------------------------------------------------------------

class BroadcastBattleHeroInfo : public ::google::protobuf::Message {
 public:
  BroadcastBattleHeroInfo();
  virtual ~BroadcastBattleHeroInfo();

  BroadcastBattleHeroInfo(const BroadcastBattleHeroInfo& from);

  inline BroadcastBattleHeroInfo& operator=(const BroadcastBattleHeroInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadcastBattleHeroInfo& default_instance();

  void Swap(BroadcastBattleHeroInfo* other);

  // implements Message ----------------------------------------------

  BroadcastBattleHeroInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BroadcastBattleHeroInfo& from);
  void MergeFrom(const BroadcastBattleHeroInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BroadcastBattleHeroInfo_HeroInfo HeroInfo;
  typedef BroadcastBattleHeroInfo_BaseGoodsInfo BaseGoodsInfo;

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_BroadcastBattleHeroInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // repeated .GSToGC.BroadcastBattleHeroInfo.HeroInfo heroinfo = 2;
  inline int heroinfo_size() const;
  inline void clear_heroinfo();
  static const int kHeroinfoFieldNumber = 2;
  inline const ::GSToGC::BroadcastBattleHeroInfo_HeroInfo& heroinfo(int index) const;
  inline ::GSToGC::BroadcastBattleHeroInfo_HeroInfo* mutable_heroinfo(int index);
  inline ::GSToGC::BroadcastBattleHeroInfo_HeroInfo* add_heroinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::BroadcastBattleHeroInfo_HeroInfo >&
      heroinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::BroadcastBattleHeroInfo_HeroInfo >*
      mutable_heroinfo();

  // repeated .GSToGC.BroadcastBattleHeroInfo.BaseGoodsInfo goodsinfo = 3;
  inline int goodsinfo_size() const;
  inline void clear_goodsinfo();
  static const int kGoodsinfoFieldNumber = 3;
  inline const ::GSToGC::BroadcastBattleHeroInfo_BaseGoodsInfo& goodsinfo(int index) const;
  inline ::GSToGC::BroadcastBattleHeroInfo_BaseGoodsInfo* mutable_goodsinfo(int index);
  inline ::GSToGC::BroadcastBattleHeroInfo_BaseGoodsInfo* add_goodsinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::BroadcastBattleHeroInfo_BaseGoodsInfo >&
      goodsinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::BroadcastBattleHeroInfo_BaseGoodsInfo >*
      mutable_goodsinfo();

  // @@protoc_insertion_point(class_scope:GSToGC.BroadcastBattleHeroInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::BroadcastBattleHeroInfo_HeroInfo > heroinfo_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::BroadcastBattleHeroInfo_BaseGoodsInfo > goodsinfo_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static BroadcastBattleHeroInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuideLastStep : public ::google::protobuf::Message {
 public:
  GuideLastStep();
  virtual ~GuideLastStep();

  GuideLastStep(const GuideLastStep& from);

  inline GuideLastStep& operator=(const GuideLastStep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuideLastStep& default_instance();

  void Swap(GuideLastStep* other);

  // implements Message ----------------------------------------------

  GuideLastStep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuideLastStep& from);
  void MergeFrom(const GuideLastStep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromCS_NotifyGuideLastComStep];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional bool ifComp = 2;
  inline bool has_ifcomp() const;
  inline void clear_ifcomp();
  static const int kIfCompFieldNumber = 2;
  inline bool ifcomp() const;
  inline void set_ifcomp(bool value);

  // optional int32 stepid = 3;
  inline bool has_stepid() const;
  inline void clear_stepid();
  static const int kStepidFieldNumber = 3;
  inline ::google::protobuf::int32 stepid() const;
  inline void set_stepid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.GuideLastStep)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_ifcomp();
  inline void clear_has_ifcomp();
  inline void set_has_stepid();
  inline void clear_has_stepid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  bool ifcomp_;
  ::google::protobuf::int32 stepid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static GuideLastStep* default_instance_;
};
// -------------------------------------------------------------------

class NotifyUserCLDays : public ::google::protobuf::Message {
 public:
  NotifyUserCLDays();
  virtual ~NotifyUserCLDays();

  NotifyUserCLDays(const NotifyUserCLDays& from);

  inline NotifyUserCLDays& operator=(const NotifyUserCLDays& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyUserCLDays& default_instance();

  void Swap(NotifyUserCLDays* other);

  // implements Message ----------------------------------------------

  NotifyUserCLDays* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyUserCLDays& from);
  void MergeFrom(const NotifyUserCLDays& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyUserCLDays];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint32 month = 2;
  inline bool has_month() const;
  inline void clear_month();
  static const int kMonthFieldNumber = 2;
  inline ::google::protobuf::uint32 month() const;
  inline void set_month(::google::protobuf::uint32 value);

  // optional uint32 today = 3;
  inline bool has_today() const;
  inline void clear_today();
  static const int kTodayFieldNumber = 3;
  inline ::google::protobuf::uint32 today() const;
  inline void set_today(::google::protobuf::uint32 value);

  // optional uint32 totalCldays = 4;
  inline bool has_totalcldays() const;
  inline void clear_totalcldays();
  static const int kTotalCldaysFieldNumber = 4;
  inline ::google::protobuf::uint32 totalcldays() const;
  inline void set_totalcldays(::google::protobuf::uint32 value);

  // optional uint32 cldays = 5;
  inline bool has_cldays() const;
  inline void clear_cldays();
  static const int kCldaysFieldNumber = 5;
  inline ::google::protobuf::uint32 cldays() const;
  inline void set_cldays(::google::protobuf::uint32 value);

  // optional bool isTodayCan = 6;
  inline bool has_istodaycan() const;
  inline void clear_istodaycan();
  static const int kIsTodayCanFieldNumber = 6;
  inline bool istodaycan() const;
  inline void set_istodaycan(bool value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyUserCLDays)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_month();
  inline void clear_has_month();
  inline void set_has_today();
  inline void clear_has_today();
  inline void set_has_totalcldays();
  inline void clear_has_totalcldays();
  inline void set_has_cldays();
  inline void clear_has_cldays();
  inline void set_has_istodaycan();
  inline void clear_has_istodaycan();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::uint32 month_;
  ::google::protobuf::uint32 today_;
  ::google::protobuf::uint32 totalcldays_;
  ::google::protobuf::uint32 cldays_;
  bool istodaycan_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyUserCLDays* default_instance_;
};
// -------------------------------------------------------------------

class GameNotice_Notice : public ::google::protobuf::Message {
 public:
  GameNotice_Notice();
  virtual ~GameNotice_Notice();

  GameNotice_Notice(const GameNotice_Notice& from);

  inline GameNotice_Notice& operator=(const GameNotice_Notice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameNotice_Notice& default_instance();

  void Swap(GameNotice_Notice* other);

  // implements Message ----------------------------------------------

  GameNotice_Notice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameNotice_Notice& from);
  void MergeFrom(const GameNotice_Notice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string title = 1;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 1;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // optional uint32 flag = 2;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 2;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);

  // optional uint32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // optional uint32 priority = 4;
  inline bool has_priority() const;
  inline void clear_priority();
  static const int kPriorityFieldNumber = 4;
  inline ::google::protobuf::uint32 priority() const;
  inline void set_priority(::google::protobuf::uint32 value);

  // optional string notice = 5;
  inline bool has_notice() const;
  inline void clear_notice();
  static const int kNoticeFieldNumber = 5;
  inline const ::std::string& notice() const;
  inline void set_notice(const ::std::string& value);
  inline void set_notice(const char* value);
  inline void set_notice(const char* value, size_t size);
  inline ::std::string* mutable_notice();
  inline ::std::string* release_notice();
  inline void set_allocated_notice(::std::string* notice);

  // @@protoc_insertion_point(class_scope:GSToGC.GameNotice.Notice)
 private:
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_priority();
  inline void clear_has_priority();
  inline void set_has_notice();
  inline void clear_has_notice();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* title_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::uint32 status_;
  ::std::string* notice_;
  ::google::protobuf::uint32 priority_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static GameNotice_Notice* default_instance_;
};
// -------------------------------------------------------------------

class GameNotice : public ::google::protobuf::Message {
 public:
  GameNotice();
  virtual ~GameNotice();

  GameNotice(const GameNotice& from);

  inline GameNotice& operator=(const GameNotice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameNotice& default_instance();

  void Swap(GameNotice* other);

  // implements Message ----------------------------------------------

  GameNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameNotice& from);
  void MergeFrom(const GameNotice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GameNotice_Notice Notice;

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyNotice];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // repeated .GSToGC.GameNotice.Notice notice = 2;
  inline int notice_size() const;
  inline void clear_notice();
  static const int kNoticeFieldNumber = 2;
  inline const ::GSToGC::GameNotice_Notice& notice(int index) const;
  inline ::GSToGC::GameNotice_Notice* mutable_notice(int index);
  inline ::GSToGC::GameNotice_Notice* add_notice();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::GameNotice_Notice >&
      notice() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::GameNotice_Notice >*
      mutable_notice();

  // @@protoc_insertion_point(class_scope:GSToGC.GameNotice)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::GameNotice_Notice > notice_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static GameNotice* default_instance_;
};
// -------------------------------------------------------------------

class GuideSteps : public ::google::protobuf::Message {
 public:
  GuideSteps();
  virtual ~GuideSteps();

  GuideSteps(const GuideSteps& from);

  inline GuideSteps& operator=(const GuideSteps& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuideSteps& default_instance();

  void Swap(GuideSteps* other);

  // implements Message ----------------------------------------------

  GuideSteps* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuideSteps& from);
  void MergeFrom(const GuideSteps& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyUserGuideSetups];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional bool ifComp = 4;
  inline bool has_ifcomp() const;
  inline void clear_ifcomp();
  static const int kIfCompFieldNumber = 4;
  inline bool ifcomp() const;
  inline void set_ifcomp(bool value);

  // optional string steps = 5;
  inline bool has_steps() const;
  inline void clear_steps();
  static const int kStepsFieldNumber = 5;
  inline const ::std::string& steps() const;
  inline void set_steps(const ::std::string& value);
  inline void set_steps(const char* value);
  inline void set_steps(const char* value, size_t size);
  inline ::std::string* mutable_steps();
  inline ::std::string* release_steps();
  inline void set_allocated_steps(::std::string* steps);

  // @@protoc_insertion_point(class_scope:GSToGC.GuideSteps)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_ifcomp();
  inline void clear_has_ifcomp();
  inline void set_has_steps();
  inline void clear_has_steps();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::int32 type_;
  ::std::string* steps_;
  bool ifcomp_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static GuideSteps* default_instance_;
};
// -------------------------------------------------------------------

class PingRet : public ::google::protobuf::Message {
 public:
  PingRet();
  virtual ~PingRet();

  PingRet(const PingRet& from);

  inline PingRet& operator=(const PingRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PingRet& default_instance();

  void Swap(PingRet* other);

  // implements Message ----------------------------------------------

  PingRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PingRet& from);
  void MergeFrom(const PingRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_GCAskPingRet];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int64 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // optional int32 flag = 3;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 3;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.PingRet)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 time_;
  int msgid_;
  ::google::protobuf::int32 flag_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static PingRet* default_instance_;
};
// -------------------------------------------------------------------

class NotifyQueryNickNameRet_QueryInfo : public ::google::protobuf::Message {
 public:
  NotifyQueryNickNameRet_QueryInfo();
  virtual ~NotifyQueryNickNameRet_QueryInfo();

  NotifyQueryNickNameRet_QueryInfo(const NotifyQueryNickNameRet_QueryInfo& from);

  inline NotifyQueryNickNameRet_QueryInfo& operator=(const NotifyQueryNickNameRet_QueryInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyQueryNickNameRet_QueryInfo& default_instance();

  void Swap(NotifyQueryNickNameRet_QueryInfo* other);

  // implements Message ----------------------------------------------

  NotifyQueryNickNameRet_QueryInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyQueryNickNameRet_QueryInfo& from);
  void MergeFrom(const NotifyQueryNickNameRet_QueryInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string nickname = 1;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 1;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional int32 headid = 2;
  inline bool has_headid() const;
  inline void clear_headid();
  static const int kHeadidFieldNumber = 2;
  inline ::google::protobuf::int32 headid() const;
  inline void set_headid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyQueryNickNameRet.QueryInfo)
 private:
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_headid();
  inline void clear_has_headid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* nickname_;
  ::google::protobuf::int32 headid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyQueryNickNameRet_QueryInfo* default_instance_;
};
// -------------------------------------------------------------------

class NotifyQueryNickNameRet : public ::google::protobuf::Message {
 public:
  NotifyQueryNickNameRet();
  virtual ~NotifyQueryNickNameRet();

  NotifyQueryNickNameRet(const NotifyQueryNickNameRet& from);

  inline NotifyQueryNickNameRet& operator=(const NotifyQueryNickNameRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyQueryNickNameRet& default_instance();

  void Swap(NotifyQueryNickNameRet* other);

  // implements Message ----------------------------------------------

  NotifyQueryNickNameRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyQueryNickNameRet& from);
  void MergeFrom(const NotifyQueryNickNameRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef NotifyQueryNickNameRet_QueryInfo QueryInfo;

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyQueryNickNameRet];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // repeated .GSToGC.NotifyQueryNickNameRet.QueryInfo info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::GSToGC::NotifyQueryNickNameRet_QueryInfo& info(int index) const;
  inline ::GSToGC::NotifyQueryNickNameRet_QueryInfo* mutable_info(int index);
  inline ::GSToGC::NotifyQueryNickNameRet_QueryInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyQueryNickNameRet_QueryInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyQueryNickNameRet_QueryInfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyQueryNickNameRet)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyQueryNickNameRet_QueryInfo > info_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyQueryNickNameRet* default_instance_;
};
// -------------------------------------------------------------------

class SNSInfo : public ::google::protobuf::Message {
 public:
  SNSInfo();
  virtual ~SNSInfo();

  SNSInfo(const SNSInfo& from);

  inline SNSInfo& operator=(const SNSInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SNSInfo& default_instance();

  void Swap(SNSInfo* other);

  // implements Message ----------------------------------------------

  SNSInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SNSInfo& from);
  void MergeFrom(const SNSInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string nickname = 2;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional uint32 headid = 3;
  inline bool has_headid() const;
  inline void clear_headid();
  static const int kHeadidFieldNumber = 3;
  inline ::google::protobuf::uint32 headid() const;
  inline void set_headid(::google::protobuf::uint32 value);

  // optional int32 status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional uint64 guididx = 5;
  inline bool has_guididx() const;
  inline void clear_guididx();
  static const int kGuididxFieldNumber = 5;
  inline ::google::protobuf::uint64 guididx() const;
  inline void set_guididx(::google::protobuf::uint64 value);

  // optional uint32 viplv = 6;
  inline bool has_viplv() const;
  inline void clear_viplv();
  static const int kViplvFieldNumber = 6;
  inline ::google::protobuf::uint32 viplv() const;
  inline void set_viplv(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.SNSInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_headid();
  inline void clear_has_headid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_guididx();
  inline void clear_has_guididx();
  inline void set_has_viplv();
  inline void clear_has_viplv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* nickname_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::uint32 headid_;
  ::google::protobuf::uint64 guididx_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::uint32 viplv_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static SNSInfo* default_instance_;
};
// -------------------------------------------------------------------

class NotifyUserSNSList : public ::google::protobuf::Message {
 public:
  NotifyUserSNSList();
  virtual ~NotifyUserSNSList();

  NotifyUserSNSList(const NotifyUserSNSList& from);

  inline NotifyUserSNSList& operator=(const NotifyUserSNSList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyUserSNSList& default_instance();

  void Swap(NotifyUserSNSList* other);

  // implements Message ----------------------------------------------

  NotifyUserSNSList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyUserSNSList& from);
  void MergeFrom(const NotifyUserSNSList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgnum = 1 [default = eMsgToGCFromGS_NotifyUserSNSList];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GSToGC::MsgID msgnum() const;
  inline void set_msgnum(::GSToGC::MsgID value);

  // repeated .GSToGC.SNSInfo info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::GSToGC::SNSInfo& info(int index) const;
  inline ::GSToGC::SNSInfo* mutable_info(int index);
  inline ::GSToGC::SNSInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::SNSInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::SNSInfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyUserSNSList)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::SNSInfo > info_;
  int msgnum_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyUserSNSList* default_instance_;
};
// -------------------------------------------------------------------

class NotifyBattleManagerChange : public ::google::protobuf::Message {
 public:
  NotifyBattleManagerChange();
  virtual ~NotifyBattleManagerChange();

  NotifyBattleManagerChange(const NotifyBattleManagerChange& from);

  inline NotifyBattleManagerChange& operator=(const NotifyBattleManagerChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyBattleManagerChange& default_instance();

  void Swap(NotifyBattleManagerChange* other);

  // implements Message ----------------------------------------------

  NotifyBattleManagerChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyBattleManagerChange& from);
  void MergeFrom(const NotifyBattleManagerChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBattleManagerChange];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyBattleManagerChange)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyBattleManagerChange* default_instance_;
};
// -------------------------------------------------------------------

class NotifyBeAddFriendMs : public ::google::protobuf::Message {
 public:
  NotifyBeAddFriendMs();
  virtual ~NotifyBeAddFriendMs();

  NotifyBeAddFriendMs(const NotifyBeAddFriendMs& from);

  inline NotifyBeAddFriendMs& operator=(const NotifyBeAddFriendMs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyBeAddFriendMs& default_instance();

  void Swap(NotifyBeAddFriendMs* other);

  // implements Message ----------------------------------------------

  NotifyBeAddFriendMs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyBeAddFriendMs& from);
  void MergeFrom(const NotifyBeAddFriendMs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgnum = 1 [default = eMsgToGCFromGS_NotifyBeAddFriendMsg];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GSToGC::MsgID msgnum() const;
  inline void set_msgnum(::GSToGC::MsgID value);

  // optional string sendnickname = 2;
  inline bool has_sendnickname() const;
  inline void clear_sendnickname();
  static const int kSendnicknameFieldNumber = 2;
  inline const ::std::string& sendnickname() const;
  inline void set_sendnickname(const ::std::string& value);
  inline void set_sendnickname(const char* value);
  inline void set_sendnickname(const char* value, size_t size);
  inline ::std::string* mutable_sendnickname();
  inline ::std::string* release_sendnickname();
  inline void set_allocated_sendnickname(::std::string* sendnickname);

  // optional string recnickname = 3;
  inline bool has_recnickname() const;
  inline void clear_recnickname();
  static const int kRecnicknameFieldNumber = 3;
  inline const ::std::string& recnickname() const;
  inline void set_recnickname(const ::std::string& value);
  inline void set_recnickname(const char* value);
  inline void set_recnickname(const char* value, size_t size);
  inline ::std::string* mutable_recnickname();
  inline ::std::string* release_recnickname();
  inline void set_allocated_recnickname(::std::string* recnickname);

  // optional uint64 sdnder_guididx = 4;
  inline bool has_sdnder_guididx() const;
  inline void clear_sdnder_guididx();
  static const int kSdnderGuididxFieldNumber = 4;
  inline ::google::protobuf::uint64 sdnder_guididx() const;
  inline void set_sdnder_guididx(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyBeAddFriendMs)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();
  inline void set_has_sendnickname();
  inline void clear_has_sendnickname();
  inline void set_has_recnickname();
  inline void clear_has_recnickname();
  inline void set_has_sdnder_guididx();
  inline void clear_has_sdnder_guididx();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* sendnickname_;
  ::std::string* recnickname_;
  ::google::protobuf::uint64 sdnder_guididx_;
  int msgnum_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyBeAddFriendMs* default_instance_;
};
// -------------------------------------------------------------------

class NotifyMsgFromUser : public ::google::protobuf::Message {
 public:
  NotifyMsgFromUser();
  virtual ~NotifyMsgFromUser();

  NotifyMsgFromUser(const NotifyMsgFromUser& from);

  inline NotifyMsgFromUser& operator=(const NotifyMsgFromUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyMsgFromUser& default_instance();

  void Swap(NotifyMsgFromUser* other);

  // implements Message ----------------------------------------------

  NotifyMsgFromUser* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyMsgFromUser& from);
  void MergeFrom(const NotifyMsgFromUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgnum = 1 [default = eMsgToGCFromGS_NotifyMsgFromUser];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GSToGC::MsgID msgnum() const;
  inline void set_msgnum(::GSToGC::MsgID value);

  // optional uint64 guididx = 2;
  inline bool has_guididx() const;
  inline void clear_guididx();
  static const int kGuididxFieldNumber = 2;
  inline ::google::protobuf::uint64 guididx() const;
  inline void set_guididx(::google::protobuf::uint64 value);

  // optional string nickname = 3;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional int32 headid = 4;
  inline bool has_headid() const;
  inline void clear_headid();
  static const int kHeadidFieldNumber = 4;
  inline ::google::protobuf::int32 headid() const;
  inline void set_headid(::google::protobuf::int32 value);

  // optional string chatstr = 5;
  inline bool has_chatstr() const;
  inline void clear_chatstr();
  static const int kChatstrFieldNumber = 5;
  inline const ::std::string& chatstr() const;
  inline void set_chatstr(const ::std::string& value);
  inline void set_chatstr(const char* value);
  inline void set_chatstr(const char* value, size_t size);
  inline ::std::string* mutable_chatstr();
  inline ::std::string* release_chatstr();
  inline void set_allocated_chatstr(::std::string* chatstr);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyMsgFromUser)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();
  inline void set_has_guididx();
  inline void clear_has_guididx();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_headid();
  inline void clear_has_headid();
  inline void set_has_chatstr();
  inline void clear_has_chatstr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guididx_;
  int msgnum_;
  ::google::protobuf::int32 headid_;
  ::std::string* nickname_;
  ::std::string* chatstr_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyMsgFromUser* default_instance_;
};
// -------------------------------------------------------------------

class NotifyUserSNSListChange : public ::google::protobuf::Message {
 public:
  NotifyUserSNSListChange();
  virtual ~NotifyUserSNSListChange();

  NotifyUserSNSListChange(const NotifyUserSNSListChange& from);

  inline NotifyUserSNSListChange& operator=(const NotifyUserSNSListChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyUserSNSListChange& default_instance();

  void Swap(NotifyUserSNSListChange* other);

  // implements Message ----------------------------------------------

  NotifyUserSNSListChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyUserSNSListChange& from);
  void MergeFrom(const NotifyUserSNSListChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgnum = 1 [default = eMsgToGCFromGS_NotifyUserSNSListChange];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GSToGC::MsgID msgnum() const;
  inline void set_msgnum(::GSToGC::MsgID value);

  // optional uint64 guididx = 2;
  inline bool has_guididx() const;
  inline void clear_guididx();
  static const int kGuididxFieldNumber = 2;
  inline ::google::protobuf::uint64 guididx() const;
  inline void set_guididx(::google::protobuf::uint64 value);

  // optional uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyUserSNSListChange)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();
  inline void set_has_guididx();
  inline void clear_has_guididx();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guididx_;
  int msgnum_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyUserSNSListChange* default_instance_;
};
// -------------------------------------------------------------------

class UserBeInvitedToBattle : public ::google::protobuf::Message {
 public:
  UserBeInvitedToBattle();
  virtual ~UserBeInvitedToBattle();

  UserBeInvitedToBattle(const UserBeInvitedToBattle& from);

  inline UserBeInvitedToBattle& operator=(const UserBeInvitedToBattle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserBeInvitedToBattle& default_instance();

  void Swap(UserBeInvitedToBattle* other);

  // implements Message ----------------------------------------------

  UserBeInvitedToBattle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserBeInvitedToBattle& from);
  void MergeFrom(const UserBeInvitedToBattle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgnum = 1 [default = eMsgToGCFromGS_UserBeInvitedToBattle];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GSToGC::MsgID msgnum() const;
  inline void set_msgnum(::GSToGC::MsgID value);

  // optional int32 battleid = 2;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleidFieldNumber = 2;
  inline ::google::protobuf::int32 battleid() const;
  inline void set_battleid(::google::protobuf::int32 value);

  // optional string pwd = 3;
  inline bool has_pwd() const;
  inline void clear_pwd();
  static const int kPwdFieldNumber = 3;
  inline const ::std::string& pwd() const;
  inline void set_pwd(const ::std::string& value);
  inline void set_pwd(const char* value);
  inline void set_pwd(const char* value, size_t size);
  inline ::std::string* mutable_pwd();
  inline ::std::string* release_pwd();
  inline void set_allocated_pwd(::std::string* pwd);

  // optional string Invitor = 4;
  inline bool has_invitor() const;
  inline void clear_invitor();
  static const int kInvitorFieldNumber = 4;
  inline const ::std::string& invitor() const;
  inline void set_invitor(const ::std::string& value);
  inline void set_invitor(const char* value);
  inline void set_invitor(const char* value, size_t size);
  inline ::std::string* mutable_invitor();
  inline ::std::string* release_invitor();
  inline void set_allocated_invitor(::std::string* invitor);

  // @@protoc_insertion_point(class_scope:GSToGC.UserBeInvitedToBattle)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();
  inline void set_has_battleid();
  inline void clear_has_battleid();
  inline void set_has_pwd();
  inline void clear_has_pwd();
  inline void set_has_invitor();
  inline void clear_has_invitor();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgnum_;
  ::google::protobuf::int32 battleid_;
  ::std::string* pwd_;
  ::std::string* invitor_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static UserBeInvitedToBattle* default_instance_;
};
// -------------------------------------------------------------------

class NotifyAFPData_FPInfo : public ::google::protobuf::Message {
 public:
  NotifyAFPData_FPInfo();
  virtual ~NotifyAFPData_FPInfo();

  NotifyAFPData_FPInfo(const NotifyAFPData_FPInfo& from);

  inline NotifyAFPData_FPInfo& operator=(const NotifyAFPData_FPInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyAFPData_FPInfo& default_instance();

  void Swap(NotifyAFPData_FPInfo* other);

  // implements Message ----------------------------------------------

  NotifyAFPData_FPInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyAFPData_FPInfo& from);
  void MergeFrom(const NotifyAFPData_FPInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyAFPData.FPInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyAFPData_FPInfo* default_instance_;
};
// -------------------------------------------------------------------

class NotifyAFPData : public ::google::protobuf::Message {
 public:
  NotifyAFPData();
  virtual ~NotifyAFPData();

  NotifyAFPData(const NotifyAFPData& from);

  inline NotifyAFPData& operator=(const NotifyAFPData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyAFPData& default_instance();

  void Swap(NotifyAFPData* other);

  // implements Message ----------------------------------------------

  NotifyAFPData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyAFPData& from);
  void MergeFrom(const NotifyAFPData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef NotifyAFPData_FPInfo FPInfo;

  typedef NotifyAFPData_EnumFpType EnumFpType;
  static const EnumFpType PhyHurt = NotifyAFPData_EnumFpType_PhyHurt;
  static const EnumFpType MagicHurt = NotifyAFPData_EnumFpType_MagicHurt;
  static const EnumFpType CurHP = NotifyAFPData_EnumFpType_CurHP;
  static const EnumFpType CurMP = NotifyAFPData_EnumFpType_CurMP;
  static const EnumFpType PhyAttack = NotifyAFPData_EnumFpType_PhyAttack;
  static const EnumFpType MagicAttack = NotifyAFPData_EnumFpType_MagicAttack;
  static const EnumFpType PhyDefense = NotifyAFPData_EnumFpType_PhyDefense;
  static const EnumFpType MagicDefense = NotifyAFPData_EnumFpType_MagicDefense;
  static const EnumFpType MoveSpeed = NotifyAFPData_EnumFpType_MoveSpeed;
  static const EnumFpType AttackSpeed = NotifyAFPData_EnumFpType_AttackSpeed;
  static const EnumFpType MaxHP = NotifyAFPData_EnumFpType_MaxHP;
  static const EnumFpType MaxMP = NotifyAFPData_EnumFpType_MaxMP;
  static const EnumFpType HPRecoverRate = NotifyAFPData_EnumFpType_HPRecoverRate;
  static const EnumFpType MPRecoverRate = NotifyAFPData_EnumFpType_MPRecoverRate;
  static const EnumFpType ReliveTime = NotifyAFPData_EnumFpType_ReliveTime;
  static const EnumFpType Dizziness = NotifyAFPData_EnumFpType_Dizziness;
  static const EnumFpType Silence = NotifyAFPData_EnumFpType_Silence;
  static const EnumFpType PosMove = NotifyAFPData_EnumFpType_PosMove;
  static const EnumFpType Rebound = NotifyAFPData_EnumFpType_Rebound;
  static const EnumFpType PhySuckBlood = NotifyAFPData_EnumFpType_PhySuckBlood;
  static const EnumFpType Disarm = NotifyAFPData_EnumFpType_Disarm;
  static const EnumFpType Restrain = NotifyAFPData_EnumFpType_Restrain;
  static const EnumFpType CriPersent = NotifyAFPData_EnumFpType_CriPersent;
  static const EnumFpType CriHarm = NotifyAFPData_EnumFpType_CriHarm;
  static const EnumFpType CPRecover = NotifyAFPData_EnumFpType_CPRecover;
  static const EnumFpType PassitiveSkill = NotifyAFPData_EnumFpType_PassitiveSkill;
  static const EnumFpType Invisible = NotifyAFPData_EnumFpType_Invisible;
  static const EnumFpType AttackDist = NotifyAFPData_EnumFpType_AttackDist;
  static const EnumFpType TrueHurt = NotifyAFPData_EnumFpType_TrueHurt;
  static const EnumFpType PhyPassNum = NotifyAFPData_EnumFpType_PhyPassNum;
  static const EnumFpType PhyPassPercent = NotifyAFPData_EnumFpType_PhyPassPercent;
  static const EnumFpType MagicPassNum = NotifyAFPData_EnumFpType_MagicPassNum;
  static const EnumFpType MagicPassPercent = NotifyAFPData_EnumFpType_MagicPassPercent;
  static const EnumFpType CooldownReduce = NotifyAFPData_EnumFpType_CooldownReduce;
  static const EnumFpType PhyDmgReduce = NotifyAFPData_EnumFpType_PhyDmgReduce;
  static const EnumFpType MagicDmgReduce = NotifyAFPData_EnumFpType_MagicDmgReduce;
  static const EnumFpType TrueDmgReduce = NotifyAFPData_EnumFpType_TrueDmgReduce;
  static const EnumFpType PhyDmgReduceNum = NotifyAFPData_EnumFpType_PhyDmgReduceNum;
  static const EnumFpType MagicDmgReduceNum = NotifyAFPData_EnumFpType_MagicDmgReduceNum;
  static const EnumFpType TrueDmgReduceNum = NotifyAFPData_EnumFpType_TrueDmgReduceNum;
  static const EnumFpType MagicSuckBlood = NotifyAFPData_EnumFpType_MagicSuckBlood;
  static inline bool EnumFpType_IsValid(int value) {
    return NotifyAFPData_EnumFpType_IsValid(value);
  }
  static const EnumFpType EnumFpType_MIN =
    NotifyAFPData_EnumFpType_EnumFpType_MIN;
  static const EnumFpType EnumFpType_MAX =
    NotifyAFPData_EnumFpType_EnumFpType_MAX;
  static const int EnumFpType_ARRAYSIZE =
    NotifyAFPData_EnumFpType_EnumFpType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EnumFpType_descriptor() {
    return NotifyAFPData_EnumFpType_descriptor();
  }
  static inline const ::std::string& EnumFpType_Name(EnumFpType value) {
    return NotifyAFPData_EnumFpType_Name(value);
  }
  static inline bool EnumFpType_Parse(const ::std::string& name,
      EnumFpType* value) {
    return NotifyAFPData_EnumFpType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgnum = 1 [default = eMsgToGCFromGS_NotifyAFPData];
  inline bool has_msgnum() const;
  inline void clear_msgnum();
  static const int kMsgnumFieldNumber = 1;
  inline ::GSToGC::MsgID msgnum() const;
  inline void set_msgnum(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // repeated .GSToGC.NotifyAFPData.FPInfo info = 3;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 3;
  inline const ::GSToGC::NotifyAFPData_FPInfo& info(int index) const;
  inline ::GSToGC::NotifyAFPData_FPInfo* mutable_info(int index);
  inline ::GSToGC::NotifyAFPData_FPInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyAFPData_FPInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyAFPData_FPInfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyAFPData)
 private:
  inline void set_has_msgnum();
  inline void clear_has_msgnum();
  inline void set_has_guid();
  inline void clear_has_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyAFPData_FPInfo > info_;
  int msgnum_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyAFPData* default_instance_;
};
// -------------------------------------------------------------------

class UserBaseInfo : public ::google::protobuf::Message {
 public:
  UserBaseInfo();
  virtual ~UserBaseInfo();

  UserBaseInfo(const UserBaseInfo& from);

  inline UserBaseInfo& operator=(const UserBaseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserBaseInfo& default_instance();

  void Swap(UserBaseInfo* other);

  // implements Message ----------------------------------------------

  UserBaseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserBaseInfo& from);
  void MergeFrom(const UserBaseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyUserBaseInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string nickname = 4;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 4;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional int32 headid = 5;
  inline bool has_headid() const;
  inline void clear_headid();
  static const int kHeadidFieldNumber = 5;
  inline ::google::protobuf::int32 headid() const;
  inline void set_headid(::google::protobuf::int32 value);

  // optional int32 sex = 6;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 6;
  inline ::google::protobuf::int32 sex() const;
  inline void set_sex(::google::protobuf::int32 value);

  // optional int64 curscore = 7;
  inline bool has_curscore() const;
  inline void clear_curscore();
  static const int kCurscoreFieldNumber = 7;
  inline ::google::protobuf::int64 curscore() const;
  inline void set_curscore(::google::protobuf::int64 value);

  // optional int64 curdiamoand = 8;
  inline bool has_curdiamoand() const;
  inline void clear_curdiamoand();
  static const int kCurdiamoandFieldNumber = 8;
  inline ::google::protobuf::int64 curdiamoand() const;
  inline void set_curdiamoand(::google::protobuf::int64 value);

  // optional int64 curgold = 9;
  inline bool has_curgold() const;
  inline void clear_curgold();
  static const int kCurgoldFieldNumber = 9;
  inline ::google::protobuf::int64 curgold() const;
  inline void set_curgold(::google::protobuf::int64 value);

  // optional int32 mapid = 11;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 11;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional bool ifreconnect = 12;
  inline bool has_ifreconnect() const;
  inline void clear_ifreconnect();
  static const int kIfreconnectFieldNumber = 12;
  inline bool ifreconnect() const;
  inline void set_ifreconnect(bool value);

  // optional uint64 battleid = 13;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleidFieldNumber = 13;
  inline ::google::protobuf::uint64 battleid() const;
  inline void set_battleid(::google::protobuf::uint64 value);

  // optional int32 level = 14;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 14;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 vip_level = 15;
  inline bool has_vip_level() const;
  inline void clear_vip_level();
  static const int kVipLevelFieldNumber = 15;
  inline ::google::protobuf::int32 vip_level() const;
  inline void set_vip_level(::google::protobuf::int32 value);

  // optional int32 vip_score = 16;
  inline bool has_vip_score() const;
  inline void clear_vip_score();
  static const int kVipScoreFieldNumber = 16;
  inline ::google::protobuf::int32 vip_score() const;
  inline void set_vip_score(::google::protobuf::int32 value);

  // optional int32 cur_exp = 17;
  inline bool has_cur_exp() const;
  inline void clear_cur_exp();
  static const int kCurExpFieldNumber = 17;
  inline ::google::protobuf::int32 cur_exp() const;
  inline void set_cur_exp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.UserBaseInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_headid();
  inline void clear_has_headid();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_curscore();
  inline void clear_has_curscore();
  inline void set_has_curdiamoand();
  inline void clear_has_curdiamoand();
  inline void set_has_curgold();
  inline void clear_has_curgold();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_ifreconnect();
  inline void clear_has_ifreconnect();
  inline void set_has_battleid();
  inline void clear_has_battleid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_vip_level();
  inline void clear_has_vip_level();
  inline void set_has_vip_score();
  inline void clear_has_vip_score();
  inline void set_has_cur_exp();
  inline void clear_has_cur_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::std::string* name_;
  int msgid_;
  ::google::protobuf::int32 headid_;
  ::std::string* nickname_;
  ::google::protobuf::int64 curscore_;
  ::google::protobuf::int64 curdiamoand_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int64 curgold_;
  ::google::protobuf::uint64 battleid_;
  bool ifreconnect_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 vip_level_;
  ::google::protobuf::int32 vip_score_;
  ::google::protobuf::int32 cur_exp_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static UserBaseInfo* default_instance_;
};
// -------------------------------------------------------------------

class NotifySystemAnnounce : public ::google::protobuf::Message {
 public:
  NotifySystemAnnounce();
  virtual ~NotifySystemAnnounce();

  NotifySystemAnnounce(const NotifySystemAnnounce& from);

  inline NotifySystemAnnounce& operator=(const NotifySystemAnnounce& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifySystemAnnounce& default_instance();

  void Swap(NotifySystemAnnounce* other);

  // implements Message ----------------------------------------------

  NotifySystemAnnounce* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifySystemAnnounce& from);
  void MergeFrom(const NotifySystemAnnounce& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySystemAnnounce];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string announce = 3;
  inline bool has_announce() const;
  inline void clear_announce();
  static const int kAnnounceFieldNumber = 3;
  inline const ::std::string& announce() const;
  inline void set_announce(const ::std::string& value);
  inline void set_announce(const char* value);
  inline void set_announce(const char* value, size_t size);
  inline ::std::string* mutable_announce();
  inline ::std::string* release_announce();
  inline void set_allocated_announce(::std::string* announce);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifySystemAnnounce)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_announce();
  inline void clear_has_announce();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::int32 type_;
  ::std::string* announce_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifySystemAnnounce* default_instance_;
};
// -------------------------------------------------------------------

class NetClash : public ::google::protobuf::Message {
 public:
  NetClash();
  virtual ~NetClash();

  NetClash(const NetClash& from);

  inline NetClash& operator=(const NetClash& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NetClash& default_instance();

  void Swap(NetClash* other);

  // implements Message ----------------------------------------------

  NetClash* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NetClash& from);
  void MergeFrom(const NetClash& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyNetClash];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // @@protoc_insertion_point(class_scope:GSToGC.NetClash)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NetClash* default_instance_;
};
// -------------------------------------------------------------------

class WarningToSelectHero : public ::google::protobuf::Message {
 public:
  WarningToSelectHero();
  virtual ~WarningToSelectHero();

  WarningToSelectHero(const WarningToSelectHero& from);

  inline WarningToSelectHero& operator=(const WarningToSelectHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WarningToSelectHero& default_instance();

  void Swap(WarningToSelectHero* other);

  // implements Message ----------------------------------------------

  WarningToSelectHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WarningToSelectHero& from);
  void MergeFrom(const WarningToSelectHero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_WarningToSelectHero];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // @@protoc_insertion_point(class_scope:GSToGC.WarningToSelectHero)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static WarningToSelectHero* default_instance_;
};
// -------------------------------------------------------------------

class NotifySkillModelLeading : public ::google::protobuf::Message {
 public:
  NotifySkillModelLeading();
  virtual ~NotifySkillModelLeading();

  NotifySkillModelLeading(const NotifySkillModelLeading& from);

  inline NotifySkillModelLeading& operator=(const NotifySkillModelLeading& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifySkillModelLeading& default_instance();

  void Swap(NotifySkillModelLeading* other);

  // implements Message ----------------------------------------------

  NotifySkillModelLeading* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifySkillModelLeading& from);
  void MergeFrom(const NotifySkillModelLeading& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelLeading];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional uint32 effectid = 3;
  inline bool has_effectid() const;
  inline void clear_effectid();
  static const int kEffectidFieldNumber = 3;
  inline ::google::protobuf::uint32 effectid() const;
  inline void set_effectid(::google::protobuf::uint32 value);

  // optional int32 uniqueid = 4;
  inline bool has_uniqueid() const;
  inline void clear_uniqueid();
  static const int kUniqueidFieldNumber = 4;
  inline ::google::protobuf::int32 uniqueid() const;
  inline void set_uniqueid(::google::protobuf::int32 value);

  // optional uint64 targuid = 5;
  inline bool has_targuid() const;
  inline void clear_targuid();
  static const int kTarguidFieldNumber = 5;
  inline ::google::protobuf::uint64 targuid() const;
  inline void set_targuid(::google::protobuf::uint64 value);

  // optional int32 state = 6;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 6;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifySkillModelLeading)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_effectid();
  inline void clear_has_effectid();
  inline void set_has_uniqueid();
  inline void clear_has_uniqueid();
  inline void set_has_targuid();
  inline void clear_has_targuid();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::uint32 effectid_;
  ::google::protobuf::uint64 targuid_;
  ::google::protobuf::int32 uniqueid_;
  ::google::protobuf::int32 state_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifySkillModelLeading* default_instance_;
};
// -------------------------------------------------------------------

class AskRet : public ::google::protobuf::Message {
 public:
  AskRet();
  virtual ~AskRet();

  AskRet(const AskRet& from);

  inline AskRet& operator=(const AskRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskRet& default_instance();

  void Swap(AskRet* other);

  // implements Message ----------------------------------------------

  AskRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskRet& from);
  void MergeFrom(const AskRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_GCAskRet];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int32 askid = 2;
  inline bool has_askid() const;
  inline void clear_askid();
  static const int kAskidFieldNumber = 2;
  inline ::google::protobuf::int32 askid() const;
  inline void set_askid(::google::protobuf::int32 value);

  // optional int32 errorcode = 3;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorcodeFieldNumber = 3;
  inline ::google::protobuf::int32 errorcode() const;
  inline void set_errorcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.AskRet)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_askid();
  inline void clear_has_askid();
  inline void set_has_errorcode();
  inline void clear_has_errorcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::int32 askid_;
  ::google::protobuf::int32 errorcode_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static AskRet* default_instance_;
};
// -------------------------------------------------------------------

class NotifyCSHeroList_HeroListCfg : public ::google::protobuf::Message {
 public:
  NotifyCSHeroList_HeroListCfg();
  virtual ~NotifyCSHeroList_HeroListCfg();

  NotifyCSHeroList_HeroListCfg(const NotifyCSHeroList_HeroListCfg& from);

  inline NotifyCSHeroList_HeroListCfg& operator=(const NotifyCSHeroList_HeroListCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyCSHeroList_HeroListCfg& default_instance();

  void Swap(NotifyCSHeroList_HeroListCfg* other);

  // implements Message ----------------------------------------------

  NotifyCSHeroList_HeroListCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyCSHeroList_HeroListCfg& from);
  void MergeFrom(const NotifyCSHeroList_HeroListCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 heroid = 1;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 1;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);

  // optional int64 expired_time = 2;
  inline bool has_expired_time() const;
  inline void clear_expired_time();
  static const int kExpiredTimeFieldNumber = 2;
  inline ::google::protobuf::int64 expired_time() const;
  inline void set_expired_time(::google::protobuf::int64 value);

  // optional bool if_free = 3;
  inline bool has_if_free() const;
  inline void clear_if_free();
  static const int kIfFreeFieldNumber = 3;
  inline bool if_free() const;
  inline void set_if_free(bool value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyCSHeroList.HeroListCfg)
 private:
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_expired_time();
  inline void clear_has_expired_time();
  inline void set_has_if_free();
  inline void clear_has_if_free();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 expired_time_;
  ::google::protobuf::uint32 heroid_;
  bool if_free_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyCSHeroList_HeroListCfg* default_instance_;
};
// -------------------------------------------------------------------

class NotifyCSHeroList : public ::google::protobuf::Message {
 public:
  NotifyCSHeroList();
  virtual ~NotifyCSHeroList();

  NotifyCSHeroList(const NotifyCSHeroList& from);

  inline NotifyCSHeroList& operator=(const NotifyCSHeroList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyCSHeroList& default_instance();

  void Swap(NotifyCSHeroList* other);

  // implements Message ----------------------------------------------

  NotifyCSHeroList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyCSHeroList& from);
  void MergeFrom(const NotifyCSHeroList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef NotifyCSHeroList_HeroListCfg HeroListCfg;

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyCSHeroList];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // repeated .GSToGC.NotifyCSHeroList.HeroListCfg herocfg = 2;
  inline int herocfg_size() const;
  inline void clear_herocfg();
  static const int kHerocfgFieldNumber = 2;
  inline const ::GSToGC::NotifyCSHeroList_HeroListCfg& herocfg(int index) const;
  inline ::GSToGC::NotifyCSHeroList_HeroListCfg* mutable_herocfg(int index);
  inline ::GSToGC::NotifyCSHeroList_HeroListCfg* add_herocfg();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyCSHeroList_HeroListCfg >&
      herocfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyCSHeroList_HeroListCfg >*
      mutable_herocfg();

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyCSHeroList)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyCSHeroList_HeroListCfg > herocfg_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyCSHeroList* default_instance_;
};
// -------------------------------------------------------------------

class HeroList : public ::google::protobuf::Message {
 public:
  HeroList();
  virtual ~HeroList();

  HeroList(const HeroList& from);

  inline HeroList& operator=(const HeroList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroList& default_instance();

  void Swap(HeroList* other);

  // implements Message ----------------------------------------------

  HeroList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroList& from);
  void MergeFrom(const HeroList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyHeroList];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // repeated uint32 heroid = 2;
  inline int heroid_size() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 2;
  inline ::google::protobuf::uint32 heroid(int index) const;
  inline void set_heroid(int index, ::google::protobuf::uint32 value);
  inline void add_heroid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      heroid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_heroid();

  // optional int64 timeDiff = 3;
  inline bool has_timediff() const;
  inline void clear_timediff();
  static const int kTimeDiffFieldNumber = 3;
  inline ::google::protobuf::int64 timediff() const;
  inline void set_timediff(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GSToGC.HeroList)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_timediff();
  inline void clear_has_timediff();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > heroid_;
  ::google::protobuf::int64 timediff_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static HeroList* default_instance_;
};
// -------------------------------------------------------------------

class BattleBaseInfo : public ::google::protobuf::Message {
 public:
  BattleBaseInfo();
  virtual ~BattleBaseInfo();

  BattleBaseInfo(const BattleBaseInfo& from);

  inline BattleBaseInfo& operator=(const BattleBaseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleBaseInfo& default_instance();

  void Swap(BattleBaseInfo* other);

  // implements Message ----------------------------------------------

  BattleBaseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleBaseInfo& from);
  void MergeFrom(const BattleBaseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBattleBaseInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 battleid = 2;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleidFieldNumber = 2;
  inline ::google::protobuf::uint64 battleid() const;
  inline void set_battleid(::google::protobuf::uint64 value);

  // optional uint32 mapid = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // optional bool ifReconnect = 4;
  inline bool has_ifreconnect() const;
  inline void clear_ifreconnect();
  static const int kIfReconnectFieldNumber = 4;
  inline bool ifreconnect() const;
  inline void set_ifreconnect(bool value);

  // @@protoc_insertion_point(class_scope:GSToGC.BattleBaseInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_battleid();
  inline void clear_has_battleid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_ifreconnect();
  inline void clear_has_ifreconnect();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 battleid_;
  int msgid_;
  ::google::protobuf::uint32 mapid_;
  bool ifreconnect_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static BattleBaseInfo* default_instance_;
};
// -------------------------------------------------------------------

class RoomBaseInfo : public ::google::protobuf::Message {
 public:
  RoomBaseInfo();
  virtual ~RoomBaseInfo();

  RoomBaseInfo(const RoomBaseInfo& from);

  inline RoomBaseInfo& operator=(const RoomBaseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomBaseInfo& default_instance();

  void Swap(RoomBaseInfo* other);

  // implements Message ----------------------------------------------

  RoomBaseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomBaseInfo& from);
  void MergeFrom(const RoomBaseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyRoomBaseInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 roomid = 2;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint32 mapid = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.RoomBaseInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  int msgid_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static RoomBaseInfo* default_instance_;
};
// -------------------------------------------------------------------

class BattleSeatPosInfo_PosInfo : public ::google::protobuf::Message {
 public:
  BattleSeatPosInfo_PosInfo();
  virtual ~BattleSeatPosInfo_PosInfo();

  BattleSeatPosInfo_PosInfo(const BattleSeatPosInfo_PosInfo& from);

  inline BattleSeatPosInfo_PosInfo& operator=(const BattleSeatPosInfo_PosInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleSeatPosInfo_PosInfo& default_instance();

  void Swap(BattleSeatPosInfo_PosInfo* other);

  // implements Message ----------------------------------------------

  BattleSeatPosInfo_PosInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleSeatPosInfo_PosInfo& from);
  void MergeFrom(const BattleSeatPosInfo_PosInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional string nickname = 3;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional bool ifmaster = 4;
  inline bool has_ifmaster() const;
  inline void clear_ifmaster();
  static const int kIfmasterFieldNumber = 4;
  inline bool ifmaster() const;
  inline void set_ifmaster(bool value);

  // optional bool ifready = 5;
  inline bool has_ifready() const;
  inline void clear_ifready();
  static const int kIfreadyFieldNumber = 5;
  inline bool ifready() const;
  inline void set_ifready(bool value);

  // optional int32 headid = 6;
  inline bool has_headid() const;
  inline void clear_headid();
  static const int kHeadidFieldNumber = 6;
  inline ::google::protobuf::int32 headid() const;
  inline void set_headid(::google::protobuf::int32 value);

  // optional int64 gold = 7;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 7;
  inline ::google::protobuf::int64 gold() const;
  inline void set_gold(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GSToGC.BattleSeatPosInfo.PosInfo)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_ifmaster();
  inline void clear_has_ifmaster();
  inline void set_has_ifready();
  inline void clear_has_ifready();
  inline void set_has_headid();
  inline void clear_has_headid();
  inline void set_has_gold();
  inline void clear_has_gold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::std::string* nickname_;
  ::google::protobuf::int32 pos_;
  bool ifmaster_;
  bool ifready_;
  ::google::protobuf::int64 gold_;
  ::google::protobuf::int32 headid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static BattleSeatPosInfo_PosInfo* default_instance_;
};
// -------------------------------------------------------------------

class BattleSeatPosInfo : public ::google::protobuf::Message {
 public:
  BattleSeatPosInfo();
  virtual ~BattleSeatPosInfo();

  BattleSeatPosInfo(const BattleSeatPosInfo& from);

  inline BattleSeatPosInfo& operator=(const BattleSeatPosInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleSeatPosInfo& default_instance();

  void Swap(BattleSeatPosInfo* other);

  // implements Message ----------------------------------------------

  BattleSeatPosInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleSeatPosInfo& from);
  void MergeFrom(const BattleSeatPosInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BattleSeatPosInfo_PosInfo PosInfo;

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBattleSeatPosInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // repeated .GSToGC.BattleSeatPosInfo.PosInfo posinfo = 2;
  inline int posinfo_size() const;
  inline void clear_posinfo();
  static const int kPosinfoFieldNumber = 2;
  inline const ::GSToGC::BattleSeatPosInfo_PosInfo& posinfo(int index) const;
  inline ::GSToGC::BattleSeatPosInfo_PosInfo* mutable_posinfo(int index);
  inline ::GSToGC::BattleSeatPosInfo_PosInfo* add_posinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::BattleSeatPosInfo_PosInfo >&
      posinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::BattleSeatPosInfo_PosInfo >*
      mutable_posinfo();

  // @@protoc_insertion_point(class_scope:GSToGC.BattleSeatPosInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::BattleSeatPosInfo_PosInfo > posinfo_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static BattleSeatPosInfo* default_instance_;
};
// -------------------------------------------------------------------

class BattleStateChange : public ::google::protobuf::Message {
 public:
  BattleStateChange();
  virtual ~BattleStateChange();

  BattleStateChange(const BattleStateChange& from);

  inline BattleStateChange& operator=(const BattleStateChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleStateChange& default_instance();

  void Swap(BattleStateChange* other);

  // implements Message ----------------------------------------------

  BattleStateChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleStateChange& from);
  void MergeFrom(const BattleStateChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBattleStateChange];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 statetimeleft = 3;
  inline bool has_statetimeleft() const;
  inline void clear_statetimeleft();
  static const int kStatetimeleftFieldNumber = 3;
  inline ::google::protobuf::int32 statetimeleft() const;
  inline void set_statetimeleft(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.BattleStateChange)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_statetimeleft();
  inline void clear_has_statetimeleft();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 statetimeleft_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static BattleStateChange* default_instance_;
};
// -------------------------------------------------------------------

class CurBattleChange : public ::google::protobuf::Message {
 public:
  CurBattleChange();
  virtual ~CurBattleChange();

  CurBattleChange(const CurBattleChange& from);

  inline CurBattleChange& operator=(const CurBattleChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CurBattleChange& default_instance();

  void Swap(CurBattleChange* other);

  // implements Message ----------------------------------------------

  CurBattleChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CurBattleChange& from);
  void MergeFrom(const CurBattleChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyCurBattleChange];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int32 ssid = 2;
  inline bool has_ssid() const;
  inline void clear_ssid();
  static const int kSsidFieldNumber = 2;
  inline ::google::protobuf::int32 ssid() const;
  inline void set_ssid(::google::protobuf::int32 value);

  // optional uint64 battleid = 3;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleidFieldNumber = 3;
  inline ::google::protobuf::uint64 battleid() const;
  inline void set_battleid(::google::protobuf::uint64 value);

  // optional int32 mapid = 4;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 4;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.CurBattleChange)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_ssid();
  inline void clear_has_ssid();
  inline void set_has_battleid();
  inline void clear_has_battleid();
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::int32 ssid_;
  ::google::protobuf::uint64 battleid_;
  ::google::protobuf::int32 mapid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static CurBattleChange* default_instance_;
};
// -------------------------------------------------------------------

class Pos : public ::google::protobuf::Message {
 public:
  Pos();
  virtual ~Pos();

  Pos(const Pos& from);

  inline Pos& operator=(const Pos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Pos& default_instance();

  void Swap(Pos* other);

  // implements Message ----------------------------------------------

  Pos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Pos& from);
  void MergeFrom(const Pos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);

  // optional int32 z = 3;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 3;
  inline ::google::protobuf::int32 z() const;
  inline void set_z(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.Pos)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_z();
  inline void clear_has_z();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 z_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static Pos* default_instance_;
};
// -------------------------------------------------------------------

class Dir : public ::google::protobuf::Message {
 public:
  Dir();
  virtual ~Dir();

  Dir(const Dir& from);

  inline Dir& operator=(const Dir& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Dir& default_instance();

  void Swap(Dir* other);

  // implements Message ----------------------------------------------

  Dir* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Dir& from);
  void MergeFrom(const Dir& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 angle = 4;
  inline bool has_angle() const;
  inline void clear_angle();
  static const int kAngleFieldNumber = 4;
  inline ::google::protobuf::int32 angle() const;
  inline void set_angle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.Dir)
 private:
  inline void set_has_angle();
  inline void clear_has_angle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 angle_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static Dir* default_instance_;
};
// -------------------------------------------------------------------

class GOAppear_AppearInfo : public ::google::protobuf::Message {
 public:
  GOAppear_AppearInfo();
  virtual ~GOAppear_AppearInfo();

  GOAppear_AppearInfo(const GOAppear_AppearInfo& from);

  inline GOAppear_AppearInfo& operator=(const GOAppear_AppearInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GOAppear_AppearInfo& default_instance();

  void Swap(GOAppear_AppearInfo* other);

  // implements Message ----------------------------------------------

  GOAppear_AppearInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GOAppear_AppearInfo& from);
  void MergeFrom(const GOAppear_AppearInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 masterguid = 1;
  inline bool has_masterguid() const;
  inline void clear_masterguid();
  static const int kMasterguidFieldNumber = 1;
  inline ::google::protobuf::uint64 masterguid() const;
  inline void set_masterguid(::google::protobuf::uint64 value);

  // optional uint64 objguid = 2;
  inline bool has_objguid() const;
  inline void clear_objguid();
  static const int kObjguidFieldNumber = 2;
  inline ::google::protobuf::uint64 objguid() const;
  inline void set_objguid(::google::protobuf::uint64 value);

  // optional int32 camp = 3;
  inline bool has_camp() const;
  inline void clear_camp();
  static const int kCampFieldNumber = 3;
  inline ::google::protobuf::int32 camp() const;
  inline void set_camp(::google::protobuf::int32 value);

  // optional .GSToGC.Pos pos = 4;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 4;
  inline const ::GSToGC::Pos& pos() const;
  inline ::GSToGC::Pos* mutable_pos();
  inline ::GSToGC::Pos* release_pos();
  inline void set_allocated_pos(::GSToGC::Pos* pos);

  // optional .GSToGC.Dir dir = 5;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 5;
  inline const ::GSToGC::Dir& dir() const;
  inline ::GSToGC::Dir* mutable_dir();
  inline ::GSToGC::Dir* release_dir();
  inline void set_allocated_dir(::GSToGC::Dir* dir);

  // optional uint32 hp = 6;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 6;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);

  // optional uint32 mp = 7;
  inline bool has_mp() const;
  inline void clear_mp();
  static const int kMpFieldNumber = 7;
  inline ::google::protobuf::uint32 mp() const;
  inline void set_mp(::google::protobuf::uint32 value);

  // optional .GSToGC.ObjType obj_type = 8;
  inline bool has_obj_type() const;
  inline void clear_obj_type();
  static const int kObjTypeFieldNumber = 8;
  inline ::GSToGC::ObjType obj_type() const;
  inline void set_obj_type(::GSToGC::ObjType value);

  // optional uint32 obj_type_id = 9;
  inline bool has_obj_type_id() const;
  inline void clear_obj_type_id();
  static const int kObjTypeIdFieldNumber = 9;
  inline ::google::protobuf::uint32 obj_type_id() const;
  inline void set_obj_type_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.GOAppear.AppearInfo)
 private:
  inline void set_has_masterguid();
  inline void clear_has_masterguid();
  inline void set_has_objguid();
  inline void clear_has_objguid();
  inline void set_has_camp();
  inline void clear_has_camp();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_mp();
  inline void clear_has_mp();
  inline void set_has_obj_type();
  inline void clear_has_obj_type();
  inline void set_has_obj_type_id();
  inline void clear_has_obj_type_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 masterguid_;
  ::google::protobuf::uint64 objguid_;
  ::GSToGC::Pos* pos_;
  ::google::protobuf::int32 camp_;
  ::google::protobuf::uint32 hp_;
  ::GSToGC::Dir* dir_;
  ::google::protobuf::uint32 mp_;
  int obj_type_;
  ::google::protobuf::uint32 obj_type_id_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static GOAppear_AppearInfo* default_instance_;
};
// -------------------------------------------------------------------

class GOAppear : public ::google::protobuf::Message {
 public:
  GOAppear();
  virtual ~GOAppear();

  GOAppear(const GOAppear& from);

  inline GOAppear& operator=(const GOAppear& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GOAppear& default_instance();

  void Swap(GOAppear* other);

  // implements Message ----------------------------------------------

  GOAppear* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GOAppear& from);
  void MergeFrom(const GOAppear& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GOAppear_AppearInfo AppearInfo;

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGameObjectAppear];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // repeated .GSToGC.GOAppear.AppearInfo info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::GSToGC::GOAppear_AppearInfo& info(int index) const;
  inline ::GSToGC::GOAppear_AppearInfo* mutable_info(int index);
  inline ::GSToGC::GOAppear_AppearInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::GOAppear_AppearInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::GOAppear_AppearInfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:GSToGC.GOAppear)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::GOAppear_AppearInfo > info_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static GOAppear* default_instance_;
};
// -------------------------------------------------------------------

class DisappearInfo : public ::google::protobuf::Message {
 public:
  DisappearInfo();
  virtual ~DisappearInfo();

  DisappearInfo(const DisappearInfo& from);

  inline DisappearInfo& operator=(const DisappearInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DisappearInfo& default_instance();

  void Swap(DisappearInfo* other);

  // implements Message ----------------------------------------------

  DisappearInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DisappearInfo& from);
  void MergeFrom(const DisappearInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGameObjectDisappear];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // repeated uint64 guid = 2;
  inline int guid_size() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid(int index) const;
  inline void set_guid(int index, ::google::protobuf::uint64 value);
  inline void add_guid(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      guid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_guid();

  // @@protoc_insertion_point(class_scope:GSToGC.DisappearInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > guid_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static DisappearInfo* default_instance_;
};
// -------------------------------------------------------------------

class FreeState : public ::google::protobuf::Message {
 public:
  FreeState();
  virtual ~FreeState();

  FreeState(const FreeState& from);

  inline FreeState& operator=(const FreeState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FreeState& default_instance();

  void Swap(FreeState* other);

  // implements Message ----------------------------------------------

  FreeState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FreeState& from);
  void MergeFrom(const FreeState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGameObjectFreeState];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 objguid = 2;
  inline bool has_objguid() const;
  inline void clear_objguid();
  static const int kObjguidFieldNumber = 2;
  inline ::google::protobuf::uint64 objguid() const;
  inline void set_objguid(::google::protobuf::uint64 value);

  // optional .GSToGC.Pos pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline const ::GSToGC::Pos& pos() const;
  inline ::GSToGC::Pos* mutable_pos();
  inline ::GSToGC::Pos* release_pos();
  inline void set_allocated_pos(::GSToGC::Pos* pos);

  // optional .GSToGC.Dir dir = 4;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 4;
  inline const ::GSToGC::Dir& dir() const;
  inline ::GSToGC::Dir* mutable_dir();
  inline ::GSToGC::Dir* release_dir();
  inline void set_allocated_dir(::GSToGC::Dir* dir);

  // @@protoc_insertion_point(class_scope:GSToGC.FreeState)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_objguid();
  inline void clear_has_objguid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_dir();
  inline void clear_has_dir();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 objguid_;
  ::GSToGC::Pos* pos_;
  ::GSToGC::Dir* dir_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static FreeState* default_instance_;
};
// -------------------------------------------------------------------

class RunningState : public ::google::protobuf::Message {
 public:
  RunningState();
  virtual ~RunningState();

  RunningState(const RunningState& from);

  inline RunningState& operator=(const RunningState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RunningState& default_instance();

  void Swap(RunningState* other);

  // implements Message ----------------------------------------------

  RunningState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RunningState& from);
  void MergeFrom(const RunningState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGameObjectRunState];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 objguid = 2;
  inline bool has_objguid() const;
  inline void clear_objguid();
  static const int kObjguidFieldNumber = 2;
  inline ::google::protobuf::uint64 objguid() const;
  inline void set_objguid(::google::protobuf::uint64 value);

  // optional .GSToGC.Pos pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline const ::GSToGC::Pos& pos() const;
  inline ::GSToGC::Pos* mutable_pos();
  inline ::GSToGC::Pos* release_pos();
  inline void set_allocated_pos(::GSToGC::Pos* pos);

  // optional .GSToGC.Dir dir = 4;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 4;
  inline const ::GSToGC::Dir& dir() const;
  inline ::GSToGC::Dir* mutable_dir();
  inline ::GSToGC::Dir* release_dir();
  inline void set_allocated_dir(::GSToGC::Dir* dir);

  // optional int32 movespeed = 5;
  inline bool has_movespeed() const;
  inline void clear_movespeed();
  static const int kMovespeedFieldNumber = 5;
  inline ::google::protobuf::int32 movespeed() const;
  inline void set_movespeed(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.RunningState)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_objguid();
  inline void clear_has_objguid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_movespeed();
  inline void clear_has_movespeed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 objguid_;
  ::GSToGC::Pos* pos_;
  int msgid_;
  ::google::protobuf::int32 movespeed_;
  ::GSToGC::Dir* dir_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static RunningState* default_instance_;
};
// -------------------------------------------------------------------

class PrepareSkillState : public ::google::protobuf::Message {
 public:
  PrepareSkillState();
  virtual ~PrepareSkillState();

  PrepareSkillState(const PrepareSkillState& from);

  inline PrepareSkillState& operator=(const PrepareSkillState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PrepareSkillState& default_instance();

  void Swap(PrepareSkillState* other);

  // implements Message ----------------------------------------------

  PrepareSkillState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrepareSkillState& from);
  void MergeFrom(const PrepareSkillState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGameObjectPrepareSkillState];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 objguid = 2;
  inline bool has_objguid() const;
  inline void clear_objguid();
  static const int kObjguidFieldNumber = 2;
  inline ::google::protobuf::uint64 objguid() const;
  inline void set_objguid(::google::protobuf::uint64 value);

  // optional int32 skillid = 3;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 3;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // optional .GSToGC.Pos pos = 4;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 4;
  inline const ::GSToGC::Pos& pos() const;
  inline ::GSToGC::Pos* mutable_pos();
  inline ::GSToGC::Pos* release_pos();
  inline void set_allocated_pos(::GSToGC::Pos* pos);

  // optional .GSToGC.Dir dir = 5;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 5;
  inline const ::GSToGC::Dir& dir() const;
  inline ::GSToGC::Dir* mutable_dir();
  inline ::GSToGC::Dir* release_dir();
  inline void set_allocated_dir(::GSToGC::Dir* dir);

  // optional uint64 targuid = 6;
  inline bool has_targuid() const;
  inline void clear_targuid();
  static const int kTarguidFieldNumber = 6;
  inline ::google::protobuf::uint64 targuid() const;
  inline void set_targuid(::google::protobuf::uint64 value);

  // optional int32 speed = 7;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 7;
  inline ::google::protobuf::int32 speed() const;
  inline void set_speed(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.PrepareSkillState)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_objguid();
  inline void clear_has_objguid();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_targuid();
  inline void clear_has_targuid();
  inline void set_has_speed();
  inline void clear_has_speed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 objguid_;
  int msgid_;
  ::google::protobuf::int32 skillid_;
  ::GSToGC::Pos* pos_;
  ::GSToGC::Dir* dir_;
  ::google::protobuf::uint64 targuid_;
  ::google::protobuf::int32 speed_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static PrepareSkillState* default_instance_;
};
// -------------------------------------------------------------------

class ReleasingSkillState : public ::google::protobuf::Message {
 public:
  ReleasingSkillState();
  virtual ~ReleasingSkillState();

  ReleasingSkillState(const ReleasingSkillState& from);

  inline ReleasingSkillState& operator=(const ReleasingSkillState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReleasingSkillState& default_instance();

  void Swap(ReleasingSkillState* other);

  // implements Message ----------------------------------------------

  ReleasingSkillState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReleasingSkillState& from);
  void MergeFrom(const ReleasingSkillState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGameObjectReleaseSkillState];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 objguid = 2;
  inline bool has_objguid() const;
  inline void clear_objguid();
  static const int kObjguidFieldNumber = 2;
  inline ::google::protobuf::uint64 objguid() const;
  inline void set_objguid(::google::protobuf::uint64 value);

  // optional int32 skillid = 3;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 3;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // optional .GSToGC.Pos pos = 4;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 4;
  inline const ::GSToGC::Pos& pos() const;
  inline ::GSToGC::Pos* mutable_pos();
  inline ::GSToGC::Pos* release_pos();
  inline void set_allocated_pos(::GSToGC::Pos* pos);

  // optional .GSToGC.Dir dir = 5;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 5;
  inline const ::GSToGC::Dir& dir() const;
  inline ::GSToGC::Dir* mutable_dir();
  inline ::GSToGC::Dir* release_dir();
  inline void set_allocated_dir(::GSToGC::Dir* dir);

  // optional uint64 targuid = 6;
  inline bool has_targuid() const;
  inline void clear_targuid();
  static const int kTarguidFieldNumber = 6;
  inline ::google::protobuf::uint64 targuid() const;
  inline void set_targuid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:GSToGC.ReleasingSkillState)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_objguid();
  inline void clear_has_objguid();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_targuid();
  inline void clear_has_targuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 objguid_;
  int msgid_;
  ::google::protobuf::int32 skillid_;
  ::GSToGC::Pos* pos_;
  ::GSToGC::Dir* dir_;
  ::google::protobuf::uint64 targuid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static ReleasingSkillState* default_instance_;
};
// -------------------------------------------------------------------

class UsingSkillState : public ::google::protobuf::Message {
 public:
  UsingSkillState();
  virtual ~UsingSkillState();

  UsingSkillState(const UsingSkillState& from);

  inline UsingSkillState& operator=(const UsingSkillState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UsingSkillState& default_instance();

  void Swap(UsingSkillState* other);

  // implements Message ----------------------------------------------

  UsingSkillState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UsingSkillState& from);
  void MergeFrom(const UsingSkillState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGameObjectUsingSkillState];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 objguid = 2;
  inline bool has_objguid() const;
  inline void clear_objguid();
  static const int kObjguidFieldNumber = 2;
  inline ::google::protobuf::uint64 objguid() const;
  inline void set_objguid(::google::protobuf::uint64 value);

  // optional int32 skillid = 3;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 3;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // optional .GSToGC.Pos pos = 4;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 4;
  inline const ::GSToGC::Pos& pos() const;
  inline ::GSToGC::Pos* mutable_pos();
  inline ::GSToGC::Pos* release_pos();
  inline void set_allocated_pos(::GSToGC::Pos* pos);

  // optional .GSToGC.Dir dir = 5;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 5;
  inline const ::GSToGC::Dir& dir() const;
  inline ::GSToGC::Dir* mutable_dir();
  inline ::GSToGC::Dir* release_dir();
  inline void set_allocated_dir(::GSToGC::Dir* dir);

  // optional uint64 targuid = 6;
  inline bool has_targuid() const;
  inline void clear_targuid();
  static const int kTarguidFieldNumber = 6;
  inline ::google::protobuf::uint64 targuid() const;
  inline void set_targuid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:GSToGC.UsingSkillState)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_objguid();
  inline void clear_has_objguid();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_targuid();
  inline void clear_has_targuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 objguid_;
  int msgid_;
  ::google::protobuf::int32 skillid_;
  ::GSToGC::Pos* pos_;
  ::GSToGC::Dir* dir_;
  ::google::protobuf::uint64 targuid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static UsingSkillState* default_instance_;
};
// -------------------------------------------------------------------

class LastingSkillState : public ::google::protobuf::Message {
 public:
  LastingSkillState();
  virtual ~LastingSkillState();

  LastingSkillState(const LastingSkillState& from);

  inline LastingSkillState& operator=(const LastingSkillState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LastingSkillState& default_instance();

  void Swap(LastingSkillState* other);

  // implements Message ----------------------------------------------

  LastingSkillState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LastingSkillState& from);
  void MergeFrom(const LastingSkillState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGameObjectLastingSkillState];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 objguid = 2;
  inline bool has_objguid() const;
  inline void clear_objguid();
  static const int kObjguidFieldNumber = 2;
  inline ::google::protobuf::uint64 objguid() const;
  inline void set_objguid(::google::protobuf::uint64 value);

  // optional int32 skillid = 3;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 3;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // optional .GSToGC.Pos pos = 4;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 4;
  inline const ::GSToGC::Pos& pos() const;
  inline ::GSToGC::Pos* mutable_pos();
  inline ::GSToGC::Pos* release_pos();
  inline void set_allocated_pos(::GSToGC::Pos* pos);

  // optional .GSToGC.Dir dir = 5;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 5;
  inline const ::GSToGC::Dir& dir() const;
  inline ::GSToGC::Dir* mutable_dir();
  inline ::GSToGC::Dir* release_dir();
  inline void set_allocated_dir(::GSToGC::Dir* dir);

  // optional uint64 targuid = 6;
  inline bool has_targuid() const;
  inline void clear_targuid();
  static const int kTarguidFieldNumber = 6;
  inline ::google::protobuf::uint64 targuid() const;
  inline void set_targuid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:GSToGC.LastingSkillState)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_objguid();
  inline void clear_has_objguid();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_targuid();
  inline void clear_has_targuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 objguid_;
  int msgid_;
  ::google::protobuf::int32 skillid_;
  ::GSToGC::Pos* pos_;
  ::GSToGC::Dir* dir_;
  ::google::protobuf::uint64 targuid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static LastingSkillState* default_instance_;
};
// -------------------------------------------------------------------

class DeadState : public ::google::protobuf::Message {
 public:
  DeadState();
  virtual ~DeadState();

  DeadState(const DeadState& from);

  inline DeadState& operator=(const DeadState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeadState& default_instance();

  void Swap(DeadState* other);

  // implements Message ----------------------------------------------

  DeadState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeadState& from);
  void MergeFrom(const DeadState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGameObjectDeadState];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 objguid = 2;
  inline bool has_objguid() const;
  inline void clear_objguid();
  static const int kObjguidFieldNumber = 2;
  inline ::google::protobuf::uint64 objguid() const;
  inline void set_objguid(::google::protobuf::uint64 value);

  // optional .GSToGC.Pos pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline const ::GSToGC::Pos& pos() const;
  inline ::GSToGC::Pos* mutable_pos();
  inline ::GSToGC::Pos* release_pos();
  inline void set_allocated_pos(::GSToGC::Pos* pos);

  // optional .GSToGC.Dir dir = 4;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 4;
  inline const ::GSToGC::Dir& dir() const;
  inline ::GSToGC::Dir* mutable_dir();
  inline ::GSToGC::Dir* release_dir();
  inline void set_allocated_dir(::GSToGC::Dir* dir);

  // optional bool spot = 5;
  inline bool has_spot() const;
  inline void clear_spot();
  static const int kSpotFieldNumber = 5;
  inline bool spot() const;
  inline void set_spot(bool value);

  // @@protoc_insertion_point(class_scope:GSToGC.DeadState)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_objguid();
  inline void clear_has_objguid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_spot();
  inline void clear_has_spot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 objguid_;
  ::GSToGC::Pos* pos_;
  int msgid_;
  bool spot_;
  ::GSToGC::Dir* dir_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static DeadState* default_instance_;
};
// -------------------------------------------------------------------

class NotifyGoodsInfo_GoodsInfo : public ::google::protobuf::Message {
 public:
  NotifyGoodsInfo_GoodsInfo();
  virtual ~NotifyGoodsInfo_GoodsInfo();

  NotifyGoodsInfo_GoodsInfo(const NotifyGoodsInfo_GoodsInfo& from);

  inline NotifyGoodsInfo_GoodsInfo& operator=(const NotifyGoodsInfo_GoodsInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyGoodsInfo_GoodsInfo& default_instance();

  void Swap(NotifyGoodsInfo_GoodsInfo* other);

  // implements Message ----------------------------------------------

  NotifyGoodsInfo_GoodsInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyGoodsInfo_GoodsInfo& from);
  void MergeFrom(const NotifyGoodsInfo_GoodsInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // optional bool ifComposed = 3;
  inline bool has_ifcomposed() const;
  inline void clear_ifcomposed();
  static const int kIfComposedFieldNumber = 3;
  inline bool ifcomposed() const;
  inline void set_ifcomposed(bool value);

  // optional int32 tyepid = 4;
  inline bool has_tyepid() const;
  inline void clear_tyepid();
  static const int kTyepidFieldNumber = 4;
  inline ::google::protobuf::int32 tyepid() const;
  inline void set_tyepid(::google::protobuf::int32 value);

  // optional int32 state = 5;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 5;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 statetime = 6;
  inline bool has_statetime() const;
  inline void clear_statetime();
  static const int kStatetimeFieldNumber = 6;
  inline ::google::protobuf::int32 statetime() const;
  inline void set_statetime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyGoodsInfo.GoodsInfo)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_ifcomposed();
  inline void clear_has_ifcomposed();
  inline void set_has_tyepid();
  inline void clear_has_tyepid();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_statetime();
  inline void clear_has_statetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 pos_;
  bool ifcomposed_;
  ::google::protobuf::int32 tyepid_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 statetime_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyGoodsInfo_GoodsInfo* default_instance_;
};
// -------------------------------------------------------------------

class NotifyGoodsInfo : public ::google::protobuf::Message {
 public:
  NotifyGoodsInfo();
  virtual ~NotifyGoodsInfo();

  NotifyGoodsInfo(const NotifyGoodsInfo& from);

  inline NotifyGoodsInfo& operator=(const NotifyGoodsInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyGoodsInfo& default_instance();

  void Swap(NotifyGoodsInfo* other);

  // implements Message ----------------------------------------------

  NotifyGoodsInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyGoodsInfo& from);
  void MergeFrom(const NotifyGoodsInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef NotifyGoodsInfo_GoodsInfo GoodsInfo;

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGoodsInf];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // repeated .GSToGC.NotifyGoodsInfo.GoodsInfo info = 3;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 3;
  inline const ::GSToGC::NotifyGoodsInfo_GoodsInfo& info(int index) const;
  inline ::GSToGC::NotifyGoodsInfo_GoodsInfo* mutable_info(int index);
  inline ::GSToGC::NotifyGoodsInfo_GoodsInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyGoodsInfo_GoodsInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyGoodsInfo_GoodsInfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyGoodsInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyGoodsInfo_GoodsInfo > info_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyGoodsInfo* default_instance_;
};
// -------------------------------------------------------------------

class BattleLoadingState : public ::google::protobuf::Message {
 public:
  BattleLoadingState();
  virtual ~BattleLoadingState();

  BattleLoadingState(const BattleLoadingState& from);

  inline BattleLoadingState& operator=(const BattleLoadingState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleLoadingState& default_instance();

  void Swap(BattleLoadingState* other);

  // implements Message ----------------------------------------------

  BattleLoadingState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleLoadingState& from);
  void MergeFrom(const BattleLoadingState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBattleLoadingState];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::int64 guid() const;
  inline void set_guid(::google::protobuf::int64 value);

  // optional int32 loadper = 3;
  inline bool has_loadper() const;
  inline void clear_loadper();
  static const int kLoadperFieldNumber = 3;
  inline ::google::protobuf::int32 loadper() const;
  inline void set_loadper(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.BattleLoadingState)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_loadper();
  inline void clear_has_loadper();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 guid_;
  int msgid_;
  ::google::protobuf::int32 loadper_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static BattleLoadingState* default_instance_;
};
// -------------------------------------------------------------------

class HeroPosInfo : public ::google::protobuf::Message {
 public:
  HeroPosInfo();
  virtual ~HeroPosInfo();

  HeroPosInfo(const HeroPosInfo& from);

  inline HeroPosInfo& operator=(const HeroPosInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroPosInfo& default_instance();

  void Swap(HeroPosInfo* other);

  // implements Message ----------------------------------------------

  HeroPosInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroPosInfo& from);
  void MergeFrom(const HeroPosInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // optional int32 heroid = 3;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 3;
  inline ::google::protobuf::int32 heroid() const;
  inline void set_heroid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.HeroPosInfo)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_heroid();
  inline void clear_has_heroid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 heroid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static HeroPosInfo* default_instance_;
};
// -------------------------------------------------------------------

class HeroInfo : public ::google::protobuf::Message {
 public:
  HeroInfo();
  virtual ~HeroInfo();

  HeroInfo(const HeroInfo& from);

  inline HeroInfo& operator=(const HeroInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroInfo& default_instance();

  void Swap(HeroInfo* other);

  // implements Message ----------------------------------------------

  HeroInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroInfo& from);
  void MergeFrom(const HeroInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBattleHeroInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional .GSToGC.HeroPosInfo heroposinfo = 2;
  inline bool has_heroposinfo() const;
  inline void clear_heroposinfo();
  static const int kHeroposinfoFieldNumber = 2;
  inline const ::GSToGC::HeroPosInfo& heroposinfo() const;
  inline ::GSToGC::HeroPosInfo* mutable_heroposinfo();
  inline ::GSToGC::HeroPosInfo* release_heroposinfo();
  inline void set_allocated_heroposinfo(::GSToGC::HeroPosInfo* heroposinfo);

  // @@protoc_insertion_point(class_scope:GSToGC.HeroInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_heroposinfo();
  inline void clear_has_heroposinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::GSToGC::HeroPosInfo* heroposinfo_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static HeroInfo* default_instance_;
};
// -------------------------------------------------------------------

class ChatInRoom : public ::google::protobuf::Message {
 public:
  ChatInRoom();
  virtual ~ChatInRoom();

  ChatInRoom(const ChatInRoom& from);

  inline ChatInRoom& operator=(const ChatInRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatInRoom& default_instance();

  void Swap(ChatInRoom* other);

  // implements Message ----------------------------------------------

  ChatInRoom* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChatInRoom& from);
  void MergeFrom(const ChatInRoom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_ChatInRoom];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // optional string chat = 3;
  inline bool has_chat() const;
  inline void clear_chat();
  static const int kChatFieldNumber = 3;
  inline const ::std::string& chat() const;
  inline void set_chat(const ::std::string& value);
  inline void set_chat(const char* value);
  inline void set_chat(const char* value, size_t size);
  inline ::std::string* mutable_chat();
  inline ::std::string* release_chat();
  inline void set_allocated_chat(::std::string* chat);

  // @@protoc_insertion_point(class_scope:GSToGC.ChatInRoom)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_chat();
  inline void clear_has_chat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::int32 pos_;
  ::std::string* chat_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static ChatInRoom* default_instance_;
};
// -------------------------------------------------------------------

class SkillHitTar : public ::google::protobuf::Message {
 public:
  SkillHitTar();
  virtual ~SkillHitTar();

  SkillHitTar(const SkillHitTar& from);

  inline SkillHitTar& operator=(const SkillHitTar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillHitTar& default_instance();

  void Swap(SkillHitTar* other);

  // implements Message ----------------------------------------------

  SkillHitTar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillHitTar& from);
  void MergeFrom(const SkillHitTar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillHitTarget];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::int64 guid() const;
  inline void set_guid(::google::protobuf::int64 value);

  // optional int32 skillid = 3;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 3;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // optional int64 targuid = 4;
  inline bool has_targuid() const;
  inline void clear_targuid();
  static const int kTarguidFieldNumber = 4;
  inline ::google::protobuf::int64 targuid() const;
  inline void set_targuid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GSToGC.SkillHitTar)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_targuid();
  inline void clear_has_targuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 guid_;
  int msgid_;
  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int64 targuid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static SkillHitTar* default_instance_;
};
// -------------------------------------------------------------------

class HPChange : public ::google::protobuf::Message {
 public:
  HPChange();
  virtual ~HPChange();

  HPChange(const HPChange& from);

  inline HPChange& operator=(const HPChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPChange& default_instance();

  void Swap(HPChange* other);

  // implements Message ----------------------------------------------

  HPChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPChange& from);
  void MergeFrom(const HPChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyHPChange];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 hp = 3;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 3;
  inline ::google::protobuf::int32 hp() const;
  inline void set_hp(::google::protobuf::int32 value);

  // optional .GSToGC.HPMPChangeReason reason = 4;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 4;
  inline ::GSToGC::HPMPChangeReason reason() const;
  inline void set_reason(::GSToGC::HPMPChangeReason value);

  // @@protoc_insertion_point(class_scope:GSToGC.HPChange)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_reason();
  inline void clear_has_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::int32 hp_;
  int reason_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static HPChange* default_instance_;
};
// -------------------------------------------------------------------

class MpChange : public ::google::protobuf::Message {
 public:
  MpChange();
  virtual ~MpChange();

  MpChange(const MpChange& from);

  inline MpChange& operator=(const MpChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MpChange& default_instance();

  void Swap(MpChange* other);

  // implements Message ----------------------------------------------

  MpChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MpChange& from);
  void MergeFrom(const MpChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyMPChange];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 mp = 3;
  inline bool has_mp() const;
  inline void clear_mp();
  static const int kMpFieldNumber = 3;
  inline ::google::protobuf::int32 mp() const;
  inline void set_mp(::google::protobuf::int32 value);

  // optional .GSToGC.HPMPChangeReason reason = 4;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 4;
  inline ::GSToGC::HPMPChangeReason reason() const;
  inline void set_reason(::GSToGC::HPMPChangeReason value);

  // @@protoc_insertion_point(class_scope:GSToGC.MpChange)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_mp();
  inline void clear_has_mp();
  inline void set_has_reason();
  inline void clear_has_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::int32 mp_;
  int reason_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static MpChange* default_instance_;
};
// -------------------------------------------------------------------

class TryToChooseHero : public ::google::protobuf::Message {
 public:
  TryToChooseHero();
  virtual ~TryToChooseHero();

  TryToChooseHero(const TryToChooseHero& from);

  inline TryToChooseHero& operator=(const TryToChooseHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TryToChooseHero& default_instance();

  void Swap(TryToChooseHero* other);

  // implements Message ----------------------------------------------

  TryToChooseHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TryToChooseHero& from);
  void MergeFrom(const TryToChooseHero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyTryToChooseHero];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // optional int32 heroid = 3;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 3;
  inline ::google::protobuf::int32 heroid() const;
  inline void set_heroid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.TryToChooseHero)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_heroid();
  inline void clear_has_heroid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 heroid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static TryToChooseHero* default_instance_;
};
// -------------------------------------------------------------------

class NotifyChooseHeroTimeEnd : public ::google::protobuf::Message {
 public:
  NotifyChooseHeroTimeEnd();
  virtual ~NotifyChooseHeroTimeEnd();

  NotifyChooseHeroTimeEnd(const NotifyChooseHeroTimeEnd& from);

  inline NotifyChooseHeroTimeEnd& operator=(const NotifyChooseHeroTimeEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyChooseHeroTimeEnd& default_instance();

  void Swap(NotifyChooseHeroTimeEnd* other);

  // implements Message ----------------------------------------------

  NotifyChooseHeroTimeEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyChooseHeroTimeEnd& from);
  void MergeFrom(const NotifyChooseHeroTimeEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyChooseHeroTimeEnd];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // repeated .GSToGC.HeroPosInfo heroposinfo = 2;
  inline int heroposinfo_size() const;
  inline void clear_heroposinfo();
  static const int kHeroposinfoFieldNumber = 2;
  inline const ::GSToGC::HeroPosInfo& heroposinfo(int index) const;
  inline ::GSToGC::HeroPosInfo* mutable_heroposinfo(int index);
  inline ::GSToGC::HeroPosInfo* add_heroposinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::HeroPosInfo >&
      heroposinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::HeroPosInfo >*
      mutable_heroposinfo();

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyChooseHeroTimeEnd)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::HeroPosInfo > heroposinfo_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyChooseHeroTimeEnd* default_instance_;
};
// -------------------------------------------------------------------

class SkillEntityInfo : public ::google::protobuf::Message {
 public:
  SkillEntityInfo();
  virtual ~SkillEntityInfo();

  SkillEntityInfo(const SkillEntityInfo& from);

  inline SkillEntityInfo& operator=(const SkillEntityInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillEntityInfo& default_instance();

  void Swap(SkillEntityInfo* other);

  // implements Message ----------------------------------------------

  SkillEntityInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillEntityInfo& from);
  void MergeFrom(const SkillEntityInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillEntityInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::int64 guid() const;
  inline void set_guid(::google::protobuf::int64 value);

  // optional int32 skillid = 3;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 3;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // optional .GSToGC.Dir dir = 4;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 4;
  inline const ::GSToGC::Dir& dir() const;
  inline ::GSToGC::Dir* mutable_dir();
  inline ::GSToGC::Dir* release_dir();
  inline void set_allocated_dir(::GSToGC::Dir* dir);

  // optional int64 targuid = 5;
  inline bool has_targuid() const;
  inline void clear_targuid();
  static const int kTarguidFieldNumber = 5;
  inline ::google::protobuf::int64 targuid() const;
  inline void set_targuid(::google::protobuf::int64 value);

  // optional int64 uniqueid = 6;
  inline bool has_uniqueid() const;
  inline void clear_uniqueid();
  static const int kUniqueidFieldNumber = 6;
  inline ::google::protobuf::int64 uniqueid() const;
  inline void set_uniqueid(::google::protobuf::int64 value);

  // optional .GSToGC.Dir tardir = 7;
  inline bool has_tardir() const;
  inline void clear_tardir();
  static const int kTardirFieldNumber = 7;
  inline const ::GSToGC::Dir& tardir() const;
  inline ::GSToGC::Dir* mutable_tardir();
  inline ::GSToGC::Dir* release_tardir();
  inline void set_allocated_tardir(::GSToGC::Dir* tardir);

  // @@protoc_insertion_point(class_scope:GSToGC.SkillEntityInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_targuid();
  inline void clear_has_targuid();
  inline void set_has_uniqueid();
  inline void clear_has_uniqueid();
  inline void set_has_tardir();
  inline void clear_has_tardir();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 guid_;
  int msgid_;
  ::google::protobuf::int32 skillid_;
  ::GSToGC::Dir* dir_;
  ::google::protobuf::int64 targuid_;
  ::google::protobuf::int64 uniqueid_;
  ::GSToGC::Dir* tardir_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static SkillEntityInfo* default_instance_;
};
// -------------------------------------------------------------------

class FPInfo : public ::google::protobuf::Message {
 public:
  FPInfo();
  virtual ~FPInfo();

  FPInfo(const FPInfo& from);

  inline FPInfo& operator=(const FPInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FPInfo& default_instance();

  void Swap(FPInfo* other);

  // implements Message ----------------------------------------------

  FPInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FPInfo& from);
  void MergeFrom(const FPInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyFightPropertyInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // repeated int32 info = 3;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 3;
  inline ::google::protobuf::int32 info(int index) const;
  inline void set_info(int index, ::google::protobuf::int32 value);
  inline void add_info(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      info() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:GSToGC.FPInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > info_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static FPInfo* default_instance_;
};
// -------------------------------------------------------------------

class NotifyHPInfo_HPInfo : public ::google::protobuf::Message {
 public:
  NotifyHPInfo_HPInfo();
  virtual ~NotifyHPInfo_HPInfo();

  NotifyHPInfo_HPInfo(const NotifyHPInfo_HPInfo& from);

  inline NotifyHPInfo_HPInfo& operator=(const NotifyHPInfo_HPInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyHPInfo_HPInfo& default_instance();

  void Swap(NotifyHPInfo_HPInfo* other);

  // implements Message ----------------------------------------------

  NotifyHPInfo_HPInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyHPInfo_HPInfo& from);
  void MergeFrom(const NotifyHPInfo_HPInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 curhp = 2;
  inline bool has_curhp() const;
  inline void clear_curhp();
  static const int kCurhpFieldNumber = 2;
  inline ::google::protobuf::int32 curhp() const;
  inline void set_curhp(::google::protobuf::int32 value);

  // optional int32 maxhp = 3;
  inline bool has_maxhp() const;
  inline void clear_maxhp();
  static const int kMaxhpFieldNumber = 3;
  inline ::google::protobuf::int32 maxhp() const;
  inline void set_maxhp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyHPInfo.HPInfo)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_curhp();
  inline void clear_has_curhp();
  inline void set_has_maxhp();
  inline void clear_has_maxhp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 curhp_;
  ::google::protobuf::int32 maxhp_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyHPInfo_HPInfo* default_instance_;
};
// -------------------------------------------------------------------

class NotifyHPInfo : public ::google::protobuf::Message {
 public:
  NotifyHPInfo();
  virtual ~NotifyHPInfo();

  NotifyHPInfo(const NotifyHPInfo& from);

  inline NotifyHPInfo& operator=(const NotifyHPInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyHPInfo& default_instance();

  void Swap(NotifyHPInfo* other);

  // implements Message ----------------------------------------------

  NotifyHPInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyHPInfo& from);
  void MergeFrom(const NotifyHPInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef NotifyHPInfo_HPInfo HPInfo;

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyHPInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // repeated .GSToGC.NotifyHPInfo.HPInfo hpinfo = 2;
  inline int hpinfo_size() const;
  inline void clear_hpinfo();
  static const int kHpinfoFieldNumber = 2;
  inline const ::GSToGC::NotifyHPInfo_HPInfo& hpinfo(int index) const;
  inline ::GSToGC::NotifyHPInfo_HPInfo* mutable_hpinfo(int index);
  inline ::GSToGC::NotifyHPInfo_HPInfo* add_hpinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyHPInfo_HPInfo >&
      hpinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyHPInfo_HPInfo >*
      mutable_hpinfo();

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyHPInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyHPInfo_HPInfo > hpinfo_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyHPInfo* default_instance_;
};
// -------------------------------------------------------------------

class NotifyMPInfo_MPInfo : public ::google::protobuf::Message {
 public:
  NotifyMPInfo_MPInfo();
  virtual ~NotifyMPInfo_MPInfo();

  NotifyMPInfo_MPInfo(const NotifyMPInfo_MPInfo& from);

  inline NotifyMPInfo_MPInfo& operator=(const NotifyMPInfo_MPInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyMPInfo_MPInfo& default_instance();

  void Swap(NotifyMPInfo_MPInfo* other);

  // implements Message ----------------------------------------------

  NotifyMPInfo_MPInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyMPInfo_MPInfo& from);
  void MergeFrom(const NotifyMPInfo_MPInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 curmp = 2;
  inline bool has_curmp() const;
  inline void clear_curmp();
  static const int kCurmpFieldNumber = 2;
  inline ::google::protobuf::int32 curmp() const;
  inline void set_curmp(::google::protobuf::int32 value);

  // optional int32 maxmp = 3;
  inline bool has_maxmp() const;
  inline void clear_maxmp();
  static const int kMaxmpFieldNumber = 3;
  inline ::google::protobuf::int32 maxmp() const;
  inline void set_maxmp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyMPInfo.MPInfo)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_curmp();
  inline void clear_has_curmp();
  inline void set_has_maxmp();
  inline void clear_has_maxmp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 curmp_;
  ::google::protobuf::int32 maxmp_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyMPInfo_MPInfo* default_instance_;
};
// -------------------------------------------------------------------

class NotifyMPInfo : public ::google::protobuf::Message {
 public:
  NotifyMPInfo();
  virtual ~NotifyMPInfo();

  NotifyMPInfo(const NotifyMPInfo& from);

  inline NotifyMPInfo& operator=(const NotifyMPInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyMPInfo& default_instance();

  void Swap(NotifyMPInfo* other);

  // implements Message ----------------------------------------------

  NotifyMPInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyMPInfo& from);
  void MergeFrom(const NotifyMPInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef NotifyMPInfo_MPInfo MPInfo;

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyMPInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // repeated .GSToGC.NotifyMPInfo.MPInfo mpinfo = 2;
  inline int mpinfo_size() const;
  inline void clear_mpinfo();
  static const int kMpinfoFieldNumber = 2;
  inline const ::GSToGC::NotifyMPInfo_MPInfo& mpinfo(int index) const;
  inline ::GSToGC::NotifyMPInfo_MPInfo* mutable_mpinfo(int index);
  inline ::GSToGC::NotifyMPInfo_MPInfo* add_mpinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyMPInfo_MPInfo >&
      mpinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyMPInfo_MPInfo >*
      mutable_mpinfo();

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyMPInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyMPInfo_MPInfo > mpinfo_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyMPInfo* default_instance_;
};
// -------------------------------------------------------------------

class NotifyHeroInfo : public ::google::protobuf::Message {
 public:
  NotifyHeroInfo();
  virtual ~NotifyHeroInfo();

  NotifyHeroInfo(const NotifyHeroInfo& from);

  inline NotifyHeroInfo& operator=(const NotifyHeroInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyHeroInfo& default_instance();

  void Swap(NotifyHeroInfo* other);

  // implements Message ----------------------------------------------

  NotifyHeroInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyHeroInfo& from);
  void MergeFrom(const NotifyHeroInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyHeroInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 exp = 4;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 4;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 fury = 5;
  inline bool has_fury() const;
  inline void clear_fury();
  static const int kFuryFieldNumber = 5;
  inline ::google::protobuf::int32 fury() const;
  inline void set_fury(::google::protobuf::int32 value);

  // optional int32 absorb1 = 6;
  inline bool has_absorb1() const;
  inline void clear_absorb1();
  static const int kAbsorb1FieldNumber = 6;
  inline ::google::protobuf::int32 absorb1() const;
  inline void set_absorb1(::google::protobuf::int32 value);

  // optional int32 absorb2 = 7;
  inline bool has_absorb2() const;
  inline void clear_absorb2();
  static const int kAbsorb2FieldNumber = 7;
  inline ::google::protobuf::int32 absorb2() const;
  inline void set_absorb2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyHeroInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_fury();
  inline void clear_has_fury();
  inline void set_has_absorb1();
  inline void clear_has_absorb1();
  inline void set_has_absorb2();
  inline void clear_has_absorb2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 fury_;
  ::google::protobuf::int32 absorb1_;
  ::google::protobuf::int32 absorb2_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyHeroInfo* default_instance_;
};
// -------------------------------------------------------------------

class NotifySkillInfo : public ::google::protobuf::Message {
 public:
  NotifySkillInfo();
  virtual ~NotifySkillInfo();

  NotifySkillInfo(const NotifySkillInfo& from);

  inline NotifySkillInfo& operator=(const NotifySkillInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifySkillInfo& default_instance();

  void Swap(NotifySkillInfo* other);

  // implements Message ----------------------------------------------

  NotifySkillInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifySkillInfo& from);
  void MergeFrom(const NotifySkillInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 skillslot = 3;
  inline bool has_skillslot() const;
  inline void clear_skillslot();
  static const int kSkillslotFieldNumber = 3;
  inline ::google::protobuf::int32 skillslot() const;
  inline void set_skillslot(::google::protobuf::int32 value);

  // optional int32 skillid = 4;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 4;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // optional int32 time = 5;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 5;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifySkillInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_skillslot();
  inline void clear_has_skillslot();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::int32 skillslot_;
  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int32 time_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifySkillInfo* default_instance_;
};
// -------------------------------------------------------------------

class BattleFinish : public ::google::protobuf::Message {
 public:
  BattleFinish();
  virtual ~BattleFinish();

  BattleFinish(const BattleFinish& from);

  inline BattleFinish& operator=(const BattleFinish& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleFinish& default_instance();

  void Swap(BattleFinish* other);

  // implements Message ----------------------------------------------

  BattleFinish* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleFinish& from);
  void MergeFrom(const BattleFinish& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBattleFinish];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 bulidguid = 2;
  inline bool has_bulidguid() const;
  inline void clear_bulidguid();
  static const int kBulidguidFieldNumber = 2;
  inline ::google::protobuf::uint64 bulidguid() const;
  inline void set_bulidguid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:GSToGC.BattleFinish)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_bulidguid();
  inline void clear_has_bulidguid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 bulidguid_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static BattleFinish* default_instance_;
};
// -------------------------------------------------------------------

class Exp : public ::google::protobuf::Message {
 public:
  Exp();
  virtual ~Exp();

  Exp(const Exp& from);

  inline Exp& operator=(const Exp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Exp& default_instance();

  void Swap(Exp* other);

  // implements Message ----------------------------------------------

  Exp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Exp& from);
  void MergeFrom(const Exp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyExpInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.Exp)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::int32 exp_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static Exp* default_instance_;
};
// -------------------------------------------------------------------

class LevelInfo : public ::google::protobuf::Message {
 public:
  LevelInfo();
  virtual ~LevelInfo();

  LevelInfo(const LevelInfo& from);

  inline LevelInfo& operator=(const LevelInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LevelInfo& default_instance();

  void Swap(LevelInfo* other);

  // implements Message ----------------------------------------------

  LevelInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LevelInfo& from);
  void MergeFrom(const LevelInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyHeroLevelInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.LevelInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::int32 level_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static LevelInfo* default_instance_;
};
// -------------------------------------------------------------------

class AbsorbBegin : public ::google::protobuf::Message {
 public:
  AbsorbBegin();
  virtual ~AbsorbBegin();

  AbsorbBegin(const AbsorbBegin& from);

  inline AbsorbBegin& operator=(const AbsorbBegin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AbsorbBegin& default_instance();

  void Swap(AbsorbBegin* other);

  // implements Message ----------------------------------------------

  AbsorbBegin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AbsorbBegin& from);
  void MergeFrom(const AbsorbBegin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyAbsorbBegin];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional uint64 monsterguid = 3;
  inline bool has_monsterguid() const;
  inline void clear_monsterguid();
  static const int kMonsterguidFieldNumber = 3;
  inline ::google::protobuf::uint64 monsterguid() const;
  inline void set_monsterguid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:GSToGC.AbsorbBegin)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_monsterguid();
  inline void clear_has_monsterguid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 monsterguid_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static AbsorbBegin* default_instance_;
};
// -------------------------------------------------------------------

class AbsorbRes : public ::google::protobuf::Message {
 public:
  AbsorbRes();
  virtual ~AbsorbRes();

  AbsorbRes(const AbsorbRes& from);

  inline AbsorbRes& operator=(const AbsorbRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AbsorbRes& default_instance();

  void Swap(AbsorbRes* other);

  // implements Message ----------------------------------------------

  AbsorbRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AbsorbRes& from);
  void MergeFrom(const AbsorbRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyAbsorbMonsterResult];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional bool res = 3;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 3;
  inline bool res() const;
  inline void set_res(bool value);

  // optional int32 absorb1 = 4;
  inline bool has_absorb1() const;
  inline void clear_absorb1();
  static const int kAbsorb1FieldNumber = 4;
  inline ::google::protobuf::int32 absorb1() const;
  inline void set_absorb1(::google::protobuf::int32 value);

  // optional int32 absorb2 = 5;
  inline bool has_absorb2() const;
  inline void clear_absorb2();
  static const int kAbsorb2FieldNumber = 5;
  inline ::google::protobuf::int32 absorb2() const;
  inline void set_absorb2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.AbsorbRes)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_res();
  inline void clear_has_res();
  inline void set_has_absorb1();
  inline void clear_has_absorb1();
  inline void set_has_absorb2();
  inline void clear_has_absorb2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  bool res_;
  ::google::protobuf::int32 absorb1_;
  ::google::protobuf::int32 absorb2_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static AbsorbRes* default_instance_;
};
// -------------------------------------------------------------------

class CancelAbsorb : public ::google::protobuf::Message {
 public:
  CancelAbsorb();
  virtual ~CancelAbsorb();

  CancelAbsorb(const CancelAbsorb& from);

  inline CancelAbsorb& operator=(const CancelAbsorb& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CancelAbsorb& default_instance();

  void Swap(CancelAbsorb* other);

  // implements Message ----------------------------------------------

  CancelAbsorb* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CancelAbsorb& from);
  void MergeFrom(const CancelAbsorb& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyCancelAbsorbSkill];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int32 monsterid = 2;
  inline bool has_monsterid() const;
  inline void clear_monsterid();
  static const int kMonsteridFieldNumber = 2;
  inline ::google::protobuf::int32 monsterid() const;
  inline void set_monsterid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.CancelAbsorb)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_monsterid();
  inline void clear_has_monsterid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::int32 monsterid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static CancelAbsorb* default_instance_;
};
// -------------------------------------------------------------------

class UserGameInfo : public ::google::protobuf::Message {
 public:
  UserGameInfo();
  virtual ~UserGameInfo();

  UserGameInfo(const UserGameInfo& from);

  inline UserGameInfo& operator=(const UserGameInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserGameInfo& default_instance();

  void Swap(UserGameInfo* other);

  // implements Message ----------------------------------------------

  UserGameInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserGameInfo& from);
  void MergeFrom(const UserGameInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyUserGameInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int32 headid = 2;
  inline bool has_headid() const;
  inline void clear_headid();
  static const int kHeadidFieldNumber = 2;
  inline ::google::protobuf::int32 headid() const;
  inline void set_headid(::google::protobuf::int32 value);

  // optional string nickname = 3;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional int32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 upgradeexp = 5;
  inline bool has_upgradeexp() const;
  inline void clear_upgradeexp();
  static const int kUpgradeexpFieldNumber = 5;
  inline ::google::protobuf::int32 upgradeexp() const;
  inline void set_upgradeexp(::google::protobuf::int32 value);

  // optional int32 curexp = 6;
  inline bool has_curexp() const;
  inline void clear_curexp();
  static const int kCurexpFieldNumber = 6;
  inline ::google::protobuf::int32 curexp() const;
  inline void set_curexp(::google::protobuf::int32 value);

  // optional int32 totalgameinns = 7;
  inline bool has_totalgameinns() const;
  inline void clear_totalgameinns();
  static const int kTotalgameinnsFieldNumber = 7;
  inline ::google::protobuf::int32 totalgameinns() const;
  inline void set_totalgameinns(::google::protobuf::int32 value);

  // optional int32 totalwintimes = 8;
  inline bool has_totalwintimes() const;
  inline void clear_totalwintimes();
  static const int kTotalwintimesFieldNumber = 8;
  inline ::google::protobuf::int32 totalwintimes() const;
  inline void set_totalwintimes(::google::protobuf::int32 value);

  // optional int32 herokills = 9;
  inline bool has_herokills() const;
  inline void clear_herokills();
  static const int kHerokillsFieldNumber = 9;
  inline ::google::protobuf::int32 herokills() const;
  inline void set_herokills(::google::protobuf::int32 value);

  // optional int32 destorybuildings = 10;
  inline bool has_destorybuildings() const;
  inline void clear_destorybuildings();
  static const int kDestorybuildingsFieldNumber = 10;
  inline ::google::protobuf::int32 destorybuildings() const;
  inline void set_destorybuildings(::google::protobuf::int32 value);

  // optional int32 deadtimes = 11;
  inline bool has_deadtimes() const;
  inline void clear_deadtimes();
  static const int kDeadtimesFieldNumber = 11;
  inline ::google::protobuf::int32 deadtimes() const;
  inline void set_deadtimes(::google::protobuf::int32 value);

  // optional int32 total_achnum = 12;
  inline bool has_total_achnum() const;
  inline void clear_total_achnum();
  static const int kTotalAchnumFieldNumber = 12;
  inline ::google::protobuf::int32 total_achnum() const;
  inline void set_total_achnum(::google::protobuf::int32 value);

  // optional int32 achnum = 13;
  inline bool has_achnum() const;
  inline void clear_achnum();
  static const int kAchnumFieldNumber = 13;
  inline ::google::protobuf::int32 achnum() const;
  inline void set_achnum(::google::protobuf::int32 value);

  // optional int32 vipscore = 14;
  inline bool has_vipscore() const;
  inline void clear_vipscore();
  static const int kVipscoreFieldNumber = 14;
  inline ::google::protobuf::int32 vipscore() const;
  inline void set_vipscore(::google::protobuf::int32 value);

  // optional int32 assistnum = 15;
  inline bool has_assistnum() const;
  inline void clear_assistnum();
  static const int kAssistnumFieldNumber = 15;
  inline ::google::protobuf::int32 assistnum() const;
  inline void set_assistnum(::google::protobuf::int32 value);

  // optional int32 ladderscore = 16;
  inline bool has_ladderscore() const;
  inline void clear_ladderscore();
  static const int kLadderscoreFieldNumber = 16;
  inline ::google::protobuf::int32 ladderscore() const;
  inline void set_ladderscore(::google::protobuf::int32 value);

  // optional string guildname = 17;
  inline bool has_guildname() const;
  inline void clear_guildname();
  static const int kGuildnameFieldNumber = 17;
  inline const ::std::string& guildname() const;
  inline void set_guildname(const ::std::string& value);
  inline void set_guildname(const char* value);
  inline void set_guildname(const char* value, size_t size);
  inline ::std::string* mutable_guildname();
  inline ::std::string* release_guildname();
  inline void set_allocated_guildname(::std::string* guildname);

  // optional int64 exp_adtime = 18;
  inline bool has_exp_adtime() const;
  inline void clear_exp_adtime();
  static const int kExpAdtimeFieldNumber = 18;
  inline ::google::protobuf::int64 exp_adtime() const;
  inline void set_exp_adtime(::google::protobuf::int64 value);

  // optional int64 gold_addtime = 19;
  inline bool has_gold_addtime() const;
  inline void clear_gold_addtime();
  static const int kGoldAddtimeFieldNumber = 19;
  inline ::google::protobuf::int64 gold_addtime() const;
  inline void set_gold_addtime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GSToGC.UserGameInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_headid();
  inline void clear_has_headid();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_upgradeexp();
  inline void clear_has_upgradeexp();
  inline void set_has_curexp();
  inline void clear_has_curexp();
  inline void set_has_totalgameinns();
  inline void clear_has_totalgameinns();
  inline void set_has_totalwintimes();
  inline void clear_has_totalwintimes();
  inline void set_has_herokills();
  inline void clear_has_herokills();
  inline void set_has_destorybuildings();
  inline void clear_has_destorybuildings();
  inline void set_has_deadtimes();
  inline void clear_has_deadtimes();
  inline void set_has_total_achnum();
  inline void clear_has_total_achnum();
  inline void set_has_achnum();
  inline void clear_has_achnum();
  inline void set_has_vipscore();
  inline void clear_has_vipscore();
  inline void set_has_assistnum();
  inline void clear_has_assistnum();
  inline void set_has_ladderscore();
  inline void clear_has_ladderscore();
  inline void set_has_guildname();
  inline void clear_has_guildname();
  inline void set_has_exp_adtime();
  inline void clear_has_exp_adtime();
  inline void set_has_gold_addtime();
  inline void clear_has_gold_addtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::int32 headid_;
  ::std::string* nickname_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 upgradeexp_;
  ::google::protobuf::int32 curexp_;
  ::google::protobuf::int32 totalgameinns_;
  ::google::protobuf::int32 totalwintimes_;
  ::google::protobuf::int32 herokills_;
  ::google::protobuf::int32 destorybuildings_;
  ::google::protobuf::int32 deadtimes_;
  ::google::protobuf::int32 total_achnum_;
  ::google::protobuf::int32 achnum_;
  ::google::protobuf::int32 vipscore_;
  ::google::protobuf::int32 assistnum_;
  ::std::string* guildname_;
  ::google::protobuf::int64 exp_adtime_;
  ::google::protobuf::int64 gold_addtime_;
  ::google::protobuf::int32 ladderscore_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static UserGameInfo* default_instance_;
};
// -------------------------------------------------------------------

class HeroKills : public ::google::protobuf::Message {
 public:
  HeroKills();
  virtual ~HeroKills();

  HeroKills(const HeroKills& from);

  inline HeroKills& operator=(const HeroKills& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroKills& default_instance();

  void Swap(HeroKills* other);

  // implements Message ----------------------------------------------

  HeroKills* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroKills& from);
  void MergeFrom(const HeroKills& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyHeroKills];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 kills = 3;
  inline bool has_kills() const;
  inline void clear_kills();
  static const int kKillsFieldNumber = 3;
  inline ::google::protobuf::int32 kills() const;
  inline void set_kills(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.HeroKills)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_kills();
  inline void clear_has_kills();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::int32 kills_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static HeroKills* default_instance_;
};
// -------------------------------------------------------------------

class CurDeadTimes : public ::google::protobuf::Message {
 public:
  CurDeadTimes();
  virtual ~CurDeadTimes();

  CurDeadTimes(const CurDeadTimes& from);

  inline CurDeadTimes& operator=(const CurDeadTimes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CurDeadTimes& default_instance();

  void Swap(CurDeadTimes* other);

  // implements Message ----------------------------------------------

  CurDeadTimes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CurDeadTimes& from);
  void MergeFrom(const CurDeadTimes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyCurDeadTimes];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 objguid = 2;
  inline bool has_objguid() const;
  inline void clear_objguid();
  static const int kObjguidFieldNumber = 2;
  inline ::google::protobuf::uint64 objguid() const;
  inline void set_objguid(::google::protobuf::uint64 value);

  // optional int32 deadtimes = 3;
  inline bool has_deadtimes() const;
  inline void clear_deadtimes();
  static const int kDeadtimesFieldNumber = 3;
  inline ::google::protobuf::int32 deadtimes() const;
  inline void set_deadtimes(::google::protobuf::int32 value);

  // optional int32 killer_camp = 4;
  inline bool has_killer_camp() const;
  inline void clear_killer_camp();
  static const int kKillerCampFieldNumber = 4;
  inline ::google::protobuf::int32 killer_camp() const;
  inline void set_killer_camp(::google::protobuf::int32 value);

  // optional uint64 reasonheroguid = 5;
  inline bool has_reasonheroguid() const;
  inline void clear_reasonheroguid();
  static const int kReasonheroguidFieldNumber = 5;
  inline ::google::protobuf::uint64 reasonheroguid() const;
  inline void set_reasonheroguid(::google::protobuf::uint64 value);

  // optional bool ifAced = 6;
  inline bool has_ifaced() const;
  inline void clear_ifaced();
  static const int kIfAcedFieldNumber = 6;
  inline bool ifaced() const;
  inline void set_ifaced(bool value);

  // optional int32 camp = 7;
  inline bool has_camp() const;
  inline void clear_camp();
  static const int kCampFieldNumber = 7;
  inline ::google::protobuf::int32 camp() const;
  inline void set_camp(::google::protobuf::int32 value);

  // optional int32 herostate = 8;
  inline bool has_herostate() const;
  inline void clear_herostate();
  static const int kHerostateFieldNumber = 8;
  inline ::google::protobuf::int32 herostate() const;
  inline void set_herostate(::google::protobuf::int32 value);

  // optional int32 herotitle = 9;
  inline bool has_herotitle() const;
  inline void clear_herotitle();
  static const int kHerotitleFieldNumber = 9;
  inline ::google::protobuf::int32 herotitle() const;
  inline void set_herotitle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.CurDeadTimes)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_objguid();
  inline void clear_has_objguid();
  inline void set_has_deadtimes();
  inline void clear_has_deadtimes();
  inline void set_has_killer_camp();
  inline void clear_has_killer_camp();
  inline void set_has_reasonheroguid();
  inline void clear_has_reasonheroguid();
  inline void set_has_ifaced();
  inline void clear_has_ifaced();
  inline void set_has_camp();
  inline void clear_has_camp();
  inline void set_has_herostate();
  inline void clear_has_herostate();
  inline void set_has_herotitle();
  inline void clear_has_herotitle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 objguid_;
  int msgid_;
  ::google::protobuf::int32 deadtimes_;
  ::google::protobuf::uint64 reasonheroguid_;
  ::google::protobuf::int32 killer_camp_;
  bool ifaced_;
  ::google::protobuf::int32 camp_;
  ::google::protobuf::int32 herostate_;
  ::google::protobuf::int32 herotitle_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static CurDeadTimes* default_instance_;
};
// -------------------------------------------------------------------

class CurCP : public ::google::protobuf::Message {
 public:
  CurCP();
  virtual ~CurCP();

  CurCP(const CurCP& from);

  inline CurCP& operator=(const CurCP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CurCP& default_instance();

  void Swap(CurCP* other);

  // implements Message ----------------------------------------------

  CurCP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CurCP& from);
  void MergeFrom(const CurCP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyCurCP];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 targetguid = 2;
  inline bool has_targetguid() const;
  inline void clear_targetguid();
  static const int kTargetguidFieldNumber = 2;
  inline ::google::protobuf::uint64 targetguid() const;
  inline void set_targetguid(::google::protobuf::uint64 value);

  // optional int32 person_cp = 3;
  inline bool has_person_cp() const;
  inline void clear_person_cp();
  static const int kPersonCpFieldNumber = 3;
  inline ::google::protobuf::int32 person_cp() const;
  inline void set_person_cp(::google::protobuf::int32 value);

  // optional int32 team_cp = 4;
  inline bool has_team_cp() const;
  inline void clear_team_cp();
  static const int kTeamCpFieldNumber = 4;
  inline ::google::protobuf::int32 team_cp() const;
  inline void set_team_cp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.CurCP)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_targetguid();
  inline void clear_has_targetguid();
  inline void set_has_person_cp();
  inline void clear_has_person_cp();
  inline void set_has_team_cp();
  inline void clear_has_team_cp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 targetguid_;
  int msgid_;
  ::google::protobuf::int32 person_cp_;
  ::google::protobuf::int32 team_cp_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static CurCP* default_instance_;
};
// -------------------------------------------------------------------

class CurAtkSpeed_SpeedInfo : public ::google::protobuf::Message {
 public:
  CurAtkSpeed_SpeedInfo();
  virtual ~CurAtkSpeed_SpeedInfo();

  CurAtkSpeed_SpeedInfo(const CurAtkSpeed_SpeedInfo& from);

  inline CurAtkSpeed_SpeedInfo& operator=(const CurAtkSpeed_SpeedInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CurAtkSpeed_SpeedInfo& default_instance();

  void Swap(CurAtkSpeed_SpeedInfo* other);

  // implements Message ----------------------------------------------

  CurAtkSpeed_SpeedInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CurAtkSpeed_SpeedInfo& from);
  void MergeFrom(const CurAtkSpeed_SpeedInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 speed = 2;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 2;
  inline ::google::protobuf::int32 speed() const;
  inline void set_speed(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.CurAtkSpeed.SpeedInfo)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_speed();
  inline void clear_has_speed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 speed_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static CurAtkSpeed_SpeedInfo* default_instance_;
};
// -------------------------------------------------------------------

class CurAtkSpeed : public ::google::protobuf::Message {
 public:
  CurAtkSpeed();
  virtual ~CurAtkSpeed();

  CurAtkSpeed(const CurAtkSpeed& from);

  inline CurAtkSpeed& operator=(const CurAtkSpeed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CurAtkSpeed& default_instance();

  void Swap(CurAtkSpeed* other);

  // implements Message ----------------------------------------------

  CurAtkSpeed* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CurAtkSpeed& from);
  void MergeFrom(const CurAtkSpeed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CurAtkSpeed_SpeedInfo SpeedInfo;

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyCurAtkSpeed];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // repeated .GSToGC.CurAtkSpeed.SpeedInfo info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::GSToGC::CurAtkSpeed_SpeedInfo& info(int index) const;
  inline ::GSToGC::CurAtkSpeed_SpeedInfo* mutable_info(int index);
  inline ::GSToGC::CurAtkSpeed_SpeedInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::CurAtkSpeed_SpeedInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::CurAtkSpeed_SpeedInfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:GSToGC.CurAtkSpeed)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::CurAtkSpeed_SpeedInfo > info_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static CurAtkSpeed* default_instance_;
};
// -------------------------------------------------------------------

class FuryVal : public ::google::protobuf::Message {
 public:
  FuryVal();
  virtual ~FuryVal();

  FuryVal(const FuryVal& from);

  inline FuryVal& operator=(const FuryVal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FuryVal& default_instance();

  void Swap(FuryVal* other);

  // implements Message ----------------------------------------------

  FuryVal* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FuryVal& from);
  void MergeFrom(const FuryVal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyFuryValue];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 fury = 3;
  inline bool has_fury() const;
  inline void clear_fury();
  static const int kFuryFieldNumber = 3;
  inline ::google::protobuf::int32 fury() const;
  inline void set_fury(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.FuryVal)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_fury();
  inline void clear_has_fury();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::int32 fury_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static FuryVal* default_instance_;
};
// -------------------------------------------------------------------

class FuryState : public ::google::protobuf::Message {
 public:
  FuryState();
  virtual ~FuryState();

  FuryState(const FuryState& from);

  inline FuryState& operator=(const FuryState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FuryState& default_instance();

  void Swap(FuryState* other);

  // implements Message ----------------------------------------------

  FuryState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FuryState& from);
  void MergeFrom(const FuryState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyFuryState];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.FuryState)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::int32 state_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static FuryState* default_instance_;
};
// -------------------------------------------------------------------

class NotifyHeroReborn : public ::google::protobuf::Message {
 public:
  NotifyHeroReborn();
  virtual ~NotifyHeroReborn();

  NotifyHeroReborn(const NotifyHeroReborn& from);

  inline NotifyHeroReborn& operator=(const NotifyHeroReborn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyHeroReborn& default_instance();

  void Swap(NotifyHeroReborn* other);

  // implements Message ----------------------------------------------

  NotifyHeroReborn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyHeroReborn& from);
  void MergeFrom(const NotifyHeroReborn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyHeroReborn];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyHeroReborn)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyHeroReborn* default_instance_;
};
// -------------------------------------------------------------------

class RebornTimes : public ::google::protobuf::Message {
 public:
  RebornTimes();
  virtual ~RebornTimes();

  RebornTimes(const RebornTimes& from);

  inline RebornTimes& operator=(const RebornTimes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RebornTimes& default_instance();

  void Swap(RebornTimes* other);

  // implements Message ----------------------------------------------

  RebornTimes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RebornTimes& from);
  void MergeFrom(const RebornTimes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyHeroRebornTimes];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 masterguid = 2;
  inline bool has_masterguid() const;
  inline void clear_masterguid();
  static const int kMasterguidFieldNumber = 2;
  inline ::google::protobuf::uint64 masterguid() const;
  inline void set_masterguid(::google::protobuf::uint64 value);

  // optional int64 sendtimes = 3;
  inline bool has_sendtimes() const;
  inline void clear_sendtimes();
  static const int kSendtimesFieldNumber = 3;
  inline ::google::protobuf::int64 sendtimes() const;
  inline void set_sendtimes(::google::protobuf::int64 value);

  // optional int64 gold = 4;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 4;
  inline ::google::protobuf::int64 gold() const;
  inline void set_gold(::google::protobuf::int64 value);

  // optional int32 remain_times = 5;
  inline bool has_remain_times() const;
  inline void clear_remain_times();
  static const int kRemainTimesFieldNumber = 5;
  inline ::google::protobuf::int32 remain_times() const;
  inline void set_remain_times(::google::protobuf::int32 value);

  // optional int32 reborn_time = 6;
  inline bool has_reborn_time() const;
  inline void clear_reborn_time();
  static const int kRebornTimeFieldNumber = 6;
  inline ::google::protobuf::int32 reborn_time() const;
  inline void set_reborn_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.RebornTimes)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_masterguid();
  inline void clear_has_masterguid();
  inline void set_has_sendtimes();
  inline void clear_has_sendtimes();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_remain_times();
  inline void clear_has_remain_times();
  inline void set_has_reborn_time();
  inline void clear_has_reborn_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 masterguid_;
  ::google::protobuf::int64 sendtimes_;
  int msgid_;
  ::google::protobuf::int32 remain_times_;
  ::google::protobuf::int64 gold_;
  ::google::protobuf::int32 reborn_time_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static RebornTimes* default_instance_;
};
// -------------------------------------------------------------------

class RebornSuccess : public ::google::protobuf::Message {
 public:
  RebornSuccess();
  virtual ~RebornSuccess();

  RebornSuccess(const RebornSuccess& from);

  inline RebornSuccess& operator=(const RebornSuccess& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RebornSuccess& default_instance();

  void Swap(RebornSuccess* other);

  // implements Message ----------------------------------------------

  RebornSuccess* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RebornSuccess& from);
  void MergeFrom(const RebornSuccess& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBuyRebornSuccess];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:GSToGC.RebornSuccess)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static RebornSuccess* default_instance_;
};
// -------------------------------------------------------------------

class PersonCPChange : public ::google::protobuf::Message {
 public:
  PersonCPChange();
  virtual ~PersonCPChange();

  PersonCPChange(const PersonCPChange& from);

  inline PersonCPChange& operator=(const PersonCPChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PersonCPChange& default_instance();

  void Swap(PersonCPChange* other);

  // implements Message ----------------------------------------------

  PersonCPChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PersonCPChange& from);
  void MergeFrom(const PersonCPChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyPersonalCPChange];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 cp = 3;
  inline bool has_cp() const;
  inline void clear_cp();
  static const int kCpFieldNumber = 3;
  inline ::google::protobuf::int32 cp() const;
  inline void set_cp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.PersonCPChange)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_cp();
  inline void clear_has_cp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::int32 cp_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static PersonCPChange* default_instance_;
};
// -------------------------------------------------------------------

class BroadcastBatteleRes_ResInfo : public ::google::protobuf::Message {
 public:
  BroadcastBatteleRes_ResInfo();
  virtual ~BroadcastBatteleRes_ResInfo();

  BroadcastBatteleRes_ResInfo(const BroadcastBatteleRes_ResInfo& from);

  inline BroadcastBatteleRes_ResInfo& operator=(const BroadcastBatteleRes_ResInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadcastBatteleRes_ResInfo& default_instance();

  void Swap(BroadcastBatteleRes_ResInfo* other);

  // implements Message ----------------------------------------------

  BroadcastBatteleRes_ResInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BroadcastBatteleRes_ResInfo& from);
  void MergeFrom(const BroadcastBatteleRes_ResInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 objguid = 1;
  inline bool has_objguid() const;
  inline void clear_objguid();
  static const int kObjguidFieldNumber = 1;
  inline ::google::protobuf::uint64 objguid() const;
  inline void set_objguid(::google::protobuf::uint64 value);

  // optional int32 heroid = 2;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 2;
  inline ::google::protobuf::int32 heroid() const;
  inline void set_heroid(::google::protobuf::int32 value);

  // optional string nickname = 3;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional int32 curlevel = 4;
  inline bool has_curlevel() const;
  inline void clear_curlevel();
  static const int kCurlevelFieldNumber = 4;
  inline ::google::protobuf::int32 curlevel() const;
  inline void set_curlevel(::google::protobuf::int32 value);

  // optional int32 killtimes = 5;
  inline bool has_killtimes() const;
  inline void clear_killtimes();
  static const int kKilltimesFieldNumber = 5;
  inline ::google::protobuf::int32 killtimes() const;
  inline void set_killtimes(::google::protobuf::int32 value);

  // optional int32 deadtimes = 6;
  inline bool has_deadtimes() const;
  inline void clear_deadtimes();
  static const int kDeadtimesFieldNumber = 6;
  inline ::google::protobuf::int32 deadtimes() const;
  inline void set_deadtimes(::google::protobuf::int32 value);

  // optional int32 asstimes = 7;
  inline bool has_asstimes() const;
  inline void clear_asstimes();
  static const int kAsstimesFieldNumber = 7;
  inline ::google::protobuf::int32 asstimes() const;
  inline void set_asstimes(::google::protobuf::int32 value);

  // optional int32 totalcp = 8;
  inline bool has_totalcp() const;
  inline void clear_totalcp();
  static const int kTotalcpFieldNumber = 8;
  inline ::google::protobuf::int32 totalcp() const;
  inline void set_totalcp(::google::protobuf::int32 value);

  // optional int32 lasthit = 9;
  inline bool has_lasthit() const;
  inline void clear_lasthit();
  static const int kLasthitFieldNumber = 9;
  inline ::google::protobuf::int32 lasthit() const;
  inline void set_lasthit(::google::protobuf::int32 value);

  // optional int32 camgpid = 10;
  inline bool has_camgpid() const;
  inline void clear_camgpid();
  static const int kCamgpidFieldNumber = 10;
  inline ::google::protobuf::int32 camgpid() const;
  inline void set_camgpid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.BroadcastBatteleRes.ResInfo)
 private:
  inline void set_has_objguid();
  inline void clear_has_objguid();
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_curlevel();
  inline void clear_has_curlevel();
  inline void set_has_killtimes();
  inline void clear_has_killtimes();
  inline void set_has_deadtimes();
  inline void clear_has_deadtimes();
  inline void set_has_asstimes();
  inline void clear_has_asstimes();
  inline void set_has_totalcp();
  inline void clear_has_totalcp();
  inline void set_has_lasthit();
  inline void clear_has_lasthit();
  inline void set_has_camgpid();
  inline void clear_has_camgpid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 objguid_;
  ::std::string* nickname_;
  ::google::protobuf::int32 heroid_;
  ::google::protobuf::int32 curlevel_;
  ::google::protobuf::int32 killtimes_;
  ::google::protobuf::int32 deadtimes_;
  ::google::protobuf::int32 asstimes_;
  ::google::protobuf::int32 totalcp_;
  ::google::protobuf::int32 lasthit_;
  ::google::protobuf::int32 camgpid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static BroadcastBatteleRes_ResInfo* default_instance_;
};
// -------------------------------------------------------------------

class BroadcastBatteleRes : public ::google::protobuf::Message {
 public:
  BroadcastBatteleRes();
  virtual ~BroadcastBatteleRes();

  BroadcastBatteleRes(const BroadcastBatteleRes& from);

  inline BroadcastBatteleRes& operator=(const BroadcastBatteleRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadcastBatteleRes& default_instance();

  void Swap(BroadcastBatteleRes* other);

  // implements Message ----------------------------------------------

  BroadcastBatteleRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BroadcastBatteleRes& from);
  void MergeFrom(const BroadcastBatteleRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BroadcastBatteleRes_ResInfo ResInfo;

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_BroadCurBattleResult];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional bool ifwin = 2;
  inline bool has_ifwin() const;
  inline void clear_ifwin();
  static const int kIfwinFieldNumber = 2;
  inline bool ifwin() const;
  inline void set_ifwin(bool value);

  // repeated .GSToGC.BroadcastBatteleRes.ResInfo resinfo = 3;
  inline int resinfo_size() const;
  inline void clear_resinfo();
  static const int kResinfoFieldNumber = 3;
  inline const ::GSToGC::BroadcastBatteleRes_ResInfo& resinfo(int index) const;
  inline ::GSToGC::BroadcastBatteleRes_ResInfo* mutable_resinfo(int index);
  inline ::GSToGC::BroadcastBatteleRes_ResInfo* add_resinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::BroadcastBatteleRes_ResInfo >&
      resinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::BroadcastBatteleRes_ResInfo >*
      mutable_resinfo();

  // @@protoc_insertion_point(class_scope:GSToGC.BroadcastBatteleRes)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_ifwin();
  inline void clear_has_ifwin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  bool ifwin_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::BroadcastBatteleRes_ResInfo > resinfo_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static BroadcastBatteleRes* default_instance_;
};
// -------------------------------------------------------------------

class BroadcastBattelePersonalRes : public ::google::protobuf::Message {
 public:
  BroadcastBattelePersonalRes();
  virtual ~BroadcastBattelePersonalRes();

  BroadcastBattelePersonalRes(const BroadcastBattelePersonalRes& from);

  inline BroadcastBattelePersonalRes& operator=(const BroadcastBattelePersonalRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadcastBattelePersonalRes& default_instance();

  void Swap(BroadcastBattelePersonalRes* other);

  // implements Message ----------------------------------------------

  BroadcastBattelePersonalRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BroadcastBattelePersonalRes& from);
  void MergeFrom(const BroadcastBattelePersonalRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_BroadBattlePersonalResult];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int64 got_gold = 2;
  inline bool has_got_gold() const;
  inline void clear_got_gold();
  static const int kGotGoldFieldNumber = 2;
  inline ::google::protobuf::int64 got_gold() const;
  inline void set_got_gold(::google::protobuf::int64 value);

  // optional int32 old_lv = 3;
  inline bool has_old_lv() const;
  inline void clear_old_lv();
  static const int kOldLvFieldNumber = 3;
  inline ::google::protobuf::int32 old_lv() const;
  inline void set_old_lv(::google::protobuf::int32 value);

  // optional int32 old_exp = 4;
  inline bool has_old_exp() const;
  inline void clear_old_exp();
  static const int kOldExpFieldNumber = 4;
  inline ::google::protobuf::int32 old_exp() const;
  inline void set_old_exp(::google::protobuf::int32 value);

  // optional int32 cur_lv = 5;
  inline bool has_cur_lv() const;
  inline void clear_cur_lv();
  static const int kCurLvFieldNumber = 5;
  inline ::google::protobuf::int32 cur_lv() const;
  inline void set_cur_lv(::google::protobuf::int32 value);

  // optional int32 cur_exp = 6;
  inline bool has_cur_exp() const;
  inline void clear_cur_exp();
  static const int kCurExpFieldNumber = 6;
  inline ::google::protobuf::int32 cur_exp() const;
  inline void set_cur_exp(::google::protobuf::int32 value);

  // optional int32 got_exp = 7;
  inline bool has_got_exp() const;
  inline void clear_got_exp();
  static const int kGotExpFieldNumber = 7;
  inline ::google::protobuf::int32 got_exp() const;
  inline void set_got_exp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.BroadcastBattelePersonalRes)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_got_gold();
  inline void clear_has_got_gold();
  inline void set_has_old_lv();
  inline void clear_has_old_lv();
  inline void set_has_old_exp();
  inline void clear_has_old_exp();
  inline void set_has_cur_lv();
  inline void clear_has_cur_lv();
  inline void set_has_cur_exp();
  inline void clear_has_cur_exp();
  inline void set_has_got_exp();
  inline void clear_has_got_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 got_gold_;
  int msgid_;
  ::google::protobuf::int32 old_lv_;
  ::google::protobuf::int32 old_exp_;
  ::google::protobuf::int32 cur_lv_;
  ::google::protobuf::int32 cur_exp_;
  ::google::protobuf::int32 got_exp_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static BroadcastBattelePersonalRes* default_instance_;
};
// -------------------------------------------------------------------

class BroadcastBuildingDestory : public ::google::protobuf::Message {
 public:
  BroadcastBuildingDestory();
  virtual ~BroadcastBuildingDestory();

  BroadcastBuildingDestory(const BroadcastBuildingDestory& from);

  inline BroadcastBuildingDestory& operator=(const BroadcastBuildingDestory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadcastBuildingDestory& default_instance();

  void Swap(BroadcastBuildingDestory* other);

  // implements Message ----------------------------------------------

  BroadcastBuildingDestory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BroadcastBuildingDestory& from);
  void MergeFrom(const BroadcastBuildingDestory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_BroadBuildingDestroyByWho];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 buildingguid = 2;
  inline bool has_buildingguid() const;
  inline void clear_buildingguid();
  static const int kBuildingguidFieldNumber = 2;
  inline ::google::protobuf::uint64 buildingguid() const;
  inline void set_buildingguid(::google::protobuf::uint64 value);

  // optional int32 building_camp = 3;
  inline bool has_building_camp() const;
  inline void clear_building_camp();
  static const int kBuildingCampFieldNumber = 3;
  inline ::google::protobuf::int32 building_camp() const;
  inline void set_building_camp(::google::protobuf::int32 value);

  // optional uint64 killer_guid = 4;
  inline bool has_killer_guid() const;
  inline void clear_killer_guid();
  static const int kKillerGuidFieldNumber = 4;
  inline ::google::protobuf::uint64 killer_guid() const;
  inline void set_killer_guid(::google::protobuf::uint64 value);

  // optional int32 killer_camp = 5;
  inline bool has_killer_camp() const;
  inline void clear_killer_camp();
  static const int kKillerCampFieldNumber = 5;
  inline ::google::protobuf::int32 killer_camp() const;
  inline void set_killer_camp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.BroadcastBuildingDestory)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_buildingguid();
  inline void clear_has_buildingguid();
  inline void set_has_building_camp();
  inline void clear_has_building_camp();
  inline void set_has_killer_guid();
  inline void clear_has_killer_guid();
  inline void set_has_killer_camp();
  inline void clear_has_killer_camp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 buildingguid_;
  int msgid_;
  ::google::protobuf::int32 building_camp_;
  ::google::protobuf::uint64 killer_guid_;
  ::google::protobuf::int32 killer_camp_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static BroadcastBuildingDestory* default_instance_;
};
// -------------------------------------------------------------------

class HeroMoveInfo : public ::google::protobuf::Message {
 public:
  HeroMoveInfo();
  virtual ~HeroMoveInfo();

  HeroMoveInfo(const HeroMoveInfo& from);

  inline HeroMoveInfo& operator=(const HeroMoveInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroMoveInfo& default_instance();

  void Swap(HeroMoveInfo* other);

  // implements Message ----------------------------------------------

  HeroMoveInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroMoveInfo& from);
  void MergeFrom(const HeroMoveInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBattleSeatPosInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional .GSToGC.Dir dir = 3;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 3;
  inline const ::GSToGC::Dir& dir() const;
  inline ::GSToGC::Dir* mutable_dir();
  inline ::GSToGC::Dir* release_dir();
  inline void set_allocated_dir(::GSToGC::Dir* dir);

  // optional .GSToGC.Pos pos = 4;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 4;
  inline const ::GSToGC::Pos& pos() const;
  inline ::GSToGC::Pos* mutable_pos();
  inline ::GSToGC::Pos* release_pos();
  inline void set_allocated_pos(::GSToGC::Pos* pos);

  // @@protoc_insertion_point(class_scope:GSToGC.HeroMoveInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::GSToGC::Dir* dir_;
  ::GSToGC::Pos* pos_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static HeroMoveInfo* default_instance_;
};
// -------------------------------------------------------------------

class PlayFinishVedio : public ::google::protobuf::Message {
 public:
  PlayFinishVedio();
  virtual ~PlayFinishVedio();

  PlayFinishVedio(const PlayFinishVedio& from);

  inline PlayFinishVedio& operator=(const PlayFinishVedio& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayFinishVedio& default_instance();

  void Swap(PlayFinishVedio* other);

  // implements Message ----------------------------------------------

  PlayFinishVedio* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayFinishVedio& from);
  void MergeFrom(const PlayFinishVedio& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_BroadcastPlayFinishVedio];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int32 wincamp = 2;
  inline bool has_wincamp() const;
  inline void clear_wincamp();
  static const int kWincampFieldNumber = 2;
  inline ::google::protobuf::int32 wincamp() const;
  inline void set_wincamp(::google::protobuf::int32 value);

  // optional int32 losercamp = 3;
  inline bool has_losercamp() const;
  inline void clear_losercamp();
  static const int kLosercampFieldNumber = 3;
  inline ::google::protobuf::int32 losercamp() const;
  inline void set_losercamp(::google::protobuf::int32 value);

  // optional int32 mapid = 4;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 4;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional uint64 guid = 5;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 5;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:GSToGC.PlayFinishVedio)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_wincamp();
  inline void clear_has_wincamp();
  inline void set_has_losercamp();
  inline void clear_has_losercamp();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_guid();
  inline void clear_has_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::int32 wincamp_;
  ::google::protobuf::int32 losercamp_;
  ::google::protobuf::int32 mapid_;
  ::google::protobuf::uint64 guid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static PlayFinishVedio* default_instance_;
};
// -------------------------------------------------------------------

class LeaveBattleSuccess : public ::google::protobuf::Message {
 public:
  LeaveBattleSuccess();
  virtual ~LeaveBattleSuccess();

  LeaveBattleSuccess(const LeaveBattleSuccess& from);

  inline LeaveBattleSuccess& operator=(const LeaveBattleSuccess& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveBattleSuccess& default_instance();

  void Swap(LeaveBattleSuccess* other);

  // implements Message ----------------------------------------------

  LeaveBattleSuccess* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LeaveBattleSuccess& from);
  void MergeFrom(const LeaveBattleSuccess& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyLeaveBattleSuccess];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // @@protoc_insertion_point(class_scope:GSToGC.LeaveBattleSuccess)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static LeaveBattleSuccess* default_instance_;
};
// -------------------------------------------------------------------

class BornSoler : public ::google::protobuf::Message {
 public:
  BornSoler();
  virtual ~BornSoler();

  BornSoler(const BornSoler& from);

  inline BornSoler& operator=(const BornSoler& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BornSoler& default_instance();

  void Swap(BornSoler* other);

  // implements Message ----------------------------------------------

  BornSoler* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BornSoler& from);
  void MergeFrom(const BornSoler& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBornSolder];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 camp = 3;
  inline bool has_camp() const;
  inline void clear_camp();
  static const int kCampFieldNumber = 3;
  inline ::google::protobuf::int32 camp() const;
  inline void set_camp(::google::protobuf::int32 value);

  // optional .GSToGC.Pos pos = 4;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 4;
  inline const ::GSToGC::Pos& pos() const;
  inline ::GSToGC::Pos* mutable_pos();
  inline ::GSToGC::Pos* release_pos();
  inline void set_allocated_pos(::GSToGC::Pos* pos);

  // optional uint64 guid = 5;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 5;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:GSToGC.BornSoler)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_camp();
  inline void clear_has_camp();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_guid();
  inline void clear_has_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::int32 type_;
  ::GSToGC::Pos* pos_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 camp_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static BornSoler* default_instance_;
};
// -------------------------------------------------------------------

class SkillEnd : public ::google::protobuf::Message {
 public:
  SkillEnd();
  virtual ~SkillEnd();

  SkillEnd(const SkillEnd& from);

  inline SkillEnd& operator=(const SkillEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillEnd& default_instance();

  void Swap(SkillEnd* other);

  // implements Message ----------------------------------------------

  SkillEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillEnd& from);
  void MergeFrom(const SkillEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillEnd];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::int64 guid() const;
  inline void set_guid(::google::protobuf::int64 value);

  // optional int32 skillid = 3;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 3;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // optional int64 targuid = 4;
  inline bool has_targuid() const;
  inline void clear_targuid();
  static const int kTarguidFieldNumber = 4;
  inline ::google::protobuf::int64 targuid() const;
  inline void set_targuid(::google::protobuf::int64 value);

  // optional int32 uniqueid = 5;
  inline bool has_uniqueid() const;
  inline void clear_uniqueid();
  static const int kUniqueidFieldNumber = 5;
  inline ::google::protobuf::int32 uniqueid() const;
  inline void set_uniqueid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.SkillEnd)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_targuid();
  inline void clear_has_targuid();
  inline void set_has_uniqueid();
  inline void clear_has_uniqueid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 guid_;
  int msgid_;
  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int64 targuid_;
  ::google::protobuf::int32 uniqueid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static SkillEnd* default_instance_;
};
// -------------------------------------------------------------------

class AltarBSIco : public ::google::protobuf::Message {
 public:
  AltarBSIco();
  virtual ~AltarBSIco();

  AltarBSIco(const AltarBSIco& from);

  inline AltarBSIco& operator=(const AltarBSIco& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AltarBSIco& default_instance();

  void Swap(AltarBSIco* other);

  // implements Message ----------------------------------------------

  AltarBSIco* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AltarBSIco& from);
  void MergeFrom(const AltarBSIco& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyAltarBSIco];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 optype = 4;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOptypeFieldNumber = 4;
  inline ::google::protobuf::int32 optype() const;
  inline void set_optype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.AltarBSIco)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_optype();
  inline void clear_has_optype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 optype_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static AltarBSIco* default_instance_;
};
// -------------------------------------------------------------------

class GOReleaseSkill : public ::google::protobuf::Message {
 public:
  GOReleaseSkill();
  virtual ~GOReleaseSkill();

  GOReleaseSkill(const GOReleaseSkill& from);

  inline GOReleaseSkill& operator=(const GOReleaseSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GOReleaseSkill& default_instance();

  void Swap(GOReleaseSkill* other);

  // implements Message ----------------------------------------------

  GOReleaseSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GOReleaseSkill& from);
  void MergeFrom(const GOReleaseSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGameObjectReleaseSkill];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 skillid = 3;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 3;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // optional .GSToGC.SkillState state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::GSToGC::SkillState state() const;
  inline void set_state(::GSToGC::SkillState value);

  // optional .GSToGC.Pos curPos = 5;
  inline bool has_curpos() const;
  inline void clear_curpos();
  static const int kCurPosFieldNumber = 5;
  inline const ::GSToGC::Pos& curpos() const;
  inline ::GSToGC::Pos* mutable_curpos();
  inline ::GSToGC::Pos* release_curpos();
  inline void set_allocated_curpos(::GSToGC::Pos* curpos);

  // optional .GSToGC.Dir curDir = 6;
  inline bool has_curdir() const;
  inline void clear_curdir();
  static const int kCurDirFieldNumber = 6;
  inline const ::GSToGC::Dir& curdir() const;
  inline ::GSToGC::Dir* mutable_curdir();
  inline ::GSToGC::Dir* release_curdir();
  inline void set_allocated_curdir(::GSToGC::Dir* curdir);

  // optional uint64 targuid = 7;
  inline bool has_targuid() const;
  inline void clear_targuid();
  static const int kTarguidFieldNumber = 7;
  inline ::google::protobuf::uint64 targuid() const;
  inline void set_targuid(::google::protobuf::uint64 value);

  // optional .GSToGC.Pos tarpos = 8;
  inline bool has_tarpos() const;
  inline void clear_tarpos();
  static const int kTarposFieldNumber = 8;
  inline const ::GSToGC::Pos& tarpos() const;
  inline ::GSToGC::Pos* mutable_tarpos();
  inline ::GSToGC::Pos* release_tarpos();
  inline void set_allocated_tarpos(::GSToGC::Pos* tarpos);

  // @@protoc_insertion_point(class_scope:GSToGC.GOReleaseSkill)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_curpos();
  inline void clear_has_curpos();
  inline void set_has_curdir();
  inline void clear_has_curdir();
  inline void set_has_targuid();
  inline void clear_has_targuid();
  inline void set_has_tarpos();
  inline void clear_has_tarpos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::int32 skillid_;
  ::GSToGC::Pos* curpos_;
  ::GSToGC::Dir* curdir_;
  ::google::protobuf::uint64 targuid_;
  ::GSToGC::Pos* tarpos_;
  int state_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static GOReleaseSkill* default_instance_;
};
// -------------------------------------------------------------------

class GOSkillCD : public ::google::protobuf::Message {
 public:
  GOSkillCD();
  virtual ~GOSkillCD();

  GOSkillCD(const GOSkillCD& from);

  inline GOSkillCD& operator=(const GOSkillCD& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GOSkillCD& default_instance();

  void Swap(GOSkillCD* other);

  // implements Message ----------------------------------------------

  GOSkillCD* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GOSkillCD& from);
  void MergeFrom(const GOSkillCD& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGameObjectSkillCD];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 skillid = 3;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 3;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // optional int32 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.GOSkillCD)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int32 time_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static GOSkillCD* default_instance_;
};
// -------------------------------------------------------------------

class EmitSkill : public ::google::protobuf::Message {
 public:
  EmitSkill();
  virtual ~EmitSkill();

  EmitSkill(const EmitSkill& from);

  inline EmitSkill& operator=(const EmitSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EmitSkill& default_instance();

  void Swap(EmitSkill* other);

  // implements Message ----------------------------------------------

  EmitSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EmitSkill& from);
  void MergeFrom(const EmitSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelEmit];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional uint32 effectid = 3;
  inline bool has_effectid() const;
  inline void clear_effectid();
  static const int kEffectidFieldNumber = 3;
  inline ::google::protobuf::uint32 effectid() const;
  inline void set_effectid(::google::protobuf::uint32 value);

  // optional int32 uniqueid = 4;
  inline bool has_uniqueid() const;
  inline void clear_uniqueid();
  static const int kUniqueidFieldNumber = 4;
  inline ::google::protobuf::int32 uniqueid() const;
  inline void set_uniqueid(::google::protobuf::int32 value);

  // optional .GSToGC.Dir dir = 5;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 5;
  inline const ::GSToGC::Dir& dir() const;
  inline ::GSToGC::Dir* mutable_dir();
  inline ::GSToGC::Dir* release_dir();
  inline void set_allocated_dir(::GSToGC::Dir* dir);

  // optional uint64 targuid = 6;
  inline bool has_targuid() const;
  inline void clear_targuid();
  static const int kTarguidFieldNumber = 6;
  inline ::google::protobuf::uint64 targuid() const;
  inline void set_targuid(::google::protobuf::uint64 value);

  // optional .GSToGC.Pos tarpos = 7;
  inline bool has_tarpos() const;
  inline void clear_tarpos();
  static const int kTarposFieldNumber = 7;
  inline const ::GSToGC::Pos& tarpos() const;
  inline ::GSToGC::Pos* mutable_tarpos();
  inline ::GSToGC::Pos* release_tarpos();
  inline void set_allocated_tarpos(::GSToGC::Pos* tarpos);

  // optional bool ifAbsorbSkill = 8;
  inline bool has_ifabsorbskill() const;
  inline void clear_ifabsorbskill();
  static const int kIfAbsorbSkillFieldNumber = 8;
  inline bool ifabsorbskill() const;
  inline void set_ifabsorbskill(bool value);

  // @@protoc_insertion_point(class_scope:GSToGC.EmitSkill)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_effectid();
  inline void clear_has_effectid();
  inline void set_has_uniqueid();
  inline void clear_has_uniqueid();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_targuid();
  inline void clear_has_targuid();
  inline void set_has_tarpos();
  inline void clear_has_tarpos();
  inline void set_has_ifabsorbskill();
  inline void clear_has_ifabsorbskill();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::uint32 effectid_;
  ::GSToGC::Dir* dir_;
  ::google::protobuf::uint64 targuid_;
  ::google::protobuf::int32 uniqueid_;
  bool ifabsorbskill_;
  ::GSToGC::Pos* tarpos_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static EmitSkill* default_instance_;
};
// -------------------------------------------------------------------

class DestroyEmitEffect : public ::google::protobuf::Message {
 public:
  DestroyEmitEffect();
  virtual ~DestroyEmitEffect();

  DestroyEmitEffect(const DestroyEmitEffect& from);

  inline DestroyEmitEffect& operator=(const DestroyEmitEffect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DestroyEmitEffect& default_instance();

  void Swap(DestroyEmitEffect* other);

  // implements Message ----------------------------------------------

  DestroyEmitEffect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DestroyEmitEffect& from);
  void MergeFrom(const DestroyEmitEffect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelEmitDestroy];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int32 uniqueid = 2;
  inline bool has_uniqueid() const;
  inline void clear_uniqueid();
  static const int kUniqueidFieldNumber = 2;
  inline ::google::protobuf::int32 uniqueid() const;
  inline void set_uniqueid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.DestroyEmitEffect)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_uniqueid();
  inline void clear_has_uniqueid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::int32 uniqueid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static DestroyEmitEffect* default_instance_;
};
// -------------------------------------------------------------------

class HitTar : public ::google::protobuf::Message {
 public:
  HitTar();
  virtual ~HitTar();

  HitTar(const HitTar& from);

  inline HitTar& operator=(const HitTar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HitTar& default_instance();

  void Swap(HitTar* other);

  // implements Message ----------------------------------------------

  HitTar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HitTar& from);
  void MergeFrom(const HitTar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelHitTarget];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional uint32 effectid = 3;
  inline bool has_effectid() const;
  inline void clear_effectid();
  static const int kEffectidFieldNumber = 3;
  inline ::google::protobuf::uint32 effectid() const;
  inline void set_effectid(::google::protobuf::uint32 value);

  // optional uint64 targuid = 4;
  inline bool has_targuid() const;
  inline void clear_targuid();
  static const int kTarguidFieldNumber = 4;
  inline ::google::protobuf::uint64 targuid() const;
  inline void set_targuid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:GSToGC.HitTar)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_effectid();
  inline void clear_has_effectid();
  inline void set_has_targuid();
  inline void clear_has_targuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::uint32 effectid_;
  ::google::protobuf::uint64 targuid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static HitTar* default_instance_;
};
// -------------------------------------------------------------------

class RangeEffect : public ::google::protobuf::Message {
 public:
  RangeEffect();
  virtual ~RangeEffect();

  RangeEffect(const RangeEffect& from);

  inline RangeEffect& operator=(const RangeEffect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RangeEffect& default_instance();

  void Swap(RangeEffect* other);

  // implements Message ----------------------------------------------

  RangeEffect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RangeEffect& from);
  void MergeFrom(const RangeEffect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelRange];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional uint32 effectid = 3;
  inline bool has_effectid() const;
  inline void clear_effectid();
  static const int kEffectidFieldNumber = 3;
  inline ::google::protobuf::uint32 effectid() const;
  inline void set_effectid(::google::protobuf::uint32 value);

  // optional uint32 uniqueid = 4;
  inline bool has_uniqueid() const;
  inline void clear_uniqueid();
  static const int kUniqueidFieldNumber = 4;
  inline ::google::protobuf::uint32 uniqueid() const;
  inline void set_uniqueid(::google::protobuf::uint32 value);

  // optional .GSToGC.Dir dir = 5;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 5;
  inline const ::GSToGC::Dir& dir() const;
  inline ::GSToGC::Dir* mutable_dir();
  inline ::GSToGC::Dir* release_dir();
  inline void set_allocated_dir(::GSToGC::Dir* dir);

  // optional .GSToGC.Pos pos = 6;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 6;
  inline const ::GSToGC::Pos& pos() const;
  inline ::GSToGC::Pos* mutable_pos();
  inline ::GSToGC::Pos* release_pos();
  inline void set_allocated_pos(::GSToGC::Pos* pos);

  // @@protoc_insertion_point(class_scope:GSToGC.RangeEffect)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_effectid();
  inline void clear_has_effectid();
  inline void set_has_uniqueid();
  inline void clear_has_uniqueid();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::uint32 effectid_;
  ::GSToGC::Dir* dir_;
  ::GSToGC::Pos* pos_;
  ::google::protobuf::uint32 uniqueid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static RangeEffect* default_instance_;
};
// -------------------------------------------------------------------

class RangeEffectEnd : public ::google::protobuf::Message {
 public:
  RangeEffectEnd();
  virtual ~RangeEffectEnd();

  RangeEffectEnd(const RangeEffectEnd& from);

  inline RangeEffectEnd& operator=(const RangeEffectEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RangeEffectEnd& default_instance();

  void Swap(RangeEffectEnd* other);

  // implements Message ----------------------------------------------

  RangeEffectEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RangeEffectEnd& from);
  void MergeFrom(const RangeEffectEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelRangeEnd];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional uint32 uniqueid = 3;
  inline bool has_uniqueid() const;
  inline void clear_uniqueid();
  static const int kUniqueidFieldNumber = 3;
  inline ::google::protobuf::uint32 uniqueid() const;
  inline void set_uniqueid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.RangeEffectEnd)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_uniqueid();
  inline void clear_has_uniqueid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::uint32 uniqueid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static RangeEffectEnd* default_instance_;
};
// -------------------------------------------------------------------

class SummonEffect : public ::google::protobuf::Message {
 public:
  SummonEffect();
  virtual ~SummonEffect();

  SummonEffect(const SummonEffect& from);

  inline SummonEffect& operator=(const SummonEffect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SummonEffect& default_instance();

  void Swap(SummonEffect* other);

  // implements Message ----------------------------------------------

  SummonEffect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SummonEffect& from);
  void MergeFrom(const SummonEffect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelSummonEffect];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional uint32 effectid = 3;
  inline bool has_effectid() const;
  inline void clear_effectid();
  static const int kEffectidFieldNumber = 3;
  inline ::google::protobuf::uint32 effectid() const;
  inline void set_effectid(::google::protobuf::uint32 value);

  // optional uint64 npcguid = 4;
  inline bool has_npcguid() const;
  inline void clear_npcguid();
  static const int kNpcguidFieldNumber = 4;
  inline ::google::protobuf::uint64 npcguid() const;
  inline void set_npcguid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:GSToGC.SummonEffect)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_effectid();
  inline void clear_has_effectid();
  inline void set_has_npcguid();
  inline void clear_has_npcguid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::uint32 effectid_;
  ::google::protobuf::uint64 npcguid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static SummonEffect* default_instance_;
};
// -------------------------------------------------------------------

class BuffEffect : public ::google::protobuf::Message {
 public:
  BuffEffect();
  virtual ~BuffEffect();

  BuffEffect(const BuffEffect& from);

  inline BuffEffect& operator=(const BuffEffect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuffEffect& default_instance();

  void Swap(BuffEffect* other);

  // implements Message ----------------------------------------------

  BuffEffect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuffEffect& from);
  void MergeFrom(const BuffEffect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelBufEffect];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional uint32 effectid = 3;
  inline bool has_effectid() const;
  inline void clear_effectid();
  static const int kEffectidFieldNumber = 3;
  inline ::google::protobuf::uint32 effectid() const;
  inline void set_effectid(::google::protobuf::uint32 value);

  // optional uint32 uniqueid = 4;
  inline bool has_uniqueid() const;
  inline void clear_uniqueid();
  static const int kUniqueidFieldNumber = 4;
  inline ::google::protobuf::uint32 uniqueid() const;
  inline void set_uniqueid(::google::protobuf::uint32 value);

  // optional uint64 targuid = 5;
  inline bool has_targuid() const;
  inline void clear_targuid();
  static const int kTarguidFieldNumber = 5;
  inline ::google::protobuf::uint64 targuid() const;
  inline void set_targuid(::google::protobuf::uint64 value);

  // optional int32 time = 6;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 6;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional int32 state = 7;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 7;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.BuffEffect)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_effectid();
  inline void clear_has_effectid();
  inline void set_has_uniqueid();
  inline void clear_has_uniqueid();
  inline void set_has_targuid();
  inline void clear_has_targuid();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::uint32 effectid_;
  ::google::protobuf::uint64 targuid_;
  ::google::protobuf::uint32 uniqueid_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 state_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static BuffEffect* default_instance_;
};
// -------------------------------------------------------------------

class NotifySummonLifeTime : public ::google::protobuf::Message {
 public:
  NotifySummonLifeTime();
  virtual ~NotifySummonLifeTime();

  NotifySummonLifeTime(const NotifySummonLifeTime& from);

  inline NotifySummonLifeTime& operator=(const NotifySummonLifeTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifySummonLifeTime& default_instance();

  void Swap(NotifySummonLifeTime* other);

  // implements Message ----------------------------------------------

  NotifySummonLifeTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifySummonLifeTime& from);
  void MergeFrom(const NotifySummonLifeTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySummonLifeTime];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 lifetime = 3;
  inline bool has_lifetime() const;
  inline void clear_lifetime();
  static const int kLifetimeFieldNumber = 3;
  inline ::google::protobuf::int32 lifetime() const;
  inline void set_lifetime(::google::protobuf::int32 value);

  // optional int32 resttime = 4;
  inline bool has_resttime() const;
  inline void clear_resttime();
  static const int kResttimeFieldNumber = 4;
  inline ::google::protobuf::int32 resttime() const;
  inline void set_resttime(::google::protobuf::int32 value);

  // optional .GSToGC.Pos pos = 5;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 5;
  inline const ::GSToGC::Pos& pos() const;
  inline ::GSToGC::Pos* mutable_pos();
  inline ::GSToGC::Pos* release_pos();
  inline void set_allocated_pos(::GSToGC::Pos* pos);

  // optional .GSToGC.Dir dir = 6;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 6;
  inline const ::GSToGC::Dir& dir() const;
  inline ::GSToGC::Dir* mutable_dir();
  inline ::GSToGC::Dir* release_dir();
  inline void set_allocated_dir(::GSToGC::Dir* dir);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifySummonLifeTime)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_lifetime();
  inline void clear_has_lifetime();
  inline void set_has_resttime();
  inline void clear_has_resttime();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_dir();
  inline void clear_has_dir();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::int32 lifetime_;
  ::GSToGC::Pos* pos_;
  ::GSToGC::Dir* dir_;
  ::google::protobuf::int32 resttime_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifySummonLifeTime* default_instance_;
};
// -------------------------------------------------------------------

class NotifySkillModelStartForceMove : public ::google::protobuf::Message {
 public:
  NotifySkillModelStartForceMove();
  virtual ~NotifySkillModelStartForceMove();

  NotifySkillModelStartForceMove(const NotifySkillModelStartForceMove& from);

  inline NotifySkillModelStartForceMove& operator=(const NotifySkillModelStartForceMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifySkillModelStartForceMove& default_instance();

  void Swap(NotifySkillModelStartForceMove* other);

  // implements Message ----------------------------------------------

  NotifySkillModelStartForceMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifySkillModelStartForceMove& from);
  void MergeFrom(const NotifySkillModelStartForceMove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelStartForceMove];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 effectid = 3;
  inline bool has_effectid() const;
  inline void clear_effectid();
  static const int kEffectidFieldNumber = 3;
  inline ::google::protobuf::int32 effectid() const;
  inline void set_effectid(::google::protobuf::int32 value);

  // optional .GSToGC.Dir dir = 4;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 4;
  inline const ::GSToGC::Dir& dir() const;
  inline ::GSToGC::Dir* mutable_dir();
  inline ::GSToGC::Dir* release_dir();
  inline void set_allocated_dir(::GSToGC::Dir* dir);

  // optional .GSToGC.Pos pod = 5;
  inline bool has_pod() const;
  inline void clear_pod();
  static const int kPodFieldNumber = 5;
  inline const ::GSToGC::Pos& pod() const;
  inline ::GSToGC::Pos* mutable_pod();
  inline ::GSToGC::Pos* release_pod();
  inline void set_allocated_pod(::GSToGC::Pos* pod);

  // optional int32 speed = 6;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 6;
  inline ::google::protobuf::int32 speed() const;
  inline void set_speed(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifySkillModelStartForceMove)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_effectid();
  inline void clear_has_effectid();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_pod();
  inline void clear_has_pod();
  inline void set_has_speed();
  inline void clear_has_speed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::int32 effectid_;
  ::GSToGC::Dir* dir_;
  ::GSToGC::Pos* pod_;
  ::google::protobuf::int32 speed_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifySkillModelStartForceMove* default_instance_;
};
// -------------------------------------------------------------------

class NotifySkillModelStartForceMoveStop : public ::google::protobuf::Message {
 public:
  NotifySkillModelStartForceMoveStop();
  virtual ~NotifySkillModelStartForceMoveStop();

  NotifySkillModelStartForceMoveStop(const NotifySkillModelStartForceMoveStop& from);

  inline NotifySkillModelStartForceMoveStop& operator=(const NotifySkillModelStartForceMoveStop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifySkillModelStartForceMoveStop& default_instance();

  void Swap(NotifySkillModelStartForceMoveStop* other);

  // implements Message ----------------------------------------------

  NotifySkillModelStartForceMoveStop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifySkillModelStartForceMoveStop& from);
  void MergeFrom(const NotifySkillModelStartForceMoveStop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelStartForceMoveStop];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 effectid = 3;
  inline bool has_effectid() const;
  inline void clear_effectid();
  static const int kEffectidFieldNumber = 3;
  inline ::google::protobuf::int32 effectid() const;
  inline void set_effectid(::google::protobuf::int32 value);

  // optional .GSToGC.Pos pos = 4;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 4;
  inline const ::GSToGC::Pos& pos() const;
  inline ::GSToGC::Pos* mutable_pos();
  inline ::GSToGC::Pos* release_pos();
  inline void set_allocated_pos(::GSToGC::Pos* pos);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifySkillModelStartForceMoveStop)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_effectid();
  inline void clear_has_effectid();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::int32 effectid_;
  ::GSToGC::Pos* pos_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifySkillModelStartForceMoveStop* default_instance_;
};
// -------------------------------------------------------------------

class NotifySkillModelStartForceMoveTeleport : public ::google::protobuf::Message {
 public:
  NotifySkillModelStartForceMoveTeleport();
  virtual ~NotifySkillModelStartForceMoveTeleport();

  NotifySkillModelStartForceMoveTeleport(const NotifySkillModelStartForceMoveTeleport& from);

  inline NotifySkillModelStartForceMoveTeleport& operator=(const NotifySkillModelStartForceMoveTeleport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifySkillModelStartForceMoveTeleport& default_instance();

  void Swap(NotifySkillModelStartForceMoveTeleport* other);

  // implements Message ----------------------------------------------

  NotifySkillModelStartForceMoveTeleport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifySkillModelStartForceMoveTeleport& from);
  void MergeFrom(const NotifySkillModelStartForceMoveTeleport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelStartForceMoveTeleport];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 effectid = 3;
  inline bool has_effectid() const;
  inline void clear_effectid();
  static const int kEffectidFieldNumber = 3;
  inline ::google::protobuf::int32 effectid() const;
  inline void set_effectid(::google::protobuf::int32 value);

  // optional .GSToGC.Pos beginpos = 4;
  inline bool has_beginpos() const;
  inline void clear_beginpos();
  static const int kBeginposFieldNumber = 4;
  inline const ::GSToGC::Pos& beginpos() const;
  inline ::GSToGC::Pos* mutable_beginpos();
  inline ::GSToGC::Pos* release_beginpos();
  inline void set_allocated_beginpos(::GSToGC::Pos* beginpos);

  // optional .GSToGC.Dir begindir = 5;
  inline bool has_begindir() const;
  inline void clear_begindir();
  static const int kBegindirFieldNumber = 5;
  inline const ::GSToGC::Dir& begindir() const;
  inline ::GSToGC::Dir* mutable_begindir();
  inline ::GSToGC::Dir* release_begindir();
  inline void set_allocated_begindir(::GSToGC::Dir* begindir);

  // optional .GSToGC.Pos tarpos = 6;
  inline bool has_tarpos() const;
  inline void clear_tarpos();
  static const int kTarposFieldNumber = 6;
  inline const ::GSToGC::Pos& tarpos() const;
  inline ::GSToGC::Pos* mutable_tarpos();
  inline ::GSToGC::Pos* release_tarpos();
  inline void set_allocated_tarpos(::GSToGC::Pos* tarpos);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifySkillModelStartForceMoveTeleport)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_effectid();
  inline void clear_has_effectid();
  inline void set_has_beginpos();
  inline void clear_has_beginpos();
  inline void set_has_begindir();
  inline void clear_has_begindir();
  inline void set_has_tarpos();
  inline void clear_has_tarpos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::int32 effectid_;
  ::GSToGC::Pos* beginpos_;
  ::GSToGC::Dir* begindir_;
  ::GSToGC::Pos* tarpos_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifySkillModelStartForceMoveTeleport* default_instance_;
};
// -------------------------------------------------------------------

class NotifySkillModelPurification : public ::google::protobuf::Message {
 public:
  NotifySkillModelPurification();
  virtual ~NotifySkillModelPurification();

  NotifySkillModelPurification(const NotifySkillModelPurification& from);

  inline NotifySkillModelPurification& operator=(const NotifySkillModelPurification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifySkillModelPurification& default_instance();

  void Swap(NotifySkillModelPurification* other);

  // implements Message ----------------------------------------------

  NotifySkillModelPurification* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifySkillModelPurification& from);
  void MergeFrom(const NotifySkillModelPurification& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelPurification];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional uint64 targetguid = 3;
  inline bool has_targetguid() const;
  inline void clear_targetguid();
  static const int kTargetguidFieldNumber = 3;
  inline ::google::protobuf::uint64 targetguid() const;
  inline void set_targetguid(::google::protobuf::uint64 value);

  // optional int32 effectid = 4;
  inline bool has_effectid() const;
  inline void clear_effectid();
  static const int kEffectidFieldNumber = 4;
  inline ::google::protobuf::int32 effectid() const;
  inline void set_effectid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifySkillModelPurification)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_targetguid();
  inline void clear_has_targetguid();
  inline void set_has_effectid();
  inline void clear_has_effectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::int32 effectid_;
  ::google::protobuf::uint64 targetguid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifySkillModelPurification* default_instance_;
};
// -------------------------------------------------------------------

class NotifySkillModelStartLink : public ::google::protobuf::Message {
 public:
  NotifySkillModelStartLink();
  virtual ~NotifySkillModelStartLink();

  NotifySkillModelStartLink(const NotifySkillModelStartLink& from);

  inline NotifySkillModelStartLink& operator=(const NotifySkillModelStartLink& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifySkillModelStartLink& default_instance();

  void Swap(NotifySkillModelStartLink* other);

  // implements Message ----------------------------------------------

  NotifySkillModelStartLink* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifySkillModelStartLink& from);
  void MergeFrom(const NotifySkillModelStartLink& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelStartLink];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional .GSToGC.Pos beginpos = 3;
  inline bool has_beginpos() const;
  inline void clear_beginpos();
  static const int kBeginposFieldNumber = 3;
  inline const ::GSToGC::Pos& beginpos() const;
  inline ::GSToGC::Pos* mutable_beginpos();
  inline ::GSToGC::Pos* release_beginpos();
  inline void set_allocated_beginpos(::GSToGC::Pos* beginpos);

  // optional uint64 targetguid = 4;
  inline bool has_targetguid() const;
  inline void clear_targetguid();
  static const int kTargetguidFieldNumber = 4;
  inline ::google::protobuf::uint64 targetguid() const;
  inline void set_targetguid(::google::protobuf::uint64 value);

  // optional int32 effectid = 5;
  inline bool has_effectid() const;
  inline void clear_effectid();
  static const int kEffectidFieldNumber = 5;
  inline ::google::protobuf::int32 effectid() const;
  inline void set_effectid(::google::protobuf::int32 value);

  // optional uint32 uniqueid = 6;
  inline bool has_uniqueid() const;
  inline void clear_uniqueid();
  static const int kUniqueidFieldNumber = 6;
  inline ::google::protobuf::uint32 uniqueid() const;
  inline void set_uniqueid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifySkillModelStartLink)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_beginpos();
  inline void clear_has_beginpos();
  inline void set_has_targetguid();
  inline void clear_has_targetguid();
  inline void set_has_effectid();
  inline void clear_has_effectid();
  inline void set_has_uniqueid();
  inline void clear_has_uniqueid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::GSToGC::Pos* beginpos_;
  int msgid_;
  ::google::protobuf::int32 effectid_;
  ::google::protobuf::uint64 targetguid_;
  ::google::protobuf::uint32 uniqueid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifySkillModelStartLink* default_instance_;
};
// -------------------------------------------------------------------

class NotifySkillModelStopLink : public ::google::protobuf::Message {
 public:
  NotifySkillModelStopLink();
  virtual ~NotifySkillModelStopLink();

  NotifySkillModelStopLink(const NotifySkillModelStopLink& from);

  inline NotifySkillModelStopLink& operator=(const NotifySkillModelStopLink& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifySkillModelStopLink& default_instance();

  void Swap(NotifySkillModelStopLink* other);

  // implements Message ----------------------------------------------

  NotifySkillModelStopLink* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifySkillModelStopLink& from);
  void MergeFrom(const NotifySkillModelStopLink& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelStopLink];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint32 uniqueid = 2;
  inline bool has_uniqueid() const;
  inline void clear_uniqueid();
  static const int kUniqueidFieldNumber = 2;
  inline ::google::protobuf::uint32 uniqueid() const;
  inline void set_uniqueid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifySkillModelStopLink)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_uniqueid();
  inline void clear_has_uniqueid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::uint32 uniqueid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifySkillModelStopLink* default_instance_;
};
// -------------------------------------------------------------------

class NotifyPassitiveSkillRelease : public ::google::protobuf::Message {
 public:
  NotifyPassitiveSkillRelease();
  virtual ~NotifyPassitiveSkillRelease();

  NotifyPassitiveSkillRelease(const NotifyPassitiveSkillRelease& from);

  inline NotifyPassitiveSkillRelease& operator=(const NotifyPassitiveSkillRelease& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyPassitiveSkillRelease& default_instance();

  void Swap(NotifyPassitiveSkillRelease* other);

  // implements Message ----------------------------------------------

  NotifyPassitiveSkillRelease* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyPassitiveSkillRelease& from);
  void MergeFrom(const NotifyPassitiveSkillRelease& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyPassitiveSkillRelease];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 skillid = 3;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 3;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // optional int32 timeLeft = 4;
  inline bool has_timeleft() const;
  inline void clear_timeleft();
  static const int kTimeLeftFieldNumber = 4;
  inline ::google::protobuf::int32 timeleft() const;
  inline void set_timeleft(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyPassitiveSkillRelease)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_timeleft();
  inline void clear_has_timeleft();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int32 timeleft_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyPassitiveSkillRelease* default_instance_;
};
// -------------------------------------------------------------------

class NotifyPassitiveSkillLoad : public ::google::protobuf::Message {
 public:
  NotifyPassitiveSkillLoad();
  virtual ~NotifyPassitiveSkillLoad();

  NotifyPassitiveSkillLoad(const NotifyPassitiveSkillLoad& from);

  inline NotifyPassitiveSkillLoad& operator=(const NotifyPassitiveSkillLoad& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyPassitiveSkillLoad& default_instance();

  void Swap(NotifyPassitiveSkillLoad* other);

  // implements Message ----------------------------------------------

  NotifyPassitiveSkillLoad* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyPassitiveSkillLoad& from);
  void MergeFrom(const NotifyPassitiveSkillLoad& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyPassitiveSkillLoad];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 skillid = 3;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 3;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // optional int32 uniqueid = 4;
  inline bool has_uniqueid() const;
  inline void clear_uniqueid();
  static const int kUniqueidFieldNumber = 4;
  inline ::google::protobuf::int32 uniqueid() const;
  inline void set_uniqueid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyPassitiveSkillLoad)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_uniqueid();
  inline void clear_has_uniqueid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int32 uniqueid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyPassitiveSkillLoad* default_instance_;
};
// -------------------------------------------------------------------

class NotifyPassitiveSkillUnLoad : public ::google::protobuf::Message {
 public:
  NotifyPassitiveSkillUnLoad();
  virtual ~NotifyPassitiveSkillUnLoad();

  NotifyPassitiveSkillUnLoad(const NotifyPassitiveSkillUnLoad& from);

  inline NotifyPassitiveSkillUnLoad& operator=(const NotifyPassitiveSkillUnLoad& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyPassitiveSkillUnLoad& default_instance();

  void Swap(NotifyPassitiveSkillUnLoad* other);

  // implements Message ----------------------------------------------

  NotifyPassitiveSkillUnLoad* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyPassitiveSkillUnLoad& from);
  void MergeFrom(const NotifyPassitiveSkillUnLoad& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyPassitiveSkillUnload];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 skillid = 3;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 3;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // optional int32 uniqueid = 4;
  inline bool has_uniqueid() const;
  inline void clear_uniqueid();
  static const int kUniqueidFieldNumber = 4;
  inline ::google::protobuf::int32 uniqueid() const;
  inline void set_uniqueid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyPassitiveSkillUnLoad)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_uniqueid();
  inline void clear_has_uniqueid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int32 uniqueid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyPassitiveSkillUnLoad* default_instance_;
};
// -------------------------------------------------------------------

class NotifySkillModelEmitTurn : public ::google::protobuf::Message {
 public:
  NotifySkillModelEmitTurn();
  virtual ~NotifySkillModelEmitTurn();

  NotifySkillModelEmitTurn(const NotifySkillModelEmitTurn& from);

  inline NotifySkillModelEmitTurn& operator=(const NotifySkillModelEmitTurn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifySkillModelEmitTurn& default_instance();

  void Swap(NotifySkillModelEmitTurn* other);

  // implements Message ----------------------------------------------

  NotifySkillModelEmitTurn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifySkillModelEmitTurn& from);
  void MergeFrom(const NotifySkillModelEmitTurn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelEmitTurn];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional uint32 effectid = 3;
  inline bool has_effectid() const;
  inline void clear_effectid();
  static const int kEffectidFieldNumber = 3;
  inline ::google::protobuf::uint32 effectid() const;
  inline void set_effectid(::google::protobuf::uint32 value);

  // optional int32 progectid = 4;
  inline bool has_progectid() const;
  inline void clear_progectid();
  static const int kProgectidFieldNumber = 4;
  inline ::google::protobuf::int32 progectid() const;
  inline void set_progectid(::google::protobuf::int32 value);

  // optional .GSToGC.Pos pos = 5;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 5;
  inline const ::GSToGC::Pos& pos() const;
  inline ::GSToGC::Pos* mutable_pos();
  inline ::GSToGC::Pos* release_pos();
  inline void set_allocated_pos(::GSToGC::Pos* pos);

  // optional .GSToGC.Dir dir = 6;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 6;
  inline const ::GSToGC::Dir& dir() const;
  inline ::GSToGC::Dir* mutable_dir();
  inline ::GSToGC::Dir* release_dir();
  inline void set_allocated_dir(::GSToGC::Dir* dir);

  // optional uint64 targuid = 7;
  inline bool has_targuid() const;
  inline void clear_targuid();
  static const int kTarguidFieldNumber = 7;
  inline ::google::protobuf::uint64 targuid() const;
  inline void set_targuid(::google::protobuf::uint64 value);

  // optional .GSToGC.Pos tarpos = 8;
  inline bool has_tarpos() const;
  inline void clear_tarpos();
  static const int kTarposFieldNumber = 8;
  inline const ::GSToGC::Pos& tarpos() const;
  inline ::GSToGC::Pos* mutable_tarpos();
  inline ::GSToGC::Pos* release_tarpos();
  inline void set_allocated_tarpos(::GSToGC::Pos* tarpos);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifySkillModelEmitTurn)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_effectid();
  inline void clear_has_effectid();
  inline void set_has_progectid();
  inline void clear_has_progectid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_targuid();
  inline void clear_has_targuid();
  inline void set_has_tarpos();
  inline void clear_has_tarpos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::uint32 effectid_;
  ::GSToGC::Pos* pos_;
  ::GSToGC::Dir* dir_;
  ::google::protobuf::uint64 targuid_;
  ::GSToGC::Pos* tarpos_;
  ::google::protobuf::int32 progectid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifySkillModelEmitTurn* default_instance_;
};
// -------------------------------------------------------------------

class NotifyBornObj : public ::google::protobuf::Message {
 public:
  NotifyBornObj();
  virtual ~NotifyBornObj();

  NotifyBornObj(const NotifyBornObj& from);

  inline NotifyBornObj& operator=(const NotifyBornObj& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyBornObj& default_instance();

  void Swap(NotifyBornObj* other);

  // implements Message ----------------------------------------------

  NotifyBornObj* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyBornObj& from);
  void MergeFrom(const NotifyBornObj& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToSSFromCS_NotifyBornObj];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyBornObj)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyBornObj* default_instance_;
};
// -------------------------------------------------------------------

class NotifyReconnectInfo_ReconnectInfo : public ::google::protobuf::Message {
 public:
  NotifyReconnectInfo_ReconnectInfo();
  virtual ~NotifyReconnectInfo_ReconnectInfo();

  NotifyReconnectInfo_ReconnectInfo(const NotifyReconnectInfo_ReconnectInfo& from);

  inline NotifyReconnectInfo_ReconnectInfo& operator=(const NotifyReconnectInfo_ReconnectInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyReconnectInfo_ReconnectInfo& default_instance();

  void Swap(NotifyReconnectInfo_ReconnectInfo* other);

  // implements Message ----------------------------------------------

  NotifyReconnectInfo_ReconnectInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyReconnectInfo_ReconnectInfo& from);
  void MergeFrom(const NotifyReconnectInfo_ReconnectInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional string nickname = 3;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional uint32 heroid = 4;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 4;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);

  // optional bool ifselected = 5;
  inline bool has_ifselected() const;
  inline void clear_ifselected();
  static const int kIfselectedFieldNumber = 5;
  inline bool ifselected() const;
  inline void set_ifselected(bool value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyReconnectInfo.ReconnectInfo)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_ifselected();
  inline void clear_has_ifselected();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::uint32 heroid_;
  ::std::string* nickname_;
  bool ifselected_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyReconnectInfo_ReconnectInfo* default_instance_;
};
// -------------------------------------------------------------------

class NotifyReconnectInfo : public ::google::protobuf::Message {
 public:
  NotifyReconnectInfo();
  virtual ~NotifyReconnectInfo();

  NotifyReconnectInfo(const NotifyReconnectInfo& from);

  inline NotifyReconnectInfo& operator=(const NotifyReconnectInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyReconnectInfo& default_instance();

  void Swap(NotifyReconnectInfo* other);

  // implements Message ----------------------------------------------

  NotifyReconnectInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyReconnectInfo& from);
  void MergeFrom(const NotifyReconnectInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef NotifyReconnectInfo_ReconnectInfo ReconnectInfo;

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromCS_NotifyReconnectInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int32 battlestate = 2;
  inline bool has_battlestate() const;
  inline void clear_battlestate();
  static const int kBattlestateFieldNumber = 2;
  inline ::google::protobuf::int32 battlestate() const;
  inline void set_battlestate(::google::protobuf::int32 value);

  // optional int32 remain_times = 3;
  inline bool has_remain_times() const;
  inline void clear_remain_times();
  static const int kRemainTimesFieldNumber = 3;
  inline ::google::protobuf::int32 remain_times() const;
  inline void set_remain_times(::google::protobuf::int32 value);

  // optional bool ifob = 4;
  inline bool has_ifob() const;
  inline void clear_ifob();
  static const int kIfobFieldNumber = 4;
  inline bool ifob() const;
  inline void set_ifob(bool value);

  // repeated .GSToGC.NotifyReconnectInfo.ReconnectInfo reconnectinfo = 5;
  inline int reconnectinfo_size() const;
  inline void clear_reconnectinfo();
  static const int kReconnectinfoFieldNumber = 5;
  inline const ::GSToGC::NotifyReconnectInfo_ReconnectInfo& reconnectinfo(int index) const;
  inline ::GSToGC::NotifyReconnectInfo_ReconnectInfo* mutable_reconnectinfo(int index);
  inline ::GSToGC::NotifyReconnectInfo_ReconnectInfo* add_reconnectinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyReconnectInfo_ReconnectInfo >&
      reconnectinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyReconnectInfo_ReconnectInfo >*
      mutable_reconnectinfo();

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyReconnectInfo)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_battlestate();
  inline void clear_has_battlestate();
  inline void set_has_remain_times();
  inline void clear_has_remain_times();
  inline void set_has_ifob();
  inline void clear_has_ifob();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::int32 battlestate_;
  ::google::protobuf::int32 remain_times_;
  bool ifob_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyReconnectInfo_ReconnectInfo > reconnectinfo_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyReconnectInfo* default_instance_;
};
// -------------------------------------------------------------------

class NotifyOBReturnBattleRoom : public ::google::protobuf::Message {
 public:
  NotifyOBReturnBattleRoom();
  virtual ~NotifyOBReturnBattleRoom();

  NotifyOBReturnBattleRoom(const NotifyOBReturnBattleRoom& from);

  inline NotifyOBReturnBattleRoom& operator=(const NotifyOBReturnBattleRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyOBReturnBattleRoom& default_instance();

  void Swap(NotifyOBReturnBattleRoom* other);

  // implements Message ----------------------------------------------

  NotifyOBReturnBattleRoom* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyOBReturnBattleRoom& from);
  void MergeFrom(const NotifyOBReturnBattleRoom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyOBReturnBattleRoom];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyOBReturnBattleRoom)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyOBReturnBattleRoom* default_instance_;
};
// -------------------------------------------------------------------

class NotifyOBAppear : public ::google::protobuf::Message {
 public:
  NotifyOBAppear();
  virtual ~NotifyOBAppear();

  NotifyOBAppear(const NotifyOBAppear& from);

  inline NotifyOBAppear& operator=(const NotifyOBAppear& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyOBAppear& default_instance();

  void Swap(NotifyOBAppear* other);

  // implements Message ----------------------------------------------

  NotifyOBAppear* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyOBAppear& from);
  void MergeFrom(const NotifyOBAppear& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyOBAppear];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 obid = 2;
  inline bool has_obid() const;
  inline void clear_obid();
  static const int kObidFieldNumber = 2;
  inline ::google::protobuf::uint64 obid() const;
  inline void set_obid(::google::protobuf::uint64 value);

  // optional int32 camp = 3;
  inline bool has_camp() const;
  inline void clear_camp();
  static const int kCampFieldNumber = 3;
  inline ::google::protobuf::int32 camp() const;
  inline void set_camp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyOBAppear)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_obid();
  inline void clear_has_obid();
  inline void set_has_camp();
  inline void clear_has_camp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 obid_;
  int msgid_;
  ::google::protobuf::int32 camp_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyOBAppear* default_instance_;
};
// -------------------------------------------------------------------

class NotifyKillNPC : public ::google::protobuf::Message {
 public:
  NotifyKillNPC();
  virtual ~NotifyKillNPC();

  NotifyKillNPC(const NotifyKillNPC& from);

  inline NotifyKillNPC& operator=(const NotifyKillNPC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyKillNPC& default_instance();

  void Swap(NotifyKillNPC* other);

  // implements Message ----------------------------------------------

  NotifyKillNPC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyKillNPC& from);
  void MergeFrom(const NotifyKillNPC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyKillNPC];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional uint32 killnum = 3;
  inline bool has_killnum() const;
  inline void clear_killnum();
  static const int kKillnumFieldNumber = 3;
  inline ::google::protobuf::uint32 killnum() const;
  inline void set_killnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyKillNPC)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_killnum();
  inline void clear_has_killnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::uint32 killnum_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyKillNPC* default_instance_;
};
// -------------------------------------------------------------------

class NotifyAltarBSIco : public ::google::protobuf::Message {
 public:
  NotifyAltarBSIco();
  virtual ~NotifyAltarBSIco();

  NotifyAltarBSIco(const NotifyAltarBSIco& from);

  inline NotifyAltarBSIco& operator=(const NotifyAltarBSIco& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyAltarBSIco& default_instance();

  void Swap(NotifyAltarBSIco* other);

  // implements Message ----------------------------------------------

  NotifyAltarBSIco* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyAltarBSIco& from);
  void MergeFrom(const NotifyAltarBSIco& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyAltarBSOk];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint32 altarid = 2;
  inline bool has_altarid() const;
  inline void clear_altarid();
  static const int kAltaridFieldNumber = 2;
  inline ::google::protobuf::uint32 altarid() const;
  inline void set_altarid(::google::protobuf::uint32 value);

  // optional uint32 objtype = 3;
  inline bool has_objtype() const;
  inline void clear_objtype();
  static const int kObjtypeFieldNumber = 3;
  inline ::google::protobuf::uint32 objtype() const;
  inline void set_objtype(::google::protobuf::uint32 value);

  // optional uint32 optype = 4;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOptypeFieldNumber = 4;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyAltarBSIco)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_altarid();
  inline void clear_has_altarid();
  inline void set_has_objtype();
  inline void clear_has_objtype();
  inline void set_has_optype();
  inline void clear_has_optype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::uint32 altarid_;
  ::google::protobuf::uint32 objtype_;
  ::google::protobuf::uint32 optype_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyAltarBSIco* default_instance_;
};
// -------------------------------------------------------------------

class NotifySkillUpLv : public ::google::protobuf::Message {
 public:
  NotifySkillUpLv();
  virtual ~NotifySkillUpLv();

  NotifySkillUpLv(const NotifySkillUpLv& from);

  inline NotifySkillUpLv& operator=(const NotifySkillUpLv& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifySkillUpLv& default_instance();

  void Swap(NotifySkillUpLv* other);

  // implements Message ----------------------------------------------

  NotifySkillUpLv* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifySkillUpLv& from);
  void MergeFrom(const NotifySkillUpLv& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillUpLv];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional uint32 skillpos = 3;
  inline bool has_skillpos() const;
  inline void clear_skillpos();
  static const int kSkillposFieldNumber = 3;
  inline ::google::protobuf::uint32 skillpos() const;
  inline void set_skillpos(::google::protobuf::uint32 value);

  // optional uint32 skillid = 4;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 4;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifySkillUpLv)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_skillpos();
  inline void clear_has_skillpos();
  inline void set_has_skillid();
  inline void clear_has_skillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::uint32 skillpos_;
  ::google::protobuf::uint32 skillid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifySkillUpLv* default_instance_;
};
// -------------------------------------------------------------------

class NotifyBlastHurt : public ::google::protobuf::Message {
 public:
  NotifyBlastHurt();
  virtual ~NotifyBlastHurt();

  NotifyBlastHurt(const NotifyBlastHurt& from);

  inline NotifyBlastHurt& operator=(const NotifyBlastHurt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyBlastHurt& default_instance();

  void Swap(NotifyBlastHurt* other);

  // implements Message ----------------------------------------------

  NotifyBlastHurt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyBlastHurt& from);
  void MergeFrom(const NotifyBlastHurt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBlastHurt];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 blasthp = 3;
  inline bool has_blasthp() const;
  inline void clear_blasthp();
  static const int kBlasthpFieldNumber = 3;
  inline ::google::protobuf::int32 blasthp() const;
  inline void set_blasthp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyBlastHurt)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_blasthp();
  inline void clear_has_blasthp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::int32 blasthp_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyBlastHurt* default_instance_;
};
// -------------------------------------------------------------------

class NotifyGameObjectReliveState : public ::google::protobuf::Message {
 public:
  NotifyGameObjectReliveState();
  virtual ~NotifyGameObjectReliveState();

  NotifyGameObjectReliveState(const NotifyGameObjectReliveState& from);

  inline NotifyGameObjectReliveState& operator=(const NotifyGameObjectReliveState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyGameObjectReliveState& default_instance();

  void Swap(NotifyGameObjectReliveState* other);

  // implements Message ----------------------------------------------

  NotifyGameObjectReliveState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyGameObjectReliveState& from);
  void MergeFrom(const NotifyGameObjectReliveState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGameObjectReliveState];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional .GSToGC.Pos pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline const ::GSToGC::Pos& pos() const;
  inline ::GSToGC::Pos* mutable_pos();
  inline ::GSToGC::Pos* release_pos();
  inline void set_allocated_pos(::GSToGC::Pos* pos);

  // optional .GSToGC.Dir dir = 4;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 4;
  inline const ::GSToGC::Dir& dir() const;
  inline ::GSToGC::Dir* mutable_dir();
  inline ::GSToGC::Dir* release_dir();
  inline void set_allocated_dir(::GSToGC::Dir* dir);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyGameObjectReliveState)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_dir();
  inline void clear_has_dir();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::GSToGC::Pos* pos_;
  ::GSToGC::Dir* dir_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyGameObjectReliveState* default_instance_;
};
// -------------------------------------------------------------------

class NotifyCurGold : public ::google::protobuf::Message {
 public:
  NotifyCurGold();
  virtual ~NotifyCurGold();

  NotifyCurGold(const NotifyCurGold& from);

  inline NotifyCurGold& operator=(const NotifyCurGold& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyCurGold& default_instance();

  void Swap(NotifyCurGold* other);

  // implements Message ----------------------------------------------

  NotifyCurGold* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyCurGold& from);
  void MergeFrom(const NotifyCurGold& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGs_NotifyCurGold];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 gold = 2;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 2;
  inline ::google::protobuf::uint64 gold() const;
  inline void set_gold(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyCurGold)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_gold();
  inline void clear_has_gold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 gold_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyCurGold* default_instance_;
};
// -------------------------------------------------------------------

class NotifyCurDiamond : public ::google::protobuf::Message {
 public:
  NotifyCurDiamond();
  virtual ~NotifyCurDiamond();

  NotifyCurDiamond(const NotifyCurDiamond& from);

  inline NotifyCurDiamond& operator=(const NotifyCurDiamond& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyCurDiamond& default_instance();

  void Swap(NotifyCurDiamond* other);

  // implements Message ----------------------------------------------

  NotifyCurDiamond* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyCurDiamond& from);
  void MergeFrom(const NotifyCurDiamond& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGs_NotifyCurDiamond];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 Diamond = 2;
  inline bool has_diamond() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 2;
  inline ::google::protobuf::uint64 diamond() const;
  inline void set_diamond(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:GSToGC.NotifyCurDiamond)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_diamond();
  inline void clear_has_diamond();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 diamond_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static NotifyCurDiamond* default_instance_;
};
// -------------------------------------------------------------------

class GetloginRewardSuccess : public ::google::protobuf::Message {
 public:
  GetloginRewardSuccess();
  virtual ~GetloginRewardSuccess();

  GetloginRewardSuccess(const GetloginRewardSuccess& from);

  inline GetloginRewardSuccess& operator=(const GetloginRewardSuccess& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetloginRewardSuccess& default_instance();

  void Swap(GetloginRewardSuccess* other);

  // implements Message ----------------------------------------------

  GetloginRewardSuccess* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetloginRewardSuccess& from);
  void MergeFrom(const GetloginRewardSuccess& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGetloginRewardSuccess];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // @@protoc_insertion_point(class_scope:GSToGC.GetloginRewardSuccess)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static GetloginRewardSuccess* default_instance_;
};
// -------------------------------------------------------------------

class GetloginReward_Skin : public ::google::protobuf::Message {
 public:
  GetloginReward_Skin();
  virtual ~GetloginReward_Skin();

  GetloginReward_Skin(const GetloginReward_Skin& from);

  inline GetloginReward_Skin& operator=(const GetloginReward_Skin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetloginReward_Skin& default_instance();

  void Swap(GetloginReward_Skin* other);

  // implements Message ----------------------------------------------

  GetloginReward_Skin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetloginReward_Skin& from);
  void MergeFrom(const GetloginReward_Skin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGetloginReward_Skin];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int64 skinid = 2;
  inline bool has_skinid() const;
  inline void clear_skinid();
  static const int kSkinidFieldNumber = 2;
  inline ::google::protobuf::int64 skinid() const;
  inline void set_skinid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GSToGC.GetloginReward_Skin)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_skinid();
  inline void clear_has_skinid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 skinid_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static GetloginReward_Skin* default_instance_;
};
// -------------------------------------------------------------------

class GetloginReward_Rune : public ::google::protobuf::Message {
 public:
  GetloginReward_Rune();
  virtual ~GetloginReward_Rune();

  GetloginReward_Rune(const GetloginReward_Rune& from);

  inline GetloginReward_Rune& operator=(const GetloginReward_Rune& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetloginReward_Rune& default_instance();

  void Swap(GetloginReward_Rune* other);

  // implements Message ----------------------------------------------

  GetloginReward_Rune* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetloginReward_Rune& from);
  void MergeFrom(const GetloginReward_Rune& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGetloginReward_Rune];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional int64 runeid = 2;
  inline bool has_runeid() const;
  inline void clear_runeid();
  static const int kRuneidFieldNumber = 2;
  inline ::google::protobuf::int64 runeid() const;
  inline void set_runeid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GSToGC.GetloginReward_Rune)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_runeid();
  inline void clear_has_runeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 runeid_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static GetloginReward_Rune* default_instance_;
};
// -------------------------------------------------------------------

class GetloginReward_Hero : public ::google::protobuf::Message {
 public:
  GetloginReward_Hero();
  virtual ~GetloginReward_Hero();

  GetloginReward_Hero(const GetloginReward_Hero& from);

  inline GetloginReward_Hero& operator=(const GetloginReward_Hero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetloginReward_Hero& default_instance();

  void Swap(GetloginReward_Hero* other);

  // implements Message ----------------------------------------------

  GetloginReward_Hero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetloginReward_Hero& from);
  void MergeFrom(const GetloginReward_Hero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGetloginReward_Hero];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint32 heroid = 2;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 2;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);

  // optional int64 expired_time = 3;
  inline bool has_expired_time() const;
  inline void clear_expired_time();
  static const int kExpiredTimeFieldNumber = 3;
  inline ::google::protobuf::int64 expired_time() const;
  inline void set_expired_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GSToGC.GetloginReward_Hero)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_expired_time();
  inline void clear_has_expired_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgid_;
  ::google::protobuf::uint32 heroid_;
  ::google::protobuf::int64 expired_time_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static GetloginReward_Hero* default_instance_;
};
// -------------------------------------------------------------------

class CanInviteFriends_Friends : public ::google::protobuf::Message {
 public:
  CanInviteFriends_Friends();
  virtual ~CanInviteFriends_Friends();

  CanInviteFriends_Friends(const CanInviteFriends_Friends& from);

  inline CanInviteFriends_Friends& operator=(const CanInviteFriends_Friends& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CanInviteFriends_Friends& default_instance();

  void Swap(CanInviteFriends_Friends* other);

  // implements Message ----------------------------------------------

  CanInviteFriends_Friends* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CanInviteFriends_Friends& from);
  void MergeFrom(const CanInviteFriends_Friends& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 HeaderId = 1;
  inline bool has_headerid() const;
  inline void clear_headerid();
  static const int kHeaderIdFieldNumber = 1;
  inline ::google::protobuf::int32 headerid() const;
  inline void set_headerid(::google::protobuf::int32 value);

  // optional string nickname = 2;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional uint64 guididx = 3;
  inline bool has_guididx() const;
  inline void clear_guididx();
  static const int kGuididxFieldNumber = 3;
  inline ::google::protobuf::uint64 guididx() const;
  inline void set_guididx(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:GSToGC.CanInviteFriends.Friends)
 private:
  inline void set_has_headerid();
  inline void clear_has_headerid();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_guididx();
  inline void clear_has_guididx();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* nickname_;
  ::google::protobuf::uint64 guididx_;
  ::google::protobuf::int32 headerid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static CanInviteFriends_Friends* default_instance_;
};
// -------------------------------------------------------------------

class CanInviteFriends : public ::google::protobuf::Message {
 public:
  CanInviteFriends();
  virtual ~CanInviteFriends();

  CanInviteFriends(const CanInviteFriends& from);

  inline CanInviteFriends& operator=(const CanInviteFriends& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CanInviteFriends& default_instance();

  void Swap(CanInviteFriends* other);

  // implements Message ----------------------------------------------

  CanInviteFriends* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CanInviteFriends& from);
  void MergeFrom(const CanInviteFriends& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CanInviteFriends_Friends Friends;

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromBS_NotifyCanInviteFriends];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // repeated .GSToGC.CanInviteFriends.Friends friends = 2;
  inline int friends_size() const;
  inline void clear_friends();
  static const int kFriendsFieldNumber = 2;
  inline const ::GSToGC::CanInviteFriends_Friends& friends(int index) const;
  inline ::GSToGC::CanInviteFriends_Friends* mutable_friends(int index);
  inline ::GSToGC::CanInviteFriends_Friends* add_friends();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::CanInviteFriends_Friends >&
      friends() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::CanInviteFriends_Friends >*
      mutable_friends();

  // @@protoc_insertion_point(class_scope:GSToGC.CanInviteFriends)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::CanInviteFriends_Friends > friends_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static CanInviteFriends* default_instance_;
};
// -------------------------------------------------------------------

class LastHitNum : public ::google::protobuf::Message {
 public:
  LastHitNum();
  virtual ~LastHitNum();

  LastHitNum(const LastHitNum& from);

  inline LastHitNum& operator=(const LastHitNum& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LastHitNum& default_instance();

  void Swap(LastHitNum* other);

  // implements Message ----------------------------------------------

  LastHitNum* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LastHitNum& from);
  void MergeFrom(const LastHitNum& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromBS_NotifyCurLastHitNum];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // optional uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional int32 lhnum = 3;
  inline bool has_lhnum() const;
  inline void clear_lhnum();
  static const int kLhnumFieldNumber = 3;
  inline ::google::protobuf::int32 lhnum() const;
  inline void set_lhnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.LastHitNum)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_lhnum();
  inline void clear_has_lhnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  int msgid_;
  ::google::protobuf::int32 lhnum_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static LastHitNum* default_instance_;
};
// -------------------------------------------------------------------

class RoomInfo : public ::google::protobuf::Message {
 public:
  RoomInfo();
  virtual ~RoomInfo();

  RoomInfo(const RoomInfo& from);

  inline RoomInfo& operator=(const RoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomInfo& default_instance();

  void Swap(RoomInfo* other);

  // implements Message ----------------------------------------------

  RoomInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomInfo& from);
  void MergeFrom(const RoomInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 roomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::int32 roomid() const;
  inline void set_roomid(::google::protobuf::int32 value);

  // optional int32 ifPwd = 2;
  inline bool has_ifpwd() const;
  inline void clear_ifpwd();
  static const int kIfPwdFieldNumber = 2;
  inline ::google::protobuf::int32 ifpwd() const;
  inline void set_ifpwd(::google::protobuf::int32 value);

  // optional int32 mapId = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 3;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional string master = 4;
  inline bool has_master() const;
  inline void clear_master();
  static const int kMasterFieldNumber = 4;
  inline const ::std::string& master() const;
  inline void set_master(const ::std::string& value);
  inline void set_master(const char* value);
  inline void set_master(const char* value, size_t size);
  inline ::std::string* mutable_master();
  inline ::std::string* release_master();
  inline void set_allocated_master(::std::string* master);

  // optional int32 curUserCount = 5;
  inline bool has_curusercount() const;
  inline void clear_curusercount();
  static const int kCurUserCountFieldNumber = 5;
  inline ::google::protobuf::int32 curusercount() const;
  inline void set_curusercount(::google::protobuf::int32 value);

  // optional int32 maxUserCount = 6;
  inline bool has_maxusercount() const;
  inline void clear_maxusercount();
  static const int kMaxUserCountFieldNumber = 6;
  inline ::google::protobuf::int32 maxusercount() const;
  inline void set_maxusercount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSToGC.RoomInfo)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_ifpwd();
  inline void clear_has_ifpwd();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_master();
  inline void clear_has_master();
  inline void set_has_curusercount();
  inline void clear_has_curusercount();
  inline void set_has_maxusercount();
  inline void clear_has_maxusercount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 roomid_;
  ::google::protobuf::int32 ifpwd_;
  ::std::string* master_;
  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 curusercount_;
  ::google::protobuf::int32 maxusercount_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static RoomInfo* default_instance_;
};
// -------------------------------------------------------------------

class AskRoomListRet : public ::google::protobuf::Message {
 public:
  AskRoomListRet();
  virtual ~AskRoomListRet();

  AskRoomListRet(const AskRoomListRet& from);

  inline AskRoomListRet& operator=(const AskRoomListRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskRoomListRet& default_instance();

  void Swap(AskRoomListRet* other);

  // implements Message ----------------------------------------------

  AskRoomListRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskRoomListRet& from);
  void MergeFrom(const AskRoomListRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_AskRoomListRet];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::GSToGC::MsgID msgid() const;
  inline void set_msgid(::GSToGC::MsgID value);

  // repeated .GSToGC.RoomInfo roomlist = 2;
  inline int roomlist_size() const;
  inline void clear_roomlist();
  static const int kRoomlistFieldNumber = 2;
  inline const ::GSToGC::RoomInfo& roomlist(int index) const;
  inline ::GSToGC::RoomInfo* mutable_roomlist(int index);
  inline ::GSToGC::RoomInfo* add_roomlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::RoomInfo >&
      roomlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSToGC::RoomInfo >*
      mutable_roomlist();

  // @@protoc_insertion_point(class_scope:GSToGC.AskRoomListRet)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GSToGC::RoomInfo > roomlist_;
  int msgid_;
  friend void  protobuf_AddDesc_GSToGC_2eproto();
  friend void protobuf_AssignDesc_GSToGC_2eproto();
  friend void protobuf_ShutdownFile_GSToGC_2eproto();

  void InitAsDefaultInstance();
  static AskRoomListRet* default_instance_;
};
// ===================================================================


// ===================================================================

// TaskData

// optional uint32 task_id = 1;
inline bool TaskData::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TaskData::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TaskData::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TaskData::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 TaskData::task_id() const {
  // @@protoc_insertion_point(field_get:GSToGC.TaskData.task_id)
  return task_id_;
}
inline void TaskData::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.TaskData.task_id)
}

// optional uint32 task_guid = 2;
inline bool TaskData::has_task_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TaskData::set_has_task_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TaskData::clear_has_task_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TaskData::clear_task_guid() {
  task_guid_ = 0u;
  clear_has_task_guid();
}
inline ::google::protobuf::uint32 TaskData::task_guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.TaskData.task_guid)
  return task_guid_;
}
inline void TaskData::set_task_guid(::google::protobuf::uint32 value) {
  set_has_task_guid();
  task_guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.TaskData.task_guid)
}

// optional uint32 task_curCount = 3;
inline bool TaskData::has_task_curcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TaskData::set_has_task_curcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TaskData::clear_has_task_curcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TaskData::clear_task_curcount() {
  task_curcount_ = 0u;
  clear_has_task_curcount();
}
inline ::google::protobuf::uint32 TaskData::task_curcount() const {
  // @@protoc_insertion_point(field_get:GSToGC.TaskData.task_curCount)
  return task_curcount_;
}
inline void TaskData::set_task_curcount(::google::protobuf::uint32 value) {
  set_has_task_curcount();
  task_curcount_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.TaskData.task_curCount)
}

// -------------------------------------------------------------------

// NotifyUpdateAllTask

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_UpdateAllTask];
inline bool NotifyUpdateAllTask::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyUpdateAllTask::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyUpdateAllTask::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyUpdateAllTask::clear_msgid() {
  msgid_ = 400;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyUpdateAllTask::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyUpdateAllTask.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyUpdateAllTask::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyUpdateAllTask.msgid)
}

// repeated .GSToGC.TaskData taskList = 2;
inline int NotifyUpdateAllTask::tasklist_size() const {
  return tasklist_.size();
}
inline void NotifyUpdateAllTask::clear_tasklist() {
  tasklist_.Clear();
}
inline const ::GSToGC::TaskData& NotifyUpdateAllTask::tasklist(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyUpdateAllTask.taskList)
  return tasklist_.Get(index);
}
inline ::GSToGC::TaskData* NotifyUpdateAllTask::mutable_tasklist(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyUpdateAllTask.taskList)
  return tasklist_.Mutable(index);
}
inline ::GSToGC::TaskData* NotifyUpdateAllTask::add_tasklist() {
  // @@protoc_insertion_point(field_add:GSToGC.NotifyUpdateAllTask.taskList)
  return tasklist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::TaskData >&
NotifyUpdateAllTask::tasklist() const {
  // @@protoc_insertion_point(field_list:GSToGC.NotifyUpdateAllTask.taskList)
  return tasklist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::TaskData >*
NotifyUpdateAllTask::mutable_tasklist() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.NotifyUpdateAllTask.taskList)
  return &tasklist_;
}

// -------------------------------------------------------------------

// NotifyUpdateAllDailyTask

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_UpdateAllDailyTask];
inline bool NotifyUpdateAllDailyTask::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyUpdateAllDailyTask::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyUpdateAllDailyTask::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyUpdateAllDailyTask::clear_msgid() {
  msgid_ = 401;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyUpdateAllDailyTask::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyUpdateAllDailyTask.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyUpdateAllDailyTask::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyUpdateAllDailyTask.msgid)
}

// repeated .GSToGC.TaskData taskList = 2;
inline int NotifyUpdateAllDailyTask::tasklist_size() const {
  return tasklist_.size();
}
inline void NotifyUpdateAllDailyTask::clear_tasklist() {
  tasklist_.Clear();
}
inline const ::GSToGC::TaskData& NotifyUpdateAllDailyTask::tasklist(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyUpdateAllDailyTask.taskList)
  return tasklist_.Get(index);
}
inline ::GSToGC::TaskData* NotifyUpdateAllDailyTask::mutable_tasklist(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyUpdateAllDailyTask.taskList)
  return tasklist_.Mutable(index);
}
inline ::GSToGC::TaskData* NotifyUpdateAllDailyTask::add_tasklist() {
  // @@protoc_insertion_point(field_add:GSToGC.NotifyUpdateAllDailyTask.taskList)
  return tasklist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::TaskData >&
NotifyUpdateAllDailyTask::tasklist() const {
  // @@protoc_insertion_point(field_list:GSToGC.NotifyUpdateAllDailyTask.taskList)
  return tasklist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::TaskData >*
NotifyUpdateAllDailyTask::mutable_tasklist() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.NotifyUpdateAllDailyTask.taskList)
  return &tasklist_;
}

// -------------------------------------------------------------------

// NotifyAddOneTask

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_AddOneTask];
inline bool NotifyAddOneTask::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyAddOneTask::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyAddOneTask::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyAddOneTask::clear_msgid() {
  msgid_ = 402;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyAddOneTask::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyAddOneTask.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyAddOneTask::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyAddOneTask.msgid)
}

// optional .GSToGC.TaskData oneTask = 2;
inline bool NotifyAddOneTask::has_onetask() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyAddOneTask::set_has_onetask() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyAddOneTask::clear_has_onetask() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyAddOneTask::clear_onetask() {
  if (onetask_ != NULL) onetask_->::GSToGC::TaskData::Clear();
  clear_has_onetask();
}
inline const ::GSToGC::TaskData& NotifyAddOneTask::onetask() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyAddOneTask.oneTask)
  return onetask_ != NULL ? *onetask_ : *default_instance_->onetask_;
}
inline ::GSToGC::TaskData* NotifyAddOneTask::mutable_onetask() {
  set_has_onetask();
  if (onetask_ == NULL) onetask_ = new ::GSToGC::TaskData;
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyAddOneTask.oneTask)
  return onetask_;
}
inline ::GSToGC::TaskData* NotifyAddOneTask::release_onetask() {
  clear_has_onetask();
  ::GSToGC::TaskData* temp = onetask_;
  onetask_ = NULL;
  return temp;
}
inline void NotifyAddOneTask::set_allocated_onetask(::GSToGC::TaskData* onetask) {
  delete onetask_;
  onetask_ = onetask;
  if (onetask) {
    set_has_onetask();
  } else {
    clear_has_onetask();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.NotifyAddOneTask.oneTask)
}

// -------------------------------------------------------------------

// NotifyUpdateOneTask

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_UpdateOneTask];
inline bool NotifyUpdateOneTask::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyUpdateOneTask::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyUpdateOneTask::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyUpdateOneTask::clear_msgid() {
  msgid_ = 403;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyUpdateOneTask::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyUpdateOneTask.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyUpdateOneTask::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyUpdateOneTask.msgid)
}

// optional .GSToGC.TaskData oneTask = 2;
inline bool NotifyUpdateOneTask::has_onetask() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyUpdateOneTask::set_has_onetask() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyUpdateOneTask::clear_has_onetask() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyUpdateOneTask::clear_onetask() {
  if (onetask_ != NULL) onetask_->::GSToGC::TaskData::Clear();
  clear_has_onetask();
}
inline const ::GSToGC::TaskData& NotifyUpdateOneTask::onetask() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyUpdateOneTask.oneTask)
  return onetask_ != NULL ? *onetask_ : *default_instance_->onetask_;
}
inline ::GSToGC::TaskData* NotifyUpdateOneTask::mutable_onetask() {
  set_has_onetask();
  if (onetask_ == NULL) onetask_ = new ::GSToGC::TaskData;
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyUpdateOneTask.oneTask)
  return onetask_;
}
inline ::GSToGC::TaskData* NotifyUpdateOneTask::release_onetask() {
  clear_has_onetask();
  ::GSToGC::TaskData* temp = onetask_;
  onetask_ = NULL;
  return temp;
}
inline void NotifyUpdateOneTask::set_allocated_onetask(::GSToGC::TaskData* onetask) {
  delete onetask_;
  onetask_ = onetask;
  if (onetask) {
    set_has_onetask();
  } else {
    clear_has_onetask();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.NotifyUpdateOneTask.oneTask)
}

// -------------------------------------------------------------------

// NotifyDelOneTask

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_DelOneTask];
inline bool NotifyDelOneTask::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyDelOneTask::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyDelOneTask::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyDelOneTask::clear_msgid() {
  msgid_ = 404;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyDelOneTask::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyDelOneTask.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyDelOneTask::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyDelOneTask.msgid)
}

// optional uint32 task_guid = 2;
inline bool NotifyDelOneTask::has_task_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyDelOneTask::set_has_task_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyDelOneTask::clear_has_task_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyDelOneTask::clear_task_guid() {
  task_guid_ = 0u;
  clear_has_task_guid();
}
inline ::google::protobuf::uint32 NotifyDelOneTask::task_guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyDelOneTask.task_guid)
  return task_guid_;
}
inline void NotifyDelOneTask::set_task_guid(::google::protobuf::uint32 value) {
  set_has_task_guid();
  task_guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyDelOneTask.task_guid)
}

// -------------------------------------------------------------------

// NotifyRewardsOneTask

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_RewardsOneTask];
inline bool NotifyRewardsOneTask::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyRewardsOneTask::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyRewardsOneTask::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyRewardsOneTask::clear_msgid() {
  msgid_ = 405;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyRewardsOneTask::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyRewardsOneTask.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyRewardsOneTask::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyRewardsOneTask.msgid)
}

// optional uint32 task_guid = 2;
inline bool NotifyRewardsOneTask::has_task_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyRewardsOneTask::set_has_task_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyRewardsOneTask::clear_has_task_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyRewardsOneTask::clear_task_guid() {
  task_guid_ = 0u;
  clear_has_task_guid();
}
inline ::google::protobuf::uint32 NotifyRewardsOneTask::task_guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyRewardsOneTask.task_guid)
  return task_guid_;
}
inline void NotifyRewardsOneTask::set_task_guid(::google::protobuf::uint32 value) {
  set_has_task_guid();
  task_guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyRewardsOneTask.task_guid)
}

// -------------------------------------------------------------------

// NotifyMailRet

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyMailRet];
inline bool NotifyMailRet::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyMailRet::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyMailRet::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyMailRet::clear_msgid() {
  msgid_ = 601;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyMailRet::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMailRet.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyMailRet::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyMailRet.msgid)
}

// optional int32 mailid = 2;
inline bool NotifyMailRet::has_mailid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyMailRet::set_has_mailid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyMailRet::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyMailRet::clear_mailid() {
  mailid_ = 0;
  clear_has_mailid();
}
inline ::google::protobuf::int32 NotifyMailRet::mailid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMailRet.mailid)
  return mailid_;
}
inline void NotifyMailRet::set_mailid(::google::protobuf::int32 value) {
  set_has_mailid();
  mailid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyMailRet.mailid)
}

// optional int32 errcode = 3;
inline bool NotifyMailRet::has_errcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyMailRet::set_has_errcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyMailRet::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyMailRet::clear_errcode() {
  errcode_ = 0;
  clear_has_errcode();
}
inline ::google::protobuf::int32 NotifyMailRet::errcode() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMailRet.errcode)
  return errcode_;
}
inline void NotifyMailRet::set_errcode(::google::protobuf::int32 value) {
  set_has_errcode();
  errcode_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyMailRet.errcode)
}

// -------------------------------------------------------------------

// NotifyIsOnSS

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromCS_NotifyIsOnSS];
inline bool NotifyIsOnSS::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyIsOnSS::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyIsOnSS::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyIsOnSS::clear_msgid() {
  msgid_ = 238;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyIsOnSS::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyIsOnSS.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyIsOnSS::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyIsOnSS.msgid)
}

// optional uint32 ssid = 2;
inline bool NotifyIsOnSS::has_ssid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyIsOnSS::set_has_ssid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyIsOnSS::clear_has_ssid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyIsOnSS::clear_ssid() {
  ssid_ = 0u;
  clear_has_ssid();
}
inline ::google::protobuf::uint32 NotifyIsOnSS::ssid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyIsOnSS.ssid)
  return ssid_;
}
inline void NotifyIsOnSS::set_ssid(::google::protobuf::uint32 value) {
  set_has_ssid();
  ssid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyIsOnSS.ssid)
}

// -------------------------------------------------------------------

// NotifyOtherItemInfo_OtherItem

// optional uint32 item_id = 1;
inline bool NotifyOtherItemInfo_OtherItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyOtherItemInfo_OtherItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyOtherItemInfo_OtherItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyOtherItemInfo_OtherItem::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 NotifyOtherItemInfo_OtherItem::item_id() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyOtherItemInfo.OtherItem.item_id)
  return item_id_;
}
inline void NotifyOtherItemInfo_OtherItem::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyOtherItemInfo.OtherItem.item_id)
}

// optional uint32 item_num = 2;
inline bool NotifyOtherItemInfo_OtherItem::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyOtherItemInfo_OtherItem::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyOtherItemInfo_OtherItem::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyOtherItemInfo_OtherItem::clear_item_num() {
  item_num_ = 0u;
  clear_has_item_num();
}
inline ::google::protobuf::uint32 NotifyOtherItemInfo_OtherItem::item_num() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyOtherItemInfo.OtherItem.item_num)
  return item_num_;
}
inline void NotifyOtherItemInfo_OtherItem::set_item_num(::google::protobuf::uint32 value) {
  set_has_item_num();
  item_num_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyOtherItemInfo.OtherItem.item_num)
}

// optional int64 expired_time = 3;
inline bool NotifyOtherItemInfo_OtherItem::has_expired_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyOtherItemInfo_OtherItem::set_has_expired_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyOtherItemInfo_OtherItem::clear_has_expired_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyOtherItemInfo_OtherItem::clear_expired_time() {
  expired_time_ = GOOGLE_LONGLONG(0);
  clear_has_expired_time();
}
inline ::google::protobuf::int64 NotifyOtherItemInfo_OtherItem::expired_time() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyOtherItemInfo.OtherItem.expired_time)
  return expired_time_;
}
inline void NotifyOtherItemInfo_OtherItem::set_expired_time(::google::protobuf::int64 value) {
  set_has_expired_time();
  expired_time_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyOtherItemInfo.OtherItem.expired_time)
}

// -------------------------------------------------------------------

// NotifyOtherItemInfo

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyOtherItemInfo];
inline bool NotifyOtherItemInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyOtherItemInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyOtherItemInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyOtherItemInfo::clear_msgid() {
  msgid_ = 237;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyOtherItemInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyOtherItemInfo.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyOtherItemInfo::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyOtherItemInfo.msgid)
}

// repeated .GSToGC.NotifyOtherItemInfo.OtherItem item = 2;
inline int NotifyOtherItemInfo::item_size() const {
  return item_.size();
}
inline void NotifyOtherItemInfo::clear_item() {
  item_.Clear();
}
inline const ::GSToGC::NotifyOtherItemInfo_OtherItem& NotifyOtherItemInfo::item(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyOtherItemInfo.item)
  return item_.Get(index);
}
inline ::GSToGC::NotifyOtherItemInfo_OtherItem* NotifyOtherItemInfo::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyOtherItemInfo.item)
  return item_.Mutable(index);
}
inline ::GSToGC::NotifyOtherItemInfo_OtherItem* NotifyOtherItemInfo::add_item() {
  // @@protoc_insertion_point(field_add:GSToGC.NotifyOtherItemInfo.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyOtherItemInfo_OtherItem >&
NotifyOtherItemInfo::item() const {
  // @@protoc_insertion_point(field_list:GSToGC.NotifyOtherItemInfo.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyOtherItemInfo_OtherItem >*
NotifyOtherItemInfo::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.NotifyOtherItemInfo.item)
  return &item_;
}

// -------------------------------------------------------------------

// RecoinRuneRet

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_RecoinRuneRet];
inline bool RecoinRuneRet::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecoinRuneRet::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecoinRuneRet::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecoinRuneRet::clear_msgid() {
  msgid_ = 236;
  clear_has_msgid();
}
inline ::GSToGC::MsgID RecoinRuneRet::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.RecoinRuneRet.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void RecoinRuneRet::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RecoinRuneRet.msgid)
}

// optional uint32 rune_id = 2;
inline bool RecoinRuneRet::has_rune_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RecoinRuneRet::set_has_rune_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RecoinRuneRet::clear_has_rune_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RecoinRuneRet::clear_rune_id() {
  rune_id_ = 0u;
  clear_has_rune_id();
}
inline ::google::protobuf::uint32 RecoinRuneRet::rune_id() const {
  // @@protoc_insertion_point(field_get:GSToGC.RecoinRuneRet.rune_id)
  return rune_id_;
}
inline void RecoinRuneRet::set_rune_id(::google::protobuf::uint32 value) {
  set_has_rune_id();
  rune_id_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RecoinRuneRet.rune_id)
}

// -------------------------------------------------------------------

// UnloadRune

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_UnloadRune];
inline bool UnloadRune::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnloadRune::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnloadRune::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnloadRune::clear_msgid() {
  msgid_ = 234;
  clear_has_msgid();
}
inline ::GSToGC::MsgID UnloadRune::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.UnloadRune.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void UnloadRune::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UnloadRune.msgid)
}

// optional int32 page = 2;
inline bool UnloadRune::has_page() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnloadRune::set_has_page() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnloadRune::clear_has_page() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnloadRune::clear_page() {
  page_ = 0;
  clear_has_page();
}
inline ::google::protobuf::int32 UnloadRune::page() const {
  // @@protoc_insertion_point(field_get:GSToGC.UnloadRune.page)
  return page_;
}
inline void UnloadRune::set_page(::google::protobuf::int32 value) {
  set_has_page();
  page_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UnloadRune.page)
}

// optional int32 pos = 3;
inline bool UnloadRune::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UnloadRune::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UnloadRune::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UnloadRune::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 UnloadRune::pos() const {
  // @@protoc_insertion_point(field_get:GSToGC.UnloadRune.pos)
  return pos_;
}
inline void UnloadRune::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UnloadRune.pos)
}

// -------------------------------------------------------------------

// GuideCSStepInfo

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_GuideResp];
inline bool GuideCSStepInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuideCSStepInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuideCSStepInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuideCSStepInfo::clear_msgid() {
  msgid_ = 300;
  clear_has_msgid();
}
inline ::GSToGC::MsgID GuideCSStepInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GuideCSStepInfo.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void GuideCSStepInfo::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GuideCSStepInfo.msgid)
}

// optional bool allcomp = 2;
inline bool GuideCSStepInfo::has_allcomp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuideCSStepInfo::set_has_allcomp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuideCSStepInfo::clear_has_allcomp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuideCSStepInfo::clear_allcomp() {
  allcomp_ = false;
  clear_has_allcomp();
}
inline bool GuideCSStepInfo::allcomp() const {
  // @@protoc_insertion_point(field_get:GSToGC.GuideCSStepInfo.allcomp)
  return allcomp_;
}
inline void GuideCSStepInfo::set_allcomp(bool value) {
  set_has_allcomp();
  allcomp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GuideCSStepInfo.allcomp)
}

// repeated uint32 taskid = 3;
inline int GuideCSStepInfo::taskid_size() const {
  return taskid_.size();
}
inline void GuideCSStepInfo::clear_taskid() {
  taskid_.Clear();
}
inline ::google::protobuf::uint32 GuideCSStepInfo::taskid(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.GuideCSStepInfo.taskid)
  return taskid_.Get(index);
}
inline void GuideCSStepInfo::set_taskid(int index, ::google::protobuf::uint32 value) {
  taskid_.Set(index, value);
  // @@protoc_insertion_point(field_set:GSToGC.GuideCSStepInfo.taskid)
}
inline void GuideCSStepInfo::add_taskid(::google::protobuf::uint32 value) {
  taskid_.Add(value);
  // @@protoc_insertion_point(field_add:GSToGC.GuideCSStepInfo.taskid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GuideCSStepInfo::taskid() const {
  // @@protoc_insertion_point(field_list:GSToGC.GuideCSStepInfo.taskid)
  return taskid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GuideCSStepInfo::mutable_taskid() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.GuideCSStepInfo.taskid)
  return &taskid_;
}

// -------------------------------------------------------------------

// GuideAward_awardtype

// optional .GSToGC.GuideAward.dtype dt = 1;
inline bool GuideAward_awardtype::has_dt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuideAward_awardtype::set_has_dt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuideAward_awardtype::clear_has_dt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuideAward_awardtype::clear_dt() {
  dt_ = 1;
  clear_has_dt();
}
inline ::GSToGC::GuideAward_dtype GuideAward_awardtype::dt() const {
  // @@protoc_insertion_point(field_get:GSToGC.GuideAward.awardtype.dt)
  return static_cast< ::GSToGC::GuideAward_dtype >(dt_);
}
inline void GuideAward_awardtype::set_dt(::GSToGC::GuideAward_dtype value) {
  assert(::GSToGC::GuideAward_dtype_IsValid(value));
  set_has_dt();
  dt_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GuideAward.awardtype.dt)
}

// optional uint32 idxn = 2;
inline bool GuideAward_awardtype::has_idxn() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuideAward_awardtype::set_has_idxn() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuideAward_awardtype::clear_has_idxn() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuideAward_awardtype::clear_idxn() {
  idxn_ = 0u;
  clear_has_idxn();
}
inline ::google::protobuf::uint32 GuideAward_awardtype::idxn() const {
  // @@protoc_insertion_point(field_get:GSToGC.GuideAward.awardtype.idxn)
  return idxn_;
}
inline void GuideAward_awardtype::set_idxn(::google::protobuf::uint32 value) {
  set_has_idxn();
  idxn_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GuideAward.awardtype.idxn)
}

// -------------------------------------------------------------------

// GuideAward

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_GuideAward];
inline bool GuideAward::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuideAward::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuideAward::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuideAward::clear_msgid() {
  msgid_ = 302;
  clear_has_msgid();
}
inline ::GSToGC::MsgID GuideAward::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GuideAward.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void GuideAward::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GuideAward.msgid)
}

// repeated .GSToGC.GuideAward.awardtype awardlist = 2;
inline int GuideAward::awardlist_size() const {
  return awardlist_.size();
}
inline void GuideAward::clear_awardlist() {
  awardlist_.Clear();
}
inline const ::GSToGC::GuideAward_awardtype& GuideAward::awardlist(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.GuideAward.awardlist)
  return awardlist_.Get(index);
}
inline ::GSToGC::GuideAward_awardtype* GuideAward::mutable_awardlist(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.GuideAward.awardlist)
  return awardlist_.Mutable(index);
}
inline ::GSToGC::GuideAward_awardtype* GuideAward::add_awardlist() {
  // @@protoc_insertion_point(field_add:GSToGC.GuideAward.awardlist)
  return awardlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::GuideAward_awardtype >&
GuideAward::awardlist() const {
  // @@protoc_insertion_point(field_list:GSToGC.GuideAward.awardlist)
  return awardlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::GuideAward_awardtype >*
GuideAward::mutable_awardlist() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.GuideAward.awardlist)
  return &awardlist_;
}

// -------------------------------------------------------------------

// GuideKillsInfo

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromCS_GuideKillsInfo];
inline bool GuideKillsInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuideKillsInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuideKillsInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuideKillsInfo::clear_msgid() {
  msgid_ = 301;
  clear_has_msgid();
}
inline ::GSToGC::MsgID GuideKillsInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GuideKillsInfo.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void GuideKillsInfo::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GuideKillsInfo.msgid)
}

// optional uint64 guid = 2;
inline bool GuideKillsInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuideKillsInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuideKillsInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuideKillsInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 GuideKillsInfo::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GuideKillsInfo.guid)
  return guid_;
}
inline void GuideKillsInfo::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GuideKillsInfo.guid)
}

// optional int32 npctype = 3;
inline bool GuideKillsInfo::has_npctype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuideKillsInfo::set_has_npctype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuideKillsInfo::clear_has_npctype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuideKillsInfo::clear_npctype() {
  npctype_ = 0;
  clear_has_npctype();
}
inline ::google::protobuf::int32 GuideKillsInfo::npctype() const {
  // @@protoc_insertion_point(field_get:GSToGC.GuideKillsInfo.npctype)
  return npctype_;
}
inline void GuideKillsInfo::set_npctype(::google::protobuf::int32 value) {
  set_has_npctype();
  npctype_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GuideKillsInfo.npctype)
}

// -------------------------------------------------------------------

// NotifyUserLvInfo

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyUserLvInfo];
inline bool NotifyUserLvInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyUserLvInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyUserLvInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyUserLvInfo::clear_msgid() {
  msgid_ = 232;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyUserLvInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyUserLvInfo.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyUserLvInfo::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyUserLvInfo.msgid)
}

// optional uint32 curlv = 2;
inline bool NotifyUserLvInfo::has_curlv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyUserLvInfo::set_has_curlv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyUserLvInfo::clear_has_curlv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyUserLvInfo::clear_curlv() {
  curlv_ = 0u;
  clear_has_curlv();
}
inline ::google::protobuf::uint32 NotifyUserLvInfo::curlv() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyUserLvInfo.curlv)
  return curlv_;
}
inline void NotifyUserLvInfo::set_curlv(::google::protobuf::uint32 value) {
  set_has_curlv();
  curlv_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyUserLvInfo.curlv)
}

// optional uint32 curexp = 3;
inline bool NotifyUserLvInfo::has_curexp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyUserLvInfo::set_has_curexp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyUserLvInfo::clear_has_curexp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyUserLvInfo::clear_curexp() {
  curexp_ = 0u;
  clear_has_curexp();
}
inline ::google::protobuf::uint32 NotifyUserLvInfo::curexp() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyUserLvInfo.curexp)
  return curexp_;
}
inline void NotifyUserLvInfo::set_curexp(::google::protobuf::uint32 value) {
  set_has_curexp();
  curexp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyUserLvInfo.curexp)
}

// -------------------------------------------------------------------

// NotifyNewHeaderid

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyNewHeaderid];
inline bool NotifyNewHeaderid::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyNewHeaderid::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyNewHeaderid::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyNewHeaderid::clear_msgid() {
  msgid_ = 231;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyNewHeaderid::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyNewHeaderid.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyNewHeaderid::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyNewHeaderid.msgid)
}

// optional uint64 guid = 2;
inline bool NotifyNewHeaderid::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyNewHeaderid::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyNewHeaderid::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyNewHeaderid::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 NotifyNewHeaderid::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyNewHeaderid.guid)
  return guid_;
}
inline void NotifyNewHeaderid::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyNewHeaderid.guid)
}

// optional uint32 newheaderid = 3;
inline bool NotifyNewHeaderid::has_newheaderid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyNewHeaderid::set_has_newheaderid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyNewHeaderid::clear_has_newheaderid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyNewHeaderid::clear_newheaderid() {
  newheaderid_ = 0u;
  clear_has_newheaderid();
}
inline ::google::protobuf::uint32 NotifyNewHeaderid::newheaderid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyNewHeaderid.newheaderid)
  return newheaderid_;
}
inline void NotifyNewHeaderid::set_newheaderid(::google::protobuf::uint32 value) {
  set_has_newheaderid();
  newheaderid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyNewHeaderid.newheaderid)
}

// -------------------------------------------------------------------

// NotifyOneMatchNeedOne

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyOneMatchNeedOne];
inline bool NotifyOneMatchNeedOne::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyOneMatchNeedOne::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyOneMatchNeedOne::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyOneMatchNeedOne::clear_msgid() {
  msgid_ = 230;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyOneMatchNeedOne::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyOneMatchNeedOne.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyOneMatchNeedOne::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyOneMatchNeedOne.msgid)
}

// optional uint32 mapid = 2;
inline bool NotifyOneMatchNeedOne::has_mapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyOneMatchNeedOne::set_has_mapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyOneMatchNeedOne::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyOneMatchNeedOne::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 NotifyOneMatchNeedOne::mapid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyOneMatchNeedOne.mapid)
  return mapid_;
}
inline void NotifyOneMatchNeedOne::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyOneMatchNeedOne.mapid)
}

// optional uint32 fightid = 3;
inline bool NotifyOneMatchNeedOne::has_fightid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyOneMatchNeedOne::set_has_fightid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyOneMatchNeedOne::clear_has_fightid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyOneMatchNeedOne::clear_fightid() {
  fightid_ = 0u;
  clear_has_fightid();
}
inline ::google::protobuf::uint32 NotifyOneMatchNeedOne::fightid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyOneMatchNeedOne.fightid)
  return fightid_;
}
inline void NotifyOneMatchNeedOne::set_fightid(::google::protobuf::uint32 value) {
  set_has_fightid();
  fightid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyOneMatchNeedOne.fightid)
}

// -------------------------------------------------------------------

// NotifyNewNickname

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyNewNickname];
inline bool NotifyNewNickname::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyNewNickname::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyNewNickname::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyNewNickname::clear_msgid() {
  msgid_ = 229;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyNewNickname::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyNewNickname.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyNewNickname::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyNewNickname.msgid)
}

// optional uint64 guid = 2;
inline bool NotifyNewNickname::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyNewNickname::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyNewNickname::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyNewNickname::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 NotifyNewNickname::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyNewNickname.guid)
  return guid_;
}
inline void NotifyNewNickname::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyNewNickname.guid)
}

// optional string newnickname = 3;
inline bool NotifyNewNickname::has_newnickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyNewNickname::set_has_newnickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyNewNickname::clear_has_newnickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyNewNickname::clear_newnickname() {
  if (newnickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newnickname_->clear();
  }
  clear_has_newnickname();
}
inline const ::std::string& NotifyNewNickname::newnickname() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyNewNickname.newnickname)
  return *newnickname_;
}
inline void NotifyNewNickname::set_newnickname(const ::std::string& value) {
  set_has_newnickname();
  if (newnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newnickname_ = new ::std::string;
  }
  newnickname_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.NotifyNewNickname.newnickname)
}
inline void NotifyNewNickname::set_newnickname(const char* value) {
  set_has_newnickname();
  if (newnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newnickname_ = new ::std::string;
  }
  newnickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.NotifyNewNickname.newnickname)
}
inline void NotifyNewNickname::set_newnickname(const char* value, size_t size) {
  set_has_newnickname();
  if (newnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newnickname_ = new ::std::string;
  }
  newnickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.NotifyNewNickname.newnickname)
}
inline ::std::string* NotifyNewNickname::mutable_newnickname() {
  set_has_newnickname();
  if (newnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newnickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyNewNickname.newnickname)
  return newnickname_;
}
inline ::std::string* NotifyNewNickname::release_newnickname() {
  clear_has_newnickname();
  if (newnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = newnickname_;
    newnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NotifyNewNickname::set_allocated_newnickname(::std::string* newnickname) {
  if (newnickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete newnickname_;
  }
  if (newnickname) {
    set_has_newnickname();
    newnickname_ = newnickname;
  } else {
    clear_has_newnickname();
    newnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.NotifyNewNickname.newnickname)
}

// -------------------------------------------------------------------

// RunesSlot

// optional int32 slotpos = 1;
inline bool RunesSlot::has_slotpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RunesSlot::set_has_slotpos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RunesSlot::clear_has_slotpos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RunesSlot::clear_slotpos() {
  slotpos_ = 0;
  clear_has_slotpos();
}
inline ::google::protobuf::int32 RunesSlot::slotpos() const {
  // @@protoc_insertion_point(field_get:GSToGC.RunesSlot.slotpos)
  return slotpos_;
}
inline void RunesSlot::set_slotpos(::google::protobuf::int32 value) {
  set_has_slotpos();
  slotpos_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RunesSlot.slotpos)
}

// optional uint32 runeid = 2;
inline bool RunesSlot::has_runeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RunesSlot::set_has_runeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RunesSlot::clear_has_runeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RunesSlot::clear_runeid() {
  runeid_ = 0u;
  clear_has_runeid();
}
inline ::google::protobuf::uint32 RunesSlot::runeid() const {
  // @@protoc_insertion_point(field_get:GSToGC.RunesSlot.runeid)
  return runeid_;
}
inline void RunesSlot::set_runeid(::google::protobuf::uint32 value) {
  set_has_runeid();
  runeid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RunesSlot.runeid)
}

// optional int32 page = 3;
inline bool RunesSlot::has_page() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RunesSlot::set_has_page() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RunesSlot::clear_has_page() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RunesSlot::clear_page() {
  page_ = 0;
  clear_has_page();
}
inline ::google::protobuf::int32 RunesSlot::page() const {
  // @@protoc_insertion_point(field_get:GSToGC.RunesSlot.page)
  return page_;
}
inline void RunesSlot::set_page(::google::protobuf::int32 value) {
  set_has_page();
  page_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RunesSlot.page)
}

// -------------------------------------------------------------------

// RunesBagInfo

// optional uint32 runeid = 1;
inline bool RunesBagInfo::has_runeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RunesBagInfo::set_has_runeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RunesBagInfo::clear_has_runeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RunesBagInfo::clear_runeid() {
  runeid_ = 0u;
  clear_has_runeid();
}
inline ::google::protobuf::uint32 RunesBagInfo::runeid() const {
  // @@protoc_insertion_point(field_get:GSToGC.RunesBagInfo.runeid)
  return runeid_;
}
inline void RunesBagInfo::set_runeid(::google::protobuf::uint32 value) {
  set_has_runeid();
  runeid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RunesBagInfo.runeid)
}

// optional int32 num = 2;
inline bool RunesBagInfo::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RunesBagInfo::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RunesBagInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RunesBagInfo::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 RunesBagInfo::num() const {
  // @@protoc_insertion_point(field_get:GSToGC.RunesBagInfo.num)
  return num_;
}
inline void RunesBagInfo::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RunesBagInfo.num)
}

// optional int64 gottime = 3;
inline bool RunesBagInfo::has_gottime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RunesBagInfo::set_has_gottime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RunesBagInfo::clear_has_gottime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RunesBagInfo::clear_gottime() {
  gottime_ = GOOGLE_LONGLONG(0);
  clear_has_gottime();
}
inline ::google::protobuf::int64 RunesBagInfo::gottime() const {
  // @@protoc_insertion_point(field_get:GSToGC.RunesBagInfo.gottime)
  return gottime_;
}
inline void RunesBagInfo::set_gottime(::google::protobuf::int64 value) {
  set_has_gottime();
  gottime_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RunesBagInfo.gottime)
}

// -------------------------------------------------------------------

// NotifyRunesList

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyRunesList];
inline bool NotifyRunesList::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyRunesList::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyRunesList::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyRunesList::clear_msgid() {
  msgid_ = 228;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyRunesList::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyRunesList.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyRunesList::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyRunesList.msgid)
}

// repeated .GSToGC.RunesBagInfo runesbaginfo = 2;
inline int NotifyRunesList::runesbaginfo_size() const {
  return runesbaginfo_.size();
}
inline void NotifyRunesList::clear_runesbaginfo() {
  runesbaginfo_.Clear();
}
inline const ::GSToGC::RunesBagInfo& NotifyRunesList::runesbaginfo(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyRunesList.runesbaginfo)
  return runesbaginfo_.Get(index);
}
inline ::GSToGC::RunesBagInfo* NotifyRunesList::mutable_runesbaginfo(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyRunesList.runesbaginfo)
  return runesbaginfo_.Mutable(index);
}
inline ::GSToGC::RunesBagInfo* NotifyRunesList::add_runesbaginfo() {
  // @@protoc_insertion_point(field_add:GSToGC.NotifyRunesList.runesbaginfo)
  return runesbaginfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::RunesBagInfo >&
NotifyRunesList::runesbaginfo() const {
  // @@protoc_insertion_point(field_list:GSToGC.NotifyRunesList.runesbaginfo)
  return runesbaginfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::RunesBagInfo >*
NotifyRunesList::mutable_runesbaginfo() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.NotifyRunesList.runesbaginfo)
  return &runesbaginfo_;
}

// repeated .GSToGC.RunesSlot runes_slot_info = 3;
inline int NotifyRunesList::runes_slot_info_size() const {
  return runes_slot_info_.size();
}
inline void NotifyRunesList::clear_runes_slot_info() {
  runes_slot_info_.Clear();
}
inline const ::GSToGC::RunesSlot& NotifyRunesList::runes_slot_info(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyRunesList.runes_slot_info)
  return runes_slot_info_.Get(index);
}
inline ::GSToGC::RunesSlot* NotifyRunesList::mutable_runes_slot_info(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyRunesList.runes_slot_info)
  return runes_slot_info_.Mutable(index);
}
inline ::GSToGC::RunesSlot* NotifyRunesList::add_runes_slot_info() {
  // @@protoc_insertion_point(field_add:GSToGC.NotifyRunesList.runes_slot_info)
  return runes_slot_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::RunesSlot >&
NotifyRunesList::runes_slot_info() const {
  // @@protoc_insertion_point(field_list:GSToGC.NotifyRunesList.runes_slot_info)
  return runes_slot_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::RunesSlot >*
NotifyRunesList::mutable_runes_slot_info() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.NotifyRunesList.runes_slot_info)
  return &runes_slot_info_;
}

// -------------------------------------------------------------------

// NotifyRemoveCommodity

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyRemoveCommodity];
inline bool NotifyRemoveCommodity::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyRemoveCommodity::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyRemoveCommodity::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyRemoveCommodity::clear_msgid() {
  msgid_ = 227;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyRemoveCommodity::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyRemoveCommodity.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyRemoveCommodity::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyRemoveCommodity.msgid)
}

// repeated uint32 Commodityid = 2;
inline int NotifyRemoveCommodity::commodityid_size() const {
  return commodityid_.size();
}
inline void NotifyRemoveCommodity::clear_commodityid() {
  commodityid_.Clear();
}
inline ::google::protobuf::uint32 NotifyRemoveCommodity::commodityid(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyRemoveCommodity.Commodityid)
  return commodityid_.Get(index);
}
inline void NotifyRemoveCommodity::set_commodityid(int index, ::google::protobuf::uint32 value) {
  commodityid_.Set(index, value);
  // @@protoc_insertion_point(field_set:GSToGC.NotifyRemoveCommodity.Commodityid)
}
inline void NotifyRemoveCommodity::add_commodityid(::google::protobuf::uint32 value) {
  commodityid_.Add(value);
  // @@protoc_insertion_point(field_add:GSToGC.NotifyRemoveCommodity.Commodityid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
NotifyRemoveCommodity::commodityid() const {
  // @@protoc_insertion_point(field_list:GSToGC.NotifyRemoveCommodity.Commodityid)
  return commodityid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
NotifyRemoveCommodity::mutable_commodityid() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.NotifyRemoveCommodity.Commodityid)
  return &commodityid_;
}

// -------------------------------------------------------------------

// NotifyGetNewCommodity

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGetNewCommodity];
inline bool NotifyGetNewCommodity::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyGetNewCommodity::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyGetNewCommodity::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyGetNewCommodity::clear_msgid() {
  msgid_ = 226;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyGetNewCommodity::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyGetNewCommodity.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyGetNewCommodity::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyGetNewCommodity.msgid)
}

// optional uint32 Commodityid = 2;
inline bool NotifyGetNewCommodity::has_commodityid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyGetNewCommodity::set_has_commodityid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyGetNewCommodity::clear_has_commodityid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyGetNewCommodity::clear_commodityid() {
  commodityid_ = 0u;
  clear_has_commodityid();
}
inline ::google::protobuf::uint32 NotifyGetNewCommodity::commodityid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyGetNewCommodity.Commodityid)
  return commodityid_;
}
inline void NotifyGetNewCommodity::set_commodityid(::google::protobuf::uint32 value) {
  set_has_commodityid();
  commodityid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyGetNewCommodity.Commodityid)
}

// -------------------------------------------------------------------

// NotifyMatchTeamBaseInfo

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyMatchTeamBaseInfo];
inline bool NotifyMatchTeamBaseInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyMatchTeamBaseInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyMatchTeamBaseInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyMatchTeamBaseInfo::clear_msgid() {
  msgid_ = 222;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyMatchTeamBaseInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMatchTeamBaseInfo.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyMatchTeamBaseInfo::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyMatchTeamBaseInfo.msgid)
}

// optional uint32 teamid = 2;
inline bool NotifyMatchTeamBaseInfo::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyMatchTeamBaseInfo::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyMatchTeamBaseInfo::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyMatchTeamBaseInfo::clear_teamid() {
  teamid_ = 0u;
  clear_has_teamid();
}
inline ::google::protobuf::uint32 NotifyMatchTeamBaseInfo::teamid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMatchTeamBaseInfo.teamid)
  return teamid_;
}
inline void NotifyMatchTeamBaseInfo::set_teamid(::google::protobuf::uint32 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyMatchTeamBaseInfo.teamid)
}

// optional uint32 matchtype = 3;
inline bool NotifyMatchTeamBaseInfo::has_matchtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyMatchTeamBaseInfo::set_has_matchtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyMatchTeamBaseInfo::clear_has_matchtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyMatchTeamBaseInfo::clear_matchtype() {
  matchtype_ = 0u;
  clear_has_matchtype();
}
inline ::google::protobuf::uint32 NotifyMatchTeamBaseInfo::matchtype() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMatchTeamBaseInfo.matchtype)
  return matchtype_;
}
inline void NotifyMatchTeamBaseInfo::set_matchtype(::google::protobuf::uint32 value) {
  set_has_matchtype();
  matchtype_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyMatchTeamBaseInfo.matchtype)
}

// optional uint32 mapid = 4;
inline bool NotifyMatchTeamBaseInfo::has_mapid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyMatchTeamBaseInfo::set_has_mapid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyMatchTeamBaseInfo::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyMatchTeamBaseInfo::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 NotifyMatchTeamBaseInfo::mapid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMatchTeamBaseInfo.mapid)
  return mapid_;
}
inline void NotifyMatchTeamBaseInfo::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyMatchTeamBaseInfo.mapid)
}

// -------------------------------------------------------------------

// NotifyMatchTeamPlayerInfo

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyMatchTeamPlayerInfo];
inline bool NotifyMatchTeamPlayerInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyMatchTeamPlayerInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyMatchTeamPlayerInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyMatchTeamPlayerInfo::clear_msgid() {
  msgid_ = 223;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyMatchTeamPlayerInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMatchTeamPlayerInfo.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyMatchTeamPlayerInfo::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyMatchTeamPlayerInfo.msgid)
}

// optional uint32 postion = 2;
inline bool NotifyMatchTeamPlayerInfo::has_postion() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyMatchTeamPlayerInfo::set_has_postion() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyMatchTeamPlayerInfo::clear_has_postion() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyMatchTeamPlayerInfo::clear_postion() {
  postion_ = 0u;
  clear_has_postion();
}
inline ::google::protobuf::uint32 NotifyMatchTeamPlayerInfo::postion() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMatchTeamPlayerInfo.postion)
  return postion_;
}
inline void NotifyMatchTeamPlayerInfo::set_postion(::google::protobuf::uint32 value) {
  set_has_postion();
  postion_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyMatchTeamPlayerInfo.postion)
}

// optional bool isInsert = 3;
inline bool NotifyMatchTeamPlayerInfo::has_isinsert() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyMatchTeamPlayerInfo::set_has_isinsert() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyMatchTeamPlayerInfo::clear_has_isinsert() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyMatchTeamPlayerInfo::clear_isinsert() {
  isinsert_ = false;
  clear_has_isinsert();
}
inline bool NotifyMatchTeamPlayerInfo::isinsert() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMatchTeamPlayerInfo.isInsert)
  return isinsert_;
}
inline void NotifyMatchTeamPlayerInfo::set_isinsert(bool value) {
  set_has_isinsert();
  isinsert_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyMatchTeamPlayerInfo.isInsert)
}

// optional string nickname = 4;
inline bool NotifyMatchTeamPlayerInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyMatchTeamPlayerInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyMatchTeamPlayerInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyMatchTeamPlayerInfo::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& NotifyMatchTeamPlayerInfo::nickname() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMatchTeamPlayerInfo.nickname)
  return *nickname_;
}
inline void NotifyMatchTeamPlayerInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.NotifyMatchTeamPlayerInfo.nickname)
}
inline void NotifyMatchTeamPlayerInfo::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.NotifyMatchTeamPlayerInfo.nickname)
}
inline void NotifyMatchTeamPlayerInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.NotifyMatchTeamPlayerInfo.nickname)
}
inline ::std::string* NotifyMatchTeamPlayerInfo::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyMatchTeamPlayerInfo.nickname)
  return nickname_;
}
inline ::std::string* NotifyMatchTeamPlayerInfo::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NotifyMatchTeamPlayerInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.NotifyMatchTeamPlayerInfo.nickname)
}

// optional uint32 headid = 5;
inline bool NotifyMatchTeamPlayerInfo::has_headid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifyMatchTeamPlayerInfo::set_has_headid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifyMatchTeamPlayerInfo::clear_has_headid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifyMatchTeamPlayerInfo::clear_headid() {
  headid_ = 0u;
  clear_has_headid();
}
inline ::google::protobuf::uint32 NotifyMatchTeamPlayerInfo::headid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMatchTeamPlayerInfo.headid)
  return headid_;
}
inline void NotifyMatchTeamPlayerInfo::set_headid(::google::protobuf::uint32 value) {
  set_has_headid();
  headid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyMatchTeamPlayerInfo.headid)
}

// optional uint32 userlevel = 6;
inline bool NotifyMatchTeamPlayerInfo::has_userlevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NotifyMatchTeamPlayerInfo::set_has_userlevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NotifyMatchTeamPlayerInfo::clear_has_userlevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NotifyMatchTeamPlayerInfo::clear_userlevel() {
  userlevel_ = 0u;
  clear_has_userlevel();
}
inline ::google::protobuf::uint32 NotifyMatchTeamPlayerInfo::userlevel() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMatchTeamPlayerInfo.userlevel)
  return userlevel_;
}
inline void NotifyMatchTeamPlayerInfo::set_userlevel(::google::protobuf::uint32 value) {
  set_has_userlevel();
  userlevel_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyMatchTeamPlayerInfo.userlevel)
}

// -------------------------------------------------------------------

// NotifyMatchTeamSwitch

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyMatchTeamSwitch];
inline bool NotifyMatchTeamSwitch::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyMatchTeamSwitch::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyMatchTeamSwitch::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyMatchTeamSwitch::clear_msgid() {
  msgid_ = 224;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyMatchTeamSwitch::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMatchTeamSwitch.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyMatchTeamSwitch::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyMatchTeamSwitch.msgid)
}

// optional bool startflag = 2;
inline bool NotifyMatchTeamSwitch::has_startflag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyMatchTeamSwitch::set_has_startflag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyMatchTeamSwitch::clear_has_startflag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyMatchTeamSwitch::clear_startflag() {
  startflag_ = false;
  clear_has_startflag();
}
inline bool NotifyMatchTeamSwitch::startflag() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMatchTeamSwitch.startflag)
  return startflag_;
}
inline void NotifyMatchTeamSwitch::set_startflag(bool value) {
  set_has_startflag();
  startflag_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyMatchTeamSwitch.startflag)
}

// -------------------------------------------------------------------

// NotifyMatchInviteJoin

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyMatchInviteJoin];
inline bool NotifyMatchInviteJoin::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyMatchInviteJoin::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyMatchInviteJoin::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyMatchInviteJoin::clear_msgid() {
  msgid_ = 225;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyMatchInviteJoin::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMatchInviteJoin.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyMatchInviteJoin::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyMatchInviteJoin.msgid)
}

// optional string nickname = 2;
inline bool NotifyMatchInviteJoin::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyMatchInviteJoin::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyMatchInviteJoin::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyMatchInviteJoin::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& NotifyMatchInviteJoin::nickname() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMatchInviteJoin.nickname)
  return *nickname_;
}
inline void NotifyMatchInviteJoin::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.NotifyMatchInviteJoin.nickname)
}
inline void NotifyMatchInviteJoin::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.NotifyMatchInviteJoin.nickname)
}
inline void NotifyMatchInviteJoin::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.NotifyMatchInviteJoin.nickname)
}
inline ::std::string* NotifyMatchInviteJoin::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyMatchInviteJoin.nickname)
  return nickname_;
}
inline ::std::string* NotifyMatchInviteJoin::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NotifyMatchInviteJoin::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.NotifyMatchInviteJoin.nickname)
}

// -------------------------------------------------------------------

// NotifyHerosInfo_heropanelinfo_goodsmsg

// optional int32 grid = 1;
inline bool NotifyHerosInfo_heropanelinfo_goodsmsg::has_grid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyHerosInfo_heropanelinfo_goodsmsg::set_has_grid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyHerosInfo_heropanelinfo_goodsmsg::clear_has_grid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyHerosInfo_heropanelinfo_goodsmsg::clear_grid() {
  grid_ = 0;
  clear_has_grid();
}
inline ::google::protobuf::int32 NotifyHerosInfo_heropanelinfo_goodsmsg::grid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyHerosInfo.heropanelinfo.goodsmsg.grid)
  return grid_;
}
inline void NotifyHerosInfo_heropanelinfo_goodsmsg::set_grid(::google::protobuf::int32 value) {
  set_has_grid();
  grid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyHerosInfo.heropanelinfo.goodsmsg.grid)
}

// optional int32 goodid = 2;
inline bool NotifyHerosInfo_heropanelinfo_goodsmsg::has_goodid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyHerosInfo_heropanelinfo_goodsmsg::set_has_goodid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyHerosInfo_heropanelinfo_goodsmsg::clear_has_goodid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyHerosInfo_heropanelinfo_goodsmsg::clear_goodid() {
  goodid_ = 0;
  clear_has_goodid();
}
inline ::google::protobuf::int32 NotifyHerosInfo_heropanelinfo_goodsmsg::goodid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyHerosInfo.heropanelinfo.goodsmsg.goodid)
  return goodid_;
}
inline void NotifyHerosInfo_heropanelinfo_goodsmsg::set_goodid(::google::protobuf::int32 value) {
  set_has_goodid();
  goodid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyHerosInfo.heropanelinfo.goodsmsg.goodid)
}

// -------------------------------------------------------------------

// NotifyHerosInfo_heropanelinfo

// optional int32 camgpid = 1;
inline bool NotifyHerosInfo_heropanelinfo::has_camgpid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyHerosInfo_heropanelinfo::set_has_camgpid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyHerosInfo_heropanelinfo::clear_has_camgpid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyHerosInfo_heropanelinfo::clear_camgpid() {
  camgpid_ = 0;
  clear_has_camgpid();
}
inline ::google::protobuf::int32 NotifyHerosInfo_heropanelinfo::camgpid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyHerosInfo.heropanelinfo.camgpid)
  return camgpid_;
}
inline void NotifyHerosInfo_heropanelinfo::set_camgpid(::google::protobuf::int32 value) {
  set_has_camgpid();
  camgpid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyHerosInfo.heropanelinfo.camgpid)
}

// optional int64 guid = 2;
inline bool NotifyHerosInfo_heropanelinfo::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyHerosInfo_heropanelinfo::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyHerosInfo_heropanelinfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyHerosInfo_heropanelinfo::clear_guid() {
  guid_ = GOOGLE_LONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::int64 NotifyHerosInfo_heropanelinfo::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyHerosInfo.heropanelinfo.guid)
  return guid_;
}
inline void NotifyHerosInfo_heropanelinfo::set_guid(::google::protobuf::int64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyHerosInfo.heropanelinfo.guid)
}

// optional int32 herolv = 3;
inline bool NotifyHerosInfo_heropanelinfo::has_herolv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyHerosInfo_heropanelinfo::set_has_herolv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyHerosInfo_heropanelinfo::clear_has_herolv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyHerosInfo_heropanelinfo::clear_herolv() {
  herolv_ = 0;
  clear_has_herolv();
}
inline ::google::protobuf::int32 NotifyHerosInfo_heropanelinfo::herolv() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyHerosInfo.heropanelinfo.herolv)
  return herolv_;
}
inline void NotifyHerosInfo_heropanelinfo::set_herolv(::google::protobuf::int32 value) {
  set_has_herolv();
  herolv_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyHerosInfo.heropanelinfo.herolv)
}

// optional string nickname = 4;
inline bool NotifyHerosInfo_heropanelinfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyHerosInfo_heropanelinfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyHerosInfo_heropanelinfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyHerosInfo_heropanelinfo::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& NotifyHerosInfo_heropanelinfo::nickname() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyHerosInfo.heropanelinfo.nickname)
  return *nickname_;
}
inline void NotifyHerosInfo_heropanelinfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.NotifyHerosInfo.heropanelinfo.nickname)
}
inline void NotifyHerosInfo_heropanelinfo::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.NotifyHerosInfo.heropanelinfo.nickname)
}
inline void NotifyHerosInfo_heropanelinfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.NotifyHerosInfo.heropanelinfo.nickname)
}
inline ::std::string* NotifyHerosInfo_heropanelinfo::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyHerosInfo.heropanelinfo.nickname)
  return nickname_;
}
inline ::std::string* NotifyHerosInfo_heropanelinfo::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NotifyHerosInfo_heropanelinfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.NotifyHerosInfo.heropanelinfo.nickname)
}

// optional int32 killnum = 5;
inline bool NotifyHerosInfo_heropanelinfo::has_killnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifyHerosInfo_heropanelinfo::set_has_killnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifyHerosInfo_heropanelinfo::clear_has_killnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifyHerosInfo_heropanelinfo::clear_killnum() {
  killnum_ = 0;
  clear_has_killnum();
}
inline ::google::protobuf::int32 NotifyHerosInfo_heropanelinfo::killnum() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyHerosInfo.heropanelinfo.killnum)
  return killnum_;
}
inline void NotifyHerosInfo_heropanelinfo::set_killnum(::google::protobuf::int32 value) {
  set_has_killnum();
  killnum_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyHerosInfo.heropanelinfo.killnum)
}

// optional int32 deadtimes = 6;
inline bool NotifyHerosInfo_heropanelinfo::has_deadtimes() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NotifyHerosInfo_heropanelinfo::set_has_deadtimes() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NotifyHerosInfo_heropanelinfo::clear_has_deadtimes() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NotifyHerosInfo_heropanelinfo::clear_deadtimes() {
  deadtimes_ = 0;
  clear_has_deadtimes();
}
inline ::google::protobuf::int32 NotifyHerosInfo_heropanelinfo::deadtimes() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyHerosInfo.heropanelinfo.deadtimes)
  return deadtimes_;
}
inline void NotifyHerosInfo_heropanelinfo::set_deadtimes(::google::protobuf::int32 value) {
  set_has_deadtimes();
  deadtimes_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyHerosInfo.heropanelinfo.deadtimes)
}

// optional int32 asstimes = 7;
inline bool NotifyHerosInfo_heropanelinfo::has_asstimes() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void NotifyHerosInfo_heropanelinfo::set_has_asstimes() {
  _has_bits_[0] |= 0x00000040u;
}
inline void NotifyHerosInfo_heropanelinfo::clear_has_asstimes() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void NotifyHerosInfo_heropanelinfo::clear_asstimes() {
  asstimes_ = 0;
  clear_has_asstimes();
}
inline ::google::protobuf::int32 NotifyHerosInfo_heropanelinfo::asstimes() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyHerosInfo.heropanelinfo.asstimes)
  return asstimes_;
}
inline void NotifyHerosInfo_heropanelinfo::set_asstimes(::google::protobuf::int32 value) {
  set_has_asstimes();
  asstimes_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyHerosInfo.heropanelinfo.asstimes)
}

// optional int32 lasthit = 8;
inline bool NotifyHerosInfo_heropanelinfo::has_lasthit() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void NotifyHerosInfo_heropanelinfo::set_has_lasthit() {
  _has_bits_[0] |= 0x00000080u;
}
inline void NotifyHerosInfo_heropanelinfo::clear_has_lasthit() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void NotifyHerosInfo_heropanelinfo::clear_lasthit() {
  lasthit_ = 0;
  clear_has_lasthit();
}
inline ::google::protobuf::int32 NotifyHerosInfo_heropanelinfo::lasthit() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyHerosInfo.heropanelinfo.lasthit)
  return lasthit_;
}
inline void NotifyHerosInfo_heropanelinfo::set_lasthit(::google::protobuf::int32 value) {
  set_has_lasthit();
  lasthit_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyHerosInfo.heropanelinfo.lasthit)
}

// repeated .GSToGC.NotifyHerosInfo.heropanelinfo.goodsmsg goods = 9;
inline int NotifyHerosInfo_heropanelinfo::goods_size() const {
  return goods_.size();
}
inline void NotifyHerosInfo_heropanelinfo::clear_goods() {
  goods_.Clear();
}
inline const ::GSToGC::NotifyHerosInfo_heropanelinfo_goodsmsg& NotifyHerosInfo_heropanelinfo::goods(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyHerosInfo.heropanelinfo.goods)
  return goods_.Get(index);
}
inline ::GSToGC::NotifyHerosInfo_heropanelinfo_goodsmsg* NotifyHerosInfo_heropanelinfo::mutable_goods(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyHerosInfo.heropanelinfo.goods)
  return goods_.Mutable(index);
}
inline ::GSToGC::NotifyHerosInfo_heropanelinfo_goodsmsg* NotifyHerosInfo_heropanelinfo::add_goods() {
  // @@protoc_insertion_point(field_add:GSToGC.NotifyHerosInfo.heropanelinfo.goods)
  return goods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyHerosInfo_heropanelinfo_goodsmsg >&
NotifyHerosInfo_heropanelinfo::goods() const {
  // @@protoc_insertion_point(field_list:GSToGC.NotifyHerosInfo.heropanelinfo.goods)
  return goods_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyHerosInfo_heropanelinfo_goodsmsg >*
NotifyHerosInfo_heropanelinfo::mutable_goods() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.NotifyHerosInfo.heropanelinfo.goods)
  return &goods_;
}

// optional uint32 heroid = 10;
inline bool NotifyHerosInfo_heropanelinfo::has_heroid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void NotifyHerosInfo_heropanelinfo::set_has_heroid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void NotifyHerosInfo_heropanelinfo::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void NotifyHerosInfo_heropanelinfo::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 NotifyHerosInfo_heropanelinfo::heroid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyHerosInfo.heropanelinfo.heroid)
  return heroid_;
}
inline void NotifyHerosInfo_heropanelinfo::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyHerosInfo.heropanelinfo.heroid)
}

// -------------------------------------------------------------------

// NotifyHerosInfo

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromBS_NotifyHerosInfo];
inline bool NotifyHerosInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyHerosInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyHerosInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyHerosInfo::clear_msgid() {
  msgid_ = 144;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyHerosInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyHerosInfo.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyHerosInfo::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyHerosInfo.msgid)
}

// repeated .GSToGC.NotifyHerosInfo.heropanelinfo info = 2;
inline int NotifyHerosInfo::info_size() const {
  return info_.size();
}
inline void NotifyHerosInfo::clear_info() {
  info_.Clear();
}
inline const ::GSToGC::NotifyHerosInfo_heropanelinfo& NotifyHerosInfo::info(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyHerosInfo.info)
  return info_.Get(index);
}
inline ::GSToGC::NotifyHerosInfo_heropanelinfo* NotifyHerosInfo::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyHerosInfo.info)
  return info_.Mutable(index);
}
inline ::GSToGC::NotifyHerosInfo_heropanelinfo* NotifyHerosInfo::add_info() {
  // @@protoc_insertion_point(field_add:GSToGC.NotifyHerosInfo.info)
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyHerosInfo_heropanelinfo >&
NotifyHerosInfo::info() const {
  // @@protoc_insertion_point(field_list:GSToGC.NotifyHerosInfo.info)
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyHerosInfo_heropanelinfo >*
NotifyHerosInfo::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.NotifyHerosInfo.info)
  return &info_;
}

// -------------------------------------------------------------------

// NotifyGoodsExpired

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromBS_NotifyGoodsExpired];
inline bool NotifyGoodsExpired::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyGoodsExpired::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyGoodsExpired::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyGoodsExpired::clear_msgid() {
  msgid_ = 145;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyGoodsExpired::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyGoodsExpired.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyGoodsExpired::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyGoodsExpired.msgid)
}

// repeated int32 commondityid = 2;
inline int NotifyGoodsExpired::commondityid_size() const {
  return commondityid_.size();
}
inline void NotifyGoodsExpired::clear_commondityid() {
  commondityid_.Clear();
}
inline ::google::protobuf::int32 NotifyGoodsExpired::commondityid(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyGoodsExpired.commondityid)
  return commondityid_.Get(index);
}
inline void NotifyGoodsExpired::set_commondityid(int index, ::google::protobuf::int32 value) {
  commondityid_.Set(index, value);
  // @@protoc_insertion_point(field_set:GSToGC.NotifyGoodsExpired.commondityid)
}
inline void NotifyGoodsExpired::add_commondityid(::google::protobuf::int32 value) {
  commondityid_.Add(value);
  // @@protoc_insertion_point(field_add:GSToGC.NotifyGoodsExpired.commondityid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NotifyGoodsExpired::commondityid() const {
  // @@protoc_insertion_point(field_list:GSToGC.NotifyGoodsExpired.commondityid)
  return commondityid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NotifyGoodsExpired::mutable_commondityid() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.NotifyGoodsExpired.commondityid)
  return &commondityid_;
}

// -------------------------------------------------------------------

// ShortMail

// optional int32 mailid = 1;
inline bool ShortMail::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShortMail::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShortMail::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShortMail::clear_mailid() {
  mailid_ = 0;
  clear_has_mailid();
}
inline ::google::protobuf::int32 ShortMail::mailid() const {
  // @@protoc_insertion_point(field_get:GSToGC.ShortMail.mailid)
  return mailid_;
}
inline void ShortMail::set_mailid(::google::protobuf::int32 value) {
  set_has_mailid();
  mailid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.ShortMail.mailid)
}

// optional .GSToGC.MailType mailType = 2;
inline bool ShortMail::has_mailtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShortMail::set_has_mailtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShortMail::clear_has_mailtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShortMail::clear_mailtype() {
  mailtype_ = 0;
  clear_has_mailtype();
}
inline ::GSToGC::MailType ShortMail::mailtype() const {
  // @@protoc_insertion_point(field_get:GSToGC.ShortMail.mailType)
  return static_cast< ::GSToGC::MailType >(mailtype_);
}
inline void ShortMail::set_mailtype(::GSToGC::MailType value) {
  assert(::GSToGC::MailType_IsValid(value));
  set_has_mailtype();
  mailtype_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.ShortMail.mailType)
}

// optional string mailTitle = 3;
inline bool ShortMail::has_mailtitle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShortMail::set_has_mailtitle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShortMail::clear_has_mailtitle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShortMail::clear_mailtitle() {
  if (mailtitle_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mailtitle_->clear();
  }
  clear_has_mailtitle();
}
inline const ::std::string& ShortMail::mailtitle() const {
  // @@protoc_insertion_point(field_get:GSToGC.ShortMail.mailTitle)
  return *mailtitle_;
}
inline void ShortMail::set_mailtitle(const ::std::string& value) {
  set_has_mailtitle();
  if (mailtitle_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mailtitle_ = new ::std::string;
  }
  mailtitle_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.ShortMail.mailTitle)
}
inline void ShortMail::set_mailtitle(const char* value) {
  set_has_mailtitle();
  if (mailtitle_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mailtitle_ = new ::std::string;
  }
  mailtitle_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.ShortMail.mailTitle)
}
inline void ShortMail::set_mailtitle(const char* value, size_t size) {
  set_has_mailtitle();
  if (mailtitle_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mailtitle_ = new ::std::string;
  }
  mailtitle_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.ShortMail.mailTitle)
}
inline ::std::string* ShortMail::mutable_mailtitle() {
  set_has_mailtitle();
  if (mailtitle_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mailtitle_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.ShortMail.mailTitle)
  return mailtitle_;
}
inline ::std::string* ShortMail::release_mailtitle() {
  clear_has_mailtitle();
  if (mailtitle_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mailtitle_;
    mailtitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ShortMail::set_allocated_mailtitle(::std::string* mailtitle) {
  if (mailtitle_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mailtitle_;
  }
  if (mailtitle) {
    set_has_mailtitle();
    mailtitle_ = mailtitle;
  } else {
    clear_has_mailtitle();
    mailtitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.ShortMail.mailTitle)
}

// optional .GSToGC.EMailCurtState mailState = 4;
inline bool ShortMail::has_mailstate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShortMail::set_has_mailstate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShortMail::clear_has_mailstate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShortMail::clear_mailstate() {
  mailstate_ = 0;
  clear_has_mailstate();
}
inline ::GSToGC::EMailCurtState ShortMail::mailstate() const {
  // @@protoc_insertion_point(field_get:GSToGC.ShortMail.mailState)
  return static_cast< ::GSToGC::EMailCurtState >(mailstate_);
}
inline void ShortMail::set_mailstate(::GSToGC::EMailCurtState value) {
  assert(::GSToGC::EMailCurtState_IsValid(value));
  set_has_mailstate();
  mailstate_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.ShortMail.mailState)
}

// -------------------------------------------------------------------

// DelAndSortMail

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyIfMailDelAndSort];
inline bool DelAndSortMail::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelAndSortMail::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelAndSortMail::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelAndSortMail::clear_msgid() {
  msgid_ = 136;
  clear_has_msgid();
}
inline ::GSToGC::MsgID DelAndSortMail::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.DelAndSortMail.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void DelAndSortMail::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.DelAndSortMail.msgid)
}

// optional int32 mailid = 2;
inline bool DelAndSortMail::has_mailid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DelAndSortMail::set_has_mailid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DelAndSortMail::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DelAndSortMail::clear_mailid() {
  mailid_ = 0;
  clear_has_mailid();
}
inline ::google::protobuf::int32 DelAndSortMail::mailid() const {
  // @@protoc_insertion_point(field_get:GSToGC.DelAndSortMail.mailid)
  return mailid_;
}
inline void DelAndSortMail::set_mailid(::google::protobuf::int32 value) {
  set_has_mailid();
  mailid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.DelAndSortMail.mailid)
}

// optional bool mailidDel = 3;
inline bool DelAndSortMail::has_mailiddel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DelAndSortMail::set_has_mailiddel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DelAndSortMail::clear_has_mailiddel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DelAndSortMail::clear_mailiddel() {
  mailiddel_ = false;
  clear_has_mailiddel();
}
inline bool DelAndSortMail::mailiddel() const {
  // @@protoc_insertion_point(field_get:GSToGC.DelAndSortMail.mailidDel)
  return mailiddel_;
}
inline void DelAndSortMail::set_mailiddel(bool value) {
  set_has_mailiddel();
  mailiddel_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.DelAndSortMail.mailidDel)
}

// optional bool sort = 4;
inline bool DelAndSortMail::has_sort() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DelAndSortMail::set_has_sort() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DelAndSortMail::clear_has_sort() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DelAndSortMail::clear_sort() {
  sort_ = false;
  clear_has_sort();
}
inline bool DelAndSortMail::sort() const {
  // @@protoc_insertion_point(field_get:GSToGC.DelAndSortMail.sort)
  return sort_;
}
inline void DelAndSortMail::set_sort(bool value) {
  set_has_sort();
  sort_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.DelAndSortMail.sort)
}

// -------------------------------------------------------------------

// MailInfo

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyMailInfo];
inline bool MailInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailInfo::clear_msgid() {
  msgid_ = 135;
  clear_has_msgid();
}
inline ::GSToGC::MsgID MailInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.MailInfo.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void MailInfo::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.MailInfo.msgid)
}

// optional int32 mailid = 2;
inline bool MailInfo::has_mailid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailInfo::set_has_mailid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailInfo::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailInfo::clear_mailid() {
  mailid_ = 0;
  clear_has_mailid();
}
inline ::google::protobuf::int32 MailInfo::mailid() const {
  // @@protoc_insertion_point(field_get:GSToGC.MailInfo.mailid)
  return mailid_;
}
inline void MailInfo::set_mailid(::google::protobuf::int32 value) {
  set_has_mailid();
  mailid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.MailInfo.mailid)
}

// optional string mailcontent = 3;
inline bool MailInfo::has_mailcontent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailInfo::set_has_mailcontent() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailInfo::clear_has_mailcontent() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailInfo::clear_mailcontent() {
  if (mailcontent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mailcontent_->clear();
  }
  clear_has_mailcontent();
}
inline const ::std::string& MailInfo::mailcontent() const {
  // @@protoc_insertion_point(field_get:GSToGC.MailInfo.mailcontent)
  return *mailcontent_;
}
inline void MailInfo::set_mailcontent(const ::std::string& value) {
  set_has_mailcontent();
  if (mailcontent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mailcontent_ = new ::std::string;
  }
  mailcontent_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.MailInfo.mailcontent)
}
inline void MailInfo::set_mailcontent(const char* value) {
  set_has_mailcontent();
  if (mailcontent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mailcontent_ = new ::std::string;
  }
  mailcontent_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.MailInfo.mailcontent)
}
inline void MailInfo::set_mailcontent(const char* value, size_t size) {
  set_has_mailcontent();
  if (mailcontent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mailcontent_ = new ::std::string;
  }
  mailcontent_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.MailInfo.mailcontent)
}
inline ::std::string* MailInfo::mutable_mailcontent() {
  set_has_mailcontent();
  if (mailcontent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mailcontent_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.MailInfo.mailcontent)
  return mailcontent_;
}
inline ::std::string* MailInfo::release_mailcontent() {
  clear_has_mailcontent();
  if (mailcontent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mailcontent_;
    mailcontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MailInfo::set_allocated_mailcontent(::std::string* mailcontent) {
  if (mailcontent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mailcontent_;
  }
  if (mailcontent) {
    set_has_mailcontent();
    mailcontent_ = mailcontent;
  } else {
    clear_has_mailcontent();
    mailcontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.MailInfo.mailcontent)
}

// optional string sender = 4;
inline bool MailInfo::has_sender() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailInfo::set_has_sender() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailInfo::clear_has_sender() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailInfo::clear_sender() {
  if (sender_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_->clear();
  }
  clear_has_sender();
}
inline const ::std::string& MailInfo::sender() const {
  // @@protoc_insertion_point(field_get:GSToGC.MailInfo.sender)
  return *sender_;
}
inline void MailInfo::set_sender(const ::std::string& value) {
  set_has_sender();
  if (sender_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_ = new ::std::string;
  }
  sender_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.MailInfo.sender)
}
inline void MailInfo::set_sender(const char* value) {
  set_has_sender();
  if (sender_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_ = new ::std::string;
  }
  sender_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.MailInfo.sender)
}
inline void MailInfo::set_sender(const char* value, size_t size) {
  set_has_sender();
  if (sender_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_ = new ::std::string;
  }
  sender_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.MailInfo.sender)
}
inline ::std::string* MailInfo::mutable_sender() {
  set_has_sender();
  if (sender_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.MailInfo.sender)
  return sender_;
}
inline ::std::string* MailInfo::release_sender() {
  clear_has_sender();
  if (sender_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sender_;
    sender_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MailInfo::set_allocated_sender(::std::string* sender) {
  if (sender_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sender_;
  }
  if (sender) {
    set_has_sender();
    sender_ = sender;
  } else {
    clear_has_sender();
    sender_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.MailInfo.sender)
}

// optional string createTime = 5;
inline bool MailInfo::has_createtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MailInfo::set_has_createtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MailInfo::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MailInfo::clear_createtime() {
  if (createtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createtime_->clear();
  }
  clear_has_createtime();
}
inline const ::std::string& MailInfo::createtime() const {
  // @@protoc_insertion_point(field_get:GSToGC.MailInfo.createTime)
  return *createtime_;
}
inline void MailInfo::set_createtime(const ::std::string& value) {
  set_has_createtime();
  if (createtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createtime_ = new ::std::string;
  }
  createtime_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.MailInfo.createTime)
}
inline void MailInfo::set_createtime(const char* value) {
  set_has_createtime();
  if (createtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createtime_ = new ::std::string;
  }
  createtime_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.MailInfo.createTime)
}
inline void MailInfo::set_createtime(const char* value, size_t size) {
  set_has_createtime();
  if (createtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createtime_ = new ::std::string;
  }
  createtime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.MailInfo.createTime)
}
inline ::std::string* MailInfo::mutable_createtime() {
  set_has_createtime();
  if (createtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createtime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.MailInfo.createTime)
  return createtime_;
}
inline ::std::string* MailInfo::release_createtime() {
  clear_has_createtime();
  if (createtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = createtime_;
    createtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MailInfo::set_allocated_createtime(::std::string* createtime) {
  if (createtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete createtime_;
  }
  if (createtime) {
    set_has_createtime();
    createtime_ = createtime;
  } else {
    clear_has_createtime();
    createtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.MailInfo.createTime)
}

// optional string mailgift = 6;
inline bool MailInfo::has_mailgift() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MailInfo::set_has_mailgift() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MailInfo::clear_has_mailgift() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MailInfo::clear_mailgift() {
  if (mailgift_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mailgift_->clear();
  }
  clear_has_mailgift();
}
inline const ::std::string& MailInfo::mailgift() const {
  // @@protoc_insertion_point(field_get:GSToGC.MailInfo.mailgift)
  return *mailgift_;
}
inline void MailInfo::set_mailgift(const ::std::string& value) {
  set_has_mailgift();
  if (mailgift_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mailgift_ = new ::std::string;
  }
  mailgift_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.MailInfo.mailgift)
}
inline void MailInfo::set_mailgift(const char* value) {
  set_has_mailgift();
  if (mailgift_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mailgift_ = new ::std::string;
  }
  mailgift_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.MailInfo.mailgift)
}
inline void MailInfo::set_mailgift(const char* value, size_t size) {
  set_has_mailgift();
  if (mailgift_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mailgift_ = new ::std::string;
  }
  mailgift_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.MailInfo.mailgift)
}
inline ::std::string* MailInfo::mutable_mailgift() {
  set_has_mailgift();
  if (mailgift_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mailgift_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.MailInfo.mailgift)
  return mailgift_;
}
inline ::std::string* MailInfo::release_mailgift() {
  clear_has_mailgift();
  if (mailgift_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mailgift_;
    mailgift_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MailInfo::set_allocated_mailgift(::std::string* mailgift) {
  if (mailgift_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mailgift_;
  }
  if (mailgift) {
    set_has_mailgift();
    mailgift_ = mailgift;
  } else {
    clear_has_mailgift();
    mailgift_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.MailInfo.mailgift)
}

// -------------------------------------------------------------------

// NotifyMailList

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyUserMail];
inline bool NotifyMailList::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyMailList::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyMailList::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyMailList::clear_msgid() {
  msgid_ = 134;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyMailList::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMailList.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyMailList::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyMailList.msgid)
}

// repeated .GSToGC.ShortMail mailList = 2;
inline int NotifyMailList::maillist_size() const {
  return maillist_.size();
}
inline void NotifyMailList::clear_maillist() {
  maillist_.Clear();
}
inline const ::GSToGC::ShortMail& NotifyMailList::maillist(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMailList.mailList)
  return maillist_.Get(index);
}
inline ::GSToGC::ShortMail* NotifyMailList::mutable_maillist(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyMailList.mailList)
  return maillist_.Mutable(index);
}
inline ::GSToGC::ShortMail* NotifyMailList::add_maillist() {
  // @@protoc_insertion_point(field_add:GSToGC.NotifyMailList.mailList)
  return maillist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::ShortMail >&
NotifyMailList::maillist() const {
  // @@protoc_insertion_point(field_list:GSToGC.NotifyMailList.mailList)
  return maillist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::ShortMail >*
NotifyMailList::mutable_maillist() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.NotifyMailList.mailList)
  return &maillist_;
}

// -------------------------------------------------------------------

// GoodsCfgInfo_Consume

// optional int32 consumetype = 1;
inline bool GoodsCfgInfo_Consume::has_consumetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GoodsCfgInfo_Consume::set_has_consumetype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GoodsCfgInfo_Consume::clear_has_consumetype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GoodsCfgInfo_Consume::clear_consumetype() {
  consumetype_ = 0;
  clear_has_consumetype();
}
inline ::google::protobuf::int32 GoodsCfgInfo_Consume::consumetype() const {
  // @@protoc_insertion_point(field_get:GSToGC.GoodsCfgInfo.Consume.consumetype)
  return consumetype_;
}
inline void GoodsCfgInfo_Consume::set_consumetype(::google::protobuf::int32 value) {
  set_has_consumetype();
  consumetype_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GoodsCfgInfo.Consume.consumetype)
}

// optional int32 price = 2;
inline bool GoodsCfgInfo_Consume::has_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GoodsCfgInfo_Consume::set_has_price() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GoodsCfgInfo_Consume::clear_has_price() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GoodsCfgInfo_Consume::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 GoodsCfgInfo_Consume::price() const {
  // @@protoc_insertion_point(field_get:GSToGC.GoodsCfgInfo.Consume.price)
  return price_;
}
inline void GoodsCfgInfo_Consume::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GoodsCfgInfo.Consume.price)
}

// -------------------------------------------------------------------

// GoodsCfgInfo

// optional int32 goodid = 1;
inline bool GoodsCfgInfo::has_goodid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GoodsCfgInfo::set_has_goodid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GoodsCfgInfo::clear_has_goodid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GoodsCfgInfo::clear_goodid() {
  goodid_ = 0;
  clear_has_goodid();
}
inline ::google::protobuf::int32 GoodsCfgInfo::goodid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GoodsCfgInfo.goodid)
  return goodid_;
}
inline void GoodsCfgInfo::set_goodid(::google::protobuf::int32 value) {
  set_has_goodid();
  goodid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GoodsCfgInfo.goodid)
}

// repeated .GSToGC.GoodsCfgInfo.Consume consume = 2;
inline int GoodsCfgInfo::consume_size() const {
  return consume_.size();
}
inline void GoodsCfgInfo::clear_consume() {
  consume_.Clear();
}
inline const ::GSToGC::GoodsCfgInfo_Consume& GoodsCfgInfo::consume(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.GoodsCfgInfo.consume)
  return consume_.Get(index);
}
inline ::GSToGC::GoodsCfgInfo_Consume* GoodsCfgInfo::mutable_consume(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.GoodsCfgInfo.consume)
  return consume_.Mutable(index);
}
inline ::GSToGC::GoodsCfgInfo_Consume* GoodsCfgInfo::add_consume() {
  // @@protoc_insertion_point(field_add:GSToGC.GoodsCfgInfo.consume)
  return consume_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::GoodsCfgInfo_Consume >&
GoodsCfgInfo::consume() const {
  // @@protoc_insertion_point(field_list:GSToGC.GoodsCfgInfo.consume)
  return consume_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::GoodsCfgInfo_Consume >*
GoodsCfgInfo::mutable_consume() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.GoodsCfgInfo.consume)
  return &consume_;
}

// optional .GSToGC.GoodsCfgInfo.CfgType cfg_type = 3;
inline bool GoodsCfgInfo::has_cfg_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GoodsCfgInfo::set_has_cfg_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GoodsCfgInfo::clear_has_cfg_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GoodsCfgInfo::clear_cfg_type() {
  cfg_type_ = 0;
  clear_has_cfg_type();
}
inline ::GSToGC::GoodsCfgInfo_CfgType GoodsCfgInfo::cfg_type() const {
  // @@protoc_insertion_point(field_get:GSToGC.GoodsCfgInfo.cfg_type)
  return static_cast< ::GSToGC::GoodsCfgInfo_CfgType >(cfg_type_);
}
inline void GoodsCfgInfo::set_cfg_type(::GSToGC::GoodsCfgInfo_CfgType value) {
  assert(::GSToGC::GoodsCfgInfo_CfgType_IsValid(value));
  set_has_cfg_type();
  cfg_type_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GoodsCfgInfo.cfg_type)
}

// -------------------------------------------------------------------

// GoodsBuyCfgInfo

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGoodsCfgInfo];
inline bool GoodsBuyCfgInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GoodsBuyCfgInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GoodsBuyCfgInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GoodsBuyCfgInfo::clear_msgid() {
  msgid_ = 133;
  clear_has_msgid();
}
inline ::GSToGC::MsgID GoodsBuyCfgInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GoodsBuyCfgInfo.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void GoodsBuyCfgInfo::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GoodsBuyCfgInfo.msgid)
}

// repeated .GSToGC.GoodsCfgInfo info = 2;
inline int GoodsBuyCfgInfo::info_size() const {
  return info_.size();
}
inline void GoodsBuyCfgInfo::clear_info() {
  info_.Clear();
}
inline const ::GSToGC::GoodsCfgInfo& GoodsBuyCfgInfo::info(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.GoodsBuyCfgInfo.info)
  return info_.Get(index);
}
inline ::GSToGC::GoodsCfgInfo* GoodsBuyCfgInfo::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.GoodsBuyCfgInfo.info)
  return info_.Mutable(index);
}
inline ::GSToGC::GoodsCfgInfo* GoodsBuyCfgInfo::add_info() {
  // @@protoc_insertion_point(field_add:GSToGC.GoodsBuyCfgInfo.info)
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::GoodsCfgInfo >&
GoodsBuyCfgInfo::info() const {
  // @@protoc_insertion_point(field_list:GSToGC.GoodsBuyCfgInfo.info)
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::GoodsCfgInfo >*
GoodsBuyCfgInfo::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.GoodsBuyCfgInfo.info)
  return &info_;
}

// -------------------------------------------------------------------

// HeroAttributes

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyHeroAttributes];
inline bool HeroAttributes::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroAttributes::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroAttributes::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroAttributes::clear_msgid() {
  msgid_ = 132;
  clear_has_msgid();
}
inline ::GSToGC::MsgID HeroAttributes::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.HeroAttributes.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void HeroAttributes::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HeroAttributes.msgid)
}

// optional uint64 guid = 2;
inline bool HeroAttributes::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroAttributes::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroAttributes::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroAttributes::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 HeroAttributes::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.HeroAttributes.guid)
  return guid_;
}
inline void HeroAttributes::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HeroAttributes.guid)
}

// optional int32 PlayerSpeed = 3;
inline bool HeroAttributes::has_playerspeed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeroAttributes::set_has_playerspeed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeroAttributes::clear_has_playerspeed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeroAttributes::clear_playerspeed() {
  playerspeed_ = 0;
  clear_has_playerspeed();
}
inline ::google::protobuf::int32 HeroAttributes::playerspeed() const {
  // @@protoc_insertion_point(field_get:GSToGC.HeroAttributes.PlayerSpeed)
  return playerspeed_;
}
inline void HeroAttributes::set_playerspeed(::google::protobuf::int32 value) {
  set_has_playerspeed();
  playerspeed_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HeroAttributes.PlayerSpeed)
}

// optional int32 AttackInterval = 4;
inline bool HeroAttributes::has_attackinterval() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HeroAttributes::set_has_attackinterval() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HeroAttributes::clear_has_attackinterval() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HeroAttributes::clear_attackinterval() {
  attackinterval_ = 0;
  clear_has_attackinterval();
}
inline ::google::protobuf::int32 HeroAttributes::attackinterval() const {
  // @@protoc_insertion_point(field_get:GSToGC.HeroAttributes.AttackInterval)
  return attackinterval_;
}
inline void HeroAttributes::set_attackinterval(::google::protobuf::int32 value) {
  set_has_attackinterval();
  attackinterval_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HeroAttributes.AttackInterval)
}

// optional int32 AttackRange = 5;
inline bool HeroAttributes::has_attackrange() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HeroAttributes::set_has_attackrange() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HeroAttributes::clear_has_attackrange() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HeroAttributes::clear_attackrange() {
  attackrange_ = 0;
  clear_has_attackrange();
}
inline ::google::protobuf::int32 HeroAttributes::attackrange() const {
  // @@protoc_insertion_point(field_get:GSToGC.HeroAttributes.AttackRange)
  return attackrange_;
}
inline void HeroAttributes::set_attackrange(::google::protobuf::int32 value) {
  set_has_attackrange();
  attackrange_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HeroAttributes.AttackRange)
}

// optional int32 ResurgenceTime = 6;
inline bool HeroAttributes::has_resurgencetime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HeroAttributes::set_has_resurgencetime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HeroAttributes::clear_has_resurgencetime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HeroAttributes::clear_resurgencetime() {
  resurgencetime_ = 0;
  clear_has_resurgencetime();
}
inline ::google::protobuf::int32 HeroAttributes::resurgencetime() const {
  // @@protoc_insertion_point(field_get:GSToGC.HeroAttributes.ResurgenceTime)
  return resurgencetime_;
}
inline void HeroAttributes::set_resurgencetime(::google::protobuf::int32 value) {
  set_has_resurgencetime();
  resurgencetime_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HeroAttributes.ResurgenceTime)
}

// optional int32 PhysicAttack = 7;
inline bool HeroAttributes::has_physicattack() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HeroAttributes::set_has_physicattack() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HeroAttributes::clear_has_physicattack() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HeroAttributes::clear_physicattack() {
  physicattack_ = 0;
  clear_has_physicattack();
}
inline ::google::protobuf::int32 HeroAttributes::physicattack() const {
  // @@protoc_insertion_point(field_get:GSToGC.HeroAttributes.PhysicAttack)
  return physicattack_;
}
inline void HeroAttributes::set_physicattack(::google::protobuf::int32 value) {
  set_has_physicattack();
  physicattack_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HeroAttributes.PhysicAttack)
}

// optional int32 SpellsAttack = 8;
inline bool HeroAttributes::has_spellsattack() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HeroAttributes::set_has_spellsattack() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HeroAttributes::clear_has_spellsattack() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HeroAttributes::clear_spellsattack() {
  spellsattack_ = 0;
  clear_has_spellsattack();
}
inline ::google::protobuf::int32 HeroAttributes::spellsattack() const {
  // @@protoc_insertion_point(field_get:GSToGC.HeroAttributes.SpellsAttack)
  return spellsattack_;
}
inline void HeroAttributes::set_spellsattack(::google::protobuf::int32 value) {
  set_has_spellsattack();
  spellsattack_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HeroAttributes.SpellsAttack)
}

// optional int32 PhysicDef = 9;
inline bool HeroAttributes::has_physicdef() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void HeroAttributes::set_has_physicdef() {
  _has_bits_[0] |= 0x00000100u;
}
inline void HeroAttributes::clear_has_physicdef() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void HeroAttributes::clear_physicdef() {
  physicdef_ = 0;
  clear_has_physicdef();
}
inline ::google::protobuf::int32 HeroAttributes::physicdef() const {
  // @@protoc_insertion_point(field_get:GSToGC.HeroAttributes.PhysicDef)
  return physicdef_;
}
inline void HeroAttributes::set_physicdef(::google::protobuf::int32 value) {
  set_has_physicdef();
  physicdef_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HeroAttributes.PhysicDef)
}

// optional int32 SpellsDef = 10;
inline bool HeroAttributes::has_spellsdef() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void HeroAttributes::set_has_spellsdef() {
  _has_bits_[0] |= 0x00000200u;
}
inline void HeroAttributes::clear_has_spellsdef() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void HeroAttributes::clear_spellsdef() {
  spellsdef_ = 0;
  clear_has_spellsdef();
}
inline ::google::protobuf::int32 HeroAttributes::spellsdef() const {
  // @@protoc_insertion_point(field_get:GSToGC.HeroAttributes.SpellsDef)
  return spellsdef_;
}
inline void HeroAttributes::set_spellsdef(::google::protobuf::int32 value) {
  set_has_spellsdef();
  spellsdef_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HeroAttributes.SpellsDef)
}

// -------------------------------------------------------------------

// HeroAssist

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyHeroAssist];
inline bool HeroAssist::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroAssist::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroAssist::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroAssist::clear_msgid() {
  msgid_ = 131;
  clear_has_msgid();
}
inline ::GSToGC::MsgID HeroAssist::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.HeroAssist.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void HeroAssist::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HeroAssist.msgid)
}

// optional uint64 guid = 2;
inline bool HeroAssist::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroAssist::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroAssist::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroAssist::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 HeroAssist::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.HeroAssist.guid)
  return guid_;
}
inline void HeroAssist::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HeroAssist.guid)
}

// optional int32 assist = 3;
inline bool HeroAssist::has_assist() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeroAssist::set_has_assist() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeroAssist::clear_has_assist() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeroAssist::clear_assist() {
  assist_ = 0;
  clear_has_assist();
}
inline ::google::protobuf::int32 HeroAssist::assist() const {
  // @@protoc_insertion_point(field_get:GSToGC.HeroAssist.assist)
  return assist_;
}
inline void HeroAssist::set_assist(::google::protobuf::int32 value) {
  set_has_assist();
  assist_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HeroAssist.assist)
}

// -------------------------------------------------------------------

// BattleMatcherCount

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBattleMatherCount];
inline bool BattleMatcherCount::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleMatcherCount::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleMatcherCount::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleMatcherCount::clear_msgid() {
  msgid_ = 130;
  clear_has_msgid();
}
inline ::GSToGC::MsgID BattleMatcherCount::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleMatcherCount.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void BattleMatcherCount::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BattleMatcherCount.msgid)
}

// optional int32 count = 2;
inline bool BattleMatcherCount::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleMatcherCount::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleMatcherCount::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleMatcherCount::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 BattleMatcherCount::count() const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleMatcherCount.count)
  return count_;
}
inline void BattleMatcherCount::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BattleMatcherCount.count)
}

// optional int32 maxcount = 3;
inline bool BattleMatcherCount::has_maxcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleMatcherCount::set_has_maxcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleMatcherCount::clear_has_maxcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleMatcherCount::clear_maxcount() {
  maxcount_ = 0;
  clear_has_maxcount();
}
inline ::google::protobuf::int32 BattleMatcherCount::maxcount() const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleMatcherCount.maxcount)
  return maxcount_;
}
inline void BattleMatcherCount::set_maxcount(::google::protobuf::int32 value) {
  set_has_maxcount();
  maxcount_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BattleMatcherCount.maxcount)
}

// -------------------------------------------------------------------

// BattleSpanTime

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBattleSpanTime];
inline bool BattleSpanTime::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleSpanTime::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleSpanTime::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleSpanTime::clear_msgid() {
  msgid_ = 129;
  clear_has_msgid();
}
inline ::GSToGC::MsgID BattleSpanTime::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleSpanTime.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void BattleSpanTime::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BattleSpanTime.msgid)
}

// optional int64 spanTime = 2;
inline bool BattleSpanTime::has_spantime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleSpanTime::set_has_spantime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleSpanTime::clear_has_spantime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleSpanTime::clear_spantime() {
  spantime_ = GOOGLE_LONGLONG(0);
  clear_has_spantime();
}
inline ::google::protobuf::int64 BattleSpanTime::spantime() const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleSpanTime.spanTime)
  return spantime_;
}
inline void BattleSpanTime::set_spantime(::google::protobuf::int64 value) {
  set_has_spantime();
  spantime_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BattleSpanTime.spanTime)
}

// -------------------------------------------------------------------

// BattleDelayTime

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBattleDelayTime];
inline bool BattleDelayTime::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleDelayTime::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleDelayTime::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleDelayTime::clear_msgid() {
  msgid_ = 235;
  clear_has_msgid();
}
inline ::GSToGC::MsgID BattleDelayTime::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleDelayTime.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void BattleDelayTime::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BattleDelayTime.msgid)
}

// optional int64 delayTime = 2;
inline bool BattleDelayTime::has_delaytime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleDelayTime::set_has_delaytime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleDelayTime::clear_has_delaytime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleDelayTime::clear_delaytime() {
  delaytime_ = GOOGLE_LONGLONG(0);
  clear_has_delaytime();
}
inline ::google::protobuf::int64 BattleDelayTime::delaytime() const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleDelayTime.delayTime)
  return delaytime_;
}
inline void BattleDelayTime::set_delaytime(::google::protobuf::int64 value) {
  set_has_delaytime();
  delaytime_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BattleDelayTime.delayTime)
}

// -------------------------------------------------------------------

// UserBaseUpLv

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyUserBaseUpLv];
inline bool UserBaseUpLv::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserBaseUpLv::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserBaseUpLv::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserBaseUpLv::clear_msgid() {
  msgid_ = 128;
  clear_has_msgid();
}
inline ::GSToGC::MsgID UserBaseUpLv::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserBaseUpLv.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void UserBaseUpLv::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserBaseUpLv.msgid)
}

// optional int32 lv = 2;
inline bool UserBaseUpLv::has_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserBaseUpLv::set_has_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserBaseUpLv::clear_has_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserBaseUpLv::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 UserBaseUpLv::lv() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserBaseUpLv.lv)
  return lv_;
}
inline void UserBaseUpLv::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserBaseUpLv.lv)
}

// -------------------------------------------------------------------

// SecondGuideTask_task_info

// optional int32 taskid = 1;
inline bool SecondGuideTask_task_info::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SecondGuideTask_task_info::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SecondGuideTask_task_info::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SecondGuideTask_task_info::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 SecondGuideTask_task_info::taskid() const {
  // @@protoc_insertion_point(field_get:GSToGC.SecondGuideTask.task_info.taskid)
  return taskid_;
}
inline void SecondGuideTask_task_info::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.SecondGuideTask.task_info.taskid)
}

// optional int32 num = 2;
inline bool SecondGuideTask_task_info::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SecondGuideTask_task_info::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SecondGuideTask_task_info::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SecondGuideTask_task_info::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 SecondGuideTask_task_info::num() const {
  // @@protoc_insertion_point(field_get:GSToGC.SecondGuideTask.task_info.num)
  return num_;
}
inline void SecondGuideTask_task_info::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.SecondGuideTask.task_info.num)
}

// -------------------------------------------------------------------

// SecondGuideTask

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGs_NotifySecondaryGuideTask];
inline bool SecondGuideTask::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SecondGuideTask::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SecondGuideTask::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SecondGuideTask::clear_msgid() {
  msgid_ = 121;
  clear_has_msgid();
}
inline ::GSToGC::MsgID SecondGuideTask::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.SecondGuideTask.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void SecondGuideTask::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.SecondGuideTask.msgid)
}

// repeated .GSToGC.SecondGuideTask.task_info taskinfo = 2;
inline int SecondGuideTask::taskinfo_size() const {
  return taskinfo_.size();
}
inline void SecondGuideTask::clear_taskinfo() {
  taskinfo_.Clear();
}
inline const ::GSToGC::SecondGuideTask_task_info& SecondGuideTask::taskinfo(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.SecondGuideTask.taskinfo)
  return taskinfo_.Get(index);
}
inline ::GSToGC::SecondGuideTask_task_info* SecondGuideTask::mutable_taskinfo(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.SecondGuideTask.taskinfo)
  return taskinfo_.Mutable(index);
}
inline ::GSToGC::SecondGuideTask_task_info* SecondGuideTask::add_taskinfo() {
  // @@protoc_insertion_point(field_add:GSToGC.SecondGuideTask.taskinfo)
  return taskinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::SecondGuideTask_task_info >&
SecondGuideTask::taskinfo() const {
  // @@protoc_insertion_point(field_list:GSToGC.SecondGuideTask.taskinfo)
  return taskinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::SecondGuideTask_task_info >*
SecondGuideTask::mutable_taskinfo() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.SecondGuideTask.taskinfo)
  return &taskinfo_;
}

// -------------------------------------------------------------------

// GameTips

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGuideTips];
inline bool GameTips::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameTips::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameTips::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameTips::clear_msgid() {
  msgid_ = 118;
  clear_has_msgid();
}
inline ::GSToGC::MsgID GameTips::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GameTips.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void GameTips::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GameTips.msgid)
}

// optional int32 errocode = 2;
inline bool GameTips::has_errocode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameTips::set_has_errocode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameTips::clear_has_errocode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameTips::clear_errocode() {
  errocode_ = 0;
  clear_has_errocode();
}
inline ::google::protobuf::int32 GameTips::errocode() const {
  // @@protoc_insertion_point(field_get:GSToGC.GameTips.errocode)
  return errocode_;
}
inline void GameTips::set_errocode(::google::protobuf::int32 value) {
  set_has_errocode();
  errocode_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GameTips.errocode)
}

// optional int32 campid = 3;
inline bool GameTips::has_campid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameTips::set_has_campid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameTips::clear_has_campid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameTips::clear_campid() {
  campid_ = 0;
  clear_has_campid();
}
inline ::google::protobuf::int32 GameTips::campid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GameTips.campid)
  return campid_;
}
inline void GameTips::set_campid(::google::protobuf::int32 value) {
  set_has_campid();
  campid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GameTips.campid)
}

// -------------------------------------------------------------------

// NotifyUserReturnBattleRoom

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyUserReturnBattleRoom];
inline bool NotifyUserReturnBattleRoom::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyUserReturnBattleRoom::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyUserReturnBattleRoom::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyUserReturnBattleRoom::clear_msgid() {
  msgid_ = 91;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyUserReturnBattleRoom::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyUserReturnBattleRoom.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyUserReturnBattleRoom::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyUserReturnBattleRoom.msgid)
}

// -------------------------------------------------------------------

// BroadcastBattleHeroInfo_HeroInfo

// optional uint64 guid = 1;
inline bool BroadcastBattleHeroInfo_HeroInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BroadcastBattleHeroInfo_HeroInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BroadcastBattleHeroInfo_HeroInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 BroadcastBattleHeroInfo_HeroInfo::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBattleHeroInfo.HeroInfo.guid)
  return guid_;
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBattleHeroInfo.HeroInfo.guid)
}

// optional string nickname = 2;
inline bool BroadcastBattleHeroInfo_HeroInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BroadcastBattleHeroInfo_HeroInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BroadcastBattleHeroInfo_HeroInfo::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& BroadcastBattleHeroInfo_HeroInfo::nickname() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBattleHeroInfo.HeroInfo.nickname)
  return *nickname_;
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBattleHeroInfo.HeroInfo.nickname)
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.BroadcastBattleHeroInfo.HeroInfo.nickname)
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.BroadcastBattleHeroInfo.HeroInfo.nickname)
}
inline ::std::string* BroadcastBattleHeroInfo_HeroInfo::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.BroadcastBattleHeroInfo.HeroInfo.nickname)
  return nickname_;
}
inline ::std::string* BroadcastBattleHeroInfo_HeroInfo::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.BroadcastBattleHeroInfo.HeroInfo.nickname)
}

// optional int32 level = 3;
inline bool BroadcastBattleHeroInfo_HeroInfo::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BroadcastBattleHeroInfo_HeroInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BroadcastBattleHeroInfo_HeroInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 BroadcastBattleHeroInfo_HeroInfo::level() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBattleHeroInfo.HeroInfo.level)
  return level_;
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBattleHeroInfo.HeroInfo.level)
}

// optional int32 deadtimes = 4;
inline bool BroadcastBattleHeroInfo_HeroInfo::has_deadtimes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_has_deadtimes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BroadcastBattleHeroInfo_HeroInfo::clear_has_deadtimes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BroadcastBattleHeroInfo_HeroInfo::clear_deadtimes() {
  deadtimes_ = 0;
  clear_has_deadtimes();
}
inline ::google::protobuf::int32 BroadcastBattleHeroInfo_HeroInfo::deadtimes() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBattleHeroInfo.HeroInfo.deadtimes)
  return deadtimes_;
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_deadtimes(::google::protobuf::int32 value) {
  set_has_deadtimes();
  deadtimes_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBattleHeroInfo.HeroInfo.deadtimes)
}

// optional int32 campid = 5;
inline bool BroadcastBattleHeroInfo_HeroInfo::has_campid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_has_campid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BroadcastBattleHeroInfo_HeroInfo::clear_has_campid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BroadcastBattleHeroInfo_HeroInfo::clear_campid() {
  campid_ = 0;
  clear_has_campid();
}
inline ::google::protobuf::int32 BroadcastBattleHeroInfo_HeroInfo::campid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBattleHeroInfo.HeroInfo.campid)
  return campid_;
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_campid(::google::protobuf::int32 value) {
  set_has_campid();
  campid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBattleHeroInfo.HeroInfo.campid)
}

// optional int32 headid = 6;
inline bool BroadcastBattleHeroInfo_HeroInfo::has_headid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_has_headid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BroadcastBattleHeroInfo_HeroInfo::clear_has_headid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BroadcastBattleHeroInfo_HeroInfo::clear_headid() {
  headid_ = 0;
  clear_has_headid();
}
inline ::google::protobuf::int32 BroadcastBattleHeroInfo_HeroInfo::headid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBattleHeroInfo.HeroInfo.headid)
  return headid_;
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_headid(::google::protobuf::int32 value) {
  set_has_headid();
  headid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBattleHeroInfo.HeroInfo.headid)
}

// optional int32 hp = 7;
inline bool BroadcastBattleHeroInfo_HeroInfo::has_hp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_has_hp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BroadcastBattleHeroInfo_HeroInfo::clear_has_hp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BroadcastBattleHeroInfo_HeroInfo::clear_hp() {
  hp_ = 0;
  clear_has_hp();
}
inline ::google::protobuf::int32 BroadcastBattleHeroInfo_HeroInfo::hp() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBattleHeroInfo.HeroInfo.hp)
  return hp_;
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_hp(::google::protobuf::int32 value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBattleHeroInfo.HeroInfo.hp)
}

// optional int32 mp = 8;
inline bool BroadcastBattleHeroInfo_HeroInfo::has_mp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_has_mp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BroadcastBattleHeroInfo_HeroInfo::clear_has_mp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BroadcastBattleHeroInfo_HeroInfo::clear_mp() {
  mp_ = 0;
  clear_has_mp();
}
inline ::google::protobuf::int32 BroadcastBattleHeroInfo_HeroInfo::mp() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBattleHeroInfo.HeroInfo.mp)
  return mp_;
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_mp(::google::protobuf::int32 value) {
  set_has_mp();
  mp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBattleHeroInfo.HeroInfo.mp)
}

// optional int32 pos = 9;
inline bool BroadcastBattleHeroInfo_HeroInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BroadcastBattleHeroInfo_HeroInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BroadcastBattleHeroInfo_HeroInfo::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 BroadcastBattleHeroInfo_HeroInfo::pos() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBattleHeroInfo.HeroInfo.pos)
  return pos_;
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBattleHeroInfo.HeroInfo.pos)
}

// optional uint64 masterguid = 10;
inline bool BroadcastBattleHeroInfo_HeroInfo::has_masterguid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_has_masterguid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BroadcastBattleHeroInfo_HeroInfo::clear_has_masterguid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BroadcastBattleHeroInfo_HeroInfo::clear_masterguid() {
  masterguid_ = GOOGLE_ULONGLONG(0);
  clear_has_masterguid();
}
inline ::google::protobuf::uint64 BroadcastBattleHeroInfo_HeroInfo::masterguid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBattleHeroInfo.HeroInfo.masterguid)
  return masterguid_;
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_masterguid(::google::protobuf::uint64 value) {
  set_has_masterguid();
  masterguid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBattleHeroInfo.HeroInfo.masterguid)
}

// optional int32 kills = 11;
inline bool BroadcastBattleHeroInfo_HeroInfo::has_kills() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_has_kills() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BroadcastBattleHeroInfo_HeroInfo::clear_has_kills() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BroadcastBattleHeroInfo_HeroInfo::clear_kills() {
  kills_ = 0;
  clear_has_kills();
}
inline ::google::protobuf::int32 BroadcastBattleHeroInfo_HeroInfo::kills() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBattleHeroInfo.HeroInfo.kills)
  return kills_;
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_kills(::google::protobuf::int32 value) {
  set_has_kills();
  kills_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBattleHeroInfo.HeroInfo.kills)
}

// optional int32 assist = 12;
inline bool BroadcastBattleHeroInfo_HeroInfo::has_assist() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_has_assist() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BroadcastBattleHeroInfo_HeroInfo::clear_has_assist() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BroadcastBattleHeroInfo_HeroInfo::clear_assist() {
  assist_ = 0;
  clear_has_assist();
}
inline ::google::protobuf::int32 BroadcastBattleHeroInfo_HeroInfo::assist() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBattleHeroInfo.HeroInfo.assist)
  return assist_;
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_assist(::google::protobuf::int32 value) {
  set_has_assist();
  assist_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBattleHeroInfo.HeroInfo.assist)
}

// optional int32 heroid = 13;
inline bool BroadcastBattleHeroInfo_HeroInfo::has_heroid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_has_heroid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BroadcastBattleHeroInfo_HeroInfo::clear_has_heroid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BroadcastBattleHeroInfo_HeroInfo::clear_heroid() {
  heroid_ = 0;
  clear_has_heroid();
}
inline ::google::protobuf::int32 BroadcastBattleHeroInfo_HeroInfo::heroid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBattleHeroInfo.HeroInfo.heroid)
  return heroid_;
}
inline void BroadcastBattleHeroInfo_HeroInfo::set_heroid(::google::protobuf::int32 value) {
  set_has_heroid();
  heroid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBattleHeroInfo.HeroInfo.heroid)
}

// -------------------------------------------------------------------

// BroadcastBattleHeroInfo_BaseGoodsInfo

// optional int32 index = 13;
inline bool BroadcastBattleHeroInfo_BaseGoodsInfo::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BroadcastBattleHeroInfo_BaseGoodsInfo::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BroadcastBattleHeroInfo_BaseGoodsInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BroadcastBattleHeroInfo_BaseGoodsInfo::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 BroadcastBattleHeroInfo_BaseGoodsInfo::index() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBattleHeroInfo.BaseGoodsInfo.index)
  return index_;
}
inline void BroadcastBattleHeroInfo_BaseGoodsInfo::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBattleHeroInfo.BaseGoodsInfo.index)
}

// optional int32 id = 14;
inline bool BroadcastBattleHeroInfo_BaseGoodsInfo::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BroadcastBattleHeroInfo_BaseGoodsInfo::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BroadcastBattleHeroInfo_BaseGoodsInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BroadcastBattleHeroInfo_BaseGoodsInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 BroadcastBattleHeroInfo_BaseGoodsInfo::id() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBattleHeroInfo.BaseGoodsInfo.id)
  return id_;
}
inline void BroadcastBattleHeroInfo_BaseGoodsInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBattleHeroInfo.BaseGoodsInfo.id)
}

// -------------------------------------------------------------------

// BroadcastBattleHeroInfo

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_BroadcastBattleHeroInfo];
inline bool BroadcastBattleHeroInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BroadcastBattleHeroInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BroadcastBattleHeroInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BroadcastBattleHeroInfo::clear_msgid() {
  msgid_ = 55;
  clear_has_msgid();
}
inline ::GSToGC::MsgID BroadcastBattleHeroInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBattleHeroInfo.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void BroadcastBattleHeroInfo::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBattleHeroInfo.msgid)
}

// repeated .GSToGC.BroadcastBattleHeroInfo.HeroInfo heroinfo = 2;
inline int BroadcastBattleHeroInfo::heroinfo_size() const {
  return heroinfo_.size();
}
inline void BroadcastBattleHeroInfo::clear_heroinfo() {
  heroinfo_.Clear();
}
inline const ::GSToGC::BroadcastBattleHeroInfo_HeroInfo& BroadcastBattleHeroInfo::heroinfo(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBattleHeroInfo.heroinfo)
  return heroinfo_.Get(index);
}
inline ::GSToGC::BroadcastBattleHeroInfo_HeroInfo* BroadcastBattleHeroInfo::mutable_heroinfo(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.BroadcastBattleHeroInfo.heroinfo)
  return heroinfo_.Mutable(index);
}
inline ::GSToGC::BroadcastBattleHeroInfo_HeroInfo* BroadcastBattleHeroInfo::add_heroinfo() {
  // @@protoc_insertion_point(field_add:GSToGC.BroadcastBattleHeroInfo.heroinfo)
  return heroinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::BroadcastBattleHeroInfo_HeroInfo >&
BroadcastBattleHeroInfo::heroinfo() const {
  // @@protoc_insertion_point(field_list:GSToGC.BroadcastBattleHeroInfo.heroinfo)
  return heroinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::BroadcastBattleHeroInfo_HeroInfo >*
BroadcastBattleHeroInfo::mutable_heroinfo() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.BroadcastBattleHeroInfo.heroinfo)
  return &heroinfo_;
}

// repeated .GSToGC.BroadcastBattleHeroInfo.BaseGoodsInfo goodsinfo = 3;
inline int BroadcastBattleHeroInfo::goodsinfo_size() const {
  return goodsinfo_.size();
}
inline void BroadcastBattleHeroInfo::clear_goodsinfo() {
  goodsinfo_.Clear();
}
inline const ::GSToGC::BroadcastBattleHeroInfo_BaseGoodsInfo& BroadcastBattleHeroInfo::goodsinfo(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBattleHeroInfo.goodsinfo)
  return goodsinfo_.Get(index);
}
inline ::GSToGC::BroadcastBattleHeroInfo_BaseGoodsInfo* BroadcastBattleHeroInfo::mutable_goodsinfo(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.BroadcastBattleHeroInfo.goodsinfo)
  return goodsinfo_.Mutable(index);
}
inline ::GSToGC::BroadcastBattleHeroInfo_BaseGoodsInfo* BroadcastBattleHeroInfo::add_goodsinfo() {
  // @@protoc_insertion_point(field_add:GSToGC.BroadcastBattleHeroInfo.goodsinfo)
  return goodsinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::BroadcastBattleHeroInfo_BaseGoodsInfo >&
BroadcastBattleHeroInfo::goodsinfo() const {
  // @@protoc_insertion_point(field_list:GSToGC.BroadcastBattleHeroInfo.goodsinfo)
  return goodsinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::BroadcastBattleHeroInfo_BaseGoodsInfo >*
BroadcastBattleHeroInfo::mutable_goodsinfo() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.BroadcastBattleHeroInfo.goodsinfo)
  return &goodsinfo_;
}

// -------------------------------------------------------------------

// GuideLastStep

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromCS_NotifyGuideLastComStep];
inline bool GuideLastStep::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuideLastStep::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuideLastStep::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuideLastStep::clear_msgid() {
  msgid_ = 106;
  clear_has_msgid();
}
inline ::GSToGC::MsgID GuideLastStep::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GuideLastStep.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void GuideLastStep::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GuideLastStep.msgid)
}

// optional bool ifComp = 2;
inline bool GuideLastStep::has_ifcomp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuideLastStep::set_has_ifcomp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuideLastStep::clear_has_ifcomp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuideLastStep::clear_ifcomp() {
  ifcomp_ = false;
  clear_has_ifcomp();
}
inline bool GuideLastStep::ifcomp() const {
  // @@protoc_insertion_point(field_get:GSToGC.GuideLastStep.ifComp)
  return ifcomp_;
}
inline void GuideLastStep::set_ifcomp(bool value) {
  set_has_ifcomp();
  ifcomp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GuideLastStep.ifComp)
}

// optional int32 stepid = 3;
inline bool GuideLastStep::has_stepid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuideLastStep::set_has_stepid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuideLastStep::clear_has_stepid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuideLastStep::clear_stepid() {
  stepid_ = 0;
  clear_has_stepid();
}
inline ::google::protobuf::int32 GuideLastStep::stepid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GuideLastStep.stepid)
  return stepid_;
}
inline void GuideLastStep::set_stepid(::google::protobuf::int32 value) {
  set_has_stepid();
  stepid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GuideLastStep.stepid)
}

// -------------------------------------------------------------------

// NotifyUserCLDays

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyUserCLDays];
inline bool NotifyUserCLDays::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyUserCLDays::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyUserCLDays::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyUserCLDays::clear_msgid() {
  msgid_ = 119;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyUserCLDays::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyUserCLDays.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyUserCLDays::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyUserCLDays.msgid)
}

// optional uint32 month = 2;
inline bool NotifyUserCLDays::has_month() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyUserCLDays::set_has_month() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyUserCLDays::clear_has_month() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyUserCLDays::clear_month() {
  month_ = 0u;
  clear_has_month();
}
inline ::google::protobuf::uint32 NotifyUserCLDays::month() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyUserCLDays.month)
  return month_;
}
inline void NotifyUserCLDays::set_month(::google::protobuf::uint32 value) {
  set_has_month();
  month_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyUserCLDays.month)
}

// optional uint32 today = 3;
inline bool NotifyUserCLDays::has_today() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyUserCLDays::set_has_today() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyUserCLDays::clear_has_today() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyUserCLDays::clear_today() {
  today_ = 0u;
  clear_has_today();
}
inline ::google::protobuf::uint32 NotifyUserCLDays::today() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyUserCLDays.today)
  return today_;
}
inline void NotifyUserCLDays::set_today(::google::protobuf::uint32 value) {
  set_has_today();
  today_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyUserCLDays.today)
}

// optional uint32 totalCldays = 4;
inline bool NotifyUserCLDays::has_totalcldays() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyUserCLDays::set_has_totalcldays() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyUserCLDays::clear_has_totalcldays() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyUserCLDays::clear_totalcldays() {
  totalcldays_ = 0u;
  clear_has_totalcldays();
}
inline ::google::protobuf::uint32 NotifyUserCLDays::totalcldays() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyUserCLDays.totalCldays)
  return totalcldays_;
}
inline void NotifyUserCLDays::set_totalcldays(::google::protobuf::uint32 value) {
  set_has_totalcldays();
  totalcldays_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyUserCLDays.totalCldays)
}

// optional uint32 cldays = 5;
inline bool NotifyUserCLDays::has_cldays() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifyUserCLDays::set_has_cldays() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifyUserCLDays::clear_has_cldays() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifyUserCLDays::clear_cldays() {
  cldays_ = 0u;
  clear_has_cldays();
}
inline ::google::protobuf::uint32 NotifyUserCLDays::cldays() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyUserCLDays.cldays)
  return cldays_;
}
inline void NotifyUserCLDays::set_cldays(::google::protobuf::uint32 value) {
  set_has_cldays();
  cldays_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyUserCLDays.cldays)
}

// optional bool isTodayCan = 6;
inline bool NotifyUserCLDays::has_istodaycan() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NotifyUserCLDays::set_has_istodaycan() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NotifyUserCLDays::clear_has_istodaycan() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NotifyUserCLDays::clear_istodaycan() {
  istodaycan_ = false;
  clear_has_istodaycan();
}
inline bool NotifyUserCLDays::istodaycan() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyUserCLDays.isTodayCan)
  return istodaycan_;
}
inline void NotifyUserCLDays::set_istodaycan(bool value) {
  set_has_istodaycan();
  istodaycan_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyUserCLDays.isTodayCan)
}

// -------------------------------------------------------------------

// GameNotice_Notice

// optional string title = 1;
inline bool GameNotice_Notice::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameNotice_Notice::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameNotice_Notice::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameNotice_Notice::clear_title() {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& GameNotice_Notice::title() const {
  // @@protoc_insertion_point(field_get:GSToGC.GameNotice.Notice.title)
  return *title_;
}
inline void GameNotice_Notice::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.GameNotice.Notice.title)
}
inline void GameNotice_Notice::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.GameNotice.Notice.title)
}
inline void GameNotice_Notice::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.GameNotice.Notice.title)
}
inline ::std::string* GameNotice_Notice::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.GameNotice.Notice.title)
  return title_;
}
inline ::std::string* GameNotice_Notice::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GameNotice_Notice::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.GameNotice.Notice.title)
}

// optional uint32 flag = 2;
inline bool GameNotice_Notice::has_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameNotice_Notice::set_has_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameNotice_Notice::clear_has_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameNotice_Notice::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 GameNotice_Notice::flag() const {
  // @@protoc_insertion_point(field_get:GSToGC.GameNotice.Notice.flag)
  return flag_;
}
inline void GameNotice_Notice::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GameNotice.Notice.flag)
}

// optional uint32 status = 3;
inline bool GameNotice_Notice::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameNotice_Notice::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameNotice_Notice::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameNotice_Notice::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 GameNotice_Notice::status() const {
  // @@protoc_insertion_point(field_get:GSToGC.GameNotice.Notice.status)
  return status_;
}
inline void GameNotice_Notice::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GameNotice.Notice.status)
}

// optional uint32 priority = 4;
inline bool GameNotice_Notice::has_priority() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameNotice_Notice::set_has_priority() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameNotice_Notice::clear_has_priority() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameNotice_Notice::clear_priority() {
  priority_ = 0u;
  clear_has_priority();
}
inline ::google::protobuf::uint32 GameNotice_Notice::priority() const {
  // @@protoc_insertion_point(field_get:GSToGC.GameNotice.Notice.priority)
  return priority_;
}
inline void GameNotice_Notice::set_priority(::google::protobuf::uint32 value) {
  set_has_priority();
  priority_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GameNotice.Notice.priority)
}

// optional string notice = 5;
inline bool GameNotice_Notice::has_notice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GameNotice_Notice::set_has_notice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GameNotice_Notice::clear_has_notice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GameNotice_Notice::clear_notice() {
  if (notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_->clear();
  }
  clear_has_notice();
}
inline const ::std::string& GameNotice_Notice::notice() const {
  // @@protoc_insertion_point(field_get:GSToGC.GameNotice.Notice.notice)
  return *notice_;
}
inline void GameNotice_Notice::set_notice(const ::std::string& value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.GameNotice.Notice.notice)
}
inline void GameNotice_Notice::set_notice(const char* value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.GameNotice.Notice.notice)
}
inline void GameNotice_Notice::set_notice(const char* value, size_t size) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  notice_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.GameNotice.Notice.notice)
}
inline ::std::string* GameNotice_Notice::mutable_notice() {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.GameNotice.Notice.notice)
  return notice_;
}
inline ::std::string* GameNotice_Notice::release_notice() {
  clear_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = notice_;
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GameNotice_Notice::set_allocated_notice(::std::string* notice) {
  if (notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete notice_;
  }
  if (notice) {
    set_has_notice();
    notice_ = notice;
  } else {
    clear_has_notice();
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.GameNotice.Notice.notice)
}

// -------------------------------------------------------------------

// GameNotice

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyNotice];
inline bool GameNotice::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameNotice::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameNotice::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameNotice::clear_msgid() {
  msgid_ = 117;
  clear_has_msgid();
}
inline ::GSToGC::MsgID GameNotice::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GameNotice.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void GameNotice::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GameNotice.msgid)
}

// repeated .GSToGC.GameNotice.Notice notice = 2;
inline int GameNotice::notice_size() const {
  return notice_.size();
}
inline void GameNotice::clear_notice() {
  notice_.Clear();
}
inline const ::GSToGC::GameNotice_Notice& GameNotice::notice(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.GameNotice.notice)
  return notice_.Get(index);
}
inline ::GSToGC::GameNotice_Notice* GameNotice::mutable_notice(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.GameNotice.notice)
  return notice_.Mutable(index);
}
inline ::GSToGC::GameNotice_Notice* GameNotice::add_notice() {
  // @@protoc_insertion_point(field_add:GSToGC.GameNotice.notice)
  return notice_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::GameNotice_Notice >&
GameNotice::notice() const {
  // @@protoc_insertion_point(field_list:GSToGC.GameNotice.notice)
  return notice_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::GameNotice_Notice >*
GameNotice::mutable_notice() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.GameNotice.notice)
  return &notice_;
}

// -------------------------------------------------------------------

// GuideSteps

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyUserGuideSetups];
inline bool GuideSteps::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuideSteps::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuideSteps::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuideSteps::clear_msgid() {
  msgid_ = 112;
  clear_has_msgid();
}
inline ::GSToGC::MsgID GuideSteps::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GuideSteps.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void GuideSteps::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GuideSteps.msgid)
}

// optional uint64 guid = 2;
inline bool GuideSteps::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuideSteps::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuideSteps::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuideSteps::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 GuideSteps::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GuideSteps.guid)
  return guid_;
}
inline void GuideSteps::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GuideSteps.guid)
}

// optional int32 type = 3;
inline bool GuideSteps::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuideSteps::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuideSteps::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuideSteps::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GuideSteps::type() const {
  // @@protoc_insertion_point(field_get:GSToGC.GuideSteps.type)
  return type_;
}
inline void GuideSteps::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GuideSteps.type)
}

// optional bool ifComp = 4;
inline bool GuideSteps::has_ifcomp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuideSteps::set_has_ifcomp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuideSteps::clear_has_ifcomp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuideSteps::clear_ifcomp() {
  ifcomp_ = false;
  clear_has_ifcomp();
}
inline bool GuideSteps::ifcomp() const {
  // @@protoc_insertion_point(field_get:GSToGC.GuideSteps.ifComp)
  return ifcomp_;
}
inline void GuideSteps::set_ifcomp(bool value) {
  set_has_ifcomp();
  ifcomp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GuideSteps.ifComp)
}

// optional string steps = 5;
inline bool GuideSteps::has_steps() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuideSteps::set_has_steps() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuideSteps::clear_has_steps() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuideSteps::clear_steps() {
  if (steps_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    steps_->clear();
  }
  clear_has_steps();
}
inline const ::std::string& GuideSteps::steps() const {
  // @@protoc_insertion_point(field_get:GSToGC.GuideSteps.steps)
  return *steps_;
}
inline void GuideSteps::set_steps(const ::std::string& value) {
  set_has_steps();
  if (steps_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    steps_ = new ::std::string;
  }
  steps_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.GuideSteps.steps)
}
inline void GuideSteps::set_steps(const char* value) {
  set_has_steps();
  if (steps_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    steps_ = new ::std::string;
  }
  steps_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.GuideSteps.steps)
}
inline void GuideSteps::set_steps(const char* value, size_t size) {
  set_has_steps();
  if (steps_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    steps_ = new ::std::string;
  }
  steps_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.GuideSteps.steps)
}
inline ::std::string* GuideSteps::mutable_steps() {
  set_has_steps();
  if (steps_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    steps_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.GuideSteps.steps)
  return steps_;
}
inline ::std::string* GuideSteps::release_steps() {
  clear_has_steps();
  if (steps_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = steps_;
    steps_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuideSteps::set_allocated_steps(::std::string* steps) {
  if (steps_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete steps_;
  }
  if (steps) {
    set_has_steps();
    steps_ = steps;
  } else {
    clear_has_steps();
    steps_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.GuideSteps.steps)
}

// -------------------------------------------------------------------

// PingRet

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_GCAskPingRet];
inline bool PingRet::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PingRet::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PingRet::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PingRet::clear_msgid() {
  msgid_ = 1;
  clear_has_msgid();
}
inline ::GSToGC::MsgID PingRet::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.PingRet.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void PingRet::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.PingRet.msgid)
}

// optional int64 time = 2;
inline bool PingRet::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PingRet::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PingRet::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PingRet::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 PingRet::time() const {
  // @@protoc_insertion_point(field_get:GSToGC.PingRet.time)
  return time_;
}
inline void PingRet::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.PingRet.time)
}

// optional int32 flag = 3;
inline bool PingRet::has_flag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PingRet::set_has_flag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PingRet::clear_has_flag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PingRet::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 PingRet::flag() const {
  // @@protoc_insertion_point(field_get:GSToGC.PingRet.flag)
  return flag_;
}
inline void PingRet::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.PingRet.flag)
}

// -------------------------------------------------------------------

// NotifyQueryNickNameRet_QueryInfo

// optional string nickname = 1;
inline bool NotifyQueryNickNameRet_QueryInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyQueryNickNameRet_QueryInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyQueryNickNameRet_QueryInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyQueryNickNameRet_QueryInfo::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& NotifyQueryNickNameRet_QueryInfo::nickname() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyQueryNickNameRet.QueryInfo.nickname)
  return *nickname_;
}
inline void NotifyQueryNickNameRet_QueryInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.NotifyQueryNickNameRet.QueryInfo.nickname)
}
inline void NotifyQueryNickNameRet_QueryInfo::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.NotifyQueryNickNameRet.QueryInfo.nickname)
}
inline void NotifyQueryNickNameRet_QueryInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.NotifyQueryNickNameRet.QueryInfo.nickname)
}
inline ::std::string* NotifyQueryNickNameRet_QueryInfo::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyQueryNickNameRet.QueryInfo.nickname)
  return nickname_;
}
inline ::std::string* NotifyQueryNickNameRet_QueryInfo::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NotifyQueryNickNameRet_QueryInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.NotifyQueryNickNameRet.QueryInfo.nickname)
}

// optional int32 headid = 2;
inline bool NotifyQueryNickNameRet_QueryInfo::has_headid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyQueryNickNameRet_QueryInfo::set_has_headid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyQueryNickNameRet_QueryInfo::clear_has_headid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyQueryNickNameRet_QueryInfo::clear_headid() {
  headid_ = 0;
  clear_has_headid();
}
inline ::google::protobuf::int32 NotifyQueryNickNameRet_QueryInfo::headid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyQueryNickNameRet.QueryInfo.headid)
  return headid_;
}
inline void NotifyQueryNickNameRet_QueryInfo::set_headid(::google::protobuf::int32 value) {
  set_has_headid();
  headid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyQueryNickNameRet.QueryInfo.headid)
}

// -------------------------------------------------------------------

// NotifyQueryNickNameRet

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyQueryNickNameRet];
inline bool NotifyQueryNickNameRet::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyQueryNickNameRet::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyQueryNickNameRet::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyQueryNickNameRet::clear_msgid() {
  msgid_ = 104;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyQueryNickNameRet::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyQueryNickNameRet.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyQueryNickNameRet::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyQueryNickNameRet.msgid)
}

// repeated .GSToGC.NotifyQueryNickNameRet.QueryInfo info = 2;
inline int NotifyQueryNickNameRet::info_size() const {
  return info_.size();
}
inline void NotifyQueryNickNameRet::clear_info() {
  info_.Clear();
}
inline const ::GSToGC::NotifyQueryNickNameRet_QueryInfo& NotifyQueryNickNameRet::info(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyQueryNickNameRet.info)
  return info_.Get(index);
}
inline ::GSToGC::NotifyQueryNickNameRet_QueryInfo* NotifyQueryNickNameRet::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyQueryNickNameRet.info)
  return info_.Mutable(index);
}
inline ::GSToGC::NotifyQueryNickNameRet_QueryInfo* NotifyQueryNickNameRet::add_info() {
  // @@protoc_insertion_point(field_add:GSToGC.NotifyQueryNickNameRet.info)
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyQueryNickNameRet_QueryInfo >&
NotifyQueryNickNameRet::info() const {
  // @@protoc_insertion_point(field_list:GSToGC.NotifyQueryNickNameRet.info)
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyQueryNickNameRet_QueryInfo >*
NotifyQueryNickNameRet::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.NotifyQueryNickNameRet.info)
  return &info_;
}

// -------------------------------------------------------------------

// SNSInfo

// optional int32 type = 1;
inline bool SNSInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SNSInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SNSInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SNSInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 SNSInfo::type() const {
  // @@protoc_insertion_point(field_get:GSToGC.SNSInfo.type)
  return type_;
}
inline void SNSInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.SNSInfo.type)
}

// optional string nickname = 2;
inline bool SNSInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SNSInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SNSInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SNSInfo::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& SNSInfo::nickname() const {
  // @@protoc_insertion_point(field_get:GSToGC.SNSInfo.nickname)
  return *nickname_;
}
inline void SNSInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.SNSInfo.nickname)
}
inline void SNSInfo::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.SNSInfo.nickname)
}
inline void SNSInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.SNSInfo.nickname)
}
inline ::std::string* SNSInfo::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.SNSInfo.nickname)
  return nickname_;
}
inline ::std::string* SNSInfo::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SNSInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.SNSInfo.nickname)
}

// optional uint32 headid = 3;
inline bool SNSInfo::has_headid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SNSInfo::set_has_headid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SNSInfo::clear_has_headid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SNSInfo::clear_headid() {
  headid_ = 0u;
  clear_has_headid();
}
inline ::google::protobuf::uint32 SNSInfo::headid() const {
  // @@protoc_insertion_point(field_get:GSToGC.SNSInfo.headid)
  return headid_;
}
inline void SNSInfo::set_headid(::google::protobuf::uint32 value) {
  set_has_headid();
  headid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.SNSInfo.headid)
}

// optional int32 status = 4;
inline bool SNSInfo::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SNSInfo::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SNSInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SNSInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 SNSInfo::status() const {
  // @@protoc_insertion_point(field_get:GSToGC.SNSInfo.status)
  return status_;
}
inline void SNSInfo::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.SNSInfo.status)
}

// optional uint64 guididx = 5;
inline bool SNSInfo::has_guididx() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SNSInfo::set_has_guididx() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SNSInfo::clear_has_guididx() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SNSInfo::clear_guididx() {
  guididx_ = GOOGLE_ULONGLONG(0);
  clear_has_guididx();
}
inline ::google::protobuf::uint64 SNSInfo::guididx() const {
  // @@protoc_insertion_point(field_get:GSToGC.SNSInfo.guididx)
  return guididx_;
}
inline void SNSInfo::set_guididx(::google::protobuf::uint64 value) {
  set_has_guididx();
  guididx_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.SNSInfo.guididx)
}

// optional uint32 viplv = 6;
inline bool SNSInfo::has_viplv() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SNSInfo::set_has_viplv() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SNSInfo::clear_has_viplv() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SNSInfo::clear_viplv() {
  viplv_ = 0u;
  clear_has_viplv();
}
inline ::google::protobuf::uint32 SNSInfo::viplv() const {
  // @@protoc_insertion_point(field_get:GSToGC.SNSInfo.viplv)
  return viplv_;
}
inline void SNSInfo::set_viplv(::google::protobuf::uint32 value) {
  set_has_viplv();
  viplv_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.SNSInfo.viplv)
}

// -------------------------------------------------------------------

// NotifyUserSNSList

// optional .GSToGC.MsgID msgnum = 1 [default = eMsgToGCFromGS_NotifyUserSNSList];
inline bool NotifyUserSNSList::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyUserSNSList::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyUserSNSList::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyUserSNSList::clear_msgnum() {
  msgnum_ = 99;
  clear_has_msgnum();
}
inline ::GSToGC::MsgID NotifyUserSNSList::msgnum() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyUserSNSList.msgnum)
  return static_cast< ::GSToGC::MsgID >(msgnum_);
}
inline void NotifyUserSNSList::set_msgnum(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyUserSNSList.msgnum)
}

// repeated .GSToGC.SNSInfo info = 2;
inline int NotifyUserSNSList::info_size() const {
  return info_.size();
}
inline void NotifyUserSNSList::clear_info() {
  info_.Clear();
}
inline const ::GSToGC::SNSInfo& NotifyUserSNSList::info(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyUserSNSList.info)
  return info_.Get(index);
}
inline ::GSToGC::SNSInfo* NotifyUserSNSList::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyUserSNSList.info)
  return info_.Mutable(index);
}
inline ::GSToGC::SNSInfo* NotifyUserSNSList::add_info() {
  // @@protoc_insertion_point(field_add:GSToGC.NotifyUserSNSList.info)
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::SNSInfo >&
NotifyUserSNSList::info() const {
  // @@protoc_insertion_point(field_list:GSToGC.NotifyUserSNSList.info)
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::SNSInfo >*
NotifyUserSNSList::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.NotifyUserSNSList.info)
  return &info_;
}

// -------------------------------------------------------------------

// NotifyBattleManagerChange

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBattleManagerChange];
inline bool NotifyBattleManagerChange::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyBattleManagerChange::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyBattleManagerChange::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyBattleManagerChange::clear_msgid() {
  msgid_ = 86;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyBattleManagerChange::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyBattleManagerChange.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyBattleManagerChange::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyBattleManagerChange.msgid)
}

// -------------------------------------------------------------------

// NotifyBeAddFriendMs

// optional .GSToGC.MsgID msgnum = 1 [default = eMsgToGCFromGS_NotifyBeAddFriendMsg];
inline bool NotifyBeAddFriendMs::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyBeAddFriendMs::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyBeAddFriendMs::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyBeAddFriendMs::clear_msgnum() {
  msgnum_ = 103;
  clear_has_msgnum();
}
inline ::GSToGC::MsgID NotifyBeAddFriendMs::msgnum() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyBeAddFriendMs.msgnum)
  return static_cast< ::GSToGC::MsgID >(msgnum_);
}
inline void NotifyBeAddFriendMs::set_msgnum(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyBeAddFriendMs.msgnum)
}

// optional string sendnickname = 2;
inline bool NotifyBeAddFriendMs::has_sendnickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyBeAddFriendMs::set_has_sendnickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyBeAddFriendMs::clear_has_sendnickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyBeAddFriendMs::clear_sendnickname() {
  if (sendnickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendnickname_->clear();
  }
  clear_has_sendnickname();
}
inline const ::std::string& NotifyBeAddFriendMs::sendnickname() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyBeAddFriendMs.sendnickname)
  return *sendnickname_;
}
inline void NotifyBeAddFriendMs::set_sendnickname(const ::std::string& value) {
  set_has_sendnickname();
  if (sendnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendnickname_ = new ::std::string;
  }
  sendnickname_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.NotifyBeAddFriendMs.sendnickname)
}
inline void NotifyBeAddFriendMs::set_sendnickname(const char* value) {
  set_has_sendnickname();
  if (sendnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendnickname_ = new ::std::string;
  }
  sendnickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.NotifyBeAddFriendMs.sendnickname)
}
inline void NotifyBeAddFriendMs::set_sendnickname(const char* value, size_t size) {
  set_has_sendnickname();
  if (sendnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendnickname_ = new ::std::string;
  }
  sendnickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.NotifyBeAddFriendMs.sendnickname)
}
inline ::std::string* NotifyBeAddFriendMs::mutable_sendnickname() {
  set_has_sendnickname();
  if (sendnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendnickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyBeAddFriendMs.sendnickname)
  return sendnickname_;
}
inline ::std::string* NotifyBeAddFriendMs::release_sendnickname() {
  clear_has_sendnickname();
  if (sendnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sendnickname_;
    sendnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NotifyBeAddFriendMs::set_allocated_sendnickname(::std::string* sendnickname) {
  if (sendnickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sendnickname_;
  }
  if (sendnickname) {
    set_has_sendnickname();
    sendnickname_ = sendnickname;
  } else {
    clear_has_sendnickname();
    sendnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.NotifyBeAddFriendMs.sendnickname)
}

// optional string recnickname = 3;
inline bool NotifyBeAddFriendMs::has_recnickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyBeAddFriendMs::set_has_recnickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyBeAddFriendMs::clear_has_recnickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyBeAddFriendMs::clear_recnickname() {
  if (recnickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recnickname_->clear();
  }
  clear_has_recnickname();
}
inline const ::std::string& NotifyBeAddFriendMs::recnickname() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyBeAddFriendMs.recnickname)
  return *recnickname_;
}
inline void NotifyBeAddFriendMs::set_recnickname(const ::std::string& value) {
  set_has_recnickname();
  if (recnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recnickname_ = new ::std::string;
  }
  recnickname_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.NotifyBeAddFriendMs.recnickname)
}
inline void NotifyBeAddFriendMs::set_recnickname(const char* value) {
  set_has_recnickname();
  if (recnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recnickname_ = new ::std::string;
  }
  recnickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.NotifyBeAddFriendMs.recnickname)
}
inline void NotifyBeAddFriendMs::set_recnickname(const char* value, size_t size) {
  set_has_recnickname();
  if (recnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recnickname_ = new ::std::string;
  }
  recnickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.NotifyBeAddFriendMs.recnickname)
}
inline ::std::string* NotifyBeAddFriendMs::mutable_recnickname() {
  set_has_recnickname();
  if (recnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recnickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyBeAddFriendMs.recnickname)
  return recnickname_;
}
inline ::std::string* NotifyBeAddFriendMs::release_recnickname() {
  clear_has_recnickname();
  if (recnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = recnickname_;
    recnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NotifyBeAddFriendMs::set_allocated_recnickname(::std::string* recnickname) {
  if (recnickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete recnickname_;
  }
  if (recnickname) {
    set_has_recnickname();
    recnickname_ = recnickname;
  } else {
    clear_has_recnickname();
    recnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.NotifyBeAddFriendMs.recnickname)
}

// optional uint64 sdnder_guididx = 4;
inline bool NotifyBeAddFriendMs::has_sdnder_guididx() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyBeAddFriendMs::set_has_sdnder_guididx() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyBeAddFriendMs::clear_has_sdnder_guididx() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyBeAddFriendMs::clear_sdnder_guididx() {
  sdnder_guididx_ = GOOGLE_ULONGLONG(0);
  clear_has_sdnder_guididx();
}
inline ::google::protobuf::uint64 NotifyBeAddFriendMs::sdnder_guididx() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyBeAddFriendMs.sdnder_guididx)
  return sdnder_guididx_;
}
inline void NotifyBeAddFriendMs::set_sdnder_guididx(::google::protobuf::uint64 value) {
  set_has_sdnder_guididx();
  sdnder_guididx_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyBeAddFriendMs.sdnder_guididx)
}

// -------------------------------------------------------------------

// NotifyMsgFromUser

// optional .GSToGC.MsgID msgnum = 1 [default = eMsgToGCFromGS_NotifyMsgFromUser];
inline bool NotifyMsgFromUser::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyMsgFromUser::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyMsgFromUser::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyMsgFromUser::clear_msgnum() {
  msgnum_ = 102;
  clear_has_msgnum();
}
inline ::GSToGC::MsgID NotifyMsgFromUser::msgnum() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMsgFromUser.msgnum)
  return static_cast< ::GSToGC::MsgID >(msgnum_);
}
inline void NotifyMsgFromUser::set_msgnum(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyMsgFromUser.msgnum)
}

// optional uint64 guididx = 2;
inline bool NotifyMsgFromUser::has_guididx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyMsgFromUser::set_has_guididx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyMsgFromUser::clear_has_guididx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyMsgFromUser::clear_guididx() {
  guididx_ = GOOGLE_ULONGLONG(0);
  clear_has_guididx();
}
inline ::google::protobuf::uint64 NotifyMsgFromUser::guididx() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMsgFromUser.guididx)
  return guididx_;
}
inline void NotifyMsgFromUser::set_guididx(::google::protobuf::uint64 value) {
  set_has_guididx();
  guididx_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyMsgFromUser.guididx)
}

// optional string nickname = 3;
inline bool NotifyMsgFromUser::has_nickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyMsgFromUser::set_has_nickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyMsgFromUser::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyMsgFromUser::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& NotifyMsgFromUser::nickname() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMsgFromUser.nickname)
  return *nickname_;
}
inline void NotifyMsgFromUser::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.NotifyMsgFromUser.nickname)
}
inline void NotifyMsgFromUser::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.NotifyMsgFromUser.nickname)
}
inline void NotifyMsgFromUser::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.NotifyMsgFromUser.nickname)
}
inline ::std::string* NotifyMsgFromUser::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyMsgFromUser.nickname)
  return nickname_;
}
inline ::std::string* NotifyMsgFromUser::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NotifyMsgFromUser::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.NotifyMsgFromUser.nickname)
}

// optional int32 headid = 4;
inline bool NotifyMsgFromUser::has_headid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyMsgFromUser::set_has_headid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyMsgFromUser::clear_has_headid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyMsgFromUser::clear_headid() {
  headid_ = 0;
  clear_has_headid();
}
inline ::google::protobuf::int32 NotifyMsgFromUser::headid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMsgFromUser.headid)
  return headid_;
}
inline void NotifyMsgFromUser::set_headid(::google::protobuf::int32 value) {
  set_has_headid();
  headid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyMsgFromUser.headid)
}

// optional string chatstr = 5;
inline bool NotifyMsgFromUser::has_chatstr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifyMsgFromUser::set_has_chatstr() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifyMsgFromUser::clear_has_chatstr() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifyMsgFromUser::clear_chatstr() {
  if (chatstr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chatstr_->clear();
  }
  clear_has_chatstr();
}
inline const ::std::string& NotifyMsgFromUser::chatstr() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMsgFromUser.chatstr)
  return *chatstr_;
}
inline void NotifyMsgFromUser::set_chatstr(const ::std::string& value) {
  set_has_chatstr();
  if (chatstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chatstr_ = new ::std::string;
  }
  chatstr_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.NotifyMsgFromUser.chatstr)
}
inline void NotifyMsgFromUser::set_chatstr(const char* value) {
  set_has_chatstr();
  if (chatstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chatstr_ = new ::std::string;
  }
  chatstr_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.NotifyMsgFromUser.chatstr)
}
inline void NotifyMsgFromUser::set_chatstr(const char* value, size_t size) {
  set_has_chatstr();
  if (chatstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chatstr_ = new ::std::string;
  }
  chatstr_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.NotifyMsgFromUser.chatstr)
}
inline ::std::string* NotifyMsgFromUser::mutable_chatstr() {
  set_has_chatstr();
  if (chatstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chatstr_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyMsgFromUser.chatstr)
  return chatstr_;
}
inline ::std::string* NotifyMsgFromUser::release_chatstr() {
  clear_has_chatstr();
  if (chatstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = chatstr_;
    chatstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NotifyMsgFromUser::set_allocated_chatstr(::std::string* chatstr) {
  if (chatstr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete chatstr_;
  }
  if (chatstr) {
    set_has_chatstr();
    chatstr_ = chatstr;
  } else {
    clear_has_chatstr();
    chatstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.NotifyMsgFromUser.chatstr)
}

// -------------------------------------------------------------------

// NotifyUserSNSListChange

// optional .GSToGC.MsgID msgnum = 1 [default = eMsgToGCFromGS_NotifyUserSNSListChange];
inline bool NotifyUserSNSListChange::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyUserSNSListChange::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyUserSNSListChange::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyUserSNSListChange::clear_msgnum() {
  msgnum_ = 100;
  clear_has_msgnum();
}
inline ::GSToGC::MsgID NotifyUserSNSListChange::msgnum() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyUserSNSListChange.msgnum)
  return static_cast< ::GSToGC::MsgID >(msgnum_);
}
inline void NotifyUserSNSListChange::set_msgnum(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyUserSNSListChange.msgnum)
}

// optional uint64 guididx = 2;
inline bool NotifyUserSNSListChange::has_guididx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyUserSNSListChange::set_has_guididx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyUserSNSListChange::clear_has_guididx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyUserSNSListChange::clear_guididx() {
  guididx_ = GOOGLE_ULONGLONG(0);
  clear_has_guididx();
}
inline ::google::protobuf::uint64 NotifyUserSNSListChange::guididx() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyUserSNSListChange.guididx)
  return guididx_;
}
inline void NotifyUserSNSListChange::set_guididx(::google::protobuf::uint64 value) {
  set_has_guididx();
  guididx_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyUserSNSListChange.guididx)
}

// optional uint32 type = 3;
inline bool NotifyUserSNSListChange::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyUserSNSListChange::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyUserSNSListChange::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyUserSNSListChange::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 NotifyUserSNSListChange::type() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyUserSNSListChange.type)
  return type_;
}
inline void NotifyUserSNSListChange::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyUserSNSListChange.type)
}

// -------------------------------------------------------------------

// UserBeInvitedToBattle

// optional .GSToGC.MsgID msgnum = 1 [default = eMsgToGCFromGS_UserBeInvitedToBattle];
inline bool UserBeInvitedToBattle::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserBeInvitedToBattle::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserBeInvitedToBattle::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserBeInvitedToBattle::clear_msgnum() {
  msgnum_ = 101;
  clear_has_msgnum();
}
inline ::GSToGC::MsgID UserBeInvitedToBattle::msgnum() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserBeInvitedToBattle.msgnum)
  return static_cast< ::GSToGC::MsgID >(msgnum_);
}
inline void UserBeInvitedToBattle::set_msgnum(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserBeInvitedToBattle.msgnum)
}

// optional int32 battleid = 2;
inline bool UserBeInvitedToBattle::has_battleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserBeInvitedToBattle::set_has_battleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserBeInvitedToBattle::clear_has_battleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserBeInvitedToBattle::clear_battleid() {
  battleid_ = 0;
  clear_has_battleid();
}
inline ::google::protobuf::int32 UserBeInvitedToBattle::battleid() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserBeInvitedToBattle.battleid)
  return battleid_;
}
inline void UserBeInvitedToBattle::set_battleid(::google::protobuf::int32 value) {
  set_has_battleid();
  battleid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserBeInvitedToBattle.battleid)
}

// optional string pwd = 3;
inline bool UserBeInvitedToBattle::has_pwd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserBeInvitedToBattle::set_has_pwd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserBeInvitedToBattle::clear_has_pwd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserBeInvitedToBattle::clear_pwd() {
  if (pwd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pwd_->clear();
  }
  clear_has_pwd();
}
inline const ::std::string& UserBeInvitedToBattle::pwd() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserBeInvitedToBattle.pwd)
  return *pwd_;
}
inline void UserBeInvitedToBattle::set_pwd(const ::std::string& value) {
  set_has_pwd();
  if (pwd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pwd_ = new ::std::string;
  }
  pwd_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.UserBeInvitedToBattle.pwd)
}
inline void UserBeInvitedToBattle::set_pwd(const char* value) {
  set_has_pwd();
  if (pwd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pwd_ = new ::std::string;
  }
  pwd_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.UserBeInvitedToBattle.pwd)
}
inline void UserBeInvitedToBattle::set_pwd(const char* value, size_t size) {
  set_has_pwd();
  if (pwd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pwd_ = new ::std::string;
  }
  pwd_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.UserBeInvitedToBattle.pwd)
}
inline ::std::string* UserBeInvitedToBattle::mutable_pwd() {
  set_has_pwd();
  if (pwd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pwd_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.UserBeInvitedToBattle.pwd)
  return pwd_;
}
inline ::std::string* UserBeInvitedToBattle::release_pwd() {
  clear_has_pwd();
  if (pwd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = pwd_;
    pwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserBeInvitedToBattle::set_allocated_pwd(::std::string* pwd) {
  if (pwd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pwd_;
  }
  if (pwd) {
    set_has_pwd();
    pwd_ = pwd;
  } else {
    clear_has_pwd();
    pwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.UserBeInvitedToBattle.pwd)
}

// optional string Invitor = 4;
inline bool UserBeInvitedToBattle::has_invitor() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserBeInvitedToBattle::set_has_invitor() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserBeInvitedToBattle::clear_has_invitor() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserBeInvitedToBattle::clear_invitor() {
  if (invitor_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitor_->clear();
  }
  clear_has_invitor();
}
inline const ::std::string& UserBeInvitedToBattle::invitor() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserBeInvitedToBattle.Invitor)
  return *invitor_;
}
inline void UserBeInvitedToBattle::set_invitor(const ::std::string& value) {
  set_has_invitor();
  if (invitor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitor_ = new ::std::string;
  }
  invitor_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.UserBeInvitedToBattle.Invitor)
}
inline void UserBeInvitedToBattle::set_invitor(const char* value) {
  set_has_invitor();
  if (invitor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitor_ = new ::std::string;
  }
  invitor_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.UserBeInvitedToBattle.Invitor)
}
inline void UserBeInvitedToBattle::set_invitor(const char* value, size_t size) {
  set_has_invitor();
  if (invitor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitor_ = new ::std::string;
  }
  invitor_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.UserBeInvitedToBattle.Invitor)
}
inline ::std::string* UserBeInvitedToBattle::mutable_invitor() {
  set_has_invitor();
  if (invitor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitor_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.UserBeInvitedToBattle.Invitor)
  return invitor_;
}
inline ::std::string* UserBeInvitedToBattle::release_invitor() {
  clear_has_invitor();
  if (invitor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = invitor_;
    invitor_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserBeInvitedToBattle::set_allocated_invitor(::std::string* invitor) {
  if (invitor_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete invitor_;
  }
  if (invitor) {
    set_has_invitor();
    invitor_ = invitor;
  } else {
    clear_has_invitor();
    invitor_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.UserBeInvitedToBattle.Invitor)
}

// -------------------------------------------------------------------

// NotifyAFPData_FPInfo

// optional int32 type = 1;
inline bool NotifyAFPData_FPInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyAFPData_FPInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyAFPData_FPInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyAFPData_FPInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 NotifyAFPData_FPInfo::type() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyAFPData.FPInfo.type)
  return type_;
}
inline void NotifyAFPData_FPInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyAFPData.FPInfo.type)
}

// optional int32 value = 2;
inline bool NotifyAFPData_FPInfo::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyAFPData_FPInfo::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyAFPData_FPInfo::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyAFPData_FPInfo::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 NotifyAFPData_FPInfo::value() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyAFPData.FPInfo.value)
  return value_;
}
inline void NotifyAFPData_FPInfo::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyAFPData.FPInfo.value)
}

// -------------------------------------------------------------------

// NotifyAFPData

// optional .GSToGC.MsgID msgnum = 1 [default = eMsgToGCFromGS_NotifyAFPData];
inline bool NotifyAFPData::has_msgnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyAFPData::set_has_msgnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyAFPData::clear_has_msgnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyAFPData::clear_msgnum() {
  msgnum_ = 85;
  clear_has_msgnum();
}
inline ::GSToGC::MsgID NotifyAFPData::msgnum() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyAFPData.msgnum)
  return static_cast< ::GSToGC::MsgID >(msgnum_);
}
inline void NotifyAFPData::set_msgnum(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgnum();
  msgnum_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyAFPData.msgnum)
}

// optional uint64 guid = 2;
inline bool NotifyAFPData::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyAFPData::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyAFPData::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyAFPData::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 NotifyAFPData::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyAFPData.guid)
  return guid_;
}
inline void NotifyAFPData::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyAFPData.guid)
}

// repeated .GSToGC.NotifyAFPData.FPInfo info = 3;
inline int NotifyAFPData::info_size() const {
  return info_.size();
}
inline void NotifyAFPData::clear_info() {
  info_.Clear();
}
inline const ::GSToGC::NotifyAFPData_FPInfo& NotifyAFPData::info(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyAFPData.info)
  return info_.Get(index);
}
inline ::GSToGC::NotifyAFPData_FPInfo* NotifyAFPData::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyAFPData.info)
  return info_.Mutable(index);
}
inline ::GSToGC::NotifyAFPData_FPInfo* NotifyAFPData::add_info() {
  // @@protoc_insertion_point(field_add:GSToGC.NotifyAFPData.info)
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyAFPData_FPInfo >&
NotifyAFPData::info() const {
  // @@protoc_insertion_point(field_list:GSToGC.NotifyAFPData.info)
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyAFPData_FPInfo >*
NotifyAFPData::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.NotifyAFPData.info)
  return &info_;
}

// -------------------------------------------------------------------

// UserBaseInfo

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyUserBaseInfo];
inline bool UserBaseInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserBaseInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserBaseInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserBaseInfo::clear_msgid() {
  msgid_ = 2;
  clear_has_msgid();
}
inline ::GSToGC::MsgID UserBaseInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserBaseInfo.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void UserBaseInfo::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserBaseInfo.msgid)
}

// optional uint64 guid = 2;
inline bool UserBaseInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserBaseInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserBaseInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserBaseInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 UserBaseInfo::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserBaseInfo.guid)
  return guid_;
}
inline void UserBaseInfo::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserBaseInfo.guid)
}

// optional string name = 3;
inline bool UserBaseInfo::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserBaseInfo::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserBaseInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserBaseInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& UserBaseInfo::name() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserBaseInfo.name)
  return *name_;
}
inline void UserBaseInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.UserBaseInfo.name)
}
inline void UserBaseInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.UserBaseInfo.name)
}
inline void UserBaseInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.UserBaseInfo.name)
}
inline ::std::string* UserBaseInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.UserBaseInfo.name)
  return name_;
}
inline ::std::string* UserBaseInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserBaseInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.UserBaseInfo.name)
}

// optional string nickname = 4;
inline bool UserBaseInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserBaseInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserBaseInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserBaseInfo::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& UserBaseInfo::nickname() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserBaseInfo.nickname)
  return *nickname_;
}
inline void UserBaseInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.UserBaseInfo.nickname)
}
inline void UserBaseInfo::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.UserBaseInfo.nickname)
}
inline void UserBaseInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.UserBaseInfo.nickname)
}
inline ::std::string* UserBaseInfo::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.UserBaseInfo.nickname)
  return nickname_;
}
inline ::std::string* UserBaseInfo::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserBaseInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.UserBaseInfo.nickname)
}

// optional int32 headid = 5;
inline bool UserBaseInfo::has_headid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserBaseInfo::set_has_headid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserBaseInfo::clear_has_headid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserBaseInfo::clear_headid() {
  headid_ = 0;
  clear_has_headid();
}
inline ::google::protobuf::int32 UserBaseInfo::headid() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserBaseInfo.headid)
  return headid_;
}
inline void UserBaseInfo::set_headid(::google::protobuf::int32 value) {
  set_has_headid();
  headid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserBaseInfo.headid)
}

// optional int32 sex = 6;
inline bool UserBaseInfo::has_sex() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserBaseInfo::set_has_sex() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserBaseInfo::clear_has_sex() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserBaseInfo::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 UserBaseInfo::sex() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserBaseInfo.sex)
  return sex_;
}
inline void UserBaseInfo::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserBaseInfo.sex)
}

// optional int64 curscore = 7;
inline bool UserBaseInfo::has_curscore() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserBaseInfo::set_has_curscore() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserBaseInfo::clear_has_curscore() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserBaseInfo::clear_curscore() {
  curscore_ = GOOGLE_LONGLONG(0);
  clear_has_curscore();
}
inline ::google::protobuf::int64 UserBaseInfo::curscore() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserBaseInfo.curscore)
  return curscore_;
}
inline void UserBaseInfo::set_curscore(::google::protobuf::int64 value) {
  set_has_curscore();
  curscore_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserBaseInfo.curscore)
}

// optional int64 curdiamoand = 8;
inline bool UserBaseInfo::has_curdiamoand() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UserBaseInfo::set_has_curdiamoand() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UserBaseInfo::clear_has_curdiamoand() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UserBaseInfo::clear_curdiamoand() {
  curdiamoand_ = GOOGLE_LONGLONG(0);
  clear_has_curdiamoand();
}
inline ::google::protobuf::int64 UserBaseInfo::curdiamoand() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserBaseInfo.curdiamoand)
  return curdiamoand_;
}
inline void UserBaseInfo::set_curdiamoand(::google::protobuf::int64 value) {
  set_has_curdiamoand();
  curdiamoand_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserBaseInfo.curdiamoand)
}

// optional int64 curgold = 9;
inline bool UserBaseInfo::has_curgold() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UserBaseInfo::set_has_curgold() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UserBaseInfo::clear_has_curgold() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UserBaseInfo::clear_curgold() {
  curgold_ = GOOGLE_LONGLONG(0);
  clear_has_curgold();
}
inline ::google::protobuf::int64 UserBaseInfo::curgold() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserBaseInfo.curgold)
  return curgold_;
}
inline void UserBaseInfo::set_curgold(::google::protobuf::int64 value) {
  set_has_curgold();
  curgold_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserBaseInfo.curgold)
}

// optional int32 mapid = 11;
inline bool UserBaseInfo::has_mapid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UserBaseInfo::set_has_mapid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UserBaseInfo::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UserBaseInfo::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 UserBaseInfo::mapid() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserBaseInfo.mapid)
  return mapid_;
}
inline void UserBaseInfo::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserBaseInfo.mapid)
}

// optional bool ifreconnect = 12;
inline bool UserBaseInfo::has_ifreconnect() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void UserBaseInfo::set_has_ifreconnect() {
  _has_bits_[0] |= 0x00000400u;
}
inline void UserBaseInfo::clear_has_ifreconnect() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void UserBaseInfo::clear_ifreconnect() {
  ifreconnect_ = false;
  clear_has_ifreconnect();
}
inline bool UserBaseInfo::ifreconnect() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserBaseInfo.ifreconnect)
  return ifreconnect_;
}
inline void UserBaseInfo::set_ifreconnect(bool value) {
  set_has_ifreconnect();
  ifreconnect_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserBaseInfo.ifreconnect)
}

// optional uint64 battleid = 13;
inline bool UserBaseInfo::has_battleid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void UserBaseInfo::set_has_battleid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void UserBaseInfo::clear_has_battleid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void UserBaseInfo::clear_battleid() {
  battleid_ = GOOGLE_ULONGLONG(0);
  clear_has_battleid();
}
inline ::google::protobuf::uint64 UserBaseInfo::battleid() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserBaseInfo.battleid)
  return battleid_;
}
inline void UserBaseInfo::set_battleid(::google::protobuf::uint64 value) {
  set_has_battleid();
  battleid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserBaseInfo.battleid)
}

// optional int32 level = 14;
inline bool UserBaseInfo::has_level() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void UserBaseInfo::set_has_level() {
  _has_bits_[0] |= 0x00001000u;
}
inline void UserBaseInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void UserBaseInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 UserBaseInfo::level() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserBaseInfo.level)
  return level_;
}
inline void UserBaseInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserBaseInfo.level)
}

// optional int32 vip_level = 15;
inline bool UserBaseInfo::has_vip_level() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void UserBaseInfo::set_has_vip_level() {
  _has_bits_[0] |= 0x00002000u;
}
inline void UserBaseInfo::clear_has_vip_level() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void UserBaseInfo::clear_vip_level() {
  vip_level_ = 0;
  clear_has_vip_level();
}
inline ::google::protobuf::int32 UserBaseInfo::vip_level() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserBaseInfo.vip_level)
  return vip_level_;
}
inline void UserBaseInfo::set_vip_level(::google::protobuf::int32 value) {
  set_has_vip_level();
  vip_level_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserBaseInfo.vip_level)
}

// optional int32 vip_score = 16;
inline bool UserBaseInfo::has_vip_score() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void UserBaseInfo::set_has_vip_score() {
  _has_bits_[0] |= 0x00004000u;
}
inline void UserBaseInfo::clear_has_vip_score() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void UserBaseInfo::clear_vip_score() {
  vip_score_ = 0;
  clear_has_vip_score();
}
inline ::google::protobuf::int32 UserBaseInfo::vip_score() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserBaseInfo.vip_score)
  return vip_score_;
}
inline void UserBaseInfo::set_vip_score(::google::protobuf::int32 value) {
  set_has_vip_score();
  vip_score_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserBaseInfo.vip_score)
}

// optional int32 cur_exp = 17;
inline bool UserBaseInfo::has_cur_exp() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void UserBaseInfo::set_has_cur_exp() {
  _has_bits_[0] |= 0x00008000u;
}
inline void UserBaseInfo::clear_has_cur_exp() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void UserBaseInfo::clear_cur_exp() {
  cur_exp_ = 0;
  clear_has_cur_exp();
}
inline ::google::protobuf::int32 UserBaseInfo::cur_exp() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserBaseInfo.cur_exp)
  return cur_exp_;
}
inline void UserBaseInfo::set_cur_exp(::google::protobuf::int32 value) {
  set_has_cur_exp();
  cur_exp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserBaseInfo.cur_exp)
}

// -------------------------------------------------------------------

// NotifySystemAnnounce

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySystemAnnounce];
inline bool NotifySystemAnnounce::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifySystemAnnounce::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifySystemAnnounce::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifySystemAnnounce::clear_msgid() {
  msgid_ = 3;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifySystemAnnounce::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySystemAnnounce.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifySystemAnnounce::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySystemAnnounce.msgid)
}

// optional int32 type = 2;
inline bool NotifySystemAnnounce::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifySystemAnnounce::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifySystemAnnounce::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifySystemAnnounce::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 NotifySystemAnnounce::type() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySystemAnnounce.type)
  return type_;
}
inline void NotifySystemAnnounce::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySystemAnnounce.type)
}

// optional string announce = 3;
inline bool NotifySystemAnnounce::has_announce() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifySystemAnnounce::set_has_announce() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifySystemAnnounce::clear_has_announce() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifySystemAnnounce::clear_announce() {
  if (announce_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    announce_->clear();
  }
  clear_has_announce();
}
inline const ::std::string& NotifySystemAnnounce::announce() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySystemAnnounce.announce)
  return *announce_;
}
inline void NotifySystemAnnounce::set_announce(const ::std::string& value) {
  set_has_announce();
  if (announce_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    announce_ = new ::std::string;
  }
  announce_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.NotifySystemAnnounce.announce)
}
inline void NotifySystemAnnounce::set_announce(const char* value) {
  set_has_announce();
  if (announce_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    announce_ = new ::std::string;
  }
  announce_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.NotifySystemAnnounce.announce)
}
inline void NotifySystemAnnounce::set_announce(const char* value, size_t size) {
  set_has_announce();
  if (announce_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    announce_ = new ::std::string;
  }
  announce_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.NotifySystemAnnounce.announce)
}
inline ::std::string* NotifySystemAnnounce::mutable_announce() {
  set_has_announce();
  if (announce_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    announce_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifySystemAnnounce.announce)
  return announce_;
}
inline ::std::string* NotifySystemAnnounce::release_announce() {
  clear_has_announce();
  if (announce_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = announce_;
    announce_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NotifySystemAnnounce::set_allocated_announce(::std::string* announce) {
  if (announce_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete announce_;
  }
  if (announce) {
    set_has_announce();
    announce_ = announce;
  } else {
    clear_has_announce();
    announce_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.NotifySystemAnnounce.announce)
}

// -------------------------------------------------------------------

// NetClash

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyNetClash];
inline bool NetClash::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetClash::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NetClash::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NetClash::clear_msgid() {
  msgid_ = 4;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NetClash::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NetClash.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NetClash::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NetClash.msgid)
}

// -------------------------------------------------------------------

// WarningToSelectHero

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_WarningToSelectHero];
inline bool WarningToSelectHero::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WarningToSelectHero::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WarningToSelectHero::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WarningToSelectHero::clear_msgid() {
  msgid_ = 66;
  clear_has_msgid();
}
inline ::GSToGC::MsgID WarningToSelectHero::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.WarningToSelectHero.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void WarningToSelectHero::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.WarningToSelectHero.msgid)
}

// -------------------------------------------------------------------

// NotifySkillModelLeading

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelLeading];
inline bool NotifySkillModelLeading::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifySkillModelLeading::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifySkillModelLeading::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifySkillModelLeading::clear_msgid() {
  msgid_ = 74;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifySkillModelLeading::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelLeading.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifySkillModelLeading::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelLeading.msgid)
}

// optional uint64 guid = 2;
inline bool NotifySkillModelLeading::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifySkillModelLeading::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifySkillModelLeading::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifySkillModelLeading::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 NotifySkillModelLeading::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelLeading.guid)
  return guid_;
}
inline void NotifySkillModelLeading::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelLeading.guid)
}

// optional uint32 effectid = 3;
inline bool NotifySkillModelLeading::has_effectid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifySkillModelLeading::set_has_effectid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifySkillModelLeading::clear_has_effectid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifySkillModelLeading::clear_effectid() {
  effectid_ = 0u;
  clear_has_effectid();
}
inline ::google::protobuf::uint32 NotifySkillModelLeading::effectid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelLeading.effectid)
  return effectid_;
}
inline void NotifySkillModelLeading::set_effectid(::google::protobuf::uint32 value) {
  set_has_effectid();
  effectid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelLeading.effectid)
}

// optional int32 uniqueid = 4;
inline bool NotifySkillModelLeading::has_uniqueid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifySkillModelLeading::set_has_uniqueid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifySkillModelLeading::clear_has_uniqueid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifySkillModelLeading::clear_uniqueid() {
  uniqueid_ = 0;
  clear_has_uniqueid();
}
inline ::google::protobuf::int32 NotifySkillModelLeading::uniqueid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelLeading.uniqueid)
  return uniqueid_;
}
inline void NotifySkillModelLeading::set_uniqueid(::google::protobuf::int32 value) {
  set_has_uniqueid();
  uniqueid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelLeading.uniqueid)
}

// optional uint64 targuid = 5;
inline bool NotifySkillModelLeading::has_targuid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifySkillModelLeading::set_has_targuid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifySkillModelLeading::clear_has_targuid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifySkillModelLeading::clear_targuid() {
  targuid_ = GOOGLE_ULONGLONG(0);
  clear_has_targuid();
}
inline ::google::protobuf::uint64 NotifySkillModelLeading::targuid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelLeading.targuid)
  return targuid_;
}
inline void NotifySkillModelLeading::set_targuid(::google::protobuf::uint64 value) {
  set_has_targuid();
  targuid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelLeading.targuid)
}

// optional int32 state = 6;
inline bool NotifySkillModelLeading::has_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NotifySkillModelLeading::set_has_state() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NotifySkillModelLeading::clear_has_state() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NotifySkillModelLeading::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 NotifySkillModelLeading::state() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelLeading.state)
  return state_;
}
inline void NotifySkillModelLeading::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelLeading.state)
}

// -------------------------------------------------------------------

// AskRet

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_GCAskRet];
inline bool AskRet::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskRet::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskRet::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskRet::clear_msgid() {
  msgid_ = 5;
  clear_has_msgid();
}
inline ::GSToGC::MsgID AskRet::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.AskRet.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void AskRet::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.AskRet.msgid)
}

// optional int32 askid = 2;
inline bool AskRet::has_askid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AskRet::set_has_askid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AskRet::clear_has_askid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AskRet::clear_askid() {
  askid_ = 0;
  clear_has_askid();
}
inline ::google::protobuf::int32 AskRet::askid() const {
  // @@protoc_insertion_point(field_get:GSToGC.AskRet.askid)
  return askid_;
}
inline void AskRet::set_askid(::google::protobuf::int32 value) {
  set_has_askid();
  askid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.AskRet.askid)
}

// optional int32 errorcode = 3;
inline bool AskRet::has_errorcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AskRet::set_has_errorcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AskRet::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AskRet::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 AskRet::errorcode() const {
  // @@protoc_insertion_point(field_get:GSToGC.AskRet.errorcode)
  return errorcode_;
}
inline void AskRet::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.AskRet.errorcode)
}

// -------------------------------------------------------------------

// NotifyCSHeroList_HeroListCfg

// optional uint32 heroid = 1;
inline bool NotifyCSHeroList_HeroListCfg::has_heroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyCSHeroList_HeroListCfg::set_has_heroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyCSHeroList_HeroListCfg::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyCSHeroList_HeroListCfg::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 NotifyCSHeroList_HeroListCfg::heroid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyCSHeroList.HeroListCfg.heroid)
  return heroid_;
}
inline void NotifyCSHeroList_HeroListCfg::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyCSHeroList.HeroListCfg.heroid)
}

// optional int64 expired_time = 2;
inline bool NotifyCSHeroList_HeroListCfg::has_expired_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyCSHeroList_HeroListCfg::set_has_expired_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyCSHeroList_HeroListCfg::clear_has_expired_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyCSHeroList_HeroListCfg::clear_expired_time() {
  expired_time_ = GOOGLE_LONGLONG(0);
  clear_has_expired_time();
}
inline ::google::protobuf::int64 NotifyCSHeroList_HeroListCfg::expired_time() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyCSHeroList.HeroListCfg.expired_time)
  return expired_time_;
}
inline void NotifyCSHeroList_HeroListCfg::set_expired_time(::google::protobuf::int64 value) {
  set_has_expired_time();
  expired_time_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyCSHeroList.HeroListCfg.expired_time)
}

// optional bool if_free = 3;
inline bool NotifyCSHeroList_HeroListCfg::has_if_free() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyCSHeroList_HeroListCfg::set_has_if_free() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyCSHeroList_HeroListCfg::clear_has_if_free() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyCSHeroList_HeroListCfg::clear_if_free() {
  if_free_ = false;
  clear_has_if_free();
}
inline bool NotifyCSHeroList_HeroListCfg::if_free() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyCSHeroList.HeroListCfg.if_free)
  return if_free_;
}
inline void NotifyCSHeroList_HeroListCfg::set_if_free(bool value) {
  set_has_if_free();
  if_free_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyCSHeroList.HeroListCfg.if_free)
}

// -------------------------------------------------------------------

// NotifyCSHeroList

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyCSHeroList];
inline bool NotifyCSHeroList::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyCSHeroList::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyCSHeroList::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyCSHeroList::clear_msgid() {
  msgid_ = 221;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyCSHeroList::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyCSHeroList.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyCSHeroList::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyCSHeroList.msgid)
}

// repeated .GSToGC.NotifyCSHeroList.HeroListCfg herocfg = 2;
inline int NotifyCSHeroList::herocfg_size() const {
  return herocfg_.size();
}
inline void NotifyCSHeroList::clear_herocfg() {
  herocfg_.Clear();
}
inline const ::GSToGC::NotifyCSHeroList_HeroListCfg& NotifyCSHeroList::herocfg(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyCSHeroList.herocfg)
  return herocfg_.Get(index);
}
inline ::GSToGC::NotifyCSHeroList_HeroListCfg* NotifyCSHeroList::mutable_herocfg(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyCSHeroList.herocfg)
  return herocfg_.Mutable(index);
}
inline ::GSToGC::NotifyCSHeroList_HeroListCfg* NotifyCSHeroList::add_herocfg() {
  // @@protoc_insertion_point(field_add:GSToGC.NotifyCSHeroList.herocfg)
  return herocfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyCSHeroList_HeroListCfg >&
NotifyCSHeroList::herocfg() const {
  // @@protoc_insertion_point(field_list:GSToGC.NotifyCSHeroList.herocfg)
  return herocfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyCSHeroList_HeroListCfg >*
NotifyCSHeroList::mutable_herocfg() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.NotifyCSHeroList.herocfg)
  return &herocfg_;
}

// -------------------------------------------------------------------

// HeroList

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyHeroList];
inline bool HeroList::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroList::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroList::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroList::clear_msgid() {
  msgid_ = 7;
  clear_has_msgid();
}
inline ::GSToGC::MsgID HeroList::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.HeroList.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void HeroList::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HeroList.msgid)
}

// repeated uint32 heroid = 2;
inline int HeroList::heroid_size() const {
  return heroid_.size();
}
inline void HeroList::clear_heroid() {
  heroid_.Clear();
}
inline ::google::protobuf::uint32 HeroList::heroid(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.HeroList.heroid)
  return heroid_.Get(index);
}
inline void HeroList::set_heroid(int index, ::google::protobuf::uint32 value) {
  heroid_.Set(index, value);
  // @@protoc_insertion_point(field_set:GSToGC.HeroList.heroid)
}
inline void HeroList::add_heroid(::google::protobuf::uint32 value) {
  heroid_.Add(value);
  // @@protoc_insertion_point(field_add:GSToGC.HeroList.heroid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
HeroList::heroid() const {
  // @@protoc_insertion_point(field_list:GSToGC.HeroList.heroid)
  return heroid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
HeroList::mutable_heroid() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.HeroList.heroid)
  return &heroid_;
}

// optional int64 timeDiff = 3;
inline bool HeroList::has_timediff() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeroList::set_has_timediff() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeroList::clear_has_timediff() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeroList::clear_timediff() {
  timediff_ = GOOGLE_LONGLONG(0);
  clear_has_timediff();
}
inline ::google::protobuf::int64 HeroList::timediff() const {
  // @@protoc_insertion_point(field_get:GSToGC.HeroList.timeDiff)
  return timediff_;
}
inline void HeroList::set_timediff(::google::protobuf::int64 value) {
  set_has_timediff();
  timediff_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HeroList.timeDiff)
}

// -------------------------------------------------------------------

// BattleBaseInfo

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBattleBaseInfo];
inline bool BattleBaseInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleBaseInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleBaseInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleBaseInfo::clear_msgid() {
  msgid_ = 8;
  clear_has_msgid();
}
inline ::GSToGC::MsgID BattleBaseInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleBaseInfo.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void BattleBaseInfo::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BattleBaseInfo.msgid)
}

// optional uint64 battleid = 2;
inline bool BattleBaseInfo::has_battleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleBaseInfo::set_has_battleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleBaseInfo::clear_has_battleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleBaseInfo::clear_battleid() {
  battleid_ = GOOGLE_ULONGLONG(0);
  clear_has_battleid();
}
inline ::google::protobuf::uint64 BattleBaseInfo::battleid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleBaseInfo.battleid)
  return battleid_;
}
inline void BattleBaseInfo::set_battleid(::google::protobuf::uint64 value) {
  set_has_battleid();
  battleid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BattleBaseInfo.battleid)
}

// optional uint32 mapid = 3;
inline bool BattleBaseInfo::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleBaseInfo::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleBaseInfo::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleBaseInfo::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 BattleBaseInfo::mapid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleBaseInfo.mapid)
  return mapid_;
}
inline void BattleBaseInfo::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BattleBaseInfo.mapid)
}

// optional bool ifReconnect = 4;
inline bool BattleBaseInfo::has_ifreconnect() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BattleBaseInfo::set_has_ifreconnect() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BattleBaseInfo::clear_has_ifreconnect() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BattleBaseInfo::clear_ifreconnect() {
  ifreconnect_ = false;
  clear_has_ifreconnect();
}
inline bool BattleBaseInfo::ifreconnect() const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleBaseInfo.ifReconnect)
  return ifreconnect_;
}
inline void BattleBaseInfo::set_ifreconnect(bool value) {
  set_has_ifreconnect();
  ifreconnect_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BattleBaseInfo.ifReconnect)
}

// -------------------------------------------------------------------

// RoomBaseInfo

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyRoomBaseInfo];
inline bool RoomBaseInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomBaseInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomBaseInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomBaseInfo::clear_msgid() {
  msgid_ = 140;
  clear_has_msgid();
}
inline ::GSToGC::MsgID RoomBaseInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.RoomBaseInfo.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void RoomBaseInfo::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RoomBaseInfo.msgid)
}

// optional uint64 roomid = 2;
inline bool RoomBaseInfo::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomBaseInfo::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomBaseInfo::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomBaseInfo::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 RoomBaseInfo::roomid() const {
  // @@protoc_insertion_point(field_get:GSToGC.RoomBaseInfo.roomid)
  return roomid_;
}
inline void RoomBaseInfo::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RoomBaseInfo.roomid)
}

// optional uint32 mapid = 3;
inline bool RoomBaseInfo::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoomBaseInfo::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoomBaseInfo::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoomBaseInfo::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 RoomBaseInfo::mapid() const {
  // @@protoc_insertion_point(field_get:GSToGC.RoomBaseInfo.mapid)
  return mapid_;
}
inline void RoomBaseInfo::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RoomBaseInfo.mapid)
}

// -------------------------------------------------------------------

// BattleSeatPosInfo_PosInfo

// optional int32 pos = 1;
inline bool BattleSeatPosInfo_PosInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleSeatPosInfo_PosInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleSeatPosInfo_PosInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleSeatPosInfo_PosInfo::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 BattleSeatPosInfo_PosInfo::pos() const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleSeatPosInfo.PosInfo.pos)
  return pos_;
}
inline void BattleSeatPosInfo_PosInfo::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BattleSeatPosInfo.PosInfo.pos)
}

// optional uint64 guid = 2;
inline bool BattleSeatPosInfo_PosInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleSeatPosInfo_PosInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleSeatPosInfo_PosInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleSeatPosInfo_PosInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 BattleSeatPosInfo_PosInfo::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleSeatPosInfo.PosInfo.guid)
  return guid_;
}
inline void BattleSeatPosInfo_PosInfo::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BattleSeatPosInfo.PosInfo.guid)
}

// optional string nickname = 3;
inline bool BattleSeatPosInfo_PosInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleSeatPosInfo_PosInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleSeatPosInfo_PosInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleSeatPosInfo_PosInfo::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& BattleSeatPosInfo_PosInfo::nickname() const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleSeatPosInfo.PosInfo.nickname)
  return *nickname_;
}
inline void BattleSeatPosInfo_PosInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.BattleSeatPosInfo.PosInfo.nickname)
}
inline void BattleSeatPosInfo_PosInfo::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.BattleSeatPosInfo.PosInfo.nickname)
}
inline void BattleSeatPosInfo_PosInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.BattleSeatPosInfo.PosInfo.nickname)
}
inline ::std::string* BattleSeatPosInfo_PosInfo::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.BattleSeatPosInfo.PosInfo.nickname)
  return nickname_;
}
inline ::std::string* BattleSeatPosInfo_PosInfo::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BattleSeatPosInfo_PosInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.BattleSeatPosInfo.PosInfo.nickname)
}

// optional bool ifmaster = 4;
inline bool BattleSeatPosInfo_PosInfo::has_ifmaster() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BattleSeatPosInfo_PosInfo::set_has_ifmaster() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BattleSeatPosInfo_PosInfo::clear_has_ifmaster() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BattleSeatPosInfo_PosInfo::clear_ifmaster() {
  ifmaster_ = false;
  clear_has_ifmaster();
}
inline bool BattleSeatPosInfo_PosInfo::ifmaster() const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleSeatPosInfo.PosInfo.ifmaster)
  return ifmaster_;
}
inline void BattleSeatPosInfo_PosInfo::set_ifmaster(bool value) {
  set_has_ifmaster();
  ifmaster_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BattleSeatPosInfo.PosInfo.ifmaster)
}

// optional bool ifready = 5;
inline bool BattleSeatPosInfo_PosInfo::has_ifready() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BattleSeatPosInfo_PosInfo::set_has_ifready() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BattleSeatPosInfo_PosInfo::clear_has_ifready() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BattleSeatPosInfo_PosInfo::clear_ifready() {
  ifready_ = false;
  clear_has_ifready();
}
inline bool BattleSeatPosInfo_PosInfo::ifready() const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleSeatPosInfo.PosInfo.ifready)
  return ifready_;
}
inline void BattleSeatPosInfo_PosInfo::set_ifready(bool value) {
  set_has_ifready();
  ifready_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BattleSeatPosInfo.PosInfo.ifready)
}

// optional int32 headid = 6;
inline bool BattleSeatPosInfo_PosInfo::has_headid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BattleSeatPosInfo_PosInfo::set_has_headid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BattleSeatPosInfo_PosInfo::clear_has_headid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BattleSeatPosInfo_PosInfo::clear_headid() {
  headid_ = 0;
  clear_has_headid();
}
inline ::google::protobuf::int32 BattleSeatPosInfo_PosInfo::headid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleSeatPosInfo.PosInfo.headid)
  return headid_;
}
inline void BattleSeatPosInfo_PosInfo::set_headid(::google::protobuf::int32 value) {
  set_has_headid();
  headid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BattleSeatPosInfo.PosInfo.headid)
}

// optional int64 gold = 7;
inline bool BattleSeatPosInfo_PosInfo::has_gold() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BattleSeatPosInfo_PosInfo::set_has_gold() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BattleSeatPosInfo_PosInfo::clear_has_gold() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BattleSeatPosInfo_PosInfo::clear_gold() {
  gold_ = GOOGLE_LONGLONG(0);
  clear_has_gold();
}
inline ::google::protobuf::int64 BattleSeatPosInfo_PosInfo::gold() const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleSeatPosInfo.PosInfo.gold)
  return gold_;
}
inline void BattleSeatPosInfo_PosInfo::set_gold(::google::protobuf::int64 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BattleSeatPosInfo.PosInfo.gold)
}

// -------------------------------------------------------------------

// BattleSeatPosInfo

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBattleSeatPosInfo];
inline bool BattleSeatPosInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleSeatPosInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleSeatPosInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleSeatPosInfo::clear_msgid() {
  msgid_ = 9;
  clear_has_msgid();
}
inline ::GSToGC::MsgID BattleSeatPosInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleSeatPosInfo.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void BattleSeatPosInfo::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BattleSeatPosInfo.msgid)
}

// repeated .GSToGC.BattleSeatPosInfo.PosInfo posinfo = 2;
inline int BattleSeatPosInfo::posinfo_size() const {
  return posinfo_.size();
}
inline void BattleSeatPosInfo::clear_posinfo() {
  posinfo_.Clear();
}
inline const ::GSToGC::BattleSeatPosInfo_PosInfo& BattleSeatPosInfo::posinfo(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleSeatPosInfo.posinfo)
  return posinfo_.Get(index);
}
inline ::GSToGC::BattleSeatPosInfo_PosInfo* BattleSeatPosInfo::mutable_posinfo(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.BattleSeatPosInfo.posinfo)
  return posinfo_.Mutable(index);
}
inline ::GSToGC::BattleSeatPosInfo_PosInfo* BattleSeatPosInfo::add_posinfo() {
  // @@protoc_insertion_point(field_add:GSToGC.BattleSeatPosInfo.posinfo)
  return posinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::BattleSeatPosInfo_PosInfo >&
BattleSeatPosInfo::posinfo() const {
  // @@protoc_insertion_point(field_list:GSToGC.BattleSeatPosInfo.posinfo)
  return posinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::BattleSeatPosInfo_PosInfo >*
BattleSeatPosInfo::mutable_posinfo() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.BattleSeatPosInfo.posinfo)
  return &posinfo_;
}

// -------------------------------------------------------------------

// BattleStateChange

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBattleStateChange];
inline bool BattleStateChange::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleStateChange::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleStateChange::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleStateChange::clear_msgid() {
  msgid_ = 10;
  clear_has_msgid();
}
inline ::GSToGC::MsgID BattleStateChange::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleStateChange.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void BattleStateChange::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BattleStateChange.msgid)
}

// optional int32 state = 2;
inline bool BattleStateChange::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleStateChange::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleStateChange::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleStateChange::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 BattleStateChange::state() const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleStateChange.state)
  return state_;
}
inline void BattleStateChange::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BattleStateChange.state)
}

// optional int32 statetimeleft = 3;
inline bool BattleStateChange::has_statetimeleft() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleStateChange::set_has_statetimeleft() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleStateChange::clear_has_statetimeleft() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleStateChange::clear_statetimeleft() {
  statetimeleft_ = 0;
  clear_has_statetimeleft();
}
inline ::google::protobuf::int32 BattleStateChange::statetimeleft() const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleStateChange.statetimeleft)
  return statetimeleft_;
}
inline void BattleStateChange::set_statetimeleft(::google::protobuf::int32 value) {
  set_has_statetimeleft();
  statetimeleft_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BattleStateChange.statetimeleft)
}

// -------------------------------------------------------------------

// CurBattleChange

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyCurBattleChange];
inline bool CurBattleChange::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CurBattleChange::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CurBattleChange::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CurBattleChange::clear_msgid() {
  msgid_ = 11;
  clear_has_msgid();
}
inline ::GSToGC::MsgID CurBattleChange::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.CurBattleChange.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void CurBattleChange::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.CurBattleChange.msgid)
}

// optional int32 ssid = 2;
inline bool CurBattleChange::has_ssid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CurBattleChange::set_has_ssid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CurBattleChange::clear_has_ssid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CurBattleChange::clear_ssid() {
  ssid_ = 0;
  clear_has_ssid();
}
inline ::google::protobuf::int32 CurBattleChange::ssid() const {
  // @@protoc_insertion_point(field_get:GSToGC.CurBattleChange.ssid)
  return ssid_;
}
inline void CurBattleChange::set_ssid(::google::protobuf::int32 value) {
  set_has_ssid();
  ssid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.CurBattleChange.ssid)
}

// optional uint64 battleid = 3;
inline bool CurBattleChange::has_battleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CurBattleChange::set_has_battleid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CurBattleChange::clear_has_battleid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CurBattleChange::clear_battleid() {
  battleid_ = GOOGLE_ULONGLONG(0);
  clear_has_battleid();
}
inline ::google::protobuf::uint64 CurBattleChange::battleid() const {
  // @@protoc_insertion_point(field_get:GSToGC.CurBattleChange.battleid)
  return battleid_;
}
inline void CurBattleChange::set_battleid(::google::protobuf::uint64 value) {
  set_has_battleid();
  battleid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.CurBattleChange.battleid)
}

// optional int32 mapid = 4;
inline bool CurBattleChange::has_mapid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CurBattleChange::set_has_mapid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CurBattleChange::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CurBattleChange::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 CurBattleChange::mapid() const {
  // @@protoc_insertion_point(field_get:GSToGC.CurBattleChange.mapid)
  return mapid_;
}
inline void CurBattleChange::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.CurBattleChange.mapid)
}

// -------------------------------------------------------------------

// Pos

// optional int32 x = 1;
inline bool Pos::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Pos::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Pos::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Pos::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Pos::x() const {
  // @@protoc_insertion_point(field_get:GSToGC.Pos.x)
  return x_;
}
inline void Pos::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.Pos.x)
}

// optional int32 z = 3;
inline bool Pos::has_z() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Pos::set_has_z() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Pos::clear_has_z() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Pos::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline ::google::protobuf::int32 Pos::z() const {
  // @@protoc_insertion_point(field_get:GSToGC.Pos.z)
  return z_;
}
inline void Pos::set_z(::google::protobuf::int32 value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.Pos.z)
}

// -------------------------------------------------------------------

// Dir

// optional int32 angle = 4;
inline bool Dir::has_angle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Dir::set_has_angle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Dir::clear_has_angle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Dir::clear_angle() {
  angle_ = 0;
  clear_has_angle();
}
inline ::google::protobuf::int32 Dir::angle() const {
  // @@protoc_insertion_point(field_get:GSToGC.Dir.angle)
  return angle_;
}
inline void Dir::set_angle(::google::protobuf::int32 value) {
  set_has_angle();
  angle_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.Dir.angle)
}

// -------------------------------------------------------------------

// GOAppear_AppearInfo

// optional uint64 masterguid = 1;
inline bool GOAppear_AppearInfo::has_masterguid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GOAppear_AppearInfo::set_has_masterguid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GOAppear_AppearInfo::clear_has_masterguid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GOAppear_AppearInfo::clear_masterguid() {
  masterguid_ = GOOGLE_ULONGLONG(0);
  clear_has_masterguid();
}
inline ::google::protobuf::uint64 GOAppear_AppearInfo::masterguid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GOAppear.AppearInfo.masterguid)
  return masterguid_;
}
inline void GOAppear_AppearInfo::set_masterguid(::google::protobuf::uint64 value) {
  set_has_masterguid();
  masterguid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GOAppear.AppearInfo.masterguid)
}

// optional uint64 objguid = 2;
inline bool GOAppear_AppearInfo::has_objguid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GOAppear_AppearInfo::set_has_objguid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GOAppear_AppearInfo::clear_has_objguid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GOAppear_AppearInfo::clear_objguid() {
  objguid_ = GOOGLE_ULONGLONG(0);
  clear_has_objguid();
}
inline ::google::protobuf::uint64 GOAppear_AppearInfo::objguid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GOAppear.AppearInfo.objguid)
  return objguid_;
}
inline void GOAppear_AppearInfo::set_objguid(::google::protobuf::uint64 value) {
  set_has_objguid();
  objguid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GOAppear.AppearInfo.objguid)
}

// optional int32 camp = 3;
inline bool GOAppear_AppearInfo::has_camp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GOAppear_AppearInfo::set_has_camp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GOAppear_AppearInfo::clear_has_camp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GOAppear_AppearInfo::clear_camp() {
  camp_ = 0;
  clear_has_camp();
}
inline ::google::protobuf::int32 GOAppear_AppearInfo::camp() const {
  // @@protoc_insertion_point(field_get:GSToGC.GOAppear.AppearInfo.camp)
  return camp_;
}
inline void GOAppear_AppearInfo::set_camp(::google::protobuf::int32 value) {
  set_has_camp();
  camp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GOAppear.AppearInfo.camp)
}

// optional .GSToGC.Pos pos = 4;
inline bool GOAppear_AppearInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GOAppear_AppearInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GOAppear_AppearInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GOAppear_AppearInfo::clear_pos() {
  if (pos_ != NULL) pos_->::GSToGC::Pos::Clear();
  clear_has_pos();
}
inline const ::GSToGC::Pos& GOAppear_AppearInfo::pos() const {
  // @@protoc_insertion_point(field_get:GSToGC.GOAppear.AppearInfo.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::GSToGC::Pos* GOAppear_AppearInfo::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::GSToGC::Pos;
  // @@protoc_insertion_point(field_mutable:GSToGC.GOAppear.AppearInfo.pos)
  return pos_;
}
inline ::GSToGC::Pos* GOAppear_AppearInfo::release_pos() {
  clear_has_pos();
  ::GSToGC::Pos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void GOAppear_AppearInfo::set_allocated_pos(::GSToGC::Pos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.GOAppear.AppearInfo.pos)
}

// optional .GSToGC.Dir dir = 5;
inline bool GOAppear_AppearInfo::has_dir() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GOAppear_AppearInfo::set_has_dir() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GOAppear_AppearInfo::clear_has_dir() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GOAppear_AppearInfo::clear_dir() {
  if (dir_ != NULL) dir_->::GSToGC::Dir::Clear();
  clear_has_dir();
}
inline const ::GSToGC::Dir& GOAppear_AppearInfo::dir() const {
  // @@protoc_insertion_point(field_get:GSToGC.GOAppear.AppearInfo.dir)
  return dir_ != NULL ? *dir_ : *default_instance_->dir_;
}
inline ::GSToGC::Dir* GOAppear_AppearInfo::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) dir_ = new ::GSToGC::Dir;
  // @@protoc_insertion_point(field_mutable:GSToGC.GOAppear.AppearInfo.dir)
  return dir_;
}
inline ::GSToGC::Dir* GOAppear_AppearInfo::release_dir() {
  clear_has_dir();
  ::GSToGC::Dir* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void GOAppear_AppearInfo::set_allocated_dir(::GSToGC::Dir* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.GOAppear.AppearInfo.dir)
}

// optional uint32 hp = 6;
inline bool GOAppear_AppearInfo::has_hp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GOAppear_AppearInfo::set_has_hp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GOAppear_AppearInfo::clear_has_hp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GOAppear_AppearInfo::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 GOAppear_AppearInfo::hp() const {
  // @@protoc_insertion_point(field_get:GSToGC.GOAppear.AppearInfo.hp)
  return hp_;
}
inline void GOAppear_AppearInfo::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GOAppear.AppearInfo.hp)
}

// optional uint32 mp = 7;
inline bool GOAppear_AppearInfo::has_mp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GOAppear_AppearInfo::set_has_mp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GOAppear_AppearInfo::clear_has_mp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GOAppear_AppearInfo::clear_mp() {
  mp_ = 0u;
  clear_has_mp();
}
inline ::google::protobuf::uint32 GOAppear_AppearInfo::mp() const {
  // @@protoc_insertion_point(field_get:GSToGC.GOAppear.AppearInfo.mp)
  return mp_;
}
inline void GOAppear_AppearInfo::set_mp(::google::protobuf::uint32 value) {
  set_has_mp();
  mp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GOAppear.AppearInfo.mp)
}

// optional .GSToGC.ObjType obj_type = 8;
inline bool GOAppear_AppearInfo::has_obj_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GOAppear_AppearInfo::set_has_obj_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GOAppear_AppearInfo::clear_has_obj_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GOAppear_AppearInfo::clear_obj_type() {
  obj_type_ = 1;
  clear_has_obj_type();
}
inline ::GSToGC::ObjType GOAppear_AppearInfo::obj_type() const {
  // @@protoc_insertion_point(field_get:GSToGC.GOAppear.AppearInfo.obj_type)
  return static_cast< ::GSToGC::ObjType >(obj_type_);
}
inline void GOAppear_AppearInfo::set_obj_type(::GSToGC::ObjType value) {
  assert(::GSToGC::ObjType_IsValid(value));
  set_has_obj_type();
  obj_type_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GOAppear.AppearInfo.obj_type)
}

// optional uint32 obj_type_id = 9;
inline bool GOAppear_AppearInfo::has_obj_type_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GOAppear_AppearInfo::set_has_obj_type_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GOAppear_AppearInfo::clear_has_obj_type_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GOAppear_AppearInfo::clear_obj_type_id() {
  obj_type_id_ = 0u;
  clear_has_obj_type_id();
}
inline ::google::protobuf::uint32 GOAppear_AppearInfo::obj_type_id() const {
  // @@protoc_insertion_point(field_get:GSToGC.GOAppear.AppearInfo.obj_type_id)
  return obj_type_id_;
}
inline void GOAppear_AppearInfo::set_obj_type_id(::google::protobuf::uint32 value) {
  set_has_obj_type_id();
  obj_type_id_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GOAppear.AppearInfo.obj_type_id)
}

// -------------------------------------------------------------------

// GOAppear

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGameObjectAppear];
inline bool GOAppear::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GOAppear::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GOAppear::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GOAppear::clear_msgid() {
  msgid_ = 12;
  clear_has_msgid();
}
inline ::GSToGC::MsgID GOAppear::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GOAppear.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void GOAppear::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GOAppear.msgid)
}

// repeated .GSToGC.GOAppear.AppearInfo info = 2;
inline int GOAppear::info_size() const {
  return info_.size();
}
inline void GOAppear::clear_info() {
  info_.Clear();
}
inline const ::GSToGC::GOAppear_AppearInfo& GOAppear::info(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.GOAppear.info)
  return info_.Get(index);
}
inline ::GSToGC::GOAppear_AppearInfo* GOAppear::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.GOAppear.info)
  return info_.Mutable(index);
}
inline ::GSToGC::GOAppear_AppearInfo* GOAppear::add_info() {
  // @@protoc_insertion_point(field_add:GSToGC.GOAppear.info)
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::GOAppear_AppearInfo >&
GOAppear::info() const {
  // @@protoc_insertion_point(field_list:GSToGC.GOAppear.info)
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::GOAppear_AppearInfo >*
GOAppear::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.GOAppear.info)
  return &info_;
}

// -------------------------------------------------------------------

// DisappearInfo

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGameObjectDisappear];
inline bool DisappearInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DisappearInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DisappearInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DisappearInfo::clear_msgid() {
  msgid_ = 13;
  clear_has_msgid();
}
inline ::GSToGC::MsgID DisappearInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.DisappearInfo.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void DisappearInfo::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.DisappearInfo.msgid)
}

// repeated uint64 guid = 2;
inline int DisappearInfo::guid_size() const {
  return guid_.size();
}
inline void DisappearInfo::clear_guid() {
  guid_.Clear();
}
inline ::google::protobuf::uint64 DisappearInfo::guid(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.DisappearInfo.guid)
  return guid_.Get(index);
}
inline void DisappearInfo::set_guid(int index, ::google::protobuf::uint64 value) {
  guid_.Set(index, value);
  // @@protoc_insertion_point(field_set:GSToGC.DisappearInfo.guid)
}
inline void DisappearInfo::add_guid(::google::protobuf::uint64 value) {
  guid_.Add(value);
  // @@protoc_insertion_point(field_add:GSToGC.DisappearInfo.guid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
DisappearInfo::guid() const {
  // @@protoc_insertion_point(field_list:GSToGC.DisappearInfo.guid)
  return guid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
DisappearInfo::mutable_guid() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.DisappearInfo.guid)
  return &guid_;
}

// -------------------------------------------------------------------

// FreeState

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGameObjectFreeState];
inline bool FreeState::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FreeState::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FreeState::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FreeState::clear_msgid() {
  msgid_ = 14;
  clear_has_msgid();
}
inline ::GSToGC::MsgID FreeState::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.FreeState.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void FreeState::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.FreeState.msgid)
}

// optional uint64 objguid = 2;
inline bool FreeState::has_objguid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FreeState::set_has_objguid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FreeState::clear_has_objguid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FreeState::clear_objguid() {
  objguid_ = GOOGLE_ULONGLONG(0);
  clear_has_objguid();
}
inline ::google::protobuf::uint64 FreeState::objguid() const {
  // @@protoc_insertion_point(field_get:GSToGC.FreeState.objguid)
  return objguid_;
}
inline void FreeState::set_objguid(::google::protobuf::uint64 value) {
  set_has_objguid();
  objguid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.FreeState.objguid)
}

// optional .GSToGC.Pos pos = 3;
inline bool FreeState::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FreeState::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FreeState::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FreeState::clear_pos() {
  if (pos_ != NULL) pos_->::GSToGC::Pos::Clear();
  clear_has_pos();
}
inline const ::GSToGC::Pos& FreeState::pos() const {
  // @@protoc_insertion_point(field_get:GSToGC.FreeState.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::GSToGC::Pos* FreeState::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::GSToGC::Pos;
  // @@protoc_insertion_point(field_mutable:GSToGC.FreeState.pos)
  return pos_;
}
inline ::GSToGC::Pos* FreeState::release_pos() {
  clear_has_pos();
  ::GSToGC::Pos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void FreeState::set_allocated_pos(::GSToGC::Pos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.FreeState.pos)
}

// optional .GSToGC.Dir dir = 4;
inline bool FreeState::has_dir() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FreeState::set_has_dir() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FreeState::clear_has_dir() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FreeState::clear_dir() {
  if (dir_ != NULL) dir_->::GSToGC::Dir::Clear();
  clear_has_dir();
}
inline const ::GSToGC::Dir& FreeState::dir() const {
  // @@protoc_insertion_point(field_get:GSToGC.FreeState.dir)
  return dir_ != NULL ? *dir_ : *default_instance_->dir_;
}
inline ::GSToGC::Dir* FreeState::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) dir_ = new ::GSToGC::Dir;
  // @@protoc_insertion_point(field_mutable:GSToGC.FreeState.dir)
  return dir_;
}
inline ::GSToGC::Dir* FreeState::release_dir() {
  clear_has_dir();
  ::GSToGC::Dir* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void FreeState::set_allocated_dir(::GSToGC::Dir* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.FreeState.dir)
}

// -------------------------------------------------------------------

// RunningState

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGameObjectRunState];
inline bool RunningState::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RunningState::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RunningState::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RunningState::clear_msgid() {
  msgid_ = 15;
  clear_has_msgid();
}
inline ::GSToGC::MsgID RunningState::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.RunningState.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void RunningState::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RunningState.msgid)
}

// optional uint64 objguid = 2;
inline bool RunningState::has_objguid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RunningState::set_has_objguid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RunningState::clear_has_objguid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RunningState::clear_objguid() {
  objguid_ = GOOGLE_ULONGLONG(0);
  clear_has_objguid();
}
inline ::google::protobuf::uint64 RunningState::objguid() const {
  // @@protoc_insertion_point(field_get:GSToGC.RunningState.objguid)
  return objguid_;
}
inline void RunningState::set_objguid(::google::protobuf::uint64 value) {
  set_has_objguid();
  objguid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RunningState.objguid)
}

// optional .GSToGC.Pos pos = 3;
inline bool RunningState::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RunningState::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RunningState::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RunningState::clear_pos() {
  if (pos_ != NULL) pos_->::GSToGC::Pos::Clear();
  clear_has_pos();
}
inline const ::GSToGC::Pos& RunningState::pos() const {
  // @@protoc_insertion_point(field_get:GSToGC.RunningState.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::GSToGC::Pos* RunningState::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::GSToGC::Pos;
  // @@protoc_insertion_point(field_mutable:GSToGC.RunningState.pos)
  return pos_;
}
inline ::GSToGC::Pos* RunningState::release_pos() {
  clear_has_pos();
  ::GSToGC::Pos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void RunningState::set_allocated_pos(::GSToGC::Pos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.RunningState.pos)
}

// optional .GSToGC.Dir dir = 4;
inline bool RunningState::has_dir() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RunningState::set_has_dir() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RunningState::clear_has_dir() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RunningState::clear_dir() {
  if (dir_ != NULL) dir_->::GSToGC::Dir::Clear();
  clear_has_dir();
}
inline const ::GSToGC::Dir& RunningState::dir() const {
  // @@protoc_insertion_point(field_get:GSToGC.RunningState.dir)
  return dir_ != NULL ? *dir_ : *default_instance_->dir_;
}
inline ::GSToGC::Dir* RunningState::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) dir_ = new ::GSToGC::Dir;
  // @@protoc_insertion_point(field_mutable:GSToGC.RunningState.dir)
  return dir_;
}
inline ::GSToGC::Dir* RunningState::release_dir() {
  clear_has_dir();
  ::GSToGC::Dir* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void RunningState::set_allocated_dir(::GSToGC::Dir* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.RunningState.dir)
}

// optional int32 movespeed = 5;
inline bool RunningState::has_movespeed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RunningState::set_has_movespeed() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RunningState::clear_has_movespeed() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RunningState::clear_movespeed() {
  movespeed_ = 0;
  clear_has_movespeed();
}
inline ::google::protobuf::int32 RunningState::movespeed() const {
  // @@protoc_insertion_point(field_get:GSToGC.RunningState.movespeed)
  return movespeed_;
}
inline void RunningState::set_movespeed(::google::protobuf::int32 value) {
  set_has_movespeed();
  movespeed_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RunningState.movespeed)
}

// -------------------------------------------------------------------

// PrepareSkillState

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGameObjectPrepareSkillState];
inline bool PrepareSkillState::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PrepareSkillState::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PrepareSkillState::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PrepareSkillState::clear_msgid() {
  msgid_ = 16;
  clear_has_msgid();
}
inline ::GSToGC::MsgID PrepareSkillState::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.PrepareSkillState.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void PrepareSkillState::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.PrepareSkillState.msgid)
}

// optional uint64 objguid = 2;
inline bool PrepareSkillState::has_objguid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PrepareSkillState::set_has_objguid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PrepareSkillState::clear_has_objguid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PrepareSkillState::clear_objguid() {
  objguid_ = GOOGLE_ULONGLONG(0);
  clear_has_objguid();
}
inline ::google::protobuf::uint64 PrepareSkillState::objguid() const {
  // @@protoc_insertion_point(field_get:GSToGC.PrepareSkillState.objguid)
  return objguid_;
}
inline void PrepareSkillState::set_objguid(::google::protobuf::uint64 value) {
  set_has_objguid();
  objguid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.PrepareSkillState.objguid)
}

// optional int32 skillid = 3;
inline bool PrepareSkillState::has_skillid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PrepareSkillState::set_has_skillid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PrepareSkillState::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PrepareSkillState::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 PrepareSkillState::skillid() const {
  // @@protoc_insertion_point(field_get:GSToGC.PrepareSkillState.skillid)
  return skillid_;
}
inline void PrepareSkillState::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.PrepareSkillState.skillid)
}

// optional .GSToGC.Pos pos = 4;
inline bool PrepareSkillState::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PrepareSkillState::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PrepareSkillState::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PrepareSkillState::clear_pos() {
  if (pos_ != NULL) pos_->::GSToGC::Pos::Clear();
  clear_has_pos();
}
inline const ::GSToGC::Pos& PrepareSkillState::pos() const {
  // @@protoc_insertion_point(field_get:GSToGC.PrepareSkillState.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::GSToGC::Pos* PrepareSkillState::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::GSToGC::Pos;
  // @@protoc_insertion_point(field_mutable:GSToGC.PrepareSkillState.pos)
  return pos_;
}
inline ::GSToGC::Pos* PrepareSkillState::release_pos() {
  clear_has_pos();
  ::GSToGC::Pos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void PrepareSkillState::set_allocated_pos(::GSToGC::Pos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.PrepareSkillState.pos)
}

// optional .GSToGC.Dir dir = 5;
inline bool PrepareSkillState::has_dir() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PrepareSkillState::set_has_dir() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PrepareSkillState::clear_has_dir() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PrepareSkillState::clear_dir() {
  if (dir_ != NULL) dir_->::GSToGC::Dir::Clear();
  clear_has_dir();
}
inline const ::GSToGC::Dir& PrepareSkillState::dir() const {
  // @@protoc_insertion_point(field_get:GSToGC.PrepareSkillState.dir)
  return dir_ != NULL ? *dir_ : *default_instance_->dir_;
}
inline ::GSToGC::Dir* PrepareSkillState::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) dir_ = new ::GSToGC::Dir;
  // @@protoc_insertion_point(field_mutable:GSToGC.PrepareSkillState.dir)
  return dir_;
}
inline ::GSToGC::Dir* PrepareSkillState::release_dir() {
  clear_has_dir();
  ::GSToGC::Dir* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void PrepareSkillState::set_allocated_dir(::GSToGC::Dir* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.PrepareSkillState.dir)
}

// optional uint64 targuid = 6;
inline bool PrepareSkillState::has_targuid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PrepareSkillState::set_has_targuid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PrepareSkillState::clear_has_targuid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PrepareSkillState::clear_targuid() {
  targuid_ = GOOGLE_ULONGLONG(0);
  clear_has_targuid();
}
inline ::google::protobuf::uint64 PrepareSkillState::targuid() const {
  // @@protoc_insertion_point(field_get:GSToGC.PrepareSkillState.targuid)
  return targuid_;
}
inline void PrepareSkillState::set_targuid(::google::protobuf::uint64 value) {
  set_has_targuid();
  targuid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.PrepareSkillState.targuid)
}

// optional int32 speed = 7;
inline bool PrepareSkillState::has_speed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PrepareSkillState::set_has_speed() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PrepareSkillState::clear_has_speed() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PrepareSkillState::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
inline ::google::protobuf::int32 PrepareSkillState::speed() const {
  // @@protoc_insertion_point(field_get:GSToGC.PrepareSkillState.speed)
  return speed_;
}
inline void PrepareSkillState::set_speed(::google::protobuf::int32 value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.PrepareSkillState.speed)
}

// -------------------------------------------------------------------

// ReleasingSkillState

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGameObjectReleaseSkillState];
inline bool ReleasingSkillState::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReleasingSkillState::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReleasingSkillState::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReleasingSkillState::clear_msgid() {
  msgid_ = 17;
  clear_has_msgid();
}
inline ::GSToGC::MsgID ReleasingSkillState::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.ReleasingSkillState.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void ReleasingSkillState::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.ReleasingSkillState.msgid)
}

// optional uint64 objguid = 2;
inline bool ReleasingSkillState::has_objguid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReleasingSkillState::set_has_objguid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReleasingSkillState::clear_has_objguid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReleasingSkillState::clear_objguid() {
  objguid_ = GOOGLE_ULONGLONG(0);
  clear_has_objguid();
}
inline ::google::protobuf::uint64 ReleasingSkillState::objguid() const {
  // @@protoc_insertion_point(field_get:GSToGC.ReleasingSkillState.objguid)
  return objguid_;
}
inline void ReleasingSkillState::set_objguid(::google::protobuf::uint64 value) {
  set_has_objguid();
  objguid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.ReleasingSkillState.objguid)
}

// optional int32 skillid = 3;
inline bool ReleasingSkillState::has_skillid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReleasingSkillState::set_has_skillid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReleasingSkillState::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReleasingSkillState::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 ReleasingSkillState::skillid() const {
  // @@protoc_insertion_point(field_get:GSToGC.ReleasingSkillState.skillid)
  return skillid_;
}
inline void ReleasingSkillState::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.ReleasingSkillState.skillid)
}

// optional .GSToGC.Pos pos = 4;
inline bool ReleasingSkillState::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReleasingSkillState::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReleasingSkillState::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReleasingSkillState::clear_pos() {
  if (pos_ != NULL) pos_->::GSToGC::Pos::Clear();
  clear_has_pos();
}
inline const ::GSToGC::Pos& ReleasingSkillState::pos() const {
  // @@protoc_insertion_point(field_get:GSToGC.ReleasingSkillState.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::GSToGC::Pos* ReleasingSkillState::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::GSToGC::Pos;
  // @@protoc_insertion_point(field_mutable:GSToGC.ReleasingSkillState.pos)
  return pos_;
}
inline ::GSToGC::Pos* ReleasingSkillState::release_pos() {
  clear_has_pos();
  ::GSToGC::Pos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void ReleasingSkillState::set_allocated_pos(::GSToGC::Pos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.ReleasingSkillState.pos)
}

// optional .GSToGC.Dir dir = 5;
inline bool ReleasingSkillState::has_dir() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReleasingSkillState::set_has_dir() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReleasingSkillState::clear_has_dir() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReleasingSkillState::clear_dir() {
  if (dir_ != NULL) dir_->::GSToGC::Dir::Clear();
  clear_has_dir();
}
inline const ::GSToGC::Dir& ReleasingSkillState::dir() const {
  // @@protoc_insertion_point(field_get:GSToGC.ReleasingSkillState.dir)
  return dir_ != NULL ? *dir_ : *default_instance_->dir_;
}
inline ::GSToGC::Dir* ReleasingSkillState::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) dir_ = new ::GSToGC::Dir;
  // @@protoc_insertion_point(field_mutable:GSToGC.ReleasingSkillState.dir)
  return dir_;
}
inline ::GSToGC::Dir* ReleasingSkillState::release_dir() {
  clear_has_dir();
  ::GSToGC::Dir* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void ReleasingSkillState::set_allocated_dir(::GSToGC::Dir* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.ReleasingSkillState.dir)
}

// optional uint64 targuid = 6;
inline bool ReleasingSkillState::has_targuid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReleasingSkillState::set_has_targuid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReleasingSkillState::clear_has_targuid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReleasingSkillState::clear_targuid() {
  targuid_ = GOOGLE_ULONGLONG(0);
  clear_has_targuid();
}
inline ::google::protobuf::uint64 ReleasingSkillState::targuid() const {
  // @@protoc_insertion_point(field_get:GSToGC.ReleasingSkillState.targuid)
  return targuid_;
}
inline void ReleasingSkillState::set_targuid(::google::protobuf::uint64 value) {
  set_has_targuid();
  targuid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.ReleasingSkillState.targuid)
}

// -------------------------------------------------------------------

// UsingSkillState

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGameObjectUsingSkillState];
inline bool UsingSkillState::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UsingSkillState::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UsingSkillState::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UsingSkillState::clear_msgid() {
  msgid_ = 240;
  clear_has_msgid();
}
inline ::GSToGC::MsgID UsingSkillState::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.UsingSkillState.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void UsingSkillState::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UsingSkillState.msgid)
}

// optional uint64 objguid = 2;
inline bool UsingSkillState::has_objguid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UsingSkillState::set_has_objguid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UsingSkillState::clear_has_objguid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UsingSkillState::clear_objguid() {
  objguid_ = GOOGLE_ULONGLONG(0);
  clear_has_objguid();
}
inline ::google::protobuf::uint64 UsingSkillState::objguid() const {
  // @@protoc_insertion_point(field_get:GSToGC.UsingSkillState.objguid)
  return objguid_;
}
inline void UsingSkillState::set_objguid(::google::protobuf::uint64 value) {
  set_has_objguid();
  objguid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UsingSkillState.objguid)
}

// optional int32 skillid = 3;
inline bool UsingSkillState::has_skillid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UsingSkillState::set_has_skillid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UsingSkillState::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UsingSkillState::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 UsingSkillState::skillid() const {
  // @@protoc_insertion_point(field_get:GSToGC.UsingSkillState.skillid)
  return skillid_;
}
inline void UsingSkillState::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UsingSkillState.skillid)
}

// optional .GSToGC.Pos pos = 4;
inline bool UsingSkillState::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UsingSkillState::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UsingSkillState::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UsingSkillState::clear_pos() {
  if (pos_ != NULL) pos_->::GSToGC::Pos::Clear();
  clear_has_pos();
}
inline const ::GSToGC::Pos& UsingSkillState::pos() const {
  // @@protoc_insertion_point(field_get:GSToGC.UsingSkillState.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::GSToGC::Pos* UsingSkillState::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::GSToGC::Pos;
  // @@protoc_insertion_point(field_mutable:GSToGC.UsingSkillState.pos)
  return pos_;
}
inline ::GSToGC::Pos* UsingSkillState::release_pos() {
  clear_has_pos();
  ::GSToGC::Pos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void UsingSkillState::set_allocated_pos(::GSToGC::Pos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.UsingSkillState.pos)
}

// optional .GSToGC.Dir dir = 5;
inline bool UsingSkillState::has_dir() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UsingSkillState::set_has_dir() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UsingSkillState::clear_has_dir() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UsingSkillState::clear_dir() {
  if (dir_ != NULL) dir_->::GSToGC::Dir::Clear();
  clear_has_dir();
}
inline const ::GSToGC::Dir& UsingSkillState::dir() const {
  // @@protoc_insertion_point(field_get:GSToGC.UsingSkillState.dir)
  return dir_ != NULL ? *dir_ : *default_instance_->dir_;
}
inline ::GSToGC::Dir* UsingSkillState::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) dir_ = new ::GSToGC::Dir;
  // @@protoc_insertion_point(field_mutable:GSToGC.UsingSkillState.dir)
  return dir_;
}
inline ::GSToGC::Dir* UsingSkillState::release_dir() {
  clear_has_dir();
  ::GSToGC::Dir* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void UsingSkillState::set_allocated_dir(::GSToGC::Dir* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.UsingSkillState.dir)
}

// optional uint64 targuid = 6;
inline bool UsingSkillState::has_targuid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UsingSkillState::set_has_targuid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UsingSkillState::clear_has_targuid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UsingSkillState::clear_targuid() {
  targuid_ = GOOGLE_ULONGLONG(0);
  clear_has_targuid();
}
inline ::google::protobuf::uint64 UsingSkillState::targuid() const {
  // @@protoc_insertion_point(field_get:GSToGC.UsingSkillState.targuid)
  return targuid_;
}
inline void UsingSkillState::set_targuid(::google::protobuf::uint64 value) {
  set_has_targuid();
  targuid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UsingSkillState.targuid)
}

// -------------------------------------------------------------------

// LastingSkillState

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGameObjectLastingSkillState];
inline bool LastingSkillState::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LastingSkillState::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LastingSkillState::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LastingSkillState::clear_msgid() {
  msgid_ = 241;
  clear_has_msgid();
}
inline ::GSToGC::MsgID LastingSkillState::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.LastingSkillState.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void LastingSkillState::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.LastingSkillState.msgid)
}

// optional uint64 objguid = 2;
inline bool LastingSkillState::has_objguid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LastingSkillState::set_has_objguid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LastingSkillState::clear_has_objguid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LastingSkillState::clear_objguid() {
  objguid_ = GOOGLE_ULONGLONG(0);
  clear_has_objguid();
}
inline ::google::protobuf::uint64 LastingSkillState::objguid() const {
  // @@protoc_insertion_point(field_get:GSToGC.LastingSkillState.objguid)
  return objguid_;
}
inline void LastingSkillState::set_objguid(::google::protobuf::uint64 value) {
  set_has_objguid();
  objguid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.LastingSkillState.objguid)
}

// optional int32 skillid = 3;
inline bool LastingSkillState::has_skillid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LastingSkillState::set_has_skillid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LastingSkillState::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LastingSkillState::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 LastingSkillState::skillid() const {
  // @@protoc_insertion_point(field_get:GSToGC.LastingSkillState.skillid)
  return skillid_;
}
inline void LastingSkillState::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.LastingSkillState.skillid)
}

// optional .GSToGC.Pos pos = 4;
inline bool LastingSkillState::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LastingSkillState::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LastingSkillState::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LastingSkillState::clear_pos() {
  if (pos_ != NULL) pos_->::GSToGC::Pos::Clear();
  clear_has_pos();
}
inline const ::GSToGC::Pos& LastingSkillState::pos() const {
  // @@protoc_insertion_point(field_get:GSToGC.LastingSkillState.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::GSToGC::Pos* LastingSkillState::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::GSToGC::Pos;
  // @@protoc_insertion_point(field_mutable:GSToGC.LastingSkillState.pos)
  return pos_;
}
inline ::GSToGC::Pos* LastingSkillState::release_pos() {
  clear_has_pos();
  ::GSToGC::Pos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void LastingSkillState::set_allocated_pos(::GSToGC::Pos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.LastingSkillState.pos)
}

// optional .GSToGC.Dir dir = 5;
inline bool LastingSkillState::has_dir() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LastingSkillState::set_has_dir() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LastingSkillState::clear_has_dir() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LastingSkillState::clear_dir() {
  if (dir_ != NULL) dir_->::GSToGC::Dir::Clear();
  clear_has_dir();
}
inline const ::GSToGC::Dir& LastingSkillState::dir() const {
  // @@protoc_insertion_point(field_get:GSToGC.LastingSkillState.dir)
  return dir_ != NULL ? *dir_ : *default_instance_->dir_;
}
inline ::GSToGC::Dir* LastingSkillState::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) dir_ = new ::GSToGC::Dir;
  // @@protoc_insertion_point(field_mutable:GSToGC.LastingSkillState.dir)
  return dir_;
}
inline ::GSToGC::Dir* LastingSkillState::release_dir() {
  clear_has_dir();
  ::GSToGC::Dir* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void LastingSkillState::set_allocated_dir(::GSToGC::Dir* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.LastingSkillState.dir)
}

// optional uint64 targuid = 6;
inline bool LastingSkillState::has_targuid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LastingSkillState::set_has_targuid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LastingSkillState::clear_has_targuid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LastingSkillState::clear_targuid() {
  targuid_ = GOOGLE_ULONGLONG(0);
  clear_has_targuid();
}
inline ::google::protobuf::uint64 LastingSkillState::targuid() const {
  // @@protoc_insertion_point(field_get:GSToGC.LastingSkillState.targuid)
  return targuid_;
}
inline void LastingSkillState::set_targuid(::google::protobuf::uint64 value) {
  set_has_targuid();
  targuid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.LastingSkillState.targuid)
}

// -------------------------------------------------------------------

// DeadState

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGameObjectDeadState];
inline bool DeadState::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeadState::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeadState::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeadState::clear_msgid() {
  msgid_ = 18;
  clear_has_msgid();
}
inline ::GSToGC::MsgID DeadState::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.DeadState.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void DeadState::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.DeadState.msgid)
}

// optional uint64 objguid = 2;
inline bool DeadState::has_objguid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeadState::set_has_objguid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeadState::clear_has_objguid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeadState::clear_objguid() {
  objguid_ = GOOGLE_ULONGLONG(0);
  clear_has_objguid();
}
inline ::google::protobuf::uint64 DeadState::objguid() const {
  // @@protoc_insertion_point(field_get:GSToGC.DeadState.objguid)
  return objguid_;
}
inline void DeadState::set_objguid(::google::protobuf::uint64 value) {
  set_has_objguid();
  objguid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.DeadState.objguid)
}

// optional .GSToGC.Pos pos = 3;
inline bool DeadState::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeadState::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeadState::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeadState::clear_pos() {
  if (pos_ != NULL) pos_->::GSToGC::Pos::Clear();
  clear_has_pos();
}
inline const ::GSToGC::Pos& DeadState::pos() const {
  // @@protoc_insertion_point(field_get:GSToGC.DeadState.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::GSToGC::Pos* DeadState::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::GSToGC::Pos;
  // @@protoc_insertion_point(field_mutable:GSToGC.DeadState.pos)
  return pos_;
}
inline ::GSToGC::Pos* DeadState::release_pos() {
  clear_has_pos();
  ::GSToGC::Pos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void DeadState::set_allocated_pos(::GSToGC::Pos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.DeadState.pos)
}

// optional .GSToGC.Dir dir = 4;
inline bool DeadState::has_dir() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DeadState::set_has_dir() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DeadState::clear_has_dir() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DeadState::clear_dir() {
  if (dir_ != NULL) dir_->::GSToGC::Dir::Clear();
  clear_has_dir();
}
inline const ::GSToGC::Dir& DeadState::dir() const {
  // @@protoc_insertion_point(field_get:GSToGC.DeadState.dir)
  return dir_ != NULL ? *dir_ : *default_instance_->dir_;
}
inline ::GSToGC::Dir* DeadState::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) dir_ = new ::GSToGC::Dir;
  // @@protoc_insertion_point(field_mutable:GSToGC.DeadState.dir)
  return dir_;
}
inline ::GSToGC::Dir* DeadState::release_dir() {
  clear_has_dir();
  ::GSToGC::Dir* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void DeadState::set_allocated_dir(::GSToGC::Dir* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.DeadState.dir)
}

// optional bool spot = 5;
inline bool DeadState::has_spot() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DeadState::set_has_spot() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DeadState::clear_has_spot() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DeadState::clear_spot() {
  spot_ = false;
  clear_has_spot();
}
inline bool DeadState::spot() const {
  // @@protoc_insertion_point(field_get:GSToGC.DeadState.spot)
  return spot_;
}
inline void DeadState::set_spot(bool value) {
  set_has_spot();
  spot_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.DeadState.spot)
}

// -------------------------------------------------------------------

// NotifyGoodsInfo_GoodsInfo

// optional int32 num = 1;
inline bool NotifyGoodsInfo_GoodsInfo::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyGoodsInfo_GoodsInfo::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyGoodsInfo_GoodsInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyGoodsInfo_GoodsInfo::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 NotifyGoodsInfo_GoodsInfo::num() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyGoodsInfo.GoodsInfo.num)
  return num_;
}
inline void NotifyGoodsInfo_GoodsInfo::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyGoodsInfo.GoodsInfo.num)
}

// optional int32 pos = 2;
inline bool NotifyGoodsInfo_GoodsInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyGoodsInfo_GoodsInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyGoodsInfo_GoodsInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyGoodsInfo_GoodsInfo::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 NotifyGoodsInfo_GoodsInfo::pos() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyGoodsInfo.GoodsInfo.pos)
  return pos_;
}
inline void NotifyGoodsInfo_GoodsInfo::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyGoodsInfo.GoodsInfo.pos)
}

// optional bool ifComposed = 3;
inline bool NotifyGoodsInfo_GoodsInfo::has_ifcomposed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyGoodsInfo_GoodsInfo::set_has_ifcomposed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyGoodsInfo_GoodsInfo::clear_has_ifcomposed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyGoodsInfo_GoodsInfo::clear_ifcomposed() {
  ifcomposed_ = false;
  clear_has_ifcomposed();
}
inline bool NotifyGoodsInfo_GoodsInfo::ifcomposed() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyGoodsInfo.GoodsInfo.ifComposed)
  return ifcomposed_;
}
inline void NotifyGoodsInfo_GoodsInfo::set_ifcomposed(bool value) {
  set_has_ifcomposed();
  ifcomposed_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyGoodsInfo.GoodsInfo.ifComposed)
}

// optional int32 tyepid = 4;
inline bool NotifyGoodsInfo_GoodsInfo::has_tyepid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyGoodsInfo_GoodsInfo::set_has_tyepid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyGoodsInfo_GoodsInfo::clear_has_tyepid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyGoodsInfo_GoodsInfo::clear_tyepid() {
  tyepid_ = 0;
  clear_has_tyepid();
}
inline ::google::protobuf::int32 NotifyGoodsInfo_GoodsInfo::tyepid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyGoodsInfo.GoodsInfo.tyepid)
  return tyepid_;
}
inline void NotifyGoodsInfo_GoodsInfo::set_tyepid(::google::protobuf::int32 value) {
  set_has_tyepid();
  tyepid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyGoodsInfo.GoodsInfo.tyepid)
}

// optional int32 state = 5;
inline bool NotifyGoodsInfo_GoodsInfo::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifyGoodsInfo_GoodsInfo::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifyGoodsInfo_GoodsInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifyGoodsInfo_GoodsInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 NotifyGoodsInfo_GoodsInfo::state() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyGoodsInfo.GoodsInfo.state)
  return state_;
}
inline void NotifyGoodsInfo_GoodsInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyGoodsInfo.GoodsInfo.state)
}

// optional int32 statetime = 6;
inline bool NotifyGoodsInfo_GoodsInfo::has_statetime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NotifyGoodsInfo_GoodsInfo::set_has_statetime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NotifyGoodsInfo_GoodsInfo::clear_has_statetime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NotifyGoodsInfo_GoodsInfo::clear_statetime() {
  statetime_ = 0;
  clear_has_statetime();
}
inline ::google::protobuf::int32 NotifyGoodsInfo_GoodsInfo::statetime() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyGoodsInfo.GoodsInfo.statetime)
  return statetime_;
}
inline void NotifyGoodsInfo_GoodsInfo::set_statetime(::google::protobuf::int32 value) {
  set_has_statetime();
  statetime_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyGoodsInfo.GoodsInfo.statetime)
}

// -------------------------------------------------------------------

// NotifyGoodsInfo

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGoodsInf];
inline bool NotifyGoodsInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyGoodsInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyGoodsInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyGoodsInfo::clear_msgid() {
  msgid_ = 19;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyGoodsInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyGoodsInfo.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyGoodsInfo::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyGoodsInfo.msgid)
}

// optional uint64 guid = 2;
inline bool NotifyGoodsInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyGoodsInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyGoodsInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyGoodsInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 NotifyGoodsInfo::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyGoodsInfo.guid)
  return guid_;
}
inline void NotifyGoodsInfo::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyGoodsInfo.guid)
}

// repeated .GSToGC.NotifyGoodsInfo.GoodsInfo info = 3;
inline int NotifyGoodsInfo::info_size() const {
  return info_.size();
}
inline void NotifyGoodsInfo::clear_info() {
  info_.Clear();
}
inline const ::GSToGC::NotifyGoodsInfo_GoodsInfo& NotifyGoodsInfo::info(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyGoodsInfo.info)
  return info_.Get(index);
}
inline ::GSToGC::NotifyGoodsInfo_GoodsInfo* NotifyGoodsInfo::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyGoodsInfo.info)
  return info_.Mutable(index);
}
inline ::GSToGC::NotifyGoodsInfo_GoodsInfo* NotifyGoodsInfo::add_info() {
  // @@protoc_insertion_point(field_add:GSToGC.NotifyGoodsInfo.info)
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyGoodsInfo_GoodsInfo >&
NotifyGoodsInfo::info() const {
  // @@protoc_insertion_point(field_list:GSToGC.NotifyGoodsInfo.info)
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyGoodsInfo_GoodsInfo >*
NotifyGoodsInfo::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.NotifyGoodsInfo.info)
  return &info_;
}

// -------------------------------------------------------------------

// BattleLoadingState

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBattleLoadingState];
inline bool BattleLoadingState::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleLoadingState::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleLoadingState::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleLoadingState::clear_msgid() {
  msgid_ = 20;
  clear_has_msgid();
}
inline ::GSToGC::MsgID BattleLoadingState::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleLoadingState.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void BattleLoadingState::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BattleLoadingState.msgid)
}

// optional int64 guid = 2;
inline bool BattleLoadingState::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleLoadingState::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleLoadingState::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleLoadingState::clear_guid() {
  guid_ = GOOGLE_LONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::int64 BattleLoadingState::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleLoadingState.guid)
  return guid_;
}
inline void BattleLoadingState::set_guid(::google::protobuf::int64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BattleLoadingState.guid)
}

// optional int32 loadper = 3;
inline bool BattleLoadingState::has_loadper() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleLoadingState::set_has_loadper() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleLoadingState::clear_has_loadper() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleLoadingState::clear_loadper() {
  loadper_ = 0;
  clear_has_loadper();
}
inline ::google::protobuf::int32 BattleLoadingState::loadper() const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleLoadingState.loadper)
  return loadper_;
}
inline void BattleLoadingState::set_loadper(::google::protobuf::int32 value) {
  set_has_loadper();
  loadper_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BattleLoadingState.loadper)
}

// -------------------------------------------------------------------

// HeroPosInfo

// optional int32 pos = 2;
inline bool HeroPosInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroPosInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroPosInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroPosInfo::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 HeroPosInfo::pos() const {
  // @@protoc_insertion_point(field_get:GSToGC.HeroPosInfo.pos)
  return pos_;
}
inline void HeroPosInfo::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HeroPosInfo.pos)
}

// optional int32 heroid = 3;
inline bool HeroPosInfo::has_heroid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroPosInfo::set_has_heroid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroPosInfo::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroPosInfo::clear_heroid() {
  heroid_ = 0;
  clear_has_heroid();
}
inline ::google::protobuf::int32 HeroPosInfo::heroid() const {
  // @@protoc_insertion_point(field_get:GSToGC.HeroPosInfo.heroid)
  return heroid_;
}
inline void HeroPosInfo::set_heroid(::google::protobuf::int32 value) {
  set_has_heroid();
  heroid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HeroPosInfo.heroid)
}

// -------------------------------------------------------------------

// HeroInfo

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBattleHeroInfo];
inline bool HeroInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroInfo::clear_msgid() {
  msgid_ = 21;
  clear_has_msgid();
}
inline ::GSToGC::MsgID HeroInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.HeroInfo.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void HeroInfo::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HeroInfo.msgid)
}

// optional .GSToGC.HeroPosInfo heroposinfo = 2;
inline bool HeroInfo::has_heroposinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroInfo::set_has_heroposinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroInfo::clear_has_heroposinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroInfo::clear_heroposinfo() {
  if (heroposinfo_ != NULL) heroposinfo_->::GSToGC::HeroPosInfo::Clear();
  clear_has_heroposinfo();
}
inline const ::GSToGC::HeroPosInfo& HeroInfo::heroposinfo() const {
  // @@protoc_insertion_point(field_get:GSToGC.HeroInfo.heroposinfo)
  return heroposinfo_ != NULL ? *heroposinfo_ : *default_instance_->heroposinfo_;
}
inline ::GSToGC::HeroPosInfo* HeroInfo::mutable_heroposinfo() {
  set_has_heroposinfo();
  if (heroposinfo_ == NULL) heroposinfo_ = new ::GSToGC::HeroPosInfo;
  // @@protoc_insertion_point(field_mutable:GSToGC.HeroInfo.heroposinfo)
  return heroposinfo_;
}
inline ::GSToGC::HeroPosInfo* HeroInfo::release_heroposinfo() {
  clear_has_heroposinfo();
  ::GSToGC::HeroPosInfo* temp = heroposinfo_;
  heroposinfo_ = NULL;
  return temp;
}
inline void HeroInfo::set_allocated_heroposinfo(::GSToGC::HeroPosInfo* heroposinfo) {
  delete heroposinfo_;
  heroposinfo_ = heroposinfo;
  if (heroposinfo) {
    set_has_heroposinfo();
  } else {
    clear_has_heroposinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.HeroInfo.heroposinfo)
}

// -------------------------------------------------------------------

// ChatInRoom

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_ChatInRoom];
inline bool ChatInRoom::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatInRoom::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatInRoom::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatInRoom::clear_msgid() {
  msgid_ = 24;
  clear_has_msgid();
}
inline ::GSToGC::MsgID ChatInRoom::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.ChatInRoom.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void ChatInRoom::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.ChatInRoom.msgid)
}

// optional int32 pos = 2;
inline bool ChatInRoom::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatInRoom::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatInRoom::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatInRoom::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 ChatInRoom::pos() const {
  // @@protoc_insertion_point(field_get:GSToGC.ChatInRoom.pos)
  return pos_;
}
inline void ChatInRoom::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.ChatInRoom.pos)
}

// optional string chat = 3;
inline bool ChatInRoom::has_chat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChatInRoom::set_has_chat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChatInRoom::clear_has_chat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChatInRoom::clear_chat() {
  if (chat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chat_->clear();
  }
  clear_has_chat();
}
inline const ::std::string& ChatInRoom::chat() const {
  // @@protoc_insertion_point(field_get:GSToGC.ChatInRoom.chat)
  return *chat_;
}
inline void ChatInRoom::set_chat(const ::std::string& value) {
  set_has_chat();
  if (chat_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chat_ = new ::std::string;
  }
  chat_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.ChatInRoom.chat)
}
inline void ChatInRoom::set_chat(const char* value) {
  set_has_chat();
  if (chat_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chat_ = new ::std::string;
  }
  chat_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.ChatInRoom.chat)
}
inline void ChatInRoom::set_chat(const char* value, size_t size) {
  set_has_chat();
  if (chat_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chat_ = new ::std::string;
  }
  chat_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.ChatInRoom.chat)
}
inline ::std::string* ChatInRoom::mutable_chat() {
  set_has_chat();
  if (chat_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chat_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.ChatInRoom.chat)
  return chat_;
}
inline ::std::string* ChatInRoom::release_chat() {
  clear_has_chat();
  if (chat_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = chat_;
    chat_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ChatInRoom::set_allocated_chat(::std::string* chat) {
  if (chat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete chat_;
  }
  if (chat) {
    set_has_chat();
    chat_ = chat;
  } else {
    clear_has_chat();
    chat_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.ChatInRoom.chat)
}

// -------------------------------------------------------------------

// SkillHitTar

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillHitTarget];
inline bool SkillHitTar::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillHitTar::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillHitTar::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillHitTar::clear_msgid() {
  msgid_ = 25;
  clear_has_msgid();
}
inline ::GSToGC::MsgID SkillHitTar::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.SkillHitTar.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void SkillHitTar::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.SkillHitTar.msgid)
}

// optional int64 guid = 2;
inline bool SkillHitTar::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillHitTar::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillHitTar::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillHitTar::clear_guid() {
  guid_ = GOOGLE_LONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::int64 SkillHitTar::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.SkillHitTar.guid)
  return guid_;
}
inline void SkillHitTar::set_guid(::google::protobuf::int64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.SkillHitTar.guid)
}

// optional int32 skillid = 3;
inline bool SkillHitTar::has_skillid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillHitTar::set_has_skillid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillHitTar::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillHitTar::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 SkillHitTar::skillid() const {
  // @@protoc_insertion_point(field_get:GSToGC.SkillHitTar.skillid)
  return skillid_;
}
inline void SkillHitTar::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.SkillHitTar.skillid)
}

// optional int64 targuid = 4;
inline bool SkillHitTar::has_targuid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SkillHitTar::set_has_targuid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SkillHitTar::clear_has_targuid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SkillHitTar::clear_targuid() {
  targuid_ = GOOGLE_LONGLONG(0);
  clear_has_targuid();
}
inline ::google::protobuf::int64 SkillHitTar::targuid() const {
  // @@protoc_insertion_point(field_get:GSToGC.SkillHitTar.targuid)
  return targuid_;
}
inline void SkillHitTar::set_targuid(::google::protobuf::int64 value) {
  set_has_targuid();
  targuid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.SkillHitTar.targuid)
}

// -------------------------------------------------------------------

// HPChange

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyHPChange];
inline bool HPChange::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HPChange::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HPChange::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HPChange::clear_msgid() {
  msgid_ = 26;
  clear_has_msgid();
}
inline ::GSToGC::MsgID HPChange::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.HPChange.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void HPChange::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HPChange.msgid)
}

// optional uint64 guid = 2;
inline bool HPChange::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HPChange::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HPChange::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HPChange::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 HPChange::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.HPChange.guid)
  return guid_;
}
inline void HPChange::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HPChange.guid)
}

// optional int32 hp = 3;
inline bool HPChange::has_hp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HPChange::set_has_hp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HPChange::clear_has_hp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HPChange::clear_hp() {
  hp_ = 0;
  clear_has_hp();
}
inline ::google::protobuf::int32 HPChange::hp() const {
  // @@protoc_insertion_point(field_get:GSToGC.HPChange.hp)
  return hp_;
}
inline void HPChange::set_hp(::google::protobuf::int32 value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HPChange.hp)
}

// optional .GSToGC.HPMPChangeReason reason = 4;
inline bool HPChange::has_reason() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HPChange::set_has_reason() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HPChange::clear_has_reason() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HPChange::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
inline ::GSToGC::HPMPChangeReason HPChange::reason() const {
  // @@protoc_insertion_point(field_get:GSToGC.HPChange.reason)
  return static_cast< ::GSToGC::HPMPChangeReason >(reason_);
}
inline void HPChange::set_reason(::GSToGC::HPMPChangeReason value) {
  assert(::GSToGC::HPMPChangeReason_IsValid(value));
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HPChange.reason)
}

// -------------------------------------------------------------------

// MpChange

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyMPChange];
inline bool MpChange::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MpChange::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MpChange::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MpChange::clear_msgid() {
  msgid_ = 27;
  clear_has_msgid();
}
inline ::GSToGC::MsgID MpChange::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.MpChange.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void MpChange::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.MpChange.msgid)
}

// optional uint64 guid = 2;
inline bool MpChange::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MpChange::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MpChange::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MpChange::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 MpChange::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.MpChange.guid)
  return guid_;
}
inline void MpChange::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.MpChange.guid)
}

// optional int32 mp = 3;
inline bool MpChange::has_mp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MpChange::set_has_mp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MpChange::clear_has_mp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MpChange::clear_mp() {
  mp_ = 0;
  clear_has_mp();
}
inline ::google::protobuf::int32 MpChange::mp() const {
  // @@protoc_insertion_point(field_get:GSToGC.MpChange.mp)
  return mp_;
}
inline void MpChange::set_mp(::google::protobuf::int32 value) {
  set_has_mp();
  mp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.MpChange.mp)
}

// optional .GSToGC.HPMPChangeReason reason = 4;
inline bool MpChange::has_reason() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MpChange::set_has_reason() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MpChange::clear_has_reason() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MpChange::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
inline ::GSToGC::HPMPChangeReason MpChange::reason() const {
  // @@protoc_insertion_point(field_get:GSToGC.MpChange.reason)
  return static_cast< ::GSToGC::HPMPChangeReason >(reason_);
}
inline void MpChange::set_reason(::GSToGC::HPMPChangeReason value) {
  assert(::GSToGC::HPMPChangeReason_IsValid(value));
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.MpChange.reason)
}

// -------------------------------------------------------------------

// TryToChooseHero

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyTryToChooseHero];
inline bool TryToChooseHero::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TryToChooseHero::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TryToChooseHero::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TryToChooseHero::clear_msgid() {
  msgid_ = 28;
  clear_has_msgid();
}
inline ::GSToGC::MsgID TryToChooseHero::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.TryToChooseHero.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void TryToChooseHero::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.TryToChooseHero.msgid)
}

// optional int32 pos = 2;
inline bool TryToChooseHero::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TryToChooseHero::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TryToChooseHero::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TryToChooseHero::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 TryToChooseHero::pos() const {
  // @@protoc_insertion_point(field_get:GSToGC.TryToChooseHero.pos)
  return pos_;
}
inline void TryToChooseHero::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.TryToChooseHero.pos)
}

// optional int32 heroid = 3;
inline bool TryToChooseHero::has_heroid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TryToChooseHero::set_has_heroid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TryToChooseHero::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TryToChooseHero::clear_heroid() {
  heroid_ = 0;
  clear_has_heroid();
}
inline ::google::protobuf::int32 TryToChooseHero::heroid() const {
  // @@protoc_insertion_point(field_get:GSToGC.TryToChooseHero.heroid)
  return heroid_;
}
inline void TryToChooseHero::set_heroid(::google::protobuf::int32 value) {
  set_has_heroid();
  heroid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.TryToChooseHero.heroid)
}

// -------------------------------------------------------------------

// NotifyChooseHeroTimeEnd

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyChooseHeroTimeEnd];
inline bool NotifyChooseHeroTimeEnd::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyChooseHeroTimeEnd::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyChooseHeroTimeEnd::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyChooseHeroTimeEnd::clear_msgid() {
  msgid_ = 29;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyChooseHeroTimeEnd::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyChooseHeroTimeEnd.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyChooseHeroTimeEnd::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyChooseHeroTimeEnd.msgid)
}

// repeated .GSToGC.HeroPosInfo heroposinfo = 2;
inline int NotifyChooseHeroTimeEnd::heroposinfo_size() const {
  return heroposinfo_.size();
}
inline void NotifyChooseHeroTimeEnd::clear_heroposinfo() {
  heroposinfo_.Clear();
}
inline const ::GSToGC::HeroPosInfo& NotifyChooseHeroTimeEnd::heroposinfo(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyChooseHeroTimeEnd.heroposinfo)
  return heroposinfo_.Get(index);
}
inline ::GSToGC::HeroPosInfo* NotifyChooseHeroTimeEnd::mutable_heroposinfo(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyChooseHeroTimeEnd.heroposinfo)
  return heroposinfo_.Mutable(index);
}
inline ::GSToGC::HeroPosInfo* NotifyChooseHeroTimeEnd::add_heroposinfo() {
  // @@protoc_insertion_point(field_add:GSToGC.NotifyChooseHeroTimeEnd.heroposinfo)
  return heroposinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::HeroPosInfo >&
NotifyChooseHeroTimeEnd::heroposinfo() const {
  // @@protoc_insertion_point(field_list:GSToGC.NotifyChooseHeroTimeEnd.heroposinfo)
  return heroposinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::HeroPosInfo >*
NotifyChooseHeroTimeEnd::mutable_heroposinfo() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.NotifyChooseHeroTimeEnd.heroposinfo)
  return &heroposinfo_;
}

// -------------------------------------------------------------------

// SkillEntityInfo

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillEntityInfo];
inline bool SkillEntityInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillEntityInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillEntityInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillEntityInfo::clear_msgid() {
  msgid_ = 30;
  clear_has_msgid();
}
inline ::GSToGC::MsgID SkillEntityInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.SkillEntityInfo.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void SkillEntityInfo::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.SkillEntityInfo.msgid)
}

// optional int64 guid = 2;
inline bool SkillEntityInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillEntityInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillEntityInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillEntityInfo::clear_guid() {
  guid_ = GOOGLE_LONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::int64 SkillEntityInfo::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.SkillEntityInfo.guid)
  return guid_;
}
inline void SkillEntityInfo::set_guid(::google::protobuf::int64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.SkillEntityInfo.guid)
}

// optional int32 skillid = 3;
inline bool SkillEntityInfo::has_skillid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillEntityInfo::set_has_skillid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillEntityInfo::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillEntityInfo::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 SkillEntityInfo::skillid() const {
  // @@protoc_insertion_point(field_get:GSToGC.SkillEntityInfo.skillid)
  return skillid_;
}
inline void SkillEntityInfo::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.SkillEntityInfo.skillid)
}

// optional .GSToGC.Dir dir = 4;
inline bool SkillEntityInfo::has_dir() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SkillEntityInfo::set_has_dir() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SkillEntityInfo::clear_has_dir() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SkillEntityInfo::clear_dir() {
  if (dir_ != NULL) dir_->::GSToGC::Dir::Clear();
  clear_has_dir();
}
inline const ::GSToGC::Dir& SkillEntityInfo::dir() const {
  // @@protoc_insertion_point(field_get:GSToGC.SkillEntityInfo.dir)
  return dir_ != NULL ? *dir_ : *default_instance_->dir_;
}
inline ::GSToGC::Dir* SkillEntityInfo::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) dir_ = new ::GSToGC::Dir;
  // @@protoc_insertion_point(field_mutable:GSToGC.SkillEntityInfo.dir)
  return dir_;
}
inline ::GSToGC::Dir* SkillEntityInfo::release_dir() {
  clear_has_dir();
  ::GSToGC::Dir* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void SkillEntityInfo::set_allocated_dir(::GSToGC::Dir* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.SkillEntityInfo.dir)
}

// optional int64 targuid = 5;
inline bool SkillEntityInfo::has_targuid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SkillEntityInfo::set_has_targuid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SkillEntityInfo::clear_has_targuid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SkillEntityInfo::clear_targuid() {
  targuid_ = GOOGLE_LONGLONG(0);
  clear_has_targuid();
}
inline ::google::protobuf::int64 SkillEntityInfo::targuid() const {
  // @@protoc_insertion_point(field_get:GSToGC.SkillEntityInfo.targuid)
  return targuid_;
}
inline void SkillEntityInfo::set_targuid(::google::protobuf::int64 value) {
  set_has_targuid();
  targuid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.SkillEntityInfo.targuid)
}

// optional int64 uniqueid = 6;
inline bool SkillEntityInfo::has_uniqueid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SkillEntityInfo::set_has_uniqueid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SkillEntityInfo::clear_has_uniqueid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SkillEntityInfo::clear_uniqueid() {
  uniqueid_ = GOOGLE_LONGLONG(0);
  clear_has_uniqueid();
}
inline ::google::protobuf::int64 SkillEntityInfo::uniqueid() const {
  // @@protoc_insertion_point(field_get:GSToGC.SkillEntityInfo.uniqueid)
  return uniqueid_;
}
inline void SkillEntityInfo::set_uniqueid(::google::protobuf::int64 value) {
  set_has_uniqueid();
  uniqueid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.SkillEntityInfo.uniqueid)
}

// optional .GSToGC.Dir tardir = 7;
inline bool SkillEntityInfo::has_tardir() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SkillEntityInfo::set_has_tardir() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SkillEntityInfo::clear_has_tardir() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SkillEntityInfo::clear_tardir() {
  if (tardir_ != NULL) tardir_->::GSToGC::Dir::Clear();
  clear_has_tardir();
}
inline const ::GSToGC::Dir& SkillEntityInfo::tardir() const {
  // @@protoc_insertion_point(field_get:GSToGC.SkillEntityInfo.tardir)
  return tardir_ != NULL ? *tardir_ : *default_instance_->tardir_;
}
inline ::GSToGC::Dir* SkillEntityInfo::mutable_tardir() {
  set_has_tardir();
  if (tardir_ == NULL) tardir_ = new ::GSToGC::Dir;
  // @@protoc_insertion_point(field_mutable:GSToGC.SkillEntityInfo.tardir)
  return tardir_;
}
inline ::GSToGC::Dir* SkillEntityInfo::release_tardir() {
  clear_has_tardir();
  ::GSToGC::Dir* temp = tardir_;
  tardir_ = NULL;
  return temp;
}
inline void SkillEntityInfo::set_allocated_tardir(::GSToGC::Dir* tardir) {
  delete tardir_;
  tardir_ = tardir;
  if (tardir) {
    set_has_tardir();
  } else {
    clear_has_tardir();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.SkillEntityInfo.tardir)
}

// -------------------------------------------------------------------

// FPInfo

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyFightPropertyInfo];
inline bool FPInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FPInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FPInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FPInfo::clear_msgid() {
  msgid_ = 31;
  clear_has_msgid();
}
inline ::GSToGC::MsgID FPInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.FPInfo.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void FPInfo::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.FPInfo.msgid)
}

// optional uint64 guid = 2;
inline bool FPInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FPInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FPInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FPInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 FPInfo::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.FPInfo.guid)
  return guid_;
}
inline void FPInfo::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.FPInfo.guid)
}

// repeated int32 info = 3;
inline int FPInfo::info_size() const {
  return info_.size();
}
inline void FPInfo::clear_info() {
  info_.Clear();
}
inline ::google::protobuf::int32 FPInfo::info(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.FPInfo.info)
  return info_.Get(index);
}
inline void FPInfo::set_info(int index, ::google::protobuf::int32 value) {
  info_.Set(index, value);
  // @@protoc_insertion_point(field_set:GSToGC.FPInfo.info)
}
inline void FPInfo::add_info(::google::protobuf::int32 value) {
  info_.Add(value);
  // @@protoc_insertion_point(field_add:GSToGC.FPInfo.info)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
FPInfo::info() const {
  // @@protoc_insertion_point(field_list:GSToGC.FPInfo.info)
  return info_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
FPInfo::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.FPInfo.info)
  return &info_;
}

// -------------------------------------------------------------------

// NotifyHPInfo_HPInfo

// optional uint64 guid = 1;
inline bool NotifyHPInfo_HPInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyHPInfo_HPInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyHPInfo_HPInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyHPInfo_HPInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 NotifyHPInfo_HPInfo::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyHPInfo.HPInfo.guid)
  return guid_;
}
inline void NotifyHPInfo_HPInfo::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyHPInfo.HPInfo.guid)
}

// optional int32 curhp = 2;
inline bool NotifyHPInfo_HPInfo::has_curhp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyHPInfo_HPInfo::set_has_curhp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyHPInfo_HPInfo::clear_has_curhp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyHPInfo_HPInfo::clear_curhp() {
  curhp_ = 0;
  clear_has_curhp();
}
inline ::google::protobuf::int32 NotifyHPInfo_HPInfo::curhp() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyHPInfo.HPInfo.curhp)
  return curhp_;
}
inline void NotifyHPInfo_HPInfo::set_curhp(::google::protobuf::int32 value) {
  set_has_curhp();
  curhp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyHPInfo.HPInfo.curhp)
}

// optional int32 maxhp = 3;
inline bool NotifyHPInfo_HPInfo::has_maxhp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyHPInfo_HPInfo::set_has_maxhp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyHPInfo_HPInfo::clear_has_maxhp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyHPInfo_HPInfo::clear_maxhp() {
  maxhp_ = 0;
  clear_has_maxhp();
}
inline ::google::protobuf::int32 NotifyHPInfo_HPInfo::maxhp() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyHPInfo.HPInfo.maxhp)
  return maxhp_;
}
inline void NotifyHPInfo_HPInfo::set_maxhp(::google::protobuf::int32 value) {
  set_has_maxhp();
  maxhp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyHPInfo.HPInfo.maxhp)
}

// -------------------------------------------------------------------

// NotifyHPInfo

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyHPInfo];
inline bool NotifyHPInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyHPInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyHPInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyHPInfo::clear_msgid() {
  msgid_ = 34;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyHPInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyHPInfo.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyHPInfo::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyHPInfo.msgid)
}

// repeated .GSToGC.NotifyHPInfo.HPInfo hpinfo = 2;
inline int NotifyHPInfo::hpinfo_size() const {
  return hpinfo_.size();
}
inline void NotifyHPInfo::clear_hpinfo() {
  hpinfo_.Clear();
}
inline const ::GSToGC::NotifyHPInfo_HPInfo& NotifyHPInfo::hpinfo(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyHPInfo.hpinfo)
  return hpinfo_.Get(index);
}
inline ::GSToGC::NotifyHPInfo_HPInfo* NotifyHPInfo::mutable_hpinfo(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyHPInfo.hpinfo)
  return hpinfo_.Mutable(index);
}
inline ::GSToGC::NotifyHPInfo_HPInfo* NotifyHPInfo::add_hpinfo() {
  // @@protoc_insertion_point(field_add:GSToGC.NotifyHPInfo.hpinfo)
  return hpinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyHPInfo_HPInfo >&
NotifyHPInfo::hpinfo() const {
  // @@protoc_insertion_point(field_list:GSToGC.NotifyHPInfo.hpinfo)
  return hpinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyHPInfo_HPInfo >*
NotifyHPInfo::mutable_hpinfo() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.NotifyHPInfo.hpinfo)
  return &hpinfo_;
}

// -------------------------------------------------------------------

// NotifyMPInfo_MPInfo

// optional uint64 guid = 1;
inline bool NotifyMPInfo_MPInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyMPInfo_MPInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyMPInfo_MPInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyMPInfo_MPInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 NotifyMPInfo_MPInfo::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMPInfo.MPInfo.guid)
  return guid_;
}
inline void NotifyMPInfo_MPInfo::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyMPInfo.MPInfo.guid)
}

// optional int32 curmp = 2;
inline bool NotifyMPInfo_MPInfo::has_curmp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyMPInfo_MPInfo::set_has_curmp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyMPInfo_MPInfo::clear_has_curmp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyMPInfo_MPInfo::clear_curmp() {
  curmp_ = 0;
  clear_has_curmp();
}
inline ::google::protobuf::int32 NotifyMPInfo_MPInfo::curmp() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMPInfo.MPInfo.curmp)
  return curmp_;
}
inline void NotifyMPInfo_MPInfo::set_curmp(::google::protobuf::int32 value) {
  set_has_curmp();
  curmp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyMPInfo.MPInfo.curmp)
}

// optional int32 maxmp = 3;
inline bool NotifyMPInfo_MPInfo::has_maxmp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyMPInfo_MPInfo::set_has_maxmp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyMPInfo_MPInfo::clear_has_maxmp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyMPInfo_MPInfo::clear_maxmp() {
  maxmp_ = 0;
  clear_has_maxmp();
}
inline ::google::protobuf::int32 NotifyMPInfo_MPInfo::maxmp() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMPInfo.MPInfo.maxmp)
  return maxmp_;
}
inline void NotifyMPInfo_MPInfo::set_maxmp(::google::protobuf::int32 value) {
  set_has_maxmp();
  maxmp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyMPInfo.MPInfo.maxmp)
}

// -------------------------------------------------------------------

// NotifyMPInfo

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyMPInfo];
inline bool NotifyMPInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyMPInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyMPInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyMPInfo::clear_msgid() {
  msgid_ = 35;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyMPInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMPInfo.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyMPInfo::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyMPInfo.msgid)
}

// repeated .GSToGC.NotifyMPInfo.MPInfo mpinfo = 2;
inline int NotifyMPInfo::mpinfo_size() const {
  return mpinfo_.size();
}
inline void NotifyMPInfo::clear_mpinfo() {
  mpinfo_.Clear();
}
inline const ::GSToGC::NotifyMPInfo_MPInfo& NotifyMPInfo::mpinfo(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyMPInfo.mpinfo)
  return mpinfo_.Get(index);
}
inline ::GSToGC::NotifyMPInfo_MPInfo* NotifyMPInfo::mutable_mpinfo(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyMPInfo.mpinfo)
  return mpinfo_.Mutable(index);
}
inline ::GSToGC::NotifyMPInfo_MPInfo* NotifyMPInfo::add_mpinfo() {
  // @@protoc_insertion_point(field_add:GSToGC.NotifyMPInfo.mpinfo)
  return mpinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyMPInfo_MPInfo >&
NotifyMPInfo::mpinfo() const {
  // @@protoc_insertion_point(field_list:GSToGC.NotifyMPInfo.mpinfo)
  return mpinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyMPInfo_MPInfo >*
NotifyMPInfo::mutable_mpinfo() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.NotifyMPInfo.mpinfo)
  return &mpinfo_;
}

// -------------------------------------------------------------------

// NotifyHeroInfo

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyHeroInfo];
inline bool NotifyHeroInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyHeroInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyHeroInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyHeroInfo::clear_msgid() {
  msgid_ = 36;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyHeroInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyHeroInfo.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyHeroInfo::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyHeroInfo.msgid)
}

// optional uint64 guid = 2;
inline bool NotifyHeroInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyHeroInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyHeroInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyHeroInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 NotifyHeroInfo::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyHeroInfo.guid)
  return guid_;
}
inline void NotifyHeroInfo::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyHeroInfo.guid)
}

// optional int32 level = 3;
inline bool NotifyHeroInfo::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyHeroInfo::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyHeroInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyHeroInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 NotifyHeroInfo::level() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyHeroInfo.level)
  return level_;
}
inline void NotifyHeroInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyHeroInfo.level)
}

// optional int32 exp = 4;
inline bool NotifyHeroInfo::has_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyHeroInfo::set_has_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyHeroInfo::clear_has_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyHeroInfo::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 NotifyHeroInfo::exp() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyHeroInfo.exp)
  return exp_;
}
inline void NotifyHeroInfo::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyHeroInfo.exp)
}

// optional int32 fury = 5;
inline bool NotifyHeroInfo::has_fury() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifyHeroInfo::set_has_fury() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifyHeroInfo::clear_has_fury() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifyHeroInfo::clear_fury() {
  fury_ = 0;
  clear_has_fury();
}
inline ::google::protobuf::int32 NotifyHeroInfo::fury() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyHeroInfo.fury)
  return fury_;
}
inline void NotifyHeroInfo::set_fury(::google::protobuf::int32 value) {
  set_has_fury();
  fury_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyHeroInfo.fury)
}

// optional int32 absorb1 = 6;
inline bool NotifyHeroInfo::has_absorb1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NotifyHeroInfo::set_has_absorb1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NotifyHeroInfo::clear_has_absorb1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NotifyHeroInfo::clear_absorb1() {
  absorb1_ = 0;
  clear_has_absorb1();
}
inline ::google::protobuf::int32 NotifyHeroInfo::absorb1() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyHeroInfo.absorb1)
  return absorb1_;
}
inline void NotifyHeroInfo::set_absorb1(::google::protobuf::int32 value) {
  set_has_absorb1();
  absorb1_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyHeroInfo.absorb1)
}

// optional int32 absorb2 = 7;
inline bool NotifyHeroInfo::has_absorb2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void NotifyHeroInfo::set_has_absorb2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void NotifyHeroInfo::clear_has_absorb2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void NotifyHeroInfo::clear_absorb2() {
  absorb2_ = 0;
  clear_has_absorb2();
}
inline ::google::protobuf::int32 NotifyHeroInfo::absorb2() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyHeroInfo.absorb2)
  return absorb2_;
}
inline void NotifyHeroInfo::set_absorb2(::google::protobuf::int32 value) {
  set_has_absorb2();
  absorb2_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyHeroInfo.absorb2)
}

// -------------------------------------------------------------------

// NotifySkillInfo

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillInfo];
inline bool NotifySkillInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifySkillInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifySkillInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifySkillInfo::clear_msgid() {
  msgid_ = 39;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifySkillInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillInfo.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifySkillInfo::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillInfo.msgid)
}

// optional uint64 guid = 2;
inline bool NotifySkillInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifySkillInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifySkillInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifySkillInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 NotifySkillInfo::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillInfo.guid)
  return guid_;
}
inline void NotifySkillInfo::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillInfo.guid)
}

// optional int32 skillslot = 3;
inline bool NotifySkillInfo::has_skillslot() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifySkillInfo::set_has_skillslot() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifySkillInfo::clear_has_skillslot() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifySkillInfo::clear_skillslot() {
  skillslot_ = 0;
  clear_has_skillslot();
}
inline ::google::protobuf::int32 NotifySkillInfo::skillslot() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillInfo.skillslot)
  return skillslot_;
}
inline void NotifySkillInfo::set_skillslot(::google::protobuf::int32 value) {
  set_has_skillslot();
  skillslot_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillInfo.skillslot)
}

// optional int32 skillid = 4;
inline bool NotifySkillInfo::has_skillid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifySkillInfo::set_has_skillid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifySkillInfo::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifySkillInfo::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 NotifySkillInfo::skillid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillInfo.skillid)
  return skillid_;
}
inline void NotifySkillInfo::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillInfo.skillid)
}

// optional int32 time = 5;
inline bool NotifySkillInfo::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifySkillInfo::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifySkillInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifySkillInfo::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 NotifySkillInfo::time() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillInfo.time)
  return time_;
}
inline void NotifySkillInfo::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillInfo.time)
}

// -------------------------------------------------------------------

// BattleFinish

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBattleFinish];
inline bool BattleFinish::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleFinish::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleFinish::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleFinish::clear_msgid() {
  msgid_ = 40;
  clear_has_msgid();
}
inline ::GSToGC::MsgID BattleFinish::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleFinish.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void BattleFinish::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BattleFinish.msgid)
}

// optional uint64 bulidguid = 2;
inline bool BattleFinish::has_bulidguid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleFinish::set_has_bulidguid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleFinish::clear_has_bulidguid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleFinish::clear_bulidguid() {
  bulidguid_ = GOOGLE_ULONGLONG(0);
  clear_has_bulidguid();
}
inline ::google::protobuf::uint64 BattleFinish::bulidguid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BattleFinish.bulidguid)
  return bulidguid_;
}
inline void BattleFinish::set_bulidguid(::google::protobuf::uint64 value) {
  set_has_bulidguid();
  bulidguid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BattleFinish.bulidguid)
}

// -------------------------------------------------------------------

// Exp

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyExpInfo];
inline bool Exp::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Exp::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Exp::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Exp::clear_msgid() {
  msgid_ = 41;
  clear_has_msgid();
}
inline ::GSToGC::MsgID Exp::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.Exp.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void Exp::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.Exp.msgid)
}

// optional uint64 guid = 2;
inline bool Exp::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Exp::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Exp::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Exp::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 Exp::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.Exp.guid)
  return guid_;
}
inline void Exp::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.Exp.guid)
}

// optional int32 exp = 3;
inline bool Exp::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Exp::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Exp::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Exp::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 Exp::exp() const {
  // @@protoc_insertion_point(field_get:GSToGC.Exp.exp)
  return exp_;
}
inline void Exp::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.Exp.exp)
}

// -------------------------------------------------------------------

// LevelInfo

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyHeroLevelInfo];
inline bool LevelInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LevelInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LevelInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LevelInfo::clear_msgid() {
  msgid_ = 42;
  clear_has_msgid();
}
inline ::GSToGC::MsgID LevelInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.LevelInfo.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void LevelInfo::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.LevelInfo.msgid)
}

// optional uint64 guid = 2;
inline bool LevelInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LevelInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LevelInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LevelInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 LevelInfo::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.LevelInfo.guid)
  return guid_;
}
inline void LevelInfo::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.LevelInfo.guid)
}

// optional int32 level = 3;
inline bool LevelInfo::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LevelInfo::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LevelInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LevelInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 LevelInfo::level() const {
  // @@protoc_insertion_point(field_get:GSToGC.LevelInfo.level)
  return level_;
}
inline void LevelInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.LevelInfo.level)
}

// -------------------------------------------------------------------

// AbsorbBegin

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyAbsorbBegin];
inline bool AbsorbBegin::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AbsorbBegin::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AbsorbBegin::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AbsorbBegin::clear_msgid() {
  msgid_ = 43;
  clear_has_msgid();
}
inline ::GSToGC::MsgID AbsorbBegin::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.AbsorbBegin.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void AbsorbBegin::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.AbsorbBegin.msgid)
}

// optional uint64 guid = 2;
inline bool AbsorbBegin::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AbsorbBegin::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AbsorbBegin::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AbsorbBegin::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 AbsorbBegin::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.AbsorbBegin.guid)
  return guid_;
}
inline void AbsorbBegin::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.AbsorbBegin.guid)
}

// optional uint64 monsterguid = 3;
inline bool AbsorbBegin::has_monsterguid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AbsorbBegin::set_has_monsterguid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AbsorbBegin::clear_has_monsterguid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AbsorbBegin::clear_monsterguid() {
  monsterguid_ = GOOGLE_ULONGLONG(0);
  clear_has_monsterguid();
}
inline ::google::protobuf::uint64 AbsorbBegin::monsterguid() const {
  // @@protoc_insertion_point(field_get:GSToGC.AbsorbBegin.monsterguid)
  return monsterguid_;
}
inline void AbsorbBegin::set_monsterguid(::google::protobuf::uint64 value) {
  set_has_monsterguid();
  monsterguid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.AbsorbBegin.monsterguid)
}

// -------------------------------------------------------------------

// AbsorbRes

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyAbsorbMonsterResult];
inline bool AbsorbRes::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AbsorbRes::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AbsorbRes::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AbsorbRes::clear_msgid() {
  msgid_ = 44;
  clear_has_msgid();
}
inline ::GSToGC::MsgID AbsorbRes::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.AbsorbRes.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void AbsorbRes::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.AbsorbRes.msgid)
}

// optional uint64 guid = 2;
inline bool AbsorbRes::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AbsorbRes::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AbsorbRes::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AbsorbRes::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 AbsorbRes::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.AbsorbRes.guid)
  return guid_;
}
inline void AbsorbRes::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.AbsorbRes.guid)
}

// optional bool res = 3;
inline bool AbsorbRes::has_res() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AbsorbRes::set_has_res() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AbsorbRes::clear_has_res() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AbsorbRes::clear_res() {
  res_ = false;
  clear_has_res();
}
inline bool AbsorbRes::res() const {
  // @@protoc_insertion_point(field_get:GSToGC.AbsorbRes.res)
  return res_;
}
inline void AbsorbRes::set_res(bool value) {
  set_has_res();
  res_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.AbsorbRes.res)
}

// optional int32 absorb1 = 4;
inline bool AbsorbRes::has_absorb1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AbsorbRes::set_has_absorb1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AbsorbRes::clear_has_absorb1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AbsorbRes::clear_absorb1() {
  absorb1_ = 0;
  clear_has_absorb1();
}
inline ::google::protobuf::int32 AbsorbRes::absorb1() const {
  // @@protoc_insertion_point(field_get:GSToGC.AbsorbRes.absorb1)
  return absorb1_;
}
inline void AbsorbRes::set_absorb1(::google::protobuf::int32 value) {
  set_has_absorb1();
  absorb1_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.AbsorbRes.absorb1)
}

// optional int32 absorb2 = 5;
inline bool AbsorbRes::has_absorb2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AbsorbRes::set_has_absorb2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AbsorbRes::clear_has_absorb2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AbsorbRes::clear_absorb2() {
  absorb2_ = 0;
  clear_has_absorb2();
}
inline ::google::protobuf::int32 AbsorbRes::absorb2() const {
  // @@protoc_insertion_point(field_get:GSToGC.AbsorbRes.absorb2)
  return absorb2_;
}
inline void AbsorbRes::set_absorb2(::google::protobuf::int32 value) {
  set_has_absorb2();
  absorb2_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.AbsorbRes.absorb2)
}

// -------------------------------------------------------------------

// CancelAbsorb

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyCancelAbsorbSkill];
inline bool CancelAbsorb::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CancelAbsorb::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CancelAbsorb::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CancelAbsorb::clear_msgid() {
  msgid_ = 45;
  clear_has_msgid();
}
inline ::GSToGC::MsgID CancelAbsorb::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.CancelAbsorb.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void CancelAbsorb::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.CancelAbsorb.msgid)
}

// optional int32 monsterid = 2;
inline bool CancelAbsorb::has_monsterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CancelAbsorb::set_has_monsterid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CancelAbsorb::clear_has_monsterid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CancelAbsorb::clear_monsterid() {
  monsterid_ = 0;
  clear_has_monsterid();
}
inline ::google::protobuf::int32 CancelAbsorb::monsterid() const {
  // @@protoc_insertion_point(field_get:GSToGC.CancelAbsorb.monsterid)
  return monsterid_;
}
inline void CancelAbsorb::set_monsterid(::google::protobuf::int32 value) {
  set_has_monsterid();
  monsterid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.CancelAbsorb.monsterid)
}

// -------------------------------------------------------------------

// UserGameInfo

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyUserGameInfo];
inline bool UserGameInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserGameInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserGameInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserGameInfo::clear_msgid() {
  msgid_ = 46;
  clear_has_msgid();
}
inline ::GSToGC::MsgID UserGameInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserGameInfo.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void UserGameInfo::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserGameInfo.msgid)
}

// optional int32 headid = 2;
inline bool UserGameInfo::has_headid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserGameInfo::set_has_headid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserGameInfo::clear_has_headid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserGameInfo::clear_headid() {
  headid_ = 0;
  clear_has_headid();
}
inline ::google::protobuf::int32 UserGameInfo::headid() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserGameInfo.headid)
  return headid_;
}
inline void UserGameInfo::set_headid(::google::protobuf::int32 value) {
  set_has_headid();
  headid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserGameInfo.headid)
}

// optional string nickname = 3;
inline bool UserGameInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserGameInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserGameInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserGameInfo::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& UserGameInfo::nickname() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserGameInfo.nickname)
  return *nickname_;
}
inline void UserGameInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.UserGameInfo.nickname)
}
inline void UserGameInfo::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.UserGameInfo.nickname)
}
inline void UserGameInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.UserGameInfo.nickname)
}
inline ::std::string* UserGameInfo::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.UserGameInfo.nickname)
  return nickname_;
}
inline ::std::string* UserGameInfo::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserGameInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.UserGameInfo.nickname)
}

// optional int32 level = 4;
inline bool UserGameInfo::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserGameInfo::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserGameInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserGameInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 UserGameInfo::level() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserGameInfo.level)
  return level_;
}
inline void UserGameInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserGameInfo.level)
}

// optional int32 upgradeexp = 5;
inline bool UserGameInfo::has_upgradeexp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserGameInfo::set_has_upgradeexp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserGameInfo::clear_has_upgradeexp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserGameInfo::clear_upgradeexp() {
  upgradeexp_ = 0;
  clear_has_upgradeexp();
}
inline ::google::protobuf::int32 UserGameInfo::upgradeexp() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserGameInfo.upgradeexp)
  return upgradeexp_;
}
inline void UserGameInfo::set_upgradeexp(::google::protobuf::int32 value) {
  set_has_upgradeexp();
  upgradeexp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserGameInfo.upgradeexp)
}

// optional int32 curexp = 6;
inline bool UserGameInfo::has_curexp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserGameInfo::set_has_curexp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserGameInfo::clear_has_curexp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserGameInfo::clear_curexp() {
  curexp_ = 0;
  clear_has_curexp();
}
inline ::google::protobuf::int32 UserGameInfo::curexp() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserGameInfo.curexp)
  return curexp_;
}
inline void UserGameInfo::set_curexp(::google::protobuf::int32 value) {
  set_has_curexp();
  curexp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserGameInfo.curexp)
}

// optional int32 totalgameinns = 7;
inline bool UserGameInfo::has_totalgameinns() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserGameInfo::set_has_totalgameinns() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserGameInfo::clear_has_totalgameinns() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserGameInfo::clear_totalgameinns() {
  totalgameinns_ = 0;
  clear_has_totalgameinns();
}
inline ::google::protobuf::int32 UserGameInfo::totalgameinns() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserGameInfo.totalgameinns)
  return totalgameinns_;
}
inline void UserGameInfo::set_totalgameinns(::google::protobuf::int32 value) {
  set_has_totalgameinns();
  totalgameinns_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserGameInfo.totalgameinns)
}

// optional int32 totalwintimes = 8;
inline bool UserGameInfo::has_totalwintimes() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UserGameInfo::set_has_totalwintimes() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UserGameInfo::clear_has_totalwintimes() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UserGameInfo::clear_totalwintimes() {
  totalwintimes_ = 0;
  clear_has_totalwintimes();
}
inline ::google::protobuf::int32 UserGameInfo::totalwintimes() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserGameInfo.totalwintimes)
  return totalwintimes_;
}
inline void UserGameInfo::set_totalwintimes(::google::protobuf::int32 value) {
  set_has_totalwintimes();
  totalwintimes_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserGameInfo.totalwintimes)
}

// optional int32 herokills = 9;
inline bool UserGameInfo::has_herokills() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UserGameInfo::set_has_herokills() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UserGameInfo::clear_has_herokills() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UserGameInfo::clear_herokills() {
  herokills_ = 0;
  clear_has_herokills();
}
inline ::google::protobuf::int32 UserGameInfo::herokills() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserGameInfo.herokills)
  return herokills_;
}
inline void UserGameInfo::set_herokills(::google::protobuf::int32 value) {
  set_has_herokills();
  herokills_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserGameInfo.herokills)
}

// optional int32 destorybuildings = 10;
inline bool UserGameInfo::has_destorybuildings() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UserGameInfo::set_has_destorybuildings() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UserGameInfo::clear_has_destorybuildings() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UserGameInfo::clear_destorybuildings() {
  destorybuildings_ = 0;
  clear_has_destorybuildings();
}
inline ::google::protobuf::int32 UserGameInfo::destorybuildings() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserGameInfo.destorybuildings)
  return destorybuildings_;
}
inline void UserGameInfo::set_destorybuildings(::google::protobuf::int32 value) {
  set_has_destorybuildings();
  destorybuildings_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserGameInfo.destorybuildings)
}

// optional int32 deadtimes = 11;
inline bool UserGameInfo::has_deadtimes() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void UserGameInfo::set_has_deadtimes() {
  _has_bits_[0] |= 0x00000400u;
}
inline void UserGameInfo::clear_has_deadtimes() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void UserGameInfo::clear_deadtimes() {
  deadtimes_ = 0;
  clear_has_deadtimes();
}
inline ::google::protobuf::int32 UserGameInfo::deadtimes() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserGameInfo.deadtimes)
  return deadtimes_;
}
inline void UserGameInfo::set_deadtimes(::google::protobuf::int32 value) {
  set_has_deadtimes();
  deadtimes_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserGameInfo.deadtimes)
}

// optional int32 total_achnum = 12;
inline bool UserGameInfo::has_total_achnum() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void UserGameInfo::set_has_total_achnum() {
  _has_bits_[0] |= 0x00000800u;
}
inline void UserGameInfo::clear_has_total_achnum() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void UserGameInfo::clear_total_achnum() {
  total_achnum_ = 0;
  clear_has_total_achnum();
}
inline ::google::protobuf::int32 UserGameInfo::total_achnum() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserGameInfo.total_achnum)
  return total_achnum_;
}
inline void UserGameInfo::set_total_achnum(::google::protobuf::int32 value) {
  set_has_total_achnum();
  total_achnum_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserGameInfo.total_achnum)
}

// optional int32 achnum = 13;
inline bool UserGameInfo::has_achnum() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void UserGameInfo::set_has_achnum() {
  _has_bits_[0] |= 0x00001000u;
}
inline void UserGameInfo::clear_has_achnum() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void UserGameInfo::clear_achnum() {
  achnum_ = 0;
  clear_has_achnum();
}
inline ::google::protobuf::int32 UserGameInfo::achnum() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserGameInfo.achnum)
  return achnum_;
}
inline void UserGameInfo::set_achnum(::google::protobuf::int32 value) {
  set_has_achnum();
  achnum_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserGameInfo.achnum)
}

// optional int32 vipscore = 14;
inline bool UserGameInfo::has_vipscore() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void UserGameInfo::set_has_vipscore() {
  _has_bits_[0] |= 0x00002000u;
}
inline void UserGameInfo::clear_has_vipscore() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void UserGameInfo::clear_vipscore() {
  vipscore_ = 0;
  clear_has_vipscore();
}
inline ::google::protobuf::int32 UserGameInfo::vipscore() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserGameInfo.vipscore)
  return vipscore_;
}
inline void UserGameInfo::set_vipscore(::google::protobuf::int32 value) {
  set_has_vipscore();
  vipscore_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserGameInfo.vipscore)
}

// optional int32 assistnum = 15;
inline bool UserGameInfo::has_assistnum() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void UserGameInfo::set_has_assistnum() {
  _has_bits_[0] |= 0x00004000u;
}
inline void UserGameInfo::clear_has_assistnum() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void UserGameInfo::clear_assistnum() {
  assistnum_ = 0;
  clear_has_assistnum();
}
inline ::google::protobuf::int32 UserGameInfo::assistnum() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserGameInfo.assistnum)
  return assistnum_;
}
inline void UserGameInfo::set_assistnum(::google::protobuf::int32 value) {
  set_has_assistnum();
  assistnum_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserGameInfo.assistnum)
}

// optional int32 ladderscore = 16;
inline bool UserGameInfo::has_ladderscore() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void UserGameInfo::set_has_ladderscore() {
  _has_bits_[0] |= 0x00008000u;
}
inline void UserGameInfo::clear_has_ladderscore() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void UserGameInfo::clear_ladderscore() {
  ladderscore_ = 0;
  clear_has_ladderscore();
}
inline ::google::protobuf::int32 UserGameInfo::ladderscore() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserGameInfo.ladderscore)
  return ladderscore_;
}
inline void UserGameInfo::set_ladderscore(::google::protobuf::int32 value) {
  set_has_ladderscore();
  ladderscore_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserGameInfo.ladderscore)
}

// optional string guildname = 17;
inline bool UserGameInfo::has_guildname() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void UserGameInfo::set_has_guildname() {
  _has_bits_[0] |= 0x00010000u;
}
inline void UserGameInfo::clear_has_guildname() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void UserGameInfo::clear_guildname() {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_->clear();
  }
  clear_has_guildname();
}
inline const ::std::string& UserGameInfo::guildname() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserGameInfo.guildname)
  return *guildname_;
}
inline void UserGameInfo::set_guildname(const ::std::string& value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.UserGameInfo.guildname)
}
inline void UserGameInfo::set_guildname(const char* value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.UserGameInfo.guildname)
}
inline void UserGameInfo::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.UserGameInfo.guildname)
}
inline ::std::string* UserGameInfo::mutable_guildname() {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.UserGameInfo.guildname)
  return guildname_;
}
inline ::std::string* UserGameInfo::release_guildname() {
  clear_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guildname_;
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserGameInfo::set_allocated_guildname(::std::string* guildname) {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guildname_;
  }
  if (guildname) {
    set_has_guildname();
    guildname_ = guildname;
  } else {
    clear_has_guildname();
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.UserGameInfo.guildname)
}

// optional int64 exp_adtime = 18;
inline bool UserGameInfo::has_exp_adtime() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void UserGameInfo::set_has_exp_adtime() {
  _has_bits_[0] |= 0x00020000u;
}
inline void UserGameInfo::clear_has_exp_adtime() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void UserGameInfo::clear_exp_adtime() {
  exp_adtime_ = GOOGLE_LONGLONG(0);
  clear_has_exp_adtime();
}
inline ::google::protobuf::int64 UserGameInfo::exp_adtime() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserGameInfo.exp_adtime)
  return exp_adtime_;
}
inline void UserGameInfo::set_exp_adtime(::google::protobuf::int64 value) {
  set_has_exp_adtime();
  exp_adtime_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserGameInfo.exp_adtime)
}

// optional int64 gold_addtime = 19;
inline bool UserGameInfo::has_gold_addtime() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void UserGameInfo::set_has_gold_addtime() {
  _has_bits_[0] |= 0x00040000u;
}
inline void UserGameInfo::clear_has_gold_addtime() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void UserGameInfo::clear_gold_addtime() {
  gold_addtime_ = GOOGLE_LONGLONG(0);
  clear_has_gold_addtime();
}
inline ::google::protobuf::int64 UserGameInfo::gold_addtime() const {
  // @@protoc_insertion_point(field_get:GSToGC.UserGameInfo.gold_addtime)
  return gold_addtime_;
}
inline void UserGameInfo::set_gold_addtime(::google::protobuf::int64 value) {
  set_has_gold_addtime();
  gold_addtime_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.UserGameInfo.gold_addtime)
}

// -------------------------------------------------------------------

// HeroKills

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyHeroKills];
inline bool HeroKills::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroKills::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroKills::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroKills::clear_msgid() {
  msgid_ = 47;
  clear_has_msgid();
}
inline ::GSToGC::MsgID HeroKills::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.HeroKills.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void HeroKills::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HeroKills.msgid)
}

// optional uint64 guid = 2;
inline bool HeroKills::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroKills::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroKills::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroKills::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 HeroKills::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.HeroKills.guid)
  return guid_;
}
inline void HeroKills::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HeroKills.guid)
}

// optional int32 kills = 3;
inline bool HeroKills::has_kills() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeroKills::set_has_kills() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeroKills::clear_has_kills() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeroKills::clear_kills() {
  kills_ = 0;
  clear_has_kills();
}
inline ::google::protobuf::int32 HeroKills::kills() const {
  // @@protoc_insertion_point(field_get:GSToGC.HeroKills.kills)
  return kills_;
}
inline void HeroKills::set_kills(::google::protobuf::int32 value) {
  set_has_kills();
  kills_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HeroKills.kills)
}

// -------------------------------------------------------------------

// CurDeadTimes

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyCurDeadTimes];
inline bool CurDeadTimes::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CurDeadTimes::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CurDeadTimes::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CurDeadTimes::clear_msgid() {
  msgid_ = 48;
  clear_has_msgid();
}
inline ::GSToGC::MsgID CurDeadTimes::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.CurDeadTimes.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void CurDeadTimes::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.CurDeadTimes.msgid)
}

// optional uint64 objguid = 2;
inline bool CurDeadTimes::has_objguid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CurDeadTimes::set_has_objguid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CurDeadTimes::clear_has_objguid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CurDeadTimes::clear_objguid() {
  objguid_ = GOOGLE_ULONGLONG(0);
  clear_has_objguid();
}
inline ::google::protobuf::uint64 CurDeadTimes::objguid() const {
  // @@protoc_insertion_point(field_get:GSToGC.CurDeadTimes.objguid)
  return objguid_;
}
inline void CurDeadTimes::set_objguid(::google::protobuf::uint64 value) {
  set_has_objguid();
  objguid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.CurDeadTimes.objguid)
}

// optional int32 deadtimes = 3;
inline bool CurDeadTimes::has_deadtimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CurDeadTimes::set_has_deadtimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CurDeadTimes::clear_has_deadtimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CurDeadTimes::clear_deadtimes() {
  deadtimes_ = 0;
  clear_has_deadtimes();
}
inline ::google::protobuf::int32 CurDeadTimes::deadtimes() const {
  // @@protoc_insertion_point(field_get:GSToGC.CurDeadTimes.deadtimes)
  return deadtimes_;
}
inline void CurDeadTimes::set_deadtimes(::google::protobuf::int32 value) {
  set_has_deadtimes();
  deadtimes_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.CurDeadTimes.deadtimes)
}

// optional int32 killer_camp = 4;
inline bool CurDeadTimes::has_killer_camp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CurDeadTimes::set_has_killer_camp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CurDeadTimes::clear_has_killer_camp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CurDeadTimes::clear_killer_camp() {
  killer_camp_ = 0;
  clear_has_killer_camp();
}
inline ::google::protobuf::int32 CurDeadTimes::killer_camp() const {
  // @@protoc_insertion_point(field_get:GSToGC.CurDeadTimes.killer_camp)
  return killer_camp_;
}
inline void CurDeadTimes::set_killer_camp(::google::protobuf::int32 value) {
  set_has_killer_camp();
  killer_camp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.CurDeadTimes.killer_camp)
}

// optional uint64 reasonheroguid = 5;
inline bool CurDeadTimes::has_reasonheroguid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CurDeadTimes::set_has_reasonheroguid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CurDeadTimes::clear_has_reasonheroguid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CurDeadTimes::clear_reasonheroguid() {
  reasonheroguid_ = GOOGLE_ULONGLONG(0);
  clear_has_reasonheroguid();
}
inline ::google::protobuf::uint64 CurDeadTimes::reasonheroguid() const {
  // @@protoc_insertion_point(field_get:GSToGC.CurDeadTimes.reasonheroguid)
  return reasonheroguid_;
}
inline void CurDeadTimes::set_reasonheroguid(::google::protobuf::uint64 value) {
  set_has_reasonheroguid();
  reasonheroguid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.CurDeadTimes.reasonheroguid)
}

// optional bool ifAced = 6;
inline bool CurDeadTimes::has_ifaced() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CurDeadTimes::set_has_ifaced() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CurDeadTimes::clear_has_ifaced() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CurDeadTimes::clear_ifaced() {
  ifaced_ = false;
  clear_has_ifaced();
}
inline bool CurDeadTimes::ifaced() const {
  // @@protoc_insertion_point(field_get:GSToGC.CurDeadTimes.ifAced)
  return ifaced_;
}
inline void CurDeadTimes::set_ifaced(bool value) {
  set_has_ifaced();
  ifaced_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.CurDeadTimes.ifAced)
}

// optional int32 camp = 7;
inline bool CurDeadTimes::has_camp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CurDeadTimes::set_has_camp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CurDeadTimes::clear_has_camp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CurDeadTimes::clear_camp() {
  camp_ = 0;
  clear_has_camp();
}
inline ::google::protobuf::int32 CurDeadTimes::camp() const {
  // @@protoc_insertion_point(field_get:GSToGC.CurDeadTimes.camp)
  return camp_;
}
inline void CurDeadTimes::set_camp(::google::protobuf::int32 value) {
  set_has_camp();
  camp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.CurDeadTimes.camp)
}

// optional int32 herostate = 8;
inline bool CurDeadTimes::has_herostate() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CurDeadTimes::set_has_herostate() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CurDeadTimes::clear_has_herostate() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CurDeadTimes::clear_herostate() {
  herostate_ = 0;
  clear_has_herostate();
}
inline ::google::protobuf::int32 CurDeadTimes::herostate() const {
  // @@protoc_insertion_point(field_get:GSToGC.CurDeadTimes.herostate)
  return herostate_;
}
inline void CurDeadTimes::set_herostate(::google::protobuf::int32 value) {
  set_has_herostate();
  herostate_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.CurDeadTimes.herostate)
}

// optional int32 herotitle = 9;
inline bool CurDeadTimes::has_herotitle() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CurDeadTimes::set_has_herotitle() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CurDeadTimes::clear_has_herotitle() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CurDeadTimes::clear_herotitle() {
  herotitle_ = 0;
  clear_has_herotitle();
}
inline ::google::protobuf::int32 CurDeadTimes::herotitle() const {
  // @@protoc_insertion_point(field_get:GSToGC.CurDeadTimes.herotitle)
  return herotitle_;
}
inline void CurDeadTimes::set_herotitle(::google::protobuf::int32 value) {
  set_has_herotitle();
  herotitle_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.CurDeadTimes.herotitle)
}

// -------------------------------------------------------------------

// CurCP

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyCurCP];
inline bool CurCP::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CurCP::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CurCP::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CurCP::clear_msgid() {
  msgid_ = 49;
  clear_has_msgid();
}
inline ::GSToGC::MsgID CurCP::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.CurCP.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void CurCP::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.CurCP.msgid)
}

// optional uint64 targetguid = 2;
inline bool CurCP::has_targetguid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CurCP::set_has_targetguid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CurCP::clear_has_targetguid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CurCP::clear_targetguid() {
  targetguid_ = GOOGLE_ULONGLONG(0);
  clear_has_targetguid();
}
inline ::google::protobuf::uint64 CurCP::targetguid() const {
  // @@protoc_insertion_point(field_get:GSToGC.CurCP.targetguid)
  return targetguid_;
}
inline void CurCP::set_targetguid(::google::protobuf::uint64 value) {
  set_has_targetguid();
  targetguid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.CurCP.targetguid)
}

// optional int32 person_cp = 3;
inline bool CurCP::has_person_cp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CurCP::set_has_person_cp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CurCP::clear_has_person_cp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CurCP::clear_person_cp() {
  person_cp_ = 0;
  clear_has_person_cp();
}
inline ::google::protobuf::int32 CurCP::person_cp() const {
  // @@protoc_insertion_point(field_get:GSToGC.CurCP.person_cp)
  return person_cp_;
}
inline void CurCP::set_person_cp(::google::protobuf::int32 value) {
  set_has_person_cp();
  person_cp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.CurCP.person_cp)
}

// optional int32 team_cp = 4;
inline bool CurCP::has_team_cp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CurCP::set_has_team_cp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CurCP::clear_has_team_cp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CurCP::clear_team_cp() {
  team_cp_ = 0;
  clear_has_team_cp();
}
inline ::google::protobuf::int32 CurCP::team_cp() const {
  // @@protoc_insertion_point(field_get:GSToGC.CurCP.team_cp)
  return team_cp_;
}
inline void CurCP::set_team_cp(::google::protobuf::int32 value) {
  set_has_team_cp();
  team_cp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.CurCP.team_cp)
}

// -------------------------------------------------------------------

// CurAtkSpeed_SpeedInfo

// optional uint64 guid = 1;
inline bool CurAtkSpeed_SpeedInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CurAtkSpeed_SpeedInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CurAtkSpeed_SpeedInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CurAtkSpeed_SpeedInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 CurAtkSpeed_SpeedInfo::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.CurAtkSpeed.SpeedInfo.guid)
  return guid_;
}
inline void CurAtkSpeed_SpeedInfo::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.CurAtkSpeed.SpeedInfo.guid)
}

// optional int32 speed = 2;
inline bool CurAtkSpeed_SpeedInfo::has_speed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CurAtkSpeed_SpeedInfo::set_has_speed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CurAtkSpeed_SpeedInfo::clear_has_speed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CurAtkSpeed_SpeedInfo::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
inline ::google::protobuf::int32 CurAtkSpeed_SpeedInfo::speed() const {
  // @@protoc_insertion_point(field_get:GSToGC.CurAtkSpeed.SpeedInfo.speed)
  return speed_;
}
inline void CurAtkSpeed_SpeedInfo::set_speed(::google::protobuf::int32 value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.CurAtkSpeed.SpeedInfo.speed)
}

// -------------------------------------------------------------------

// CurAtkSpeed

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyCurAtkSpeed];
inline bool CurAtkSpeed::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CurAtkSpeed::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CurAtkSpeed::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CurAtkSpeed::clear_msgid() {
  msgid_ = 50;
  clear_has_msgid();
}
inline ::GSToGC::MsgID CurAtkSpeed::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.CurAtkSpeed.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void CurAtkSpeed::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.CurAtkSpeed.msgid)
}

// repeated .GSToGC.CurAtkSpeed.SpeedInfo info = 2;
inline int CurAtkSpeed::info_size() const {
  return info_.size();
}
inline void CurAtkSpeed::clear_info() {
  info_.Clear();
}
inline const ::GSToGC::CurAtkSpeed_SpeedInfo& CurAtkSpeed::info(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.CurAtkSpeed.info)
  return info_.Get(index);
}
inline ::GSToGC::CurAtkSpeed_SpeedInfo* CurAtkSpeed::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.CurAtkSpeed.info)
  return info_.Mutable(index);
}
inline ::GSToGC::CurAtkSpeed_SpeedInfo* CurAtkSpeed::add_info() {
  // @@protoc_insertion_point(field_add:GSToGC.CurAtkSpeed.info)
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::CurAtkSpeed_SpeedInfo >&
CurAtkSpeed::info() const {
  // @@protoc_insertion_point(field_list:GSToGC.CurAtkSpeed.info)
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::CurAtkSpeed_SpeedInfo >*
CurAtkSpeed::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.CurAtkSpeed.info)
  return &info_;
}

// -------------------------------------------------------------------

// FuryVal

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyFuryValue];
inline bool FuryVal::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FuryVal::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FuryVal::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FuryVal::clear_msgid() {
  msgid_ = 51;
  clear_has_msgid();
}
inline ::GSToGC::MsgID FuryVal::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.FuryVal.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void FuryVal::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.FuryVal.msgid)
}

// optional uint64 guid = 2;
inline bool FuryVal::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FuryVal::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FuryVal::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FuryVal::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 FuryVal::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.FuryVal.guid)
  return guid_;
}
inline void FuryVal::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.FuryVal.guid)
}

// optional int32 fury = 3;
inline bool FuryVal::has_fury() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FuryVal::set_has_fury() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FuryVal::clear_has_fury() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FuryVal::clear_fury() {
  fury_ = 0;
  clear_has_fury();
}
inline ::google::protobuf::int32 FuryVal::fury() const {
  // @@protoc_insertion_point(field_get:GSToGC.FuryVal.fury)
  return fury_;
}
inline void FuryVal::set_fury(::google::protobuf::int32 value) {
  set_has_fury();
  fury_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.FuryVal.fury)
}

// -------------------------------------------------------------------

// FuryState

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyFuryState];
inline bool FuryState::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FuryState::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FuryState::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FuryState::clear_msgid() {
  msgid_ = 52;
  clear_has_msgid();
}
inline ::GSToGC::MsgID FuryState::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.FuryState.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void FuryState::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.FuryState.msgid)
}

// optional uint64 guid = 2;
inline bool FuryState::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FuryState::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FuryState::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FuryState::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 FuryState::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.FuryState.guid)
  return guid_;
}
inline void FuryState::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.FuryState.guid)
}

// optional int32 state = 3;
inline bool FuryState::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FuryState::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FuryState::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FuryState::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 FuryState::state() const {
  // @@protoc_insertion_point(field_get:GSToGC.FuryState.state)
  return state_;
}
inline void FuryState::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.FuryState.state)
}

// -------------------------------------------------------------------

// NotifyHeroReborn

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyHeroReborn];
inline bool NotifyHeroReborn::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyHeroReborn::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyHeroReborn::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyHeroReborn::clear_msgid() {
  msgid_ = 110;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyHeroReborn::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyHeroReborn.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyHeroReborn::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyHeroReborn.msgid)
}

// -------------------------------------------------------------------

// RebornTimes

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyHeroRebornTimes];
inline bool RebornTimes::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RebornTimes::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RebornTimes::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RebornTimes::clear_msgid() {
  msgid_ = 53;
  clear_has_msgid();
}
inline ::GSToGC::MsgID RebornTimes::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.RebornTimes.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void RebornTimes::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RebornTimes.msgid)
}

// optional uint64 masterguid = 2;
inline bool RebornTimes::has_masterguid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RebornTimes::set_has_masterguid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RebornTimes::clear_has_masterguid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RebornTimes::clear_masterguid() {
  masterguid_ = GOOGLE_ULONGLONG(0);
  clear_has_masterguid();
}
inline ::google::protobuf::uint64 RebornTimes::masterguid() const {
  // @@protoc_insertion_point(field_get:GSToGC.RebornTimes.masterguid)
  return masterguid_;
}
inline void RebornTimes::set_masterguid(::google::protobuf::uint64 value) {
  set_has_masterguid();
  masterguid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RebornTimes.masterguid)
}

// optional int64 sendtimes = 3;
inline bool RebornTimes::has_sendtimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RebornTimes::set_has_sendtimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RebornTimes::clear_has_sendtimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RebornTimes::clear_sendtimes() {
  sendtimes_ = GOOGLE_LONGLONG(0);
  clear_has_sendtimes();
}
inline ::google::protobuf::int64 RebornTimes::sendtimes() const {
  // @@protoc_insertion_point(field_get:GSToGC.RebornTimes.sendtimes)
  return sendtimes_;
}
inline void RebornTimes::set_sendtimes(::google::protobuf::int64 value) {
  set_has_sendtimes();
  sendtimes_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RebornTimes.sendtimes)
}

// optional int64 gold = 4;
inline bool RebornTimes::has_gold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RebornTimes::set_has_gold() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RebornTimes::clear_has_gold() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RebornTimes::clear_gold() {
  gold_ = GOOGLE_LONGLONG(0);
  clear_has_gold();
}
inline ::google::protobuf::int64 RebornTimes::gold() const {
  // @@protoc_insertion_point(field_get:GSToGC.RebornTimes.gold)
  return gold_;
}
inline void RebornTimes::set_gold(::google::protobuf::int64 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RebornTimes.gold)
}

// optional int32 remain_times = 5;
inline bool RebornTimes::has_remain_times() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RebornTimes::set_has_remain_times() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RebornTimes::clear_has_remain_times() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RebornTimes::clear_remain_times() {
  remain_times_ = 0;
  clear_has_remain_times();
}
inline ::google::protobuf::int32 RebornTimes::remain_times() const {
  // @@protoc_insertion_point(field_get:GSToGC.RebornTimes.remain_times)
  return remain_times_;
}
inline void RebornTimes::set_remain_times(::google::protobuf::int32 value) {
  set_has_remain_times();
  remain_times_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RebornTimes.remain_times)
}

// optional int32 reborn_time = 6;
inline bool RebornTimes::has_reborn_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RebornTimes::set_has_reborn_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RebornTimes::clear_has_reborn_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RebornTimes::clear_reborn_time() {
  reborn_time_ = 0;
  clear_has_reborn_time();
}
inline ::google::protobuf::int32 RebornTimes::reborn_time() const {
  // @@protoc_insertion_point(field_get:GSToGC.RebornTimes.reborn_time)
  return reborn_time_;
}
inline void RebornTimes::set_reborn_time(::google::protobuf::int32 value) {
  set_has_reborn_time();
  reborn_time_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RebornTimes.reborn_time)
}

// -------------------------------------------------------------------

// RebornSuccess

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBuyRebornSuccess];
inline bool RebornSuccess::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RebornSuccess::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RebornSuccess::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RebornSuccess::clear_msgid() {
  msgid_ = 54;
  clear_has_msgid();
}
inline ::GSToGC::MsgID RebornSuccess::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.RebornSuccess.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void RebornSuccess::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RebornSuccess.msgid)
}

// optional uint64 guid = 2;
inline bool RebornSuccess::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RebornSuccess::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RebornSuccess::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RebornSuccess::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 RebornSuccess::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.RebornSuccess.guid)
  return guid_;
}
inline void RebornSuccess::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RebornSuccess.guid)
}

// -------------------------------------------------------------------

// PersonCPChange

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyPersonalCPChange];
inline bool PersonCPChange::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PersonCPChange::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PersonCPChange::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PersonCPChange::clear_msgid() {
  msgid_ = 56;
  clear_has_msgid();
}
inline ::GSToGC::MsgID PersonCPChange::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.PersonCPChange.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void PersonCPChange::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.PersonCPChange.msgid)
}

// optional uint64 guid = 2;
inline bool PersonCPChange::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PersonCPChange::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PersonCPChange::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PersonCPChange::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 PersonCPChange::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.PersonCPChange.guid)
  return guid_;
}
inline void PersonCPChange::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.PersonCPChange.guid)
}

// optional int32 cp = 3;
inline bool PersonCPChange::has_cp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PersonCPChange::set_has_cp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PersonCPChange::clear_has_cp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PersonCPChange::clear_cp() {
  cp_ = 0;
  clear_has_cp();
}
inline ::google::protobuf::int32 PersonCPChange::cp() const {
  // @@protoc_insertion_point(field_get:GSToGC.PersonCPChange.cp)
  return cp_;
}
inline void PersonCPChange::set_cp(::google::protobuf::int32 value) {
  set_has_cp();
  cp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.PersonCPChange.cp)
}

// -------------------------------------------------------------------

// BroadcastBatteleRes_ResInfo

// optional uint64 objguid = 1;
inline bool BroadcastBatteleRes_ResInfo::has_objguid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BroadcastBatteleRes_ResInfo::set_has_objguid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BroadcastBatteleRes_ResInfo::clear_has_objguid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BroadcastBatteleRes_ResInfo::clear_objguid() {
  objguid_ = GOOGLE_ULONGLONG(0);
  clear_has_objguid();
}
inline ::google::protobuf::uint64 BroadcastBatteleRes_ResInfo::objguid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBatteleRes.ResInfo.objguid)
  return objguid_;
}
inline void BroadcastBatteleRes_ResInfo::set_objguid(::google::protobuf::uint64 value) {
  set_has_objguid();
  objguid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBatteleRes.ResInfo.objguid)
}

// optional int32 heroid = 2;
inline bool BroadcastBatteleRes_ResInfo::has_heroid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BroadcastBatteleRes_ResInfo::set_has_heroid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BroadcastBatteleRes_ResInfo::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BroadcastBatteleRes_ResInfo::clear_heroid() {
  heroid_ = 0;
  clear_has_heroid();
}
inline ::google::protobuf::int32 BroadcastBatteleRes_ResInfo::heroid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBatteleRes.ResInfo.heroid)
  return heroid_;
}
inline void BroadcastBatteleRes_ResInfo::set_heroid(::google::protobuf::int32 value) {
  set_has_heroid();
  heroid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBatteleRes.ResInfo.heroid)
}

// optional string nickname = 3;
inline bool BroadcastBatteleRes_ResInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BroadcastBatteleRes_ResInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BroadcastBatteleRes_ResInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BroadcastBatteleRes_ResInfo::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& BroadcastBatteleRes_ResInfo::nickname() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBatteleRes.ResInfo.nickname)
  return *nickname_;
}
inline void BroadcastBatteleRes_ResInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBatteleRes.ResInfo.nickname)
}
inline void BroadcastBatteleRes_ResInfo::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.BroadcastBatteleRes.ResInfo.nickname)
}
inline void BroadcastBatteleRes_ResInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.BroadcastBatteleRes.ResInfo.nickname)
}
inline ::std::string* BroadcastBatteleRes_ResInfo::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.BroadcastBatteleRes.ResInfo.nickname)
  return nickname_;
}
inline ::std::string* BroadcastBatteleRes_ResInfo::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BroadcastBatteleRes_ResInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.BroadcastBatteleRes.ResInfo.nickname)
}

// optional int32 curlevel = 4;
inline bool BroadcastBatteleRes_ResInfo::has_curlevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BroadcastBatteleRes_ResInfo::set_has_curlevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BroadcastBatteleRes_ResInfo::clear_has_curlevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BroadcastBatteleRes_ResInfo::clear_curlevel() {
  curlevel_ = 0;
  clear_has_curlevel();
}
inline ::google::protobuf::int32 BroadcastBatteleRes_ResInfo::curlevel() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBatteleRes.ResInfo.curlevel)
  return curlevel_;
}
inline void BroadcastBatteleRes_ResInfo::set_curlevel(::google::protobuf::int32 value) {
  set_has_curlevel();
  curlevel_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBatteleRes.ResInfo.curlevel)
}

// optional int32 killtimes = 5;
inline bool BroadcastBatteleRes_ResInfo::has_killtimes() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BroadcastBatteleRes_ResInfo::set_has_killtimes() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BroadcastBatteleRes_ResInfo::clear_has_killtimes() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BroadcastBatteleRes_ResInfo::clear_killtimes() {
  killtimes_ = 0;
  clear_has_killtimes();
}
inline ::google::protobuf::int32 BroadcastBatteleRes_ResInfo::killtimes() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBatteleRes.ResInfo.killtimes)
  return killtimes_;
}
inline void BroadcastBatteleRes_ResInfo::set_killtimes(::google::protobuf::int32 value) {
  set_has_killtimes();
  killtimes_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBatteleRes.ResInfo.killtimes)
}

// optional int32 deadtimes = 6;
inline bool BroadcastBatteleRes_ResInfo::has_deadtimes() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BroadcastBatteleRes_ResInfo::set_has_deadtimes() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BroadcastBatteleRes_ResInfo::clear_has_deadtimes() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BroadcastBatteleRes_ResInfo::clear_deadtimes() {
  deadtimes_ = 0;
  clear_has_deadtimes();
}
inline ::google::protobuf::int32 BroadcastBatteleRes_ResInfo::deadtimes() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBatteleRes.ResInfo.deadtimes)
  return deadtimes_;
}
inline void BroadcastBatteleRes_ResInfo::set_deadtimes(::google::protobuf::int32 value) {
  set_has_deadtimes();
  deadtimes_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBatteleRes.ResInfo.deadtimes)
}

// optional int32 asstimes = 7;
inline bool BroadcastBatteleRes_ResInfo::has_asstimes() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BroadcastBatteleRes_ResInfo::set_has_asstimes() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BroadcastBatteleRes_ResInfo::clear_has_asstimes() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BroadcastBatteleRes_ResInfo::clear_asstimes() {
  asstimes_ = 0;
  clear_has_asstimes();
}
inline ::google::protobuf::int32 BroadcastBatteleRes_ResInfo::asstimes() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBatteleRes.ResInfo.asstimes)
  return asstimes_;
}
inline void BroadcastBatteleRes_ResInfo::set_asstimes(::google::protobuf::int32 value) {
  set_has_asstimes();
  asstimes_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBatteleRes.ResInfo.asstimes)
}

// optional int32 totalcp = 8;
inline bool BroadcastBatteleRes_ResInfo::has_totalcp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BroadcastBatteleRes_ResInfo::set_has_totalcp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BroadcastBatteleRes_ResInfo::clear_has_totalcp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BroadcastBatteleRes_ResInfo::clear_totalcp() {
  totalcp_ = 0;
  clear_has_totalcp();
}
inline ::google::protobuf::int32 BroadcastBatteleRes_ResInfo::totalcp() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBatteleRes.ResInfo.totalcp)
  return totalcp_;
}
inline void BroadcastBatteleRes_ResInfo::set_totalcp(::google::protobuf::int32 value) {
  set_has_totalcp();
  totalcp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBatteleRes.ResInfo.totalcp)
}

// optional int32 lasthit = 9;
inline bool BroadcastBatteleRes_ResInfo::has_lasthit() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BroadcastBatteleRes_ResInfo::set_has_lasthit() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BroadcastBatteleRes_ResInfo::clear_has_lasthit() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BroadcastBatteleRes_ResInfo::clear_lasthit() {
  lasthit_ = 0;
  clear_has_lasthit();
}
inline ::google::protobuf::int32 BroadcastBatteleRes_ResInfo::lasthit() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBatteleRes.ResInfo.lasthit)
  return lasthit_;
}
inline void BroadcastBatteleRes_ResInfo::set_lasthit(::google::protobuf::int32 value) {
  set_has_lasthit();
  lasthit_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBatteleRes.ResInfo.lasthit)
}

// optional int32 camgpid = 10;
inline bool BroadcastBatteleRes_ResInfo::has_camgpid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BroadcastBatteleRes_ResInfo::set_has_camgpid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BroadcastBatteleRes_ResInfo::clear_has_camgpid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BroadcastBatteleRes_ResInfo::clear_camgpid() {
  camgpid_ = 0;
  clear_has_camgpid();
}
inline ::google::protobuf::int32 BroadcastBatteleRes_ResInfo::camgpid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBatteleRes.ResInfo.camgpid)
  return camgpid_;
}
inline void BroadcastBatteleRes_ResInfo::set_camgpid(::google::protobuf::int32 value) {
  set_has_camgpid();
  camgpid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBatteleRes.ResInfo.camgpid)
}

// -------------------------------------------------------------------

// BroadcastBatteleRes

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_BroadCurBattleResult];
inline bool BroadcastBatteleRes::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BroadcastBatteleRes::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BroadcastBatteleRes::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BroadcastBatteleRes::clear_msgid() {
  msgid_ = 57;
  clear_has_msgid();
}
inline ::GSToGC::MsgID BroadcastBatteleRes::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBatteleRes.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void BroadcastBatteleRes::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBatteleRes.msgid)
}

// optional bool ifwin = 2;
inline bool BroadcastBatteleRes::has_ifwin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BroadcastBatteleRes::set_has_ifwin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BroadcastBatteleRes::clear_has_ifwin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BroadcastBatteleRes::clear_ifwin() {
  ifwin_ = false;
  clear_has_ifwin();
}
inline bool BroadcastBatteleRes::ifwin() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBatteleRes.ifwin)
  return ifwin_;
}
inline void BroadcastBatteleRes::set_ifwin(bool value) {
  set_has_ifwin();
  ifwin_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBatteleRes.ifwin)
}

// repeated .GSToGC.BroadcastBatteleRes.ResInfo resinfo = 3;
inline int BroadcastBatteleRes::resinfo_size() const {
  return resinfo_.size();
}
inline void BroadcastBatteleRes::clear_resinfo() {
  resinfo_.Clear();
}
inline const ::GSToGC::BroadcastBatteleRes_ResInfo& BroadcastBatteleRes::resinfo(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBatteleRes.resinfo)
  return resinfo_.Get(index);
}
inline ::GSToGC::BroadcastBatteleRes_ResInfo* BroadcastBatteleRes::mutable_resinfo(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.BroadcastBatteleRes.resinfo)
  return resinfo_.Mutable(index);
}
inline ::GSToGC::BroadcastBatteleRes_ResInfo* BroadcastBatteleRes::add_resinfo() {
  // @@protoc_insertion_point(field_add:GSToGC.BroadcastBatteleRes.resinfo)
  return resinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::BroadcastBatteleRes_ResInfo >&
BroadcastBatteleRes::resinfo() const {
  // @@protoc_insertion_point(field_list:GSToGC.BroadcastBatteleRes.resinfo)
  return resinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::BroadcastBatteleRes_ResInfo >*
BroadcastBatteleRes::mutable_resinfo() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.BroadcastBatteleRes.resinfo)
  return &resinfo_;
}

// -------------------------------------------------------------------

// BroadcastBattelePersonalRes

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_BroadBattlePersonalResult];
inline bool BroadcastBattelePersonalRes::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BroadcastBattelePersonalRes::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BroadcastBattelePersonalRes::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BroadcastBattelePersonalRes::clear_msgid() {
  msgid_ = 233;
  clear_has_msgid();
}
inline ::GSToGC::MsgID BroadcastBattelePersonalRes::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBattelePersonalRes.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void BroadcastBattelePersonalRes::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBattelePersonalRes.msgid)
}

// optional int64 got_gold = 2;
inline bool BroadcastBattelePersonalRes::has_got_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BroadcastBattelePersonalRes::set_has_got_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BroadcastBattelePersonalRes::clear_has_got_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BroadcastBattelePersonalRes::clear_got_gold() {
  got_gold_ = GOOGLE_LONGLONG(0);
  clear_has_got_gold();
}
inline ::google::protobuf::int64 BroadcastBattelePersonalRes::got_gold() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBattelePersonalRes.got_gold)
  return got_gold_;
}
inline void BroadcastBattelePersonalRes::set_got_gold(::google::protobuf::int64 value) {
  set_has_got_gold();
  got_gold_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBattelePersonalRes.got_gold)
}

// optional int32 old_lv = 3;
inline bool BroadcastBattelePersonalRes::has_old_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BroadcastBattelePersonalRes::set_has_old_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BroadcastBattelePersonalRes::clear_has_old_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BroadcastBattelePersonalRes::clear_old_lv() {
  old_lv_ = 0;
  clear_has_old_lv();
}
inline ::google::protobuf::int32 BroadcastBattelePersonalRes::old_lv() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBattelePersonalRes.old_lv)
  return old_lv_;
}
inline void BroadcastBattelePersonalRes::set_old_lv(::google::protobuf::int32 value) {
  set_has_old_lv();
  old_lv_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBattelePersonalRes.old_lv)
}

// optional int32 old_exp = 4;
inline bool BroadcastBattelePersonalRes::has_old_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BroadcastBattelePersonalRes::set_has_old_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BroadcastBattelePersonalRes::clear_has_old_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BroadcastBattelePersonalRes::clear_old_exp() {
  old_exp_ = 0;
  clear_has_old_exp();
}
inline ::google::protobuf::int32 BroadcastBattelePersonalRes::old_exp() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBattelePersonalRes.old_exp)
  return old_exp_;
}
inline void BroadcastBattelePersonalRes::set_old_exp(::google::protobuf::int32 value) {
  set_has_old_exp();
  old_exp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBattelePersonalRes.old_exp)
}

// optional int32 cur_lv = 5;
inline bool BroadcastBattelePersonalRes::has_cur_lv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BroadcastBattelePersonalRes::set_has_cur_lv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BroadcastBattelePersonalRes::clear_has_cur_lv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BroadcastBattelePersonalRes::clear_cur_lv() {
  cur_lv_ = 0;
  clear_has_cur_lv();
}
inline ::google::protobuf::int32 BroadcastBattelePersonalRes::cur_lv() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBattelePersonalRes.cur_lv)
  return cur_lv_;
}
inline void BroadcastBattelePersonalRes::set_cur_lv(::google::protobuf::int32 value) {
  set_has_cur_lv();
  cur_lv_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBattelePersonalRes.cur_lv)
}

// optional int32 cur_exp = 6;
inline bool BroadcastBattelePersonalRes::has_cur_exp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BroadcastBattelePersonalRes::set_has_cur_exp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BroadcastBattelePersonalRes::clear_has_cur_exp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BroadcastBattelePersonalRes::clear_cur_exp() {
  cur_exp_ = 0;
  clear_has_cur_exp();
}
inline ::google::protobuf::int32 BroadcastBattelePersonalRes::cur_exp() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBattelePersonalRes.cur_exp)
  return cur_exp_;
}
inline void BroadcastBattelePersonalRes::set_cur_exp(::google::protobuf::int32 value) {
  set_has_cur_exp();
  cur_exp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBattelePersonalRes.cur_exp)
}

// optional int32 got_exp = 7;
inline bool BroadcastBattelePersonalRes::has_got_exp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BroadcastBattelePersonalRes::set_has_got_exp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BroadcastBattelePersonalRes::clear_has_got_exp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BroadcastBattelePersonalRes::clear_got_exp() {
  got_exp_ = 0;
  clear_has_got_exp();
}
inline ::google::protobuf::int32 BroadcastBattelePersonalRes::got_exp() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBattelePersonalRes.got_exp)
  return got_exp_;
}
inline void BroadcastBattelePersonalRes::set_got_exp(::google::protobuf::int32 value) {
  set_has_got_exp();
  got_exp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBattelePersonalRes.got_exp)
}

// -------------------------------------------------------------------

// BroadcastBuildingDestory

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_BroadBuildingDestroyByWho];
inline bool BroadcastBuildingDestory::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BroadcastBuildingDestory::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BroadcastBuildingDestory::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BroadcastBuildingDestory::clear_msgid() {
  msgid_ = 58;
  clear_has_msgid();
}
inline ::GSToGC::MsgID BroadcastBuildingDestory::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBuildingDestory.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void BroadcastBuildingDestory::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBuildingDestory.msgid)
}

// optional uint64 buildingguid = 2;
inline bool BroadcastBuildingDestory::has_buildingguid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BroadcastBuildingDestory::set_has_buildingguid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BroadcastBuildingDestory::clear_has_buildingguid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BroadcastBuildingDestory::clear_buildingguid() {
  buildingguid_ = GOOGLE_ULONGLONG(0);
  clear_has_buildingguid();
}
inline ::google::protobuf::uint64 BroadcastBuildingDestory::buildingguid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBuildingDestory.buildingguid)
  return buildingguid_;
}
inline void BroadcastBuildingDestory::set_buildingguid(::google::protobuf::uint64 value) {
  set_has_buildingguid();
  buildingguid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBuildingDestory.buildingguid)
}

// optional int32 building_camp = 3;
inline bool BroadcastBuildingDestory::has_building_camp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BroadcastBuildingDestory::set_has_building_camp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BroadcastBuildingDestory::clear_has_building_camp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BroadcastBuildingDestory::clear_building_camp() {
  building_camp_ = 0;
  clear_has_building_camp();
}
inline ::google::protobuf::int32 BroadcastBuildingDestory::building_camp() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBuildingDestory.building_camp)
  return building_camp_;
}
inline void BroadcastBuildingDestory::set_building_camp(::google::protobuf::int32 value) {
  set_has_building_camp();
  building_camp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBuildingDestory.building_camp)
}

// optional uint64 killer_guid = 4;
inline bool BroadcastBuildingDestory::has_killer_guid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BroadcastBuildingDestory::set_has_killer_guid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BroadcastBuildingDestory::clear_has_killer_guid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BroadcastBuildingDestory::clear_killer_guid() {
  killer_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_killer_guid();
}
inline ::google::protobuf::uint64 BroadcastBuildingDestory::killer_guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBuildingDestory.killer_guid)
  return killer_guid_;
}
inline void BroadcastBuildingDestory::set_killer_guid(::google::protobuf::uint64 value) {
  set_has_killer_guid();
  killer_guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBuildingDestory.killer_guid)
}

// optional int32 killer_camp = 5;
inline bool BroadcastBuildingDestory::has_killer_camp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BroadcastBuildingDestory::set_has_killer_camp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BroadcastBuildingDestory::clear_has_killer_camp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BroadcastBuildingDestory::clear_killer_camp() {
  killer_camp_ = 0;
  clear_has_killer_camp();
}
inline ::google::protobuf::int32 BroadcastBuildingDestory::killer_camp() const {
  // @@protoc_insertion_point(field_get:GSToGC.BroadcastBuildingDestory.killer_camp)
  return killer_camp_;
}
inline void BroadcastBuildingDestory::set_killer_camp(::google::protobuf::int32 value) {
  set_has_killer_camp();
  killer_camp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BroadcastBuildingDestory.killer_camp)
}

// -------------------------------------------------------------------

// HeroMoveInfo

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBattleSeatPosInfo];
inline bool HeroMoveInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroMoveInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroMoveInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroMoveInfo::clear_msgid() {
  msgid_ = 9;
  clear_has_msgid();
}
inline ::GSToGC::MsgID HeroMoveInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.HeroMoveInfo.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void HeroMoveInfo::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HeroMoveInfo.msgid)
}

// optional uint64 guid = 2;
inline bool HeroMoveInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroMoveInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroMoveInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroMoveInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 HeroMoveInfo::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.HeroMoveInfo.guid)
  return guid_;
}
inline void HeroMoveInfo::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HeroMoveInfo.guid)
}

// optional .GSToGC.Dir dir = 3;
inline bool HeroMoveInfo::has_dir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeroMoveInfo::set_has_dir() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeroMoveInfo::clear_has_dir() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeroMoveInfo::clear_dir() {
  if (dir_ != NULL) dir_->::GSToGC::Dir::Clear();
  clear_has_dir();
}
inline const ::GSToGC::Dir& HeroMoveInfo::dir() const {
  // @@protoc_insertion_point(field_get:GSToGC.HeroMoveInfo.dir)
  return dir_ != NULL ? *dir_ : *default_instance_->dir_;
}
inline ::GSToGC::Dir* HeroMoveInfo::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) dir_ = new ::GSToGC::Dir;
  // @@protoc_insertion_point(field_mutable:GSToGC.HeroMoveInfo.dir)
  return dir_;
}
inline ::GSToGC::Dir* HeroMoveInfo::release_dir() {
  clear_has_dir();
  ::GSToGC::Dir* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void HeroMoveInfo::set_allocated_dir(::GSToGC::Dir* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.HeroMoveInfo.dir)
}

// optional .GSToGC.Pos pos = 4;
inline bool HeroMoveInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HeroMoveInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HeroMoveInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HeroMoveInfo::clear_pos() {
  if (pos_ != NULL) pos_->::GSToGC::Pos::Clear();
  clear_has_pos();
}
inline const ::GSToGC::Pos& HeroMoveInfo::pos() const {
  // @@protoc_insertion_point(field_get:GSToGC.HeroMoveInfo.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::GSToGC::Pos* HeroMoveInfo::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::GSToGC::Pos;
  // @@protoc_insertion_point(field_mutable:GSToGC.HeroMoveInfo.pos)
  return pos_;
}
inline ::GSToGC::Pos* HeroMoveInfo::release_pos() {
  clear_has_pos();
  ::GSToGC::Pos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void HeroMoveInfo::set_allocated_pos(::GSToGC::Pos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.HeroMoveInfo.pos)
}

// -------------------------------------------------------------------

// PlayFinishVedio

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_BroadcastPlayFinishVedio];
inline bool PlayFinishVedio::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayFinishVedio::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayFinishVedio::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayFinishVedio::clear_msgid() {
  msgid_ = 61;
  clear_has_msgid();
}
inline ::GSToGC::MsgID PlayFinishVedio::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.PlayFinishVedio.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void PlayFinishVedio::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.PlayFinishVedio.msgid)
}

// optional int32 wincamp = 2;
inline bool PlayFinishVedio::has_wincamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayFinishVedio::set_has_wincamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayFinishVedio::clear_has_wincamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayFinishVedio::clear_wincamp() {
  wincamp_ = 0;
  clear_has_wincamp();
}
inline ::google::protobuf::int32 PlayFinishVedio::wincamp() const {
  // @@protoc_insertion_point(field_get:GSToGC.PlayFinishVedio.wincamp)
  return wincamp_;
}
inline void PlayFinishVedio::set_wincamp(::google::protobuf::int32 value) {
  set_has_wincamp();
  wincamp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.PlayFinishVedio.wincamp)
}

// optional int32 losercamp = 3;
inline bool PlayFinishVedio::has_losercamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayFinishVedio::set_has_losercamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayFinishVedio::clear_has_losercamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayFinishVedio::clear_losercamp() {
  losercamp_ = 0;
  clear_has_losercamp();
}
inline ::google::protobuf::int32 PlayFinishVedio::losercamp() const {
  // @@protoc_insertion_point(field_get:GSToGC.PlayFinishVedio.losercamp)
  return losercamp_;
}
inline void PlayFinishVedio::set_losercamp(::google::protobuf::int32 value) {
  set_has_losercamp();
  losercamp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.PlayFinishVedio.losercamp)
}

// optional int32 mapid = 4;
inline bool PlayFinishVedio::has_mapid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayFinishVedio::set_has_mapid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayFinishVedio::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayFinishVedio::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 PlayFinishVedio::mapid() const {
  // @@protoc_insertion_point(field_get:GSToGC.PlayFinishVedio.mapid)
  return mapid_;
}
inline void PlayFinishVedio::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.PlayFinishVedio.mapid)
}

// optional uint64 guid = 5;
inline bool PlayFinishVedio::has_guid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayFinishVedio::set_has_guid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayFinishVedio::clear_has_guid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayFinishVedio::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 PlayFinishVedio::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.PlayFinishVedio.guid)
  return guid_;
}
inline void PlayFinishVedio::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.PlayFinishVedio.guid)
}

// -------------------------------------------------------------------

// LeaveBattleSuccess

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyLeaveBattleSuccess];
inline bool LeaveBattleSuccess::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LeaveBattleSuccess::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LeaveBattleSuccess::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LeaveBattleSuccess::clear_msgid() {
  msgid_ = 62;
  clear_has_msgid();
}
inline ::GSToGC::MsgID LeaveBattleSuccess::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.LeaveBattleSuccess.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void LeaveBattleSuccess::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.LeaveBattleSuccess.msgid)
}

// -------------------------------------------------------------------

// BornSoler

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBornSolder];
inline bool BornSoler::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BornSoler::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BornSoler::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BornSoler::clear_msgid() {
  msgid_ = 63;
  clear_has_msgid();
}
inline ::GSToGC::MsgID BornSoler::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BornSoler.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void BornSoler::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BornSoler.msgid)
}

// optional int32 type = 2;
inline bool BornSoler::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BornSoler::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BornSoler::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BornSoler::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 BornSoler::type() const {
  // @@protoc_insertion_point(field_get:GSToGC.BornSoler.type)
  return type_;
}
inline void BornSoler::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BornSoler.type)
}

// optional int32 camp = 3;
inline bool BornSoler::has_camp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BornSoler::set_has_camp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BornSoler::clear_has_camp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BornSoler::clear_camp() {
  camp_ = 0;
  clear_has_camp();
}
inline ::google::protobuf::int32 BornSoler::camp() const {
  // @@protoc_insertion_point(field_get:GSToGC.BornSoler.camp)
  return camp_;
}
inline void BornSoler::set_camp(::google::protobuf::int32 value) {
  set_has_camp();
  camp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BornSoler.camp)
}

// optional .GSToGC.Pos pos = 4;
inline bool BornSoler::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BornSoler::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BornSoler::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BornSoler::clear_pos() {
  if (pos_ != NULL) pos_->::GSToGC::Pos::Clear();
  clear_has_pos();
}
inline const ::GSToGC::Pos& BornSoler::pos() const {
  // @@protoc_insertion_point(field_get:GSToGC.BornSoler.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::GSToGC::Pos* BornSoler::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::GSToGC::Pos;
  // @@protoc_insertion_point(field_mutable:GSToGC.BornSoler.pos)
  return pos_;
}
inline ::GSToGC::Pos* BornSoler::release_pos() {
  clear_has_pos();
  ::GSToGC::Pos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void BornSoler::set_allocated_pos(::GSToGC::Pos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.BornSoler.pos)
}

// optional uint64 guid = 5;
inline bool BornSoler::has_guid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BornSoler::set_has_guid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BornSoler::clear_has_guid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BornSoler::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 BornSoler::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BornSoler.guid)
  return guid_;
}
inline void BornSoler::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BornSoler.guid)
}

// -------------------------------------------------------------------

// SkillEnd

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillEnd];
inline bool SkillEnd::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillEnd::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillEnd::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillEnd::clear_msgid() {
  msgid_ = 64;
  clear_has_msgid();
}
inline ::GSToGC::MsgID SkillEnd::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.SkillEnd.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void SkillEnd::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.SkillEnd.msgid)
}

// optional int64 guid = 2;
inline bool SkillEnd::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillEnd::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillEnd::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillEnd::clear_guid() {
  guid_ = GOOGLE_LONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::int64 SkillEnd::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.SkillEnd.guid)
  return guid_;
}
inline void SkillEnd::set_guid(::google::protobuf::int64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.SkillEnd.guid)
}

// optional int32 skillid = 3;
inline bool SkillEnd::has_skillid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillEnd::set_has_skillid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillEnd::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillEnd::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 SkillEnd::skillid() const {
  // @@protoc_insertion_point(field_get:GSToGC.SkillEnd.skillid)
  return skillid_;
}
inline void SkillEnd::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.SkillEnd.skillid)
}

// optional int64 targuid = 4;
inline bool SkillEnd::has_targuid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SkillEnd::set_has_targuid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SkillEnd::clear_has_targuid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SkillEnd::clear_targuid() {
  targuid_ = GOOGLE_LONGLONG(0);
  clear_has_targuid();
}
inline ::google::protobuf::int64 SkillEnd::targuid() const {
  // @@protoc_insertion_point(field_get:GSToGC.SkillEnd.targuid)
  return targuid_;
}
inline void SkillEnd::set_targuid(::google::protobuf::int64 value) {
  set_has_targuid();
  targuid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.SkillEnd.targuid)
}

// optional int32 uniqueid = 5;
inline bool SkillEnd::has_uniqueid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SkillEnd::set_has_uniqueid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SkillEnd::clear_has_uniqueid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SkillEnd::clear_uniqueid() {
  uniqueid_ = 0;
  clear_has_uniqueid();
}
inline ::google::protobuf::int32 SkillEnd::uniqueid() const {
  // @@protoc_insertion_point(field_get:GSToGC.SkillEnd.uniqueid)
  return uniqueid_;
}
inline void SkillEnd::set_uniqueid(::google::protobuf::int32 value) {
  set_has_uniqueid();
  uniqueid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.SkillEnd.uniqueid)
}

// -------------------------------------------------------------------

// AltarBSIco

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyAltarBSIco];
inline bool AltarBSIco::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AltarBSIco::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AltarBSIco::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AltarBSIco::clear_msgid() {
  msgid_ = 65;
  clear_has_msgid();
}
inline ::GSToGC::MsgID AltarBSIco::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.AltarBSIco.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void AltarBSIco::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.AltarBSIco.msgid)
}

// optional int32 index = 2;
inline bool AltarBSIco::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AltarBSIco::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AltarBSIco::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AltarBSIco::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 AltarBSIco::index() const {
  // @@protoc_insertion_point(field_get:GSToGC.AltarBSIco.index)
  return index_;
}
inline void AltarBSIco::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.AltarBSIco.index)
}

// optional int32 type = 3;
inline bool AltarBSIco::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AltarBSIco::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AltarBSIco::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AltarBSIco::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 AltarBSIco::type() const {
  // @@protoc_insertion_point(field_get:GSToGC.AltarBSIco.type)
  return type_;
}
inline void AltarBSIco::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.AltarBSIco.type)
}

// optional int32 optype = 4;
inline bool AltarBSIco::has_optype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AltarBSIco::set_has_optype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AltarBSIco::clear_has_optype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AltarBSIco::clear_optype() {
  optype_ = 0;
  clear_has_optype();
}
inline ::google::protobuf::int32 AltarBSIco::optype() const {
  // @@protoc_insertion_point(field_get:GSToGC.AltarBSIco.optype)
  return optype_;
}
inline void AltarBSIco::set_optype(::google::protobuf::int32 value) {
  set_has_optype();
  optype_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.AltarBSIco.optype)
}

// -------------------------------------------------------------------

// GOReleaseSkill

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGameObjectReleaseSkill];
inline bool GOReleaseSkill::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GOReleaseSkill::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GOReleaseSkill::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GOReleaseSkill::clear_msgid() {
  msgid_ = 67;
  clear_has_msgid();
}
inline ::GSToGC::MsgID GOReleaseSkill::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GOReleaseSkill.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void GOReleaseSkill::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GOReleaseSkill.msgid)
}

// optional uint64 guid = 2;
inline bool GOReleaseSkill::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GOReleaseSkill::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GOReleaseSkill::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GOReleaseSkill::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 GOReleaseSkill::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GOReleaseSkill.guid)
  return guid_;
}
inline void GOReleaseSkill::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GOReleaseSkill.guid)
}

// optional int32 skillid = 3;
inline bool GOReleaseSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GOReleaseSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GOReleaseSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GOReleaseSkill::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 GOReleaseSkill::skillid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GOReleaseSkill.skillid)
  return skillid_;
}
inline void GOReleaseSkill::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GOReleaseSkill.skillid)
}

// optional .GSToGC.SkillState state = 4;
inline bool GOReleaseSkill::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GOReleaseSkill::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GOReleaseSkill::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GOReleaseSkill::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::GSToGC::SkillState GOReleaseSkill::state() const {
  // @@protoc_insertion_point(field_get:GSToGC.GOReleaseSkill.state)
  return static_cast< ::GSToGC::SkillState >(state_);
}
inline void GOReleaseSkill::set_state(::GSToGC::SkillState value) {
  assert(::GSToGC::SkillState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GOReleaseSkill.state)
}

// optional .GSToGC.Pos curPos = 5;
inline bool GOReleaseSkill::has_curpos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GOReleaseSkill::set_has_curpos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GOReleaseSkill::clear_has_curpos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GOReleaseSkill::clear_curpos() {
  if (curpos_ != NULL) curpos_->::GSToGC::Pos::Clear();
  clear_has_curpos();
}
inline const ::GSToGC::Pos& GOReleaseSkill::curpos() const {
  // @@protoc_insertion_point(field_get:GSToGC.GOReleaseSkill.curPos)
  return curpos_ != NULL ? *curpos_ : *default_instance_->curpos_;
}
inline ::GSToGC::Pos* GOReleaseSkill::mutable_curpos() {
  set_has_curpos();
  if (curpos_ == NULL) curpos_ = new ::GSToGC::Pos;
  // @@protoc_insertion_point(field_mutable:GSToGC.GOReleaseSkill.curPos)
  return curpos_;
}
inline ::GSToGC::Pos* GOReleaseSkill::release_curpos() {
  clear_has_curpos();
  ::GSToGC::Pos* temp = curpos_;
  curpos_ = NULL;
  return temp;
}
inline void GOReleaseSkill::set_allocated_curpos(::GSToGC::Pos* curpos) {
  delete curpos_;
  curpos_ = curpos;
  if (curpos) {
    set_has_curpos();
  } else {
    clear_has_curpos();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.GOReleaseSkill.curPos)
}

// optional .GSToGC.Dir curDir = 6;
inline bool GOReleaseSkill::has_curdir() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GOReleaseSkill::set_has_curdir() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GOReleaseSkill::clear_has_curdir() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GOReleaseSkill::clear_curdir() {
  if (curdir_ != NULL) curdir_->::GSToGC::Dir::Clear();
  clear_has_curdir();
}
inline const ::GSToGC::Dir& GOReleaseSkill::curdir() const {
  // @@protoc_insertion_point(field_get:GSToGC.GOReleaseSkill.curDir)
  return curdir_ != NULL ? *curdir_ : *default_instance_->curdir_;
}
inline ::GSToGC::Dir* GOReleaseSkill::mutable_curdir() {
  set_has_curdir();
  if (curdir_ == NULL) curdir_ = new ::GSToGC::Dir;
  // @@protoc_insertion_point(field_mutable:GSToGC.GOReleaseSkill.curDir)
  return curdir_;
}
inline ::GSToGC::Dir* GOReleaseSkill::release_curdir() {
  clear_has_curdir();
  ::GSToGC::Dir* temp = curdir_;
  curdir_ = NULL;
  return temp;
}
inline void GOReleaseSkill::set_allocated_curdir(::GSToGC::Dir* curdir) {
  delete curdir_;
  curdir_ = curdir;
  if (curdir) {
    set_has_curdir();
  } else {
    clear_has_curdir();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.GOReleaseSkill.curDir)
}

// optional uint64 targuid = 7;
inline bool GOReleaseSkill::has_targuid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GOReleaseSkill::set_has_targuid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GOReleaseSkill::clear_has_targuid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GOReleaseSkill::clear_targuid() {
  targuid_ = GOOGLE_ULONGLONG(0);
  clear_has_targuid();
}
inline ::google::protobuf::uint64 GOReleaseSkill::targuid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GOReleaseSkill.targuid)
  return targuid_;
}
inline void GOReleaseSkill::set_targuid(::google::protobuf::uint64 value) {
  set_has_targuid();
  targuid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GOReleaseSkill.targuid)
}

// optional .GSToGC.Pos tarpos = 8;
inline bool GOReleaseSkill::has_tarpos() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GOReleaseSkill::set_has_tarpos() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GOReleaseSkill::clear_has_tarpos() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GOReleaseSkill::clear_tarpos() {
  if (tarpos_ != NULL) tarpos_->::GSToGC::Pos::Clear();
  clear_has_tarpos();
}
inline const ::GSToGC::Pos& GOReleaseSkill::tarpos() const {
  // @@protoc_insertion_point(field_get:GSToGC.GOReleaseSkill.tarpos)
  return tarpos_ != NULL ? *tarpos_ : *default_instance_->tarpos_;
}
inline ::GSToGC::Pos* GOReleaseSkill::mutable_tarpos() {
  set_has_tarpos();
  if (tarpos_ == NULL) tarpos_ = new ::GSToGC::Pos;
  // @@protoc_insertion_point(field_mutable:GSToGC.GOReleaseSkill.tarpos)
  return tarpos_;
}
inline ::GSToGC::Pos* GOReleaseSkill::release_tarpos() {
  clear_has_tarpos();
  ::GSToGC::Pos* temp = tarpos_;
  tarpos_ = NULL;
  return temp;
}
inline void GOReleaseSkill::set_allocated_tarpos(::GSToGC::Pos* tarpos) {
  delete tarpos_;
  tarpos_ = tarpos;
  if (tarpos) {
    set_has_tarpos();
  } else {
    clear_has_tarpos();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.GOReleaseSkill.tarpos)
}

// -------------------------------------------------------------------

// GOSkillCD

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGameObjectSkillCD];
inline bool GOSkillCD::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GOSkillCD::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GOSkillCD::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GOSkillCD::clear_msgid() {
  msgid_ = 68;
  clear_has_msgid();
}
inline ::GSToGC::MsgID GOSkillCD::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GOSkillCD.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void GOSkillCD::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GOSkillCD.msgid)
}

// optional uint64 guid = 2;
inline bool GOSkillCD::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GOSkillCD::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GOSkillCD::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GOSkillCD::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 GOSkillCD::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GOSkillCD.guid)
  return guid_;
}
inline void GOSkillCD::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GOSkillCD.guid)
}

// optional int32 skillid = 3;
inline bool GOSkillCD::has_skillid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GOSkillCD::set_has_skillid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GOSkillCD::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GOSkillCD::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 GOSkillCD::skillid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GOSkillCD.skillid)
  return skillid_;
}
inline void GOSkillCD::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GOSkillCD.skillid)
}

// optional int32 time = 4;
inline bool GOSkillCD::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GOSkillCD::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GOSkillCD::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GOSkillCD::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 GOSkillCD::time() const {
  // @@protoc_insertion_point(field_get:GSToGC.GOSkillCD.time)
  return time_;
}
inline void GOSkillCD::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GOSkillCD.time)
}

// -------------------------------------------------------------------

// EmitSkill

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelEmit];
inline bool EmitSkill::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EmitSkill::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EmitSkill::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EmitSkill::clear_msgid() {
  msgid_ = 69;
  clear_has_msgid();
}
inline ::GSToGC::MsgID EmitSkill::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.EmitSkill.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void EmitSkill::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.EmitSkill.msgid)
}

// optional uint64 guid = 2;
inline bool EmitSkill::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EmitSkill::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EmitSkill::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EmitSkill::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 EmitSkill::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.EmitSkill.guid)
  return guid_;
}
inline void EmitSkill::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.EmitSkill.guid)
}

// optional uint32 effectid = 3;
inline bool EmitSkill::has_effectid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EmitSkill::set_has_effectid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EmitSkill::clear_has_effectid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EmitSkill::clear_effectid() {
  effectid_ = 0u;
  clear_has_effectid();
}
inline ::google::protobuf::uint32 EmitSkill::effectid() const {
  // @@protoc_insertion_point(field_get:GSToGC.EmitSkill.effectid)
  return effectid_;
}
inline void EmitSkill::set_effectid(::google::protobuf::uint32 value) {
  set_has_effectid();
  effectid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.EmitSkill.effectid)
}

// optional int32 uniqueid = 4;
inline bool EmitSkill::has_uniqueid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EmitSkill::set_has_uniqueid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EmitSkill::clear_has_uniqueid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EmitSkill::clear_uniqueid() {
  uniqueid_ = 0;
  clear_has_uniqueid();
}
inline ::google::protobuf::int32 EmitSkill::uniqueid() const {
  // @@protoc_insertion_point(field_get:GSToGC.EmitSkill.uniqueid)
  return uniqueid_;
}
inline void EmitSkill::set_uniqueid(::google::protobuf::int32 value) {
  set_has_uniqueid();
  uniqueid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.EmitSkill.uniqueid)
}

// optional .GSToGC.Dir dir = 5;
inline bool EmitSkill::has_dir() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EmitSkill::set_has_dir() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EmitSkill::clear_has_dir() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EmitSkill::clear_dir() {
  if (dir_ != NULL) dir_->::GSToGC::Dir::Clear();
  clear_has_dir();
}
inline const ::GSToGC::Dir& EmitSkill::dir() const {
  // @@protoc_insertion_point(field_get:GSToGC.EmitSkill.dir)
  return dir_ != NULL ? *dir_ : *default_instance_->dir_;
}
inline ::GSToGC::Dir* EmitSkill::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) dir_ = new ::GSToGC::Dir;
  // @@protoc_insertion_point(field_mutable:GSToGC.EmitSkill.dir)
  return dir_;
}
inline ::GSToGC::Dir* EmitSkill::release_dir() {
  clear_has_dir();
  ::GSToGC::Dir* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void EmitSkill::set_allocated_dir(::GSToGC::Dir* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.EmitSkill.dir)
}

// optional uint64 targuid = 6;
inline bool EmitSkill::has_targuid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EmitSkill::set_has_targuid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void EmitSkill::clear_has_targuid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void EmitSkill::clear_targuid() {
  targuid_ = GOOGLE_ULONGLONG(0);
  clear_has_targuid();
}
inline ::google::protobuf::uint64 EmitSkill::targuid() const {
  // @@protoc_insertion_point(field_get:GSToGC.EmitSkill.targuid)
  return targuid_;
}
inline void EmitSkill::set_targuid(::google::protobuf::uint64 value) {
  set_has_targuid();
  targuid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.EmitSkill.targuid)
}

// optional .GSToGC.Pos tarpos = 7;
inline bool EmitSkill::has_tarpos() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void EmitSkill::set_has_tarpos() {
  _has_bits_[0] |= 0x00000040u;
}
inline void EmitSkill::clear_has_tarpos() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void EmitSkill::clear_tarpos() {
  if (tarpos_ != NULL) tarpos_->::GSToGC::Pos::Clear();
  clear_has_tarpos();
}
inline const ::GSToGC::Pos& EmitSkill::tarpos() const {
  // @@protoc_insertion_point(field_get:GSToGC.EmitSkill.tarpos)
  return tarpos_ != NULL ? *tarpos_ : *default_instance_->tarpos_;
}
inline ::GSToGC::Pos* EmitSkill::mutable_tarpos() {
  set_has_tarpos();
  if (tarpos_ == NULL) tarpos_ = new ::GSToGC::Pos;
  // @@protoc_insertion_point(field_mutable:GSToGC.EmitSkill.tarpos)
  return tarpos_;
}
inline ::GSToGC::Pos* EmitSkill::release_tarpos() {
  clear_has_tarpos();
  ::GSToGC::Pos* temp = tarpos_;
  tarpos_ = NULL;
  return temp;
}
inline void EmitSkill::set_allocated_tarpos(::GSToGC::Pos* tarpos) {
  delete tarpos_;
  tarpos_ = tarpos;
  if (tarpos) {
    set_has_tarpos();
  } else {
    clear_has_tarpos();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.EmitSkill.tarpos)
}

// optional bool ifAbsorbSkill = 8;
inline bool EmitSkill::has_ifabsorbskill() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void EmitSkill::set_has_ifabsorbskill() {
  _has_bits_[0] |= 0x00000080u;
}
inline void EmitSkill::clear_has_ifabsorbskill() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void EmitSkill::clear_ifabsorbskill() {
  ifabsorbskill_ = false;
  clear_has_ifabsorbskill();
}
inline bool EmitSkill::ifabsorbskill() const {
  // @@protoc_insertion_point(field_get:GSToGC.EmitSkill.ifAbsorbSkill)
  return ifabsorbskill_;
}
inline void EmitSkill::set_ifabsorbskill(bool value) {
  set_has_ifabsorbskill();
  ifabsorbskill_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.EmitSkill.ifAbsorbSkill)
}

// -------------------------------------------------------------------

// DestroyEmitEffect

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelEmitDestroy];
inline bool DestroyEmitEffect::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DestroyEmitEffect::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DestroyEmitEffect::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DestroyEmitEffect::clear_msgid() {
  msgid_ = 70;
  clear_has_msgid();
}
inline ::GSToGC::MsgID DestroyEmitEffect::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.DestroyEmitEffect.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void DestroyEmitEffect::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.DestroyEmitEffect.msgid)
}

// optional int32 uniqueid = 2;
inline bool DestroyEmitEffect::has_uniqueid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DestroyEmitEffect::set_has_uniqueid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DestroyEmitEffect::clear_has_uniqueid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DestroyEmitEffect::clear_uniqueid() {
  uniqueid_ = 0;
  clear_has_uniqueid();
}
inline ::google::protobuf::int32 DestroyEmitEffect::uniqueid() const {
  // @@protoc_insertion_point(field_get:GSToGC.DestroyEmitEffect.uniqueid)
  return uniqueid_;
}
inline void DestroyEmitEffect::set_uniqueid(::google::protobuf::int32 value) {
  set_has_uniqueid();
  uniqueid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.DestroyEmitEffect.uniqueid)
}

// -------------------------------------------------------------------

// HitTar

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelHitTarget];
inline bool HitTar::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HitTar::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HitTar::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HitTar::clear_msgid() {
  msgid_ = 71;
  clear_has_msgid();
}
inline ::GSToGC::MsgID HitTar::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.HitTar.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void HitTar::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HitTar.msgid)
}

// optional uint64 guid = 2;
inline bool HitTar::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HitTar::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HitTar::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HitTar::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 HitTar::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.HitTar.guid)
  return guid_;
}
inline void HitTar::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HitTar.guid)
}

// optional uint32 effectid = 3;
inline bool HitTar::has_effectid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HitTar::set_has_effectid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HitTar::clear_has_effectid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HitTar::clear_effectid() {
  effectid_ = 0u;
  clear_has_effectid();
}
inline ::google::protobuf::uint32 HitTar::effectid() const {
  // @@protoc_insertion_point(field_get:GSToGC.HitTar.effectid)
  return effectid_;
}
inline void HitTar::set_effectid(::google::protobuf::uint32 value) {
  set_has_effectid();
  effectid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HitTar.effectid)
}

// optional uint64 targuid = 4;
inline bool HitTar::has_targuid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HitTar::set_has_targuid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HitTar::clear_has_targuid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HitTar::clear_targuid() {
  targuid_ = GOOGLE_ULONGLONG(0);
  clear_has_targuid();
}
inline ::google::protobuf::uint64 HitTar::targuid() const {
  // @@protoc_insertion_point(field_get:GSToGC.HitTar.targuid)
  return targuid_;
}
inline void HitTar::set_targuid(::google::protobuf::uint64 value) {
  set_has_targuid();
  targuid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.HitTar.targuid)
}

// -------------------------------------------------------------------

// RangeEffect

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelRange];
inline bool RangeEffect::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RangeEffect::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RangeEffect::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RangeEffect::clear_msgid() {
  msgid_ = 72;
  clear_has_msgid();
}
inline ::GSToGC::MsgID RangeEffect::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.RangeEffect.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void RangeEffect::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RangeEffect.msgid)
}

// optional uint64 guid = 2;
inline bool RangeEffect::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RangeEffect::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RangeEffect::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RangeEffect::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 RangeEffect::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.RangeEffect.guid)
  return guid_;
}
inline void RangeEffect::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RangeEffect.guid)
}

// optional uint32 effectid = 3;
inline bool RangeEffect::has_effectid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RangeEffect::set_has_effectid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RangeEffect::clear_has_effectid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RangeEffect::clear_effectid() {
  effectid_ = 0u;
  clear_has_effectid();
}
inline ::google::protobuf::uint32 RangeEffect::effectid() const {
  // @@protoc_insertion_point(field_get:GSToGC.RangeEffect.effectid)
  return effectid_;
}
inline void RangeEffect::set_effectid(::google::protobuf::uint32 value) {
  set_has_effectid();
  effectid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RangeEffect.effectid)
}

// optional uint32 uniqueid = 4;
inline bool RangeEffect::has_uniqueid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RangeEffect::set_has_uniqueid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RangeEffect::clear_has_uniqueid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RangeEffect::clear_uniqueid() {
  uniqueid_ = 0u;
  clear_has_uniqueid();
}
inline ::google::protobuf::uint32 RangeEffect::uniqueid() const {
  // @@protoc_insertion_point(field_get:GSToGC.RangeEffect.uniqueid)
  return uniqueid_;
}
inline void RangeEffect::set_uniqueid(::google::protobuf::uint32 value) {
  set_has_uniqueid();
  uniqueid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RangeEffect.uniqueid)
}

// optional .GSToGC.Dir dir = 5;
inline bool RangeEffect::has_dir() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RangeEffect::set_has_dir() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RangeEffect::clear_has_dir() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RangeEffect::clear_dir() {
  if (dir_ != NULL) dir_->::GSToGC::Dir::Clear();
  clear_has_dir();
}
inline const ::GSToGC::Dir& RangeEffect::dir() const {
  // @@protoc_insertion_point(field_get:GSToGC.RangeEffect.dir)
  return dir_ != NULL ? *dir_ : *default_instance_->dir_;
}
inline ::GSToGC::Dir* RangeEffect::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) dir_ = new ::GSToGC::Dir;
  // @@protoc_insertion_point(field_mutable:GSToGC.RangeEffect.dir)
  return dir_;
}
inline ::GSToGC::Dir* RangeEffect::release_dir() {
  clear_has_dir();
  ::GSToGC::Dir* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void RangeEffect::set_allocated_dir(::GSToGC::Dir* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.RangeEffect.dir)
}

// optional .GSToGC.Pos pos = 6;
inline bool RangeEffect::has_pos() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RangeEffect::set_has_pos() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RangeEffect::clear_has_pos() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RangeEffect::clear_pos() {
  if (pos_ != NULL) pos_->::GSToGC::Pos::Clear();
  clear_has_pos();
}
inline const ::GSToGC::Pos& RangeEffect::pos() const {
  // @@protoc_insertion_point(field_get:GSToGC.RangeEffect.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::GSToGC::Pos* RangeEffect::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::GSToGC::Pos;
  // @@protoc_insertion_point(field_mutable:GSToGC.RangeEffect.pos)
  return pos_;
}
inline ::GSToGC::Pos* RangeEffect::release_pos() {
  clear_has_pos();
  ::GSToGC::Pos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void RangeEffect::set_allocated_pos(::GSToGC::Pos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.RangeEffect.pos)
}

// -------------------------------------------------------------------

// RangeEffectEnd

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelRangeEnd];
inline bool RangeEffectEnd::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RangeEffectEnd::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RangeEffectEnd::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RangeEffectEnd::clear_msgid() {
  msgid_ = 73;
  clear_has_msgid();
}
inline ::GSToGC::MsgID RangeEffectEnd::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.RangeEffectEnd.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void RangeEffectEnd::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RangeEffectEnd.msgid)
}

// optional uint64 guid = 2;
inline bool RangeEffectEnd::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RangeEffectEnd::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RangeEffectEnd::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RangeEffectEnd::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 RangeEffectEnd::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.RangeEffectEnd.guid)
  return guid_;
}
inline void RangeEffectEnd::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RangeEffectEnd.guid)
}

// optional uint32 uniqueid = 3;
inline bool RangeEffectEnd::has_uniqueid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RangeEffectEnd::set_has_uniqueid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RangeEffectEnd::clear_has_uniqueid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RangeEffectEnd::clear_uniqueid() {
  uniqueid_ = 0u;
  clear_has_uniqueid();
}
inline ::google::protobuf::uint32 RangeEffectEnd::uniqueid() const {
  // @@protoc_insertion_point(field_get:GSToGC.RangeEffectEnd.uniqueid)
  return uniqueid_;
}
inline void RangeEffectEnd::set_uniqueid(::google::protobuf::uint32 value) {
  set_has_uniqueid();
  uniqueid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RangeEffectEnd.uniqueid)
}

// -------------------------------------------------------------------

// SummonEffect

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelSummonEffect];
inline bool SummonEffect::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SummonEffect::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SummonEffect::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SummonEffect::clear_msgid() {
  msgid_ = 75;
  clear_has_msgid();
}
inline ::GSToGC::MsgID SummonEffect::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.SummonEffect.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void SummonEffect::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.SummonEffect.msgid)
}

// optional uint64 guid = 2;
inline bool SummonEffect::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SummonEffect::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SummonEffect::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SummonEffect::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 SummonEffect::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.SummonEffect.guid)
  return guid_;
}
inline void SummonEffect::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.SummonEffect.guid)
}

// optional uint32 effectid = 3;
inline bool SummonEffect::has_effectid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SummonEffect::set_has_effectid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SummonEffect::clear_has_effectid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SummonEffect::clear_effectid() {
  effectid_ = 0u;
  clear_has_effectid();
}
inline ::google::protobuf::uint32 SummonEffect::effectid() const {
  // @@protoc_insertion_point(field_get:GSToGC.SummonEffect.effectid)
  return effectid_;
}
inline void SummonEffect::set_effectid(::google::protobuf::uint32 value) {
  set_has_effectid();
  effectid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.SummonEffect.effectid)
}

// optional uint64 npcguid = 4;
inline bool SummonEffect::has_npcguid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SummonEffect::set_has_npcguid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SummonEffect::clear_has_npcguid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SummonEffect::clear_npcguid() {
  npcguid_ = GOOGLE_ULONGLONG(0);
  clear_has_npcguid();
}
inline ::google::protobuf::uint64 SummonEffect::npcguid() const {
  // @@protoc_insertion_point(field_get:GSToGC.SummonEffect.npcguid)
  return npcguid_;
}
inline void SummonEffect::set_npcguid(::google::protobuf::uint64 value) {
  set_has_npcguid();
  npcguid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.SummonEffect.npcguid)
}

// -------------------------------------------------------------------

// BuffEffect

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelBufEffect];
inline bool BuffEffect::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuffEffect::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuffEffect::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuffEffect::clear_msgid() {
  msgid_ = 76;
  clear_has_msgid();
}
inline ::GSToGC::MsgID BuffEffect::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BuffEffect.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void BuffEffect::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BuffEffect.msgid)
}

// optional uint64 guid = 2;
inline bool BuffEffect::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuffEffect::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuffEffect::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuffEffect::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 BuffEffect::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BuffEffect.guid)
  return guid_;
}
inline void BuffEffect::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BuffEffect.guid)
}

// optional uint32 effectid = 3;
inline bool BuffEffect::has_effectid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuffEffect::set_has_effectid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuffEffect::clear_has_effectid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuffEffect::clear_effectid() {
  effectid_ = 0u;
  clear_has_effectid();
}
inline ::google::protobuf::uint32 BuffEffect::effectid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BuffEffect.effectid)
  return effectid_;
}
inline void BuffEffect::set_effectid(::google::protobuf::uint32 value) {
  set_has_effectid();
  effectid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BuffEffect.effectid)
}

// optional uint32 uniqueid = 4;
inline bool BuffEffect::has_uniqueid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuffEffect::set_has_uniqueid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuffEffect::clear_has_uniqueid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuffEffect::clear_uniqueid() {
  uniqueid_ = 0u;
  clear_has_uniqueid();
}
inline ::google::protobuf::uint32 BuffEffect::uniqueid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BuffEffect.uniqueid)
  return uniqueid_;
}
inline void BuffEffect::set_uniqueid(::google::protobuf::uint32 value) {
  set_has_uniqueid();
  uniqueid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BuffEffect.uniqueid)
}

// optional uint64 targuid = 5;
inline bool BuffEffect::has_targuid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BuffEffect::set_has_targuid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BuffEffect::clear_has_targuid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BuffEffect::clear_targuid() {
  targuid_ = GOOGLE_ULONGLONG(0);
  clear_has_targuid();
}
inline ::google::protobuf::uint64 BuffEffect::targuid() const {
  // @@protoc_insertion_point(field_get:GSToGC.BuffEffect.targuid)
  return targuid_;
}
inline void BuffEffect::set_targuid(::google::protobuf::uint64 value) {
  set_has_targuid();
  targuid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BuffEffect.targuid)
}

// optional int32 time = 6;
inline bool BuffEffect::has_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BuffEffect::set_has_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BuffEffect::clear_has_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BuffEffect::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 BuffEffect::time() const {
  // @@protoc_insertion_point(field_get:GSToGC.BuffEffect.time)
  return time_;
}
inline void BuffEffect::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BuffEffect.time)
}

// optional int32 state = 7;
inline bool BuffEffect::has_state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BuffEffect::set_has_state() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BuffEffect::clear_has_state() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BuffEffect::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 BuffEffect::state() const {
  // @@protoc_insertion_point(field_get:GSToGC.BuffEffect.state)
  return state_;
}
inline void BuffEffect::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.BuffEffect.state)
}

// -------------------------------------------------------------------

// NotifySummonLifeTime

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySummonLifeTime];
inline bool NotifySummonLifeTime::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifySummonLifeTime::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifySummonLifeTime::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifySummonLifeTime::clear_msgid() {
  msgid_ = 77;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifySummonLifeTime::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySummonLifeTime.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifySummonLifeTime::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySummonLifeTime.msgid)
}

// optional uint64 guid = 2;
inline bool NotifySummonLifeTime::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifySummonLifeTime::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifySummonLifeTime::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifySummonLifeTime::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 NotifySummonLifeTime::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySummonLifeTime.guid)
  return guid_;
}
inline void NotifySummonLifeTime::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySummonLifeTime.guid)
}

// optional int32 lifetime = 3;
inline bool NotifySummonLifeTime::has_lifetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifySummonLifeTime::set_has_lifetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifySummonLifeTime::clear_has_lifetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifySummonLifeTime::clear_lifetime() {
  lifetime_ = 0;
  clear_has_lifetime();
}
inline ::google::protobuf::int32 NotifySummonLifeTime::lifetime() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySummonLifeTime.lifetime)
  return lifetime_;
}
inline void NotifySummonLifeTime::set_lifetime(::google::protobuf::int32 value) {
  set_has_lifetime();
  lifetime_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySummonLifeTime.lifetime)
}

// optional int32 resttime = 4;
inline bool NotifySummonLifeTime::has_resttime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifySummonLifeTime::set_has_resttime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifySummonLifeTime::clear_has_resttime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifySummonLifeTime::clear_resttime() {
  resttime_ = 0;
  clear_has_resttime();
}
inline ::google::protobuf::int32 NotifySummonLifeTime::resttime() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySummonLifeTime.resttime)
  return resttime_;
}
inline void NotifySummonLifeTime::set_resttime(::google::protobuf::int32 value) {
  set_has_resttime();
  resttime_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySummonLifeTime.resttime)
}

// optional .GSToGC.Pos pos = 5;
inline bool NotifySummonLifeTime::has_pos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifySummonLifeTime::set_has_pos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifySummonLifeTime::clear_has_pos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifySummonLifeTime::clear_pos() {
  if (pos_ != NULL) pos_->::GSToGC::Pos::Clear();
  clear_has_pos();
}
inline const ::GSToGC::Pos& NotifySummonLifeTime::pos() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySummonLifeTime.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::GSToGC::Pos* NotifySummonLifeTime::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::GSToGC::Pos;
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifySummonLifeTime.pos)
  return pos_;
}
inline ::GSToGC::Pos* NotifySummonLifeTime::release_pos() {
  clear_has_pos();
  ::GSToGC::Pos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void NotifySummonLifeTime::set_allocated_pos(::GSToGC::Pos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.NotifySummonLifeTime.pos)
}

// optional .GSToGC.Dir dir = 6;
inline bool NotifySummonLifeTime::has_dir() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NotifySummonLifeTime::set_has_dir() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NotifySummonLifeTime::clear_has_dir() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NotifySummonLifeTime::clear_dir() {
  if (dir_ != NULL) dir_->::GSToGC::Dir::Clear();
  clear_has_dir();
}
inline const ::GSToGC::Dir& NotifySummonLifeTime::dir() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySummonLifeTime.dir)
  return dir_ != NULL ? *dir_ : *default_instance_->dir_;
}
inline ::GSToGC::Dir* NotifySummonLifeTime::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) dir_ = new ::GSToGC::Dir;
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifySummonLifeTime.dir)
  return dir_;
}
inline ::GSToGC::Dir* NotifySummonLifeTime::release_dir() {
  clear_has_dir();
  ::GSToGC::Dir* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void NotifySummonLifeTime::set_allocated_dir(::GSToGC::Dir* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.NotifySummonLifeTime.dir)
}

// -------------------------------------------------------------------

// NotifySkillModelStartForceMove

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelStartForceMove];
inline bool NotifySkillModelStartForceMove::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifySkillModelStartForceMove::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifySkillModelStartForceMove::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifySkillModelStartForceMove::clear_msgid() {
  msgid_ = 78;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifySkillModelStartForceMove::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelStartForceMove.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifySkillModelStartForceMove::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelStartForceMove.msgid)
}

// optional uint64 guid = 2;
inline bool NotifySkillModelStartForceMove::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifySkillModelStartForceMove::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifySkillModelStartForceMove::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifySkillModelStartForceMove::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 NotifySkillModelStartForceMove::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelStartForceMove.guid)
  return guid_;
}
inline void NotifySkillModelStartForceMove::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelStartForceMove.guid)
}

// optional int32 effectid = 3;
inline bool NotifySkillModelStartForceMove::has_effectid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifySkillModelStartForceMove::set_has_effectid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifySkillModelStartForceMove::clear_has_effectid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifySkillModelStartForceMove::clear_effectid() {
  effectid_ = 0;
  clear_has_effectid();
}
inline ::google::protobuf::int32 NotifySkillModelStartForceMove::effectid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelStartForceMove.effectid)
  return effectid_;
}
inline void NotifySkillModelStartForceMove::set_effectid(::google::protobuf::int32 value) {
  set_has_effectid();
  effectid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelStartForceMove.effectid)
}

// optional .GSToGC.Dir dir = 4;
inline bool NotifySkillModelStartForceMove::has_dir() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifySkillModelStartForceMove::set_has_dir() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifySkillModelStartForceMove::clear_has_dir() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifySkillModelStartForceMove::clear_dir() {
  if (dir_ != NULL) dir_->::GSToGC::Dir::Clear();
  clear_has_dir();
}
inline const ::GSToGC::Dir& NotifySkillModelStartForceMove::dir() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelStartForceMove.dir)
  return dir_ != NULL ? *dir_ : *default_instance_->dir_;
}
inline ::GSToGC::Dir* NotifySkillModelStartForceMove::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) dir_ = new ::GSToGC::Dir;
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifySkillModelStartForceMove.dir)
  return dir_;
}
inline ::GSToGC::Dir* NotifySkillModelStartForceMove::release_dir() {
  clear_has_dir();
  ::GSToGC::Dir* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void NotifySkillModelStartForceMove::set_allocated_dir(::GSToGC::Dir* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.NotifySkillModelStartForceMove.dir)
}

// optional .GSToGC.Pos pod = 5;
inline bool NotifySkillModelStartForceMove::has_pod() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifySkillModelStartForceMove::set_has_pod() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifySkillModelStartForceMove::clear_has_pod() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifySkillModelStartForceMove::clear_pod() {
  if (pod_ != NULL) pod_->::GSToGC::Pos::Clear();
  clear_has_pod();
}
inline const ::GSToGC::Pos& NotifySkillModelStartForceMove::pod() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelStartForceMove.pod)
  return pod_ != NULL ? *pod_ : *default_instance_->pod_;
}
inline ::GSToGC::Pos* NotifySkillModelStartForceMove::mutable_pod() {
  set_has_pod();
  if (pod_ == NULL) pod_ = new ::GSToGC::Pos;
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifySkillModelStartForceMove.pod)
  return pod_;
}
inline ::GSToGC::Pos* NotifySkillModelStartForceMove::release_pod() {
  clear_has_pod();
  ::GSToGC::Pos* temp = pod_;
  pod_ = NULL;
  return temp;
}
inline void NotifySkillModelStartForceMove::set_allocated_pod(::GSToGC::Pos* pod) {
  delete pod_;
  pod_ = pod;
  if (pod) {
    set_has_pod();
  } else {
    clear_has_pod();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.NotifySkillModelStartForceMove.pod)
}

// optional int32 speed = 6;
inline bool NotifySkillModelStartForceMove::has_speed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NotifySkillModelStartForceMove::set_has_speed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NotifySkillModelStartForceMove::clear_has_speed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NotifySkillModelStartForceMove::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
inline ::google::protobuf::int32 NotifySkillModelStartForceMove::speed() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelStartForceMove.speed)
  return speed_;
}
inline void NotifySkillModelStartForceMove::set_speed(::google::protobuf::int32 value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelStartForceMove.speed)
}

// -------------------------------------------------------------------

// NotifySkillModelStartForceMoveStop

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelStartForceMoveStop];
inline bool NotifySkillModelStartForceMoveStop::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifySkillModelStartForceMoveStop::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifySkillModelStartForceMoveStop::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifySkillModelStartForceMoveStop::clear_msgid() {
  msgid_ = 79;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifySkillModelStartForceMoveStop::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelStartForceMoveStop.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifySkillModelStartForceMoveStop::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelStartForceMoveStop.msgid)
}

// optional uint64 guid = 2;
inline bool NotifySkillModelStartForceMoveStop::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifySkillModelStartForceMoveStop::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifySkillModelStartForceMoveStop::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifySkillModelStartForceMoveStop::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 NotifySkillModelStartForceMoveStop::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelStartForceMoveStop.guid)
  return guid_;
}
inline void NotifySkillModelStartForceMoveStop::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelStartForceMoveStop.guid)
}

// optional int32 effectid = 3;
inline bool NotifySkillModelStartForceMoveStop::has_effectid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifySkillModelStartForceMoveStop::set_has_effectid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifySkillModelStartForceMoveStop::clear_has_effectid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifySkillModelStartForceMoveStop::clear_effectid() {
  effectid_ = 0;
  clear_has_effectid();
}
inline ::google::protobuf::int32 NotifySkillModelStartForceMoveStop::effectid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelStartForceMoveStop.effectid)
  return effectid_;
}
inline void NotifySkillModelStartForceMoveStop::set_effectid(::google::protobuf::int32 value) {
  set_has_effectid();
  effectid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelStartForceMoveStop.effectid)
}

// optional .GSToGC.Pos pos = 4;
inline bool NotifySkillModelStartForceMoveStop::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifySkillModelStartForceMoveStop::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifySkillModelStartForceMoveStop::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifySkillModelStartForceMoveStop::clear_pos() {
  if (pos_ != NULL) pos_->::GSToGC::Pos::Clear();
  clear_has_pos();
}
inline const ::GSToGC::Pos& NotifySkillModelStartForceMoveStop::pos() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelStartForceMoveStop.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::GSToGC::Pos* NotifySkillModelStartForceMoveStop::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::GSToGC::Pos;
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifySkillModelStartForceMoveStop.pos)
  return pos_;
}
inline ::GSToGC::Pos* NotifySkillModelStartForceMoveStop::release_pos() {
  clear_has_pos();
  ::GSToGC::Pos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void NotifySkillModelStartForceMoveStop::set_allocated_pos(::GSToGC::Pos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.NotifySkillModelStartForceMoveStop.pos)
}

// -------------------------------------------------------------------

// NotifySkillModelStartForceMoveTeleport

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelStartForceMoveTeleport];
inline bool NotifySkillModelStartForceMoveTeleport::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifySkillModelStartForceMoveTeleport::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifySkillModelStartForceMoveTeleport::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifySkillModelStartForceMoveTeleport::clear_msgid() {
  msgid_ = 80;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifySkillModelStartForceMoveTeleport::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelStartForceMoveTeleport.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifySkillModelStartForceMoveTeleport::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelStartForceMoveTeleport.msgid)
}

// optional uint64 guid = 2;
inline bool NotifySkillModelStartForceMoveTeleport::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifySkillModelStartForceMoveTeleport::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifySkillModelStartForceMoveTeleport::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifySkillModelStartForceMoveTeleport::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 NotifySkillModelStartForceMoveTeleport::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelStartForceMoveTeleport.guid)
  return guid_;
}
inline void NotifySkillModelStartForceMoveTeleport::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelStartForceMoveTeleport.guid)
}

// optional int32 effectid = 3;
inline bool NotifySkillModelStartForceMoveTeleport::has_effectid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifySkillModelStartForceMoveTeleport::set_has_effectid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifySkillModelStartForceMoveTeleport::clear_has_effectid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifySkillModelStartForceMoveTeleport::clear_effectid() {
  effectid_ = 0;
  clear_has_effectid();
}
inline ::google::protobuf::int32 NotifySkillModelStartForceMoveTeleport::effectid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelStartForceMoveTeleport.effectid)
  return effectid_;
}
inline void NotifySkillModelStartForceMoveTeleport::set_effectid(::google::protobuf::int32 value) {
  set_has_effectid();
  effectid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelStartForceMoveTeleport.effectid)
}

// optional .GSToGC.Pos beginpos = 4;
inline bool NotifySkillModelStartForceMoveTeleport::has_beginpos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifySkillModelStartForceMoveTeleport::set_has_beginpos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifySkillModelStartForceMoveTeleport::clear_has_beginpos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifySkillModelStartForceMoveTeleport::clear_beginpos() {
  if (beginpos_ != NULL) beginpos_->::GSToGC::Pos::Clear();
  clear_has_beginpos();
}
inline const ::GSToGC::Pos& NotifySkillModelStartForceMoveTeleport::beginpos() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelStartForceMoveTeleport.beginpos)
  return beginpos_ != NULL ? *beginpos_ : *default_instance_->beginpos_;
}
inline ::GSToGC::Pos* NotifySkillModelStartForceMoveTeleport::mutable_beginpos() {
  set_has_beginpos();
  if (beginpos_ == NULL) beginpos_ = new ::GSToGC::Pos;
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifySkillModelStartForceMoveTeleport.beginpos)
  return beginpos_;
}
inline ::GSToGC::Pos* NotifySkillModelStartForceMoveTeleport::release_beginpos() {
  clear_has_beginpos();
  ::GSToGC::Pos* temp = beginpos_;
  beginpos_ = NULL;
  return temp;
}
inline void NotifySkillModelStartForceMoveTeleport::set_allocated_beginpos(::GSToGC::Pos* beginpos) {
  delete beginpos_;
  beginpos_ = beginpos;
  if (beginpos) {
    set_has_beginpos();
  } else {
    clear_has_beginpos();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.NotifySkillModelStartForceMoveTeleport.beginpos)
}

// optional .GSToGC.Dir begindir = 5;
inline bool NotifySkillModelStartForceMoveTeleport::has_begindir() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifySkillModelStartForceMoveTeleport::set_has_begindir() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifySkillModelStartForceMoveTeleport::clear_has_begindir() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifySkillModelStartForceMoveTeleport::clear_begindir() {
  if (begindir_ != NULL) begindir_->::GSToGC::Dir::Clear();
  clear_has_begindir();
}
inline const ::GSToGC::Dir& NotifySkillModelStartForceMoveTeleport::begindir() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelStartForceMoveTeleport.begindir)
  return begindir_ != NULL ? *begindir_ : *default_instance_->begindir_;
}
inline ::GSToGC::Dir* NotifySkillModelStartForceMoveTeleport::mutable_begindir() {
  set_has_begindir();
  if (begindir_ == NULL) begindir_ = new ::GSToGC::Dir;
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifySkillModelStartForceMoveTeleport.begindir)
  return begindir_;
}
inline ::GSToGC::Dir* NotifySkillModelStartForceMoveTeleport::release_begindir() {
  clear_has_begindir();
  ::GSToGC::Dir* temp = begindir_;
  begindir_ = NULL;
  return temp;
}
inline void NotifySkillModelStartForceMoveTeleport::set_allocated_begindir(::GSToGC::Dir* begindir) {
  delete begindir_;
  begindir_ = begindir;
  if (begindir) {
    set_has_begindir();
  } else {
    clear_has_begindir();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.NotifySkillModelStartForceMoveTeleport.begindir)
}

// optional .GSToGC.Pos tarpos = 6;
inline bool NotifySkillModelStartForceMoveTeleport::has_tarpos() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NotifySkillModelStartForceMoveTeleport::set_has_tarpos() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NotifySkillModelStartForceMoveTeleport::clear_has_tarpos() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NotifySkillModelStartForceMoveTeleport::clear_tarpos() {
  if (tarpos_ != NULL) tarpos_->::GSToGC::Pos::Clear();
  clear_has_tarpos();
}
inline const ::GSToGC::Pos& NotifySkillModelStartForceMoveTeleport::tarpos() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelStartForceMoveTeleport.tarpos)
  return tarpos_ != NULL ? *tarpos_ : *default_instance_->tarpos_;
}
inline ::GSToGC::Pos* NotifySkillModelStartForceMoveTeleport::mutable_tarpos() {
  set_has_tarpos();
  if (tarpos_ == NULL) tarpos_ = new ::GSToGC::Pos;
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifySkillModelStartForceMoveTeleport.tarpos)
  return tarpos_;
}
inline ::GSToGC::Pos* NotifySkillModelStartForceMoveTeleport::release_tarpos() {
  clear_has_tarpos();
  ::GSToGC::Pos* temp = tarpos_;
  tarpos_ = NULL;
  return temp;
}
inline void NotifySkillModelStartForceMoveTeleport::set_allocated_tarpos(::GSToGC::Pos* tarpos) {
  delete tarpos_;
  tarpos_ = tarpos;
  if (tarpos) {
    set_has_tarpos();
  } else {
    clear_has_tarpos();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.NotifySkillModelStartForceMoveTeleport.tarpos)
}

// -------------------------------------------------------------------

// NotifySkillModelPurification

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelPurification];
inline bool NotifySkillModelPurification::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifySkillModelPurification::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifySkillModelPurification::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifySkillModelPurification::clear_msgid() {
  msgid_ = 220;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifySkillModelPurification::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelPurification.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifySkillModelPurification::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelPurification.msgid)
}

// optional uint64 guid = 2;
inline bool NotifySkillModelPurification::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifySkillModelPurification::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifySkillModelPurification::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifySkillModelPurification::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 NotifySkillModelPurification::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelPurification.guid)
  return guid_;
}
inline void NotifySkillModelPurification::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelPurification.guid)
}

// optional uint64 targetguid = 3;
inline bool NotifySkillModelPurification::has_targetguid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifySkillModelPurification::set_has_targetguid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifySkillModelPurification::clear_has_targetguid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifySkillModelPurification::clear_targetguid() {
  targetguid_ = GOOGLE_ULONGLONG(0);
  clear_has_targetguid();
}
inline ::google::protobuf::uint64 NotifySkillModelPurification::targetguid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelPurification.targetguid)
  return targetguid_;
}
inline void NotifySkillModelPurification::set_targetguid(::google::protobuf::uint64 value) {
  set_has_targetguid();
  targetguid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelPurification.targetguid)
}

// optional int32 effectid = 4;
inline bool NotifySkillModelPurification::has_effectid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifySkillModelPurification::set_has_effectid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifySkillModelPurification::clear_has_effectid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifySkillModelPurification::clear_effectid() {
  effectid_ = 0;
  clear_has_effectid();
}
inline ::google::protobuf::int32 NotifySkillModelPurification::effectid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelPurification.effectid)
  return effectid_;
}
inline void NotifySkillModelPurification::set_effectid(::google::protobuf::int32 value) {
  set_has_effectid();
  effectid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelPurification.effectid)
}

// -------------------------------------------------------------------

// NotifySkillModelStartLink

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelStartLink];
inline bool NotifySkillModelStartLink::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifySkillModelStartLink::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifySkillModelStartLink::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifySkillModelStartLink::clear_msgid() {
  msgid_ = 550;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifySkillModelStartLink::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelStartLink.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifySkillModelStartLink::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelStartLink.msgid)
}

// optional uint64 guid = 2;
inline bool NotifySkillModelStartLink::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifySkillModelStartLink::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifySkillModelStartLink::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifySkillModelStartLink::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 NotifySkillModelStartLink::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelStartLink.guid)
  return guid_;
}
inline void NotifySkillModelStartLink::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelStartLink.guid)
}

// optional .GSToGC.Pos beginpos = 3;
inline bool NotifySkillModelStartLink::has_beginpos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifySkillModelStartLink::set_has_beginpos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifySkillModelStartLink::clear_has_beginpos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifySkillModelStartLink::clear_beginpos() {
  if (beginpos_ != NULL) beginpos_->::GSToGC::Pos::Clear();
  clear_has_beginpos();
}
inline const ::GSToGC::Pos& NotifySkillModelStartLink::beginpos() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelStartLink.beginpos)
  return beginpos_ != NULL ? *beginpos_ : *default_instance_->beginpos_;
}
inline ::GSToGC::Pos* NotifySkillModelStartLink::mutable_beginpos() {
  set_has_beginpos();
  if (beginpos_ == NULL) beginpos_ = new ::GSToGC::Pos;
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifySkillModelStartLink.beginpos)
  return beginpos_;
}
inline ::GSToGC::Pos* NotifySkillModelStartLink::release_beginpos() {
  clear_has_beginpos();
  ::GSToGC::Pos* temp = beginpos_;
  beginpos_ = NULL;
  return temp;
}
inline void NotifySkillModelStartLink::set_allocated_beginpos(::GSToGC::Pos* beginpos) {
  delete beginpos_;
  beginpos_ = beginpos;
  if (beginpos) {
    set_has_beginpos();
  } else {
    clear_has_beginpos();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.NotifySkillModelStartLink.beginpos)
}

// optional uint64 targetguid = 4;
inline bool NotifySkillModelStartLink::has_targetguid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifySkillModelStartLink::set_has_targetguid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifySkillModelStartLink::clear_has_targetguid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifySkillModelStartLink::clear_targetguid() {
  targetguid_ = GOOGLE_ULONGLONG(0);
  clear_has_targetguid();
}
inline ::google::protobuf::uint64 NotifySkillModelStartLink::targetguid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelStartLink.targetguid)
  return targetguid_;
}
inline void NotifySkillModelStartLink::set_targetguid(::google::protobuf::uint64 value) {
  set_has_targetguid();
  targetguid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelStartLink.targetguid)
}

// optional int32 effectid = 5;
inline bool NotifySkillModelStartLink::has_effectid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifySkillModelStartLink::set_has_effectid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifySkillModelStartLink::clear_has_effectid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifySkillModelStartLink::clear_effectid() {
  effectid_ = 0;
  clear_has_effectid();
}
inline ::google::protobuf::int32 NotifySkillModelStartLink::effectid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelStartLink.effectid)
  return effectid_;
}
inline void NotifySkillModelStartLink::set_effectid(::google::protobuf::int32 value) {
  set_has_effectid();
  effectid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelStartLink.effectid)
}

// optional uint32 uniqueid = 6;
inline bool NotifySkillModelStartLink::has_uniqueid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NotifySkillModelStartLink::set_has_uniqueid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NotifySkillModelStartLink::clear_has_uniqueid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NotifySkillModelStartLink::clear_uniqueid() {
  uniqueid_ = 0u;
  clear_has_uniqueid();
}
inline ::google::protobuf::uint32 NotifySkillModelStartLink::uniqueid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelStartLink.uniqueid)
  return uniqueid_;
}
inline void NotifySkillModelStartLink::set_uniqueid(::google::protobuf::uint32 value) {
  set_has_uniqueid();
  uniqueid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelStartLink.uniqueid)
}

// -------------------------------------------------------------------

// NotifySkillModelStopLink

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelStopLink];
inline bool NotifySkillModelStopLink::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifySkillModelStopLink::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifySkillModelStopLink::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifySkillModelStopLink::clear_msgid() {
  msgid_ = 551;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifySkillModelStopLink::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelStopLink.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifySkillModelStopLink::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelStopLink.msgid)
}

// optional uint32 uniqueid = 2;
inline bool NotifySkillModelStopLink::has_uniqueid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifySkillModelStopLink::set_has_uniqueid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifySkillModelStopLink::clear_has_uniqueid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifySkillModelStopLink::clear_uniqueid() {
  uniqueid_ = 0u;
  clear_has_uniqueid();
}
inline ::google::protobuf::uint32 NotifySkillModelStopLink::uniqueid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelStopLink.uniqueid)
  return uniqueid_;
}
inline void NotifySkillModelStopLink::set_uniqueid(::google::protobuf::uint32 value) {
  set_has_uniqueid();
  uniqueid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelStopLink.uniqueid)
}

// -------------------------------------------------------------------

// NotifyPassitiveSkillRelease

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyPassitiveSkillRelease];
inline bool NotifyPassitiveSkillRelease::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyPassitiveSkillRelease::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyPassitiveSkillRelease::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyPassitiveSkillRelease::clear_msgid() {
  msgid_ = 81;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyPassitiveSkillRelease::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyPassitiveSkillRelease.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyPassitiveSkillRelease::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyPassitiveSkillRelease.msgid)
}

// optional uint64 guid = 2;
inline bool NotifyPassitiveSkillRelease::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyPassitiveSkillRelease::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyPassitiveSkillRelease::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyPassitiveSkillRelease::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 NotifyPassitiveSkillRelease::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyPassitiveSkillRelease.guid)
  return guid_;
}
inline void NotifyPassitiveSkillRelease::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyPassitiveSkillRelease.guid)
}

// optional int32 skillid = 3;
inline bool NotifyPassitiveSkillRelease::has_skillid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyPassitiveSkillRelease::set_has_skillid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyPassitiveSkillRelease::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyPassitiveSkillRelease::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 NotifyPassitiveSkillRelease::skillid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyPassitiveSkillRelease.skillid)
  return skillid_;
}
inline void NotifyPassitiveSkillRelease::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyPassitiveSkillRelease.skillid)
}

// optional int32 timeLeft = 4;
inline bool NotifyPassitiveSkillRelease::has_timeleft() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyPassitiveSkillRelease::set_has_timeleft() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyPassitiveSkillRelease::clear_has_timeleft() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyPassitiveSkillRelease::clear_timeleft() {
  timeleft_ = 0;
  clear_has_timeleft();
}
inline ::google::protobuf::int32 NotifyPassitiveSkillRelease::timeleft() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyPassitiveSkillRelease.timeLeft)
  return timeleft_;
}
inline void NotifyPassitiveSkillRelease::set_timeleft(::google::protobuf::int32 value) {
  set_has_timeleft();
  timeleft_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyPassitiveSkillRelease.timeLeft)
}

// -------------------------------------------------------------------

// NotifyPassitiveSkillLoad

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyPassitiveSkillLoad];
inline bool NotifyPassitiveSkillLoad::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyPassitiveSkillLoad::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyPassitiveSkillLoad::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyPassitiveSkillLoad::clear_msgid() {
  msgid_ = 82;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyPassitiveSkillLoad::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyPassitiveSkillLoad.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyPassitiveSkillLoad::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyPassitiveSkillLoad.msgid)
}

// optional uint64 guid = 2;
inline bool NotifyPassitiveSkillLoad::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyPassitiveSkillLoad::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyPassitiveSkillLoad::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyPassitiveSkillLoad::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 NotifyPassitiveSkillLoad::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyPassitiveSkillLoad.guid)
  return guid_;
}
inline void NotifyPassitiveSkillLoad::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyPassitiveSkillLoad.guid)
}

// optional int32 skillid = 3;
inline bool NotifyPassitiveSkillLoad::has_skillid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyPassitiveSkillLoad::set_has_skillid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyPassitiveSkillLoad::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyPassitiveSkillLoad::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 NotifyPassitiveSkillLoad::skillid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyPassitiveSkillLoad.skillid)
  return skillid_;
}
inline void NotifyPassitiveSkillLoad::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyPassitiveSkillLoad.skillid)
}

// optional int32 uniqueid = 4;
inline bool NotifyPassitiveSkillLoad::has_uniqueid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyPassitiveSkillLoad::set_has_uniqueid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyPassitiveSkillLoad::clear_has_uniqueid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyPassitiveSkillLoad::clear_uniqueid() {
  uniqueid_ = 0;
  clear_has_uniqueid();
}
inline ::google::protobuf::int32 NotifyPassitiveSkillLoad::uniqueid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyPassitiveSkillLoad.uniqueid)
  return uniqueid_;
}
inline void NotifyPassitiveSkillLoad::set_uniqueid(::google::protobuf::int32 value) {
  set_has_uniqueid();
  uniqueid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyPassitiveSkillLoad.uniqueid)
}

// -------------------------------------------------------------------

// NotifyPassitiveSkillUnLoad

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyPassitiveSkillUnload];
inline bool NotifyPassitiveSkillUnLoad::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyPassitiveSkillUnLoad::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyPassitiveSkillUnLoad::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyPassitiveSkillUnLoad::clear_msgid() {
  msgid_ = 83;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyPassitiveSkillUnLoad::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyPassitiveSkillUnLoad.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyPassitiveSkillUnLoad::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyPassitiveSkillUnLoad.msgid)
}

// optional uint64 guid = 2;
inline bool NotifyPassitiveSkillUnLoad::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyPassitiveSkillUnLoad::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyPassitiveSkillUnLoad::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyPassitiveSkillUnLoad::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 NotifyPassitiveSkillUnLoad::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyPassitiveSkillUnLoad.guid)
  return guid_;
}
inline void NotifyPassitiveSkillUnLoad::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyPassitiveSkillUnLoad.guid)
}

// optional int32 skillid = 3;
inline bool NotifyPassitiveSkillUnLoad::has_skillid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyPassitiveSkillUnLoad::set_has_skillid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyPassitiveSkillUnLoad::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyPassitiveSkillUnLoad::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 NotifyPassitiveSkillUnLoad::skillid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyPassitiveSkillUnLoad.skillid)
  return skillid_;
}
inline void NotifyPassitiveSkillUnLoad::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyPassitiveSkillUnLoad.skillid)
}

// optional int32 uniqueid = 4;
inline bool NotifyPassitiveSkillUnLoad::has_uniqueid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyPassitiveSkillUnLoad::set_has_uniqueid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyPassitiveSkillUnLoad::clear_has_uniqueid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyPassitiveSkillUnLoad::clear_uniqueid() {
  uniqueid_ = 0;
  clear_has_uniqueid();
}
inline ::google::protobuf::int32 NotifyPassitiveSkillUnLoad::uniqueid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyPassitiveSkillUnLoad.uniqueid)
  return uniqueid_;
}
inline void NotifyPassitiveSkillUnLoad::set_uniqueid(::google::protobuf::int32 value) {
  set_has_uniqueid();
  uniqueid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyPassitiveSkillUnLoad.uniqueid)
}

// -------------------------------------------------------------------

// NotifySkillModelEmitTurn

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillModelEmitTurn];
inline bool NotifySkillModelEmitTurn::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifySkillModelEmitTurn::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifySkillModelEmitTurn::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifySkillModelEmitTurn::clear_msgid() {
  msgid_ = 84;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifySkillModelEmitTurn::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelEmitTurn.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifySkillModelEmitTurn::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelEmitTurn.msgid)
}

// optional uint64 guid = 2;
inline bool NotifySkillModelEmitTurn::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifySkillModelEmitTurn::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifySkillModelEmitTurn::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifySkillModelEmitTurn::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 NotifySkillModelEmitTurn::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelEmitTurn.guid)
  return guid_;
}
inline void NotifySkillModelEmitTurn::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelEmitTurn.guid)
}

// optional uint32 effectid = 3;
inline bool NotifySkillModelEmitTurn::has_effectid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifySkillModelEmitTurn::set_has_effectid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifySkillModelEmitTurn::clear_has_effectid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifySkillModelEmitTurn::clear_effectid() {
  effectid_ = 0u;
  clear_has_effectid();
}
inline ::google::protobuf::uint32 NotifySkillModelEmitTurn::effectid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelEmitTurn.effectid)
  return effectid_;
}
inline void NotifySkillModelEmitTurn::set_effectid(::google::protobuf::uint32 value) {
  set_has_effectid();
  effectid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelEmitTurn.effectid)
}

// optional int32 progectid = 4;
inline bool NotifySkillModelEmitTurn::has_progectid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifySkillModelEmitTurn::set_has_progectid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifySkillModelEmitTurn::clear_has_progectid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifySkillModelEmitTurn::clear_progectid() {
  progectid_ = 0;
  clear_has_progectid();
}
inline ::google::protobuf::int32 NotifySkillModelEmitTurn::progectid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelEmitTurn.progectid)
  return progectid_;
}
inline void NotifySkillModelEmitTurn::set_progectid(::google::protobuf::int32 value) {
  set_has_progectid();
  progectid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelEmitTurn.progectid)
}

// optional .GSToGC.Pos pos = 5;
inline bool NotifySkillModelEmitTurn::has_pos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifySkillModelEmitTurn::set_has_pos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifySkillModelEmitTurn::clear_has_pos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifySkillModelEmitTurn::clear_pos() {
  if (pos_ != NULL) pos_->::GSToGC::Pos::Clear();
  clear_has_pos();
}
inline const ::GSToGC::Pos& NotifySkillModelEmitTurn::pos() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelEmitTurn.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::GSToGC::Pos* NotifySkillModelEmitTurn::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::GSToGC::Pos;
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifySkillModelEmitTurn.pos)
  return pos_;
}
inline ::GSToGC::Pos* NotifySkillModelEmitTurn::release_pos() {
  clear_has_pos();
  ::GSToGC::Pos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void NotifySkillModelEmitTurn::set_allocated_pos(::GSToGC::Pos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.NotifySkillModelEmitTurn.pos)
}

// optional .GSToGC.Dir dir = 6;
inline bool NotifySkillModelEmitTurn::has_dir() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NotifySkillModelEmitTurn::set_has_dir() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NotifySkillModelEmitTurn::clear_has_dir() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NotifySkillModelEmitTurn::clear_dir() {
  if (dir_ != NULL) dir_->::GSToGC::Dir::Clear();
  clear_has_dir();
}
inline const ::GSToGC::Dir& NotifySkillModelEmitTurn::dir() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelEmitTurn.dir)
  return dir_ != NULL ? *dir_ : *default_instance_->dir_;
}
inline ::GSToGC::Dir* NotifySkillModelEmitTurn::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) dir_ = new ::GSToGC::Dir;
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifySkillModelEmitTurn.dir)
  return dir_;
}
inline ::GSToGC::Dir* NotifySkillModelEmitTurn::release_dir() {
  clear_has_dir();
  ::GSToGC::Dir* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void NotifySkillModelEmitTurn::set_allocated_dir(::GSToGC::Dir* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.NotifySkillModelEmitTurn.dir)
}

// optional uint64 targuid = 7;
inline bool NotifySkillModelEmitTurn::has_targuid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void NotifySkillModelEmitTurn::set_has_targuid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void NotifySkillModelEmitTurn::clear_has_targuid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void NotifySkillModelEmitTurn::clear_targuid() {
  targuid_ = GOOGLE_ULONGLONG(0);
  clear_has_targuid();
}
inline ::google::protobuf::uint64 NotifySkillModelEmitTurn::targuid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelEmitTurn.targuid)
  return targuid_;
}
inline void NotifySkillModelEmitTurn::set_targuid(::google::protobuf::uint64 value) {
  set_has_targuid();
  targuid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillModelEmitTurn.targuid)
}

// optional .GSToGC.Pos tarpos = 8;
inline bool NotifySkillModelEmitTurn::has_tarpos() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void NotifySkillModelEmitTurn::set_has_tarpos() {
  _has_bits_[0] |= 0x00000080u;
}
inline void NotifySkillModelEmitTurn::clear_has_tarpos() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void NotifySkillModelEmitTurn::clear_tarpos() {
  if (tarpos_ != NULL) tarpos_->::GSToGC::Pos::Clear();
  clear_has_tarpos();
}
inline const ::GSToGC::Pos& NotifySkillModelEmitTurn::tarpos() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillModelEmitTurn.tarpos)
  return tarpos_ != NULL ? *tarpos_ : *default_instance_->tarpos_;
}
inline ::GSToGC::Pos* NotifySkillModelEmitTurn::mutable_tarpos() {
  set_has_tarpos();
  if (tarpos_ == NULL) tarpos_ = new ::GSToGC::Pos;
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifySkillModelEmitTurn.tarpos)
  return tarpos_;
}
inline ::GSToGC::Pos* NotifySkillModelEmitTurn::release_tarpos() {
  clear_has_tarpos();
  ::GSToGC::Pos* temp = tarpos_;
  tarpos_ = NULL;
  return temp;
}
inline void NotifySkillModelEmitTurn::set_allocated_tarpos(::GSToGC::Pos* tarpos) {
  delete tarpos_;
  tarpos_ = tarpos;
  if (tarpos) {
    set_has_tarpos();
  } else {
    clear_has_tarpos();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.NotifySkillModelEmitTurn.tarpos)
}

// -------------------------------------------------------------------

// NotifyBornObj

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToSSFromCS_NotifyBornObj];
inline bool NotifyBornObj::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyBornObj::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyBornObj::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyBornObj::clear_msgid() {
  msgid_ = 116;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyBornObj::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyBornObj.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyBornObj::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyBornObj.msgid)
}

// optional int32 type = 2;
inline bool NotifyBornObj::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyBornObj::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyBornObj::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyBornObj::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 NotifyBornObj::type() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyBornObj.type)
  return type_;
}
inline void NotifyBornObj::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyBornObj.type)
}

// -------------------------------------------------------------------

// NotifyReconnectInfo_ReconnectInfo

// optional int32 pos = 1;
inline bool NotifyReconnectInfo_ReconnectInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyReconnectInfo_ReconnectInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyReconnectInfo_ReconnectInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyReconnectInfo_ReconnectInfo::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 NotifyReconnectInfo_ReconnectInfo::pos() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyReconnectInfo.ReconnectInfo.pos)
  return pos_;
}
inline void NotifyReconnectInfo_ReconnectInfo::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyReconnectInfo.ReconnectInfo.pos)
}

// optional uint64 guid = 2;
inline bool NotifyReconnectInfo_ReconnectInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyReconnectInfo_ReconnectInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyReconnectInfo_ReconnectInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyReconnectInfo_ReconnectInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 NotifyReconnectInfo_ReconnectInfo::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyReconnectInfo.ReconnectInfo.guid)
  return guid_;
}
inline void NotifyReconnectInfo_ReconnectInfo::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyReconnectInfo.ReconnectInfo.guid)
}

// optional string nickname = 3;
inline bool NotifyReconnectInfo_ReconnectInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyReconnectInfo_ReconnectInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyReconnectInfo_ReconnectInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyReconnectInfo_ReconnectInfo::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& NotifyReconnectInfo_ReconnectInfo::nickname() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyReconnectInfo.ReconnectInfo.nickname)
  return *nickname_;
}
inline void NotifyReconnectInfo_ReconnectInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.NotifyReconnectInfo.ReconnectInfo.nickname)
}
inline void NotifyReconnectInfo_ReconnectInfo::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.NotifyReconnectInfo.ReconnectInfo.nickname)
}
inline void NotifyReconnectInfo_ReconnectInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.NotifyReconnectInfo.ReconnectInfo.nickname)
}
inline ::std::string* NotifyReconnectInfo_ReconnectInfo::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyReconnectInfo.ReconnectInfo.nickname)
  return nickname_;
}
inline ::std::string* NotifyReconnectInfo_ReconnectInfo::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NotifyReconnectInfo_ReconnectInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.NotifyReconnectInfo.ReconnectInfo.nickname)
}

// optional uint32 heroid = 4;
inline bool NotifyReconnectInfo_ReconnectInfo::has_heroid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyReconnectInfo_ReconnectInfo::set_has_heroid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyReconnectInfo_ReconnectInfo::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyReconnectInfo_ReconnectInfo::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 NotifyReconnectInfo_ReconnectInfo::heroid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyReconnectInfo.ReconnectInfo.heroid)
  return heroid_;
}
inline void NotifyReconnectInfo_ReconnectInfo::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyReconnectInfo.ReconnectInfo.heroid)
}

// optional bool ifselected = 5;
inline bool NotifyReconnectInfo_ReconnectInfo::has_ifselected() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifyReconnectInfo_ReconnectInfo::set_has_ifselected() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifyReconnectInfo_ReconnectInfo::clear_has_ifselected() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifyReconnectInfo_ReconnectInfo::clear_ifselected() {
  ifselected_ = false;
  clear_has_ifselected();
}
inline bool NotifyReconnectInfo_ReconnectInfo::ifselected() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyReconnectInfo.ReconnectInfo.ifselected)
  return ifselected_;
}
inline void NotifyReconnectInfo_ReconnectInfo::set_ifselected(bool value) {
  set_has_ifselected();
  ifselected_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyReconnectInfo.ReconnectInfo.ifselected)
}

// -------------------------------------------------------------------

// NotifyReconnectInfo

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromCS_NotifyReconnectInfo];
inline bool NotifyReconnectInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyReconnectInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyReconnectInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyReconnectInfo::clear_msgid() {
  msgid_ = 115;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyReconnectInfo::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyReconnectInfo.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyReconnectInfo::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyReconnectInfo.msgid)
}

// optional int32 battlestate = 2;
inline bool NotifyReconnectInfo::has_battlestate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyReconnectInfo::set_has_battlestate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyReconnectInfo::clear_has_battlestate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyReconnectInfo::clear_battlestate() {
  battlestate_ = 0;
  clear_has_battlestate();
}
inline ::google::protobuf::int32 NotifyReconnectInfo::battlestate() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyReconnectInfo.battlestate)
  return battlestate_;
}
inline void NotifyReconnectInfo::set_battlestate(::google::protobuf::int32 value) {
  set_has_battlestate();
  battlestate_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyReconnectInfo.battlestate)
}

// optional int32 remain_times = 3;
inline bool NotifyReconnectInfo::has_remain_times() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyReconnectInfo::set_has_remain_times() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyReconnectInfo::clear_has_remain_times() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyReconnectInfo::clear_remain_times() {
  remain_times_ = 0;
  clear_has_remain_times();
}
inline ::google::protobuf::int32 NotifyReconnectInfo::remain_times() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyReconnectInfo.remain_times)
  return remain_times_;
}
inline void NotifyReconnectInfo::set_remain_times(::google::protobuf::int32 value) {
  set_has_remain_times();
  remain_times_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyReconnectInfo.remain_times)
}

// optional bool ifob = 4;
inline bool NotifyReconnectInfo::has_ifob() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyReconnectInfo::set_has_ifob() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyReconnectInfo::clear_has_ifob() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyReconnectInfo::clear_ifob() {
  ifob_ = false;
  clear_has_ifob();
}
inline bool NotifyReconnectInfo::ifob() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyReconnectInfo.ifob)
  return ifob_;
}
inline void NotifyReconnectInfo::set_ifob(bool value) {
  set_has_ifob();
  ifob_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyReconnectInfo.ifob)
}

// repeated .GSToGC.NotifyReconnectInfo.ReconnectInfo reconnectinfo = 5;
inline int NotifyReconnectInfo::reconnectinfo_size() const {
  return reconnectinfo_.size();
}
inline void NotifyReconnectInfo::clear_reconnectinfo() {
  reconnectinfo_.Clear();
}
inline const ::GSToGC::NotifyReconnectInfo_ReconnectInfo& NotifyReconnectInfo::reconnectinfo(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyReconnectInfo.reconnectinfo)
  return reconnectinfo_.Get(index);
}
inline ::GSToGC::NotifyReconnectInfo_ReconnectInfo* NotifyReconnectInfo::mutable_reconnectinfo(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyReconnectInfo.reconnectinfo)
  return reconnectinfo_.Mutable(index);
}
inline ::GSToGC::NotifyReconnectInfo_ReconnectInfo* NotifyReconnectInfo::add_reconnectinfo() {
  // @@protoc_insertion_point(field_add:GSToGC.NotifyReconnectInfo.reconnectinfo)
  return reconnectinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyReconnectInfo_ReconnectInfo >&
NotifyReconnectInfo::reconnectinfo() const {
  // @@protoc_insertion_point(field_list:GSToGC.NotifyReconnectInfo.reconnectinfo)
  return reconnectinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::NotifyReconnectInfo_ReconnectInfo >*
NotifyReconnectInfo::mutable_reconnectinfo() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.NotifyReconnectInfo.reconnectinfo)
  return &reconnectinfo_;
}

// -------------------------------------------------------------------

// NotifyOBReturnBattleRoom

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyOBReturnBattleRoom];
inline bool NotifyOBReturnBattleRoom::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyOBReturnBattleRoom::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyOBReturnBattleRoom::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyOBReturnBattleRoom::clear_msgid() {
  msgid_ = 90;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyOBReturnBattleRoom::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyOBReturnBattleRoom.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyOBReturnBattleRoom::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyOBReturnBattleRoom.msgid)
}

// -------------------------------------------------------------------

// NotifyOBAppear

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyOBAppear];
inline bool NotifyOBAppear::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyOBAppear::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyOBAppear::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyOBAppear::clear_msgid() {
  msgid_ = 95;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyOBAppear::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyOBAppear.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyOBAppear::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyOBAppear.msgid)
}

// optional uint64 obid = 2;
inline bool NotifyOBAppear::has_obid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyOBAppear::set_has_obid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyOBAppear::clear_has_obid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyOBAppear::clear_obid() {
  obid_ = GOOGLE_ULONGLONG(0);
  clear_has_obid();
}
inline ::google::protobuf::uint64 NotifyOBAppear::obid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyOBAppear.obid)
  return obid_;
}
inline void NotifyOBAppear::set_obid(::google::protobuf::uint64 value) {
  set_has_obid();
  obid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyOBAppear.obid)
}

// optional int32 camp = 3;
inline bool NotifyOBAppear::has_camp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyOBAppear::set_has_camp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyOBAppear::clear_has_camp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyOBAppear::clear_camp() {
  camp_ = 0;
  clear_has_camp();
}
inline ::google::protobuf::int32 NotifyOBAppear::camp() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyOBAppear.camp)
  return camp_;
}
inline void NotifyOBAppear::set_camp(::google::protobuf::int32 value) {
  set_has_camp();
  camp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyOBAppear.camp)
}

// -------------------------------------------------------------------

// NotifyKillNPC

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyKillNPC];
inline bool NotifyKillNPC::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyKillNPC::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyKillNPC::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyKillNPC::clear_msgid() {
  msgid_ = 96;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyKillNPC::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyKillNPC.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyKillNPC::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyKillNPC.msgid)
}

// optional uint64 guid = 2;
inline bool NotifyKillNPC::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyKillNPC::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyKillNPC::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyKillNPC::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 NotifyKillNPC::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyKillNPC.guid)
  return guid_;
}
inline void NotifyKillNPC::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyKillNPC.guid)
}

// optional uint32 killnum = 3;
inline bool NotifyKillNPC::has_killnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyKillNPC::set_has_killnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyKillNPC::clear_has_killnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyKillNPC::clear_killnum() {
  killnum_ = 0u;
  clear_has_killnum();
}
inline ::google::protobuf::uint32 NotifyKillNPC::killnum() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyKillNPC.killnum)
  return killnum_;
}
inline void NotifyKillNPC::set_killnum(::google::protobuf::uint32 value) {
  set_has_killnum();
  killnum_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyKillNPC.killnum)
}

// -------------------------------------------------------------------

// NotifyAltarBSIco

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyAltarBSOk];
inline bool NotifyAltarBSIco::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyAltarBSIco::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyAltarBSIco::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyAltarBSIco::clear_msgid() {
  msgid_ = 97;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyAltarBSIco::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyAltarBSIco.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyAltarBSIco::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyAltarBSIco.msgid)
}

// optional uint32 altarid = 2;
inline bool NotifyAltarBSIco::has_altarid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyAltarBSIco::set_has_altarid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyAltarBSIco::clear_has_altarid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyAltarBSIco::clear_altarid() {
  altarid_ = 0u;
  clear_has_altarid();
}
inline ::google::protobuf::uint32 NotifyAltarBSIco::altarid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyAltarBSIco.altarid)
  return altarid_;
}
inline void NotifyAltarBSIco::set_altarid(::google::protobuf::uint32 value) {
  set_has_altarid();
  altarid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyAltarBSIco.altarid)
}

// optional uint32 objtype = 3;
inline bool NotifyAltarBSIco::has_objtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyAltarBSIco::set_has_objtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyAltarBSIco::clear_has_objtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyAltarBSIco::clear_objtype() {
  objtype_ = 0u;
  clear_has_objtype();
}
inline ::google::protobuf::uint32 NotifyAltarBSIco::objtype() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyAltarBSIco.objtype)
  return objtype_;
}
inline void NotifyAltarBSIco::set_objtype(::google::protobuf::uint32 value) {
  set_has_objtype();
  objtype_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyAltarBSIco.objtype)
}

// optional uint32 optype = 4;
inline bool NotifyAltarBSIco::has_optype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyAltarBSIco::set_has_optype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyAltarBSIco::clear_has_optype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyAltarBSIco::clear_optype() {
  optype_ = 0u;
  clear_has_optype();
}
inline ::google::protobuf::uint32 NotifyAltarBSIco::optype() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyAltarBSIco.optype)
  return optype_;
}
inline void NotifyAltarBSIco::set_optype(::google::protobuf::uint32 value) {
  set_has_optype();
  optype_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyAltarBSIco.optype)
}

// -------------------------------------------------------------------

// NotifySkillUpLv

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifySkillUpLv];
inline bool NotifySkillUpLv::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifySkillUpLv::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifySkillUpLv::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifySkillUpLv::clear_msgid() {
  msgid_ = 98;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifySkillUpLv::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillUpLv.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifySkillUpLv::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillUpLv.msgid)
}

// optional uint64 guid = 2;
inline bool NotifySkillUpLv::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifySkillUpLv::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifySkillUpLv::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifySkillUpLv::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 NotifySkillUpLv::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillUpLv.guid)
  return guid_;
}
inline void NotifySkillUpLv::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillUpLv.guid)
}

// optional uint32 skillpos = 3;
inline bool NotifySkillUpLv::has_skillpos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifySkillUpLv::set_has_skillpos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifySkillUpLv::clear_has_skillpos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifySkillUpLv::clear_skillpos() {
  skillpos_ = 0u;
  clear_has_skillpos();
}
inline ::google::protobuf::uint32 NotifySkillUpLv::skillpos() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillUpLv.skillpos)
  return skillpos_;
}
inline void NotifySkillUpLv::set_skillpos(::google::protobuf::uint32 value) {
  set_has_skillpos();
  skillpos_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillUpLv.skillpos)
}

// optional uint32 skillid = 4;
inline bool NotifySkillUpLv::has_skillid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifySkillUpLv::set_has_skillid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifySkillUpLv::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifySkillUpLv::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 NotifySkillUpLv::skillid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifySkillUpLv.skillid)
  return skillid_;
}
inline void NotifySkillUpLv::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifySkillUpLv.skillid)
}

// -------------------------------------------------------------------

// NotifyBlastHurt

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyBlastHurt];
inline bool NotifyBlastHurt::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyBlastHurt::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyBlastHurt::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyBlastHurt::clear_msgid() {
  msgid_ = 107;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyBlastHurt::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyBlastHurt.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyBlastHurt::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyBlastHurt.msgid)
}

// optional uint64 guid = 2;
inline bool NotifyBlastHurt::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyBlastHurt::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyBlastHurt::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyBlastHurt::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 NotifyBlastHurt::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyBlastHurt.guid)
  return guid_;
}
inline void NotifyBlastHurt::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyBlastHurt.guid)
}

// optional int32 blasthp = 3;
inline bool NotifyBlastHurt::has_blasthp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyBlastHurt::set_has_blasthp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyBlastHurt::clear_has_blasthp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyBlastHurt::clear_blasthp() {
  blasthp_ = 0;
  clear_has_blasthp();
}
inline ::google::protobuf::int32 NotifyBlastHurt::blasthp() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyBlastHurt.blasthp)
  return blasthp_;
}
inline void NotifyBlastHurt::set_blasthp(::google::protobuf::int32 value) {
  set_has_blasthp();
  blasthp_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyBlastHurt.blasthp)
}

// -------------------------------------------------------------------

// NotifyGameObjectReliveState

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGameObjectReliveState];
inline bool NotifyGameObjectReliveState::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyGameObjectReliveState::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyGameObjectReliveState::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyGameObjectReliveState::clear_msgid() {
  msgid_ = 111;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyGameObjectReliveState::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyGameObjectReliveState.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyGameObjectReliveState::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyGameObjectReliveState.msgid)
}

// optional uint64 guid = 2;
inline bool NotifyGameObjectReliveState::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyGameObjectReliveState::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyGameObjectReliveState::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyGameObjectReliveState::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 NotifyGameObjectReliveState::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyGameObjectReliveState.guid)
  return guid_;
}
inline void NotifyGameObjectReliveState::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyGameObjectReliveState.guid)
}

// optional .GSToGC.Pos pos = 3;
inline bool NotifyGameObjectReliveState::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyGameObjectReliveState::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyGameObjectReliveState::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyGameObjectReliveState::clear_pos() {
  if (pos_ != NULL) pos_->::GSToGC::Pos::Clear();
  clear_has_pos();
}
inline const ::GSToGC::Pos& NotifyGameObjectReliveState::pos() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyGameObjectReliveState.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::GSToGC::Pos* NotifyGameObjectReliveState::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::GSToGC::Pos;
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyGameObjectReliveState.pos)
  return pos_;
}
inline ::GSToGC::Pos* NotifyGameObjectReliveState::release_pos() {
  clear_has_pos();
  ::GSToGC::Pos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void NotifyGameObjectReliveState::set_allocated_pos(::GSToGC::Pos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.NotifyGameObjectReliveState.pos)
}

// optional .GSToGC.Dir dir = 4;
inline bool NotifyGameObjectReliveState::has_dir() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyGameObjectReliveState::set_has_dir() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyGameObjectReliveState::clear_has_dir() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyGameObjectReliveState::clear_dir() {
  if (dir_ != NULL) dir_->::GSToGC::Dir::Clear();
  clear_has_dir();
}
inline const ::GSToGC::Dir& NotifyGameObjectReliveState::dir() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyGameObjectReliveState.dir)
  return dir_ != NULL ? *dir_ : *default_instance_->dir_;
}
inline ::GSToGC::Dir* NotifyGameObjectReliveState::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) dir_ = new ::GSToGC::Dir;
  // @@protoc_insertion_point(field_mutable:GSToGC.NotifyGameObjectReliveState.dir)
  return dir_;
}
inline ::GSToGC::Dir* NotifyGameObjectReliveState::release_dir() {
  clear_has_dir();
  ::GSToGC::Dir* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void NotifyGameObjectReliveState::set_allocated_dir(::GSToGC::Dir* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.NotifyGameObjectReliveState.dir)
}

// -------------------------------------------------------------------

// NotifyCurGold

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGs_NotifyCurGold];
inline bool NotifyCurGold::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyCurGold::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyCurGold::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyCurGold::clear_msgid() {
  msgid_ = 122;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyCurGold::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyCurGold.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyCurGold::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyCurGold.msgid)
}

// optional uint64 gold = 2;
inline bool NotifyCurGold::has_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyCurGold::set_has_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyCurGold::clear_has_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyCurGold::clear_gold() {
  gold_ = GOOGLE_ULONGLONG(0);
  clear_has_gold();
}
inline ::google::protobuf::uint64 NotifyCurGold::gold() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyCurGold.gold)
  return gold_;
}
inline void NotifyCurGold::set_gold(::google::protobuf::uint64 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyCurGold.gold)
}

// -------------------------------------------------------------------

// NotifyCurDiamond

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGs_NotifyCurDiamond];
inline bool NotifyCurDiamond::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyCurDiamond::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyCurDiamond::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyCurDiamond::clear_msgid() {
  msgid_ = 123;
  clear_has_msgid();
}
inline ::GSToGC::MsgID NotifyCurDiamond::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyCurDiamond.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void NotifyCurDiamond::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyCurDiamond.msgid)
}

// optional uint64 Diamond = 2;
inline bool NotifyCurDiamond::has_diamond() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyCurDiamond::set_has_diamond() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyCurDiamond::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyCurDiamond::clear_diamond() {
  diamond_ = GOOGLE_ULONGLONG(0);
  clear_has_diamond();
}
inline ::google::protobuf::uint64 NotifyCurDiamond::diamond() const {
  // @@protoc_insertion_point(field_get:GSToGC.NotifyCurDiamond.Diamond)
  return diamond_;
}
inline void NotifyCurDiamond::set_diamond(::google::protobuf::uint64 value) {
  set_has_diamond();
  diamond_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.NotifyCurDiamond.Diamond)
}

// -------------------------------------------------------------------

// GetloginRewardSuccess

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGetloginRewardSuccess];
inline bool GetloginRewardSuccess::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetloginRewardSuccess::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetloginRewardSuccess::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetloginRewardSuccess::clear_msgid() {
  msgid_ = 124;
  clear_has_msgid();
}
inline ::GSToGC::MsgID GetloginRewardSuccess::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GetloginRewardSuccess.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void GetloginRewardSuccess::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GetloginRewardSuccess.msgid)
}

// -------------------------------------------------------------------

// GetloginReward_Skin

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGetloginReward_Skin];
inline bool GetloginReward_Skin::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetloginReward_Skin::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetloginReward_Skin::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetloginReward_Skin::clear_msgid() {
  msgid_ = 125;
  clear_has_msgid();
}
inline ::GSToGC::MsgID GetloginReward_Skin::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GetloginReward_Skin.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void GetloginReward_Skin::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GetloginReward_Skin.msgid)
}

// optional int64 skinid = 2;
inline bool GetloginReward_Skin::has_skinid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetloginReward_Skin::set_has_skinid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetloginReward_Skin::clear_has_skinid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetloginReward_Skin::clear_skinid() {
  skinid_ = GOOGLE_LONGLONG(0);
  clear_has_skinid();
}
inline ::google::protobuf::int64 GetloginReward_Skin::skinid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GetloginReward_Skin.skinid)
  return skinid_;
}
inline void GetloginReward_Skin::set_skinid(::google::protobuf::int64 value) {
  set_has_skinid();
  skinid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GetloginReward_Skin.skinid)
}

// -------------------------------------------------------------------

// GetloginReward_Rune

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGetloginReward_Rune];
inline bool GetloginReward_Rune::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetloginReward_Rune::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetloginReward_Rune::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetloginReward_Rune::clear_msgid() {
  msgid_ = 126;
  clear_has_msgid();
}
inline ::GSToGC::MsgID GetloginReward_Rune::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GetloginReward_Rune.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void GetloginReward_Rune::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GetloginReward_Rune.msgid)
}

// optional int64 runeid = 2;
inline bool GetloginReward_Rune::has_runeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetloginReward_Rune::set_has_runeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetloginReward_Rune::clear_has_runeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetloginReward_Rune::clear_runeid() {
  runeid_ = GOOGLE_LONGLONG(0);
  clear_has_runeid();
}
inline ::google::protobuf::int64 GetloginReward_Rune::runeid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GetloginReward_Rune.runeid)
  return runeid_;
}
inline void GetloginReward_Rune::set_runeid(::google::protobuf::int64 value) {
  set_has_runeid();
  runeid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GetloginReward_Rune.runeid)
}

// -------------------------------------------------------------------

// GetloginReward_Hero

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_NotifyGetloginReward_Hero];
inline bool GetloginReward_Hero::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetloginReward_Hero::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetloginReward_Hero::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetloginReward_Hero::clear_msgid() {
  msgid_ = 127;
  clear_has_msgid();
}
inline ::GSToGC::MsgID GetloginReward_Hero::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GetloginReward_Hero.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void GetloginReward_Hero::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GetloginReward_Hero.msgid)
}

// optional uint32 heroid = 2;
inline bool GetloginReward_Hero::has_heroid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetloginReward_Hero::set_has_heroid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetloginReward_Hero::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetloginReward_Hero::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 GetloginReward_Hero::heroid() const {
  // @@protoc_insertion_point(field_get:GSToGC.GetloginReward_Hero.heroid)
  return heroid_;
}
inline void GetloginReward_Hero::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GetloginReward_Hero.heroid)
}

// optional int64 expired_time = 3;
inline bool GetloginReward_Hero::has_expired_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetloginReward_Hero::set_has_expired_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetloginReward_Hero::clear_has_expired_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetloginReward_Hero::clear_expired_time() {
  expired_time_ = GOOGLE_LONGLONG(0);
  clear_has_expired_time();
}
inline ::google::protobuf::int64 GetloginReward_Hero::expired_time() const {
  // @@protoc_insertion_point(field_get:GSToGC.GetloginReward_Hero.expired_time)
  return expired_time_;
}
inline void GetloginReward_Hero::set_expired_time(::google::protobuf::int64 value) {
  set_has_expired_time();
  expired_time_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.GetloginReward_Hero.expired_time)
}

// -------------------------------------------------------------------

// CanInviteFriends_Friends

// optional int32 HeaderId = 1;
inline bool CanInviteFriends_Friends::has_headerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CanInviteFriends_Friends::set_has_headerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CanInviteFriends_Friends::clear_has_headerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CanInviteFriends_Friends::clear_headerid() {
  headerid_ = 0;
  clear_has_headerid();
}
inline ::google::protobuf::int32 CanInviteFriends_Friends::headerid() const {
  // @@protoc_insertion_point(field_get:GSToGC.CanInviteFriends.Friends.HeaderId)
  return headerid_;
}
inline void CanInviteFriends_Friends::set_headerid(::google::protobuf::int32 value) {
  set_has_headerid();
  headerid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.CanInviteFriends.Friends.HeaderId)
}

// optional string nickname = 2;
inline bool CanInviteFriends_Friends::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CanInviteFriends_Friends::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CanInviteFriends_Friends::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CanInviteFriends_Friends::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& CanInviteFriends_Friends::nickname() const {
  // @@protoc_insertion_point(field_get:GSToGC.CanInviteFriends.Friends.nickname)
  return *nickname_;
}
inline void CanInviteFriends_Friends::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.CanInviteFriends.Friends.nickname)
}
inline void CanInviteFriends_Friends::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.CanInviteFriends.Friends.nickname)
}
inline void CanInviteFriends_Friends::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.CanInviteFriends.Friends.nickname)
}
inline ::std::string* CanInviteFriends_Friends::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.CanInviteFriends.Friends.nickname)
  return nickname_;
}
inline ::std::string* CanInviteFriends_Friends::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CanInviteFriends_Friends::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.CanInviteFriends.Friends.nickname)
}

// optional uint64 guididx = 3;
inline bool CanInviteFriends_Friends::has_guididx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CanInviteFriends_Friends::set_has_guididx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CanInviteFriends_Friends::clear_has_guididx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CanInviteFriends_Friends::clear_guididx() {
  guididx_ = GOOGLE_ULONGLONG(0);
  clear_has_guididx();
}
inline ::google::protobuf::uint64 CanInviteFriends_Friends::guididx() const {
  // @@protoc_insertion_point(field_get:GSToGC.CanInviteFriends.Friends.guididx)
  return guididx_;
}
inline void CanInviteFriends_Friends::set_guididx(::google::protobuf::uint64 value) {
  set_has_guididx();
  guididx_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.CanInviteFriends.Friends.guididx)
}

// -------------------------------------------------------------------

// CanInviteFriends

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromBS_NotifyCanInviteFriends];
inline bool CanInviteFriends::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CanInviteFriends::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CanInviteFriends::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CanInviteFriends::clear_msgid() {
  msgid_ = 141;
  clear_has_msgid();
}
inline ::GSToGC::MsgID CanInviteFriends::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.CanInviteFriends.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void CanInviteFriends::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.CanInviteFriends.msgid)
}

// repeated .GSToGC.CanInviteFriends.Friends friends = 2;
inline int CanInviteFriends::friends_size() const {
  return friends_.size();
}
inline void CanInviteFriends::clear_friends() {
  friends_.Clear();
}
inline const ::GSToGC::CanInviteFriends_Friends& CanInviteFriends::friends(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.CanInviteFriends.friends)
  return friends_.Get(index);
}
inline ::GSToGC::CanInviteFriends_Friends* CanInviteFriends::mutable_friends(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.CanInviteFriends.friends)
  return friends_.Mutable(index);
}
inline ::GSToGC::CanInviteFriends_Friends* CanInviteFriends::add_friends() {
  // @@protoc_insertion_point(field_add:GSToGC.CanInviteFriends.friends)
  return friends_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::CanInviteFriends_Friends >&
CanInviteFriends::friends() const {
  // @@protoc_insertion_point(field_list:GSToGC.CanInviteFriends.friends)
  return friends_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::CanInviteFriends_Friends >*
CanInviteFriends::mutable_friends() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.CanInviteFriends.friends)
  return &friends_;
}

// -------------------------------------------------------------------

// LastHitNum

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromBS_NotifyCurLastHitNum];
inline bool LastHitNum::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LastHitNum::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LastHitNum::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LastHitNum::clear_msgid() {
  msgid_ = 142;
  clear_has_msgid();
}
inline ::GSToGC::MsgID LastHitNum::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.LastHitNum.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void LastHitNum::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.LastHitNum.msgid)
}

// optional uint64 guid = 2;
inline bool LastHitNum::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LastHitNum::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LastHitNum::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LastHitNum::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 LastHitNum::guid() const {
  // @@protoc_insertion_point(field_get:GSToGC.LastHitNum.guid)
  return guid_;
}
inline void LastHitNum::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.LastHitNum.guid)
}

// optional int32 lhnum = 3;
inline bool LastHitNum::has_lhnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LastHitNum::set_has_lhnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LastHitNum::clear_has_lhnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LastHitNum::clear_lhnum() {
  lhnum_ = 0;
  clear_has_lhnum();
}
inline ::google::protobuf::int32 LastHitNum::lhnum() const {
  // @@protoc_insertion_point(field_get:GSToGC.LastHitNum.lhnum)
  return lhnum_;
}
inline void LastHitNum::set_lhnum(::google::protobuf::int32 value) {
  set_has_lhnum();
  lhnum_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.LastHitNum.lhnum)
}

// -------------------------------------------------------------------

// RoomInfo

// optional int32 roomId = 1;
inline bool RoomInfo::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomInfo::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomInfo::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomInfo::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 RoomInfo::roomid() const {
  // @@protoc_insertion_point(field_get:GSToGC.RoomInfo.roomId)
  return roomid_;
}
inline void RoomInfo::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RoomInfo.roomId)
}

// optional int32 ifPwd = 2;
inline bool RoomInfo::has_ifpwd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomInfo::set_has_ifpwd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomInfo::clear_has_ifpwd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomInfo::clear_ifpwd() {
  ifpwd_ = 0;
  clear_has_ifpwd();
}
inline ::google::protobuf::int32 RoomInfo::ifpwd() const {
  // @@protoc_insertion_point(field_get:GSToGC.RoomInfo.ifPwd)
  return ifpwd_;
}
inline void RoomInfo::set_ifpwd(::google::protobuf::int32 value) {
  set_has_ifpwd();
  ifpwd_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RoomInfo.ifPwd)
}

// optional int32 mapId = 3;
inline bool RoomInfo::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoomInfo::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoomInfo::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoomInfo::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 RoomInfo::mapid() const {
  // @@protoc_insertion_point(field_get:GSToGC.RoomInfo.mapId)
  return mapid_;
}
inline void RoomInfo::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RoomInfo.mapId)
}

// optional string master = 4;
inline bool RoomInfo::has_master() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoomInfo::set_has_master() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoomInfo::clear_has_master() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoomInfo::clear_master() {
  if (master_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    master_->clear();
  }
  clear_has_master();
}
inline const ::std::string& RoomInfo::master() const {
  // @@protoc_insertion_point(field_get:GSToGC.RoomInfo.master)
  return *master_;
}
inline void RoomInfo::set_master(const ::std::string& value) {
  set_has_master();
  if (master_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    master_ = new ::std::string;
  }
  master_->assign(value);
  // @@protoc_insertion_point(field_set:GSToGC.RoomInfo.master)
}
inline void RoomInfo::set_master(const char* value) {
  set_has_master();
  if (master_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    master_ = new ::std::string;
  }
  master_->assign(value);
  // @@protoc_insertion_point(field_set_char:GSToGC.RoomInfo.master)
}
inline void RoomInfo::set_master(const char* value, size_t size) {
  set_has_master();
  if (master_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    master_ = new ::std::string;
  }
  master_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GSToGC.RoomInfo.master)
}
inline ::std::string* RoomInfo::mutable_master() {
  set_has_master();
  if (master_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    master_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GSToGC.RoomInfo.master)
  return master_;
}
inline ::std::string* RoomInfo::release_master() {
  clear_has_master();
  if (master_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = master_;
    master_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RoomInfo::set_allocated_master(::std::string* master) {
  if (master_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete master_;
  }
  if (master) {
    set_has_master();
    master_ = master;
  } else {
    clear_has_master();
    master_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GSToGC.RoomInfo.master)
}

// optional int32 curUserCount = 5;
inline bool RoomInfo::has_curusercount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoomInfo::set_has_curusercount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoomInfo::clear_has_curusercount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoomInfo::clear_curusercount() {
  curusercount_ = 0;
  clear_has_curusercount();
}
inline ::google::protobuf::int32 RoomInfo::curusercount() const {
  // @@protoc_insertion_point(field_get:GSToGC.RoomInfo.curUserCount)
  return curusercount_;
}
inline void RoomInfo::set_curusercount(::google::protobuf::int32 value) {
  set_has_curusercount();
  curusercount_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RoomInfo.curUserCount)
}

// optional int32 maxUserCount = 6;
inline bool RoomInfo::has_maxusercount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoomInfo::set_has_maxusercount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoomInfo::clear_has_maxusercount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoomInfo::clear_maxusercount() {
  maxusercount_ = 0;
  clear_has_maxusercount();
}
inline ::google::protobuf::int32 RoomInfo::maxusercount() const {
  // @@protoc_insertion_point(field_get:GSToGC.RoomInfo.maxUserCount)
  return maxusercount_;
}
inline void RoomInfo::set_maxusercount(::google::protobuf::int32 value) {
  set_has_maxusercount();
  maxusercount_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.RoomInfo.maxUserCount)
}

// -------------------------------------------------------------------

// AskRoomListRet

// optional .GSToGC.MsgID msgid = 1 [default = eMsgToGCFromGS_AskRoomListRet];
inline bool AskRoomListRet::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskRoomListRet::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskRoomListRet::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskRoomListRet::clear_msgid() {
  msgid_ = 143;
  clear_has_msgid();
}
inline ::GSToGC::MsgID AskRoomListRet::msgid() const {
  // @@protoc_insertion_point(field_get:GSToGC.AskRoomListRet.msgid)
  return static_cast< ::GSToGC::MsgID >(msgid_);
}
inline void AskRoomListRet::set_msgid(::GSToGC::MsgID value) {
  assert(::GSToGC::MsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GSToGC.AskRoomListRet.msgid)
}

// repeated .GSToGC.RoomInfo roomlist = 2;
inline int AskRoomListRet::roomlist_size() const {
  return roomlist_.size();
}
inline void AskRoomListRet::clear_roomlist() {
  roomlist_.Clear();
}
inline const ::GSToGC::RoomInfo& AskRoomListRet::roomlist(int index) const {
  // @@protoc_insertion_point(field_get:GSToGC.AskRoomListRet.roomlist)
  return roomlist_.Get(index);
}
inline ::GSToGC::RoomInfo* AskRoomListRet::mutable_roomlist(int index) {
  // @@protoc_insertion_point(field_mutable:GSToGC.AskRoomListRet.roomlist)
  return roomlist_.Mutable(index);
}
inline ::GSToGC::RoomInfo* AskRoomListRet::add_roomlist() {
  // @@protoc_insertion_point(field_add:GSToGC.AskRoomListRet.roomlist)
  return roomlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSToGC::RoomInfo >&
AskRoomListRet::roomlist() const {
  // @@protoc_insertion_point(field_list:GSToGC.AskRoomListRet.roomlist)
  return roomlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSToGC::RoomInfo >*
AskRoomListRet::mutable_roomlist() {
  // @@protoc_insertion_point(field_mutable_list:GSToGC.AskRoomListRet.roomlist)
  return &roomlist_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace GSToGC

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::GSToGC::GuideAward_dtype> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSToGC::GuideAward_dtype>() {
  return ::GSToGC::GuideAward_dtype_descriptor();
}
template <> struct is_proto_enum< ::GSToGC::GoodsCfgInfo_CfgType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSToGC::GoodsCfgInfo_CfgType>() {
  return ::GSToGC::GoodsCfgInfo_CfgType_descriptor();
}
template <> struct is_proto_enum< ::GSToGC::NotifyAFPData_EnumFpType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSToGC::NotifyAFPData_EnumFpType>() {
  return ::GSToGC::NotifyAFPData_EnumFpType_descriptor();
}
template <> struct is_proto_enum< ::GSToGC::MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSToGC::MsgID>() {
  return ::GSToGC::MsgID_descriptor();
}
template <> struct is_proto_enum< ::GSToGC::MailType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSToGC::MailType>() {
  return ::GSToGC::MailType_descriptor();
}
template <> struct is_proto_enum< ::GSToGC::EMailCurtState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSToGC::EMailCurtState>() {
  return ::GSToGC::EMailCurtState_descriptor();
}
template <> struct is_proto_enum< ::GSToGC::BattleState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSToGC::BattleState>() {
  return ::GSToGC::BattleState_descriptor();
}
template <> struct is_proto_enum< ::GSToGC::ObjType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSToGC::ObjType>() {
  return ::GSToGC::ObjType_descriptor();
}
template <> struct is_proto_enum< ::GSToGC::HPMPChangeReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSToGC::HPMPChangeReason>() {
  return ::GSToGC::HPMPChangeReason_descriptor();
}
template <> struct is_proto_enum< ::GSToGC::SkillState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSToGC::SkillState>() {
  return ::GSToGC::SkillState_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GSToGC_2eproto__INCLUDED
